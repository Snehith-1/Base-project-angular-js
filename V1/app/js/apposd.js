(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAllocatedToAssignedViewController', osdBamAllocatedToAssignedViewController);
    osdBamAllocatedToAssignedViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdBamAllocatedToAssignedViewController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, $sce, DownloaddocumentService, cmnfunctionService) {
        var vm = this;
        vm.title = 'osdBamAllocatedToAssignedViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        var customer_gid = searchObject.lscustomer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        var lstab = searchObject.lstab;
        activate();
        lockUI();
        function activate() {
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            var url = 'api/OsdTrnBankAlert/GetRMTempDelete';

            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = customer_urn;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.employee_gid = resp.data.employee_gid;
                $scope.relationshipmanager_gid = resp.data.relationshipmanager_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();
                if ($scope.lblallocated_status == 'Completed') {
                    var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblrm_remarks = resp.data.rm_remarks;
                        // $('#lblrm_remarks').html(resp.data.rm_remarks);
                        $scope.lblrm_status = resp.data.rm_status;
                        $scope.lblupdated_date = resp.data.updated_date;
                        $scope.lblupdated_by = resp.data.updated_by;
                        $scope.rmdocument_list = resp.data.rmdocument_list;
                        $scope.lblrmhfilename = resp.data.rmhfilename;
                        $scope.lblrmhfilepath = resp.data.rmhfilepath;
                    });

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        unlockUI();
                    });
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                        $scope.completed_remarks = resp.data.completed_remarks;
                        $scope.completed_by = resp.data.completed_by;
                        $scope.completed_date = resp.data.completed_date;
                        $scope.lblfilename = resp.data.filename;
                        $scope.lblfilepath = resp.data.filepath;
                        unlockUI();
                    });
                }
                var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                }
                SocketService.getparams(url, param).then(function (resp) {
                     $scope.lblassigned_remarks = resp.data.assigned_remarks;
                    // $('#lblassigned_remarks').html(resp.data.assigned_remarks);
                    $scope.lblassigned_date = resp.data.assigned_date;
                    $scope.lblassigned_toname = resp.data.assigned_toname;
                    $scope.lblassigned_by = resp.data.assigned_by;
                    $scope.document_list = resp.data.rmdocument_list;
                });
                var param = {
                    servicerequest_gid: $scope.servicerequest_gid,
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferlistdtl = resp.data.transferlistdtl;
                    $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                    unlockUI();
                });
                var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                }
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferto_name = resp.data.relationshipmanager_name;
                    $scope.transferedinitiated_by = resp.data.transferedinitiated_by;
                    $scope.transferinitiated_date = resp.data.transferinitiated_date;
                    $scope.transfer_type = resp.data.transfer_type;
                    $scope.transfer_remarks = resp.data.transfer_remarks;
                });

            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            }); 
        }
        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {
                $scope.IsLogShow = true;
            }

        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', $scope.servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!','danger')

                }

            });

        }
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.download = function (val1, val2) {
        //    var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //    var link = document.createElement("a");
        //    link.href = relpath2;
        //    link.setAttribute('download', val2);
        //    link.click();
        //}

        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.Back = function () {
            //$state.go('app.osdBamAllocatedToRM');
            $location.url("app/osdBamAllocatedToRM?lstab=" + lstab);
        } 
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
        $scope.BackHome = function () {
            //$state.go('app.osdBamAllocatedToRM');
            $location.url("app/osdBamAllocatedToRM?lstab=" + lstab);
        } 
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAllocatedToRMController', osdBamAllocatedToRMController);

        osdBamAllocatedToRMController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];

    function osdBamAllocatedToRMController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,$sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdBamAllocatedToRMController';
        var banktransc_gid = $location.search().lsbanktransc_gid;

        activate();
        function activate() {
            $scope.tab = {};
            var url = window.location.href;
            var relPath = url.split("lstab=");
            var relpath1 = relPath[1];
            if (relpath1 != undefined) {
                if (relpath1 == "requiredlist") {
                    $scope.taballocatedlist = true;
                }
                else if (relpath1 == "allocatedlist") {
                    $scope.taballocatedlist = true;
                }
                else if (relpath1 == "Unreconciliationlist") {
                    $scope.tabUnreconciliationlist = true;
                }
                else if (relpath1 == "assignlist") {
                    $scope.tabassignlist = true;
                }
                else if (relpath1 == "transferlist") {
                    $scope.tabtransferlist = true;
                }
            }
            else {
                if ($scope.tab.activeTabId == undefined) {
                    $scope.taballocatedlist = true;
                }
                else if ($scope.tab.activeTabId == 'pending') {
                    $scope.taballocatedlist = true;

                }
                else if ($scope.tab.activeTabId == 'allocatedlist') {
                    $scope.taballocatedlist = true;
                }
                else if ($scope.tab.activeTabId == 'Unreconciliationlist') {
                    $scope.tabUnreconciliationlist = true;
                }
                else if ($scope.tab.activeTabId == 'assignlist') {
                    $scope.tabassignlist = true;
                }
                else if ($scope.tab.activeTabId == "transferlist") {
                    $scope.tabtransferlist = true;
                }
            }
            lockUI();
            var url = 'api/OsdTrnBankAlert/GetAllocatedSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankAlertAllocated_list = resp.data.BankAlertAllocated_list;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedAssignedSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankAlertAllocatedAssigned_list = resp.data.BankAlertAllocatedAssigned_list;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetRMTransferSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankAlerttransfer_list = resp.data.BankAlerttransfer_list;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedCount';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.allocated_count = resp.data.allocated_count;
                $scope.allocatedassigned_count = resp.data.allocatedassigned_count;
                $scope.transfer_count = resp.data.transfer_count;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetUnReconciliationSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.banktransc_gid = resp.data.banktransc_gid;
                $scope.BankAlertUnreconciliation_list = resp.data.BankAlertUnreconciliation_list;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedCount';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.allocated_count = resp.data.allocated_count;
                $scope.allocatedassigned_count = resp.data.allocatedassigned_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.unreconciliation_count = resp.data.unreconciliation_count;
                unlockUI();
            });
        }

        $scope.BankalertView = function (bankalert2allocated_gid, customer_gid,customer_urn) {
            $location.url('app/osdBamAllocatedToRMView?'+'lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lscustomer_urn=' + customer_urn + '&lspage=Allocatedsummary' + '&lstab=allocatedlist');
        }
        $scope.transfer = function (bankalert2allocated_gid, customer_gid,customer_urn) {
            $location.url('app/osdBAMrmtransfer?hash=' + cmnfunctionService.encryptURL('lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lscustomer_urn=' + customer_urn + '&lstab=transferlist'));
        }
        $scope.BankalertAssignedView = function (bankalert2allocated_gid, customer_gid, customer_urn) {
            $location.url('app/osdBamAllocatedToAssignedView?hash=' + cmnfunctionService.encryptURL('lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lscustomer_urn=' + customer_urn + '&lstab=assignlist'));
        }
        $scope.UnreconciliationView = function (bankalert2allocated_gid, banktransc_gid) {
            $location.url('app/osdTrnUnreconciliationTransactionView?hash=' + cmnfunctionService.encryptURL('lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lsbanktransc_gid=' + banktransc_gid +  '&lstab=Unreconciliationlist'));
        }
        $scope.initiate_transfer = function (bankalert2allocated_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/initiatetransfer.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
          
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.tickettransfer = false;
                $scope.rmtransfer = false;
                $scope.warning = false;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.transferstatus=function()
                {
                    $scope.tickettransfer = true;
                    $scope.rmtransfer = false;
                }
                $scope.rmstatus = function () {
                    $scope.rmtransfer = true;
                    $scope.tickettransfer = false;
                }
                $scope.changewarning=function()
                {
                    $scope.warning = false;
                }
                $scope.transfer_submit = function () {
                    if ($scope.rdbtransfer_type == 'Ticket Transfer')
                    {
                       if($scope.txttickettransfer_remarks =='' || $scope.txttickettransfer_remarks==undefined || $scope.txttickettransfer_remarks==null)
                        {                            
                            $scope.warning = true;
                        }
                        else {
                            var params = {
                                bankalert2allocated_gid: bankalert2allocated_gid,
                                transfer_type: $scope.rdbtransfer_type,
                                tickettransfer_remarks: $scope.txttickettransfer_remarks
                            }
                            console.log(params);
                            var url = 'api/OsdTrnBankAlert/Posttransfer';

                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    $modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();

                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                            });
                        }
                    }
                    else {
                        if ($scope.txtrmtransfer_remarks == '' || $scope.txtrmtransfer_remarks == undefined || $scope.txtrmtransfer_remarks == null) {
                            $scope.warning = true;
                        }
                        else {
                            var params = {
                                bankalert2allocated_gid: bankalert2allocated_gid,
                                transfer_type: $scope.rdbtransfer_type,
                                rmtransfer_remarks: $scope.txtrmtransfer_remarks
                            }
                            console.log(params);
                            var url = 'api/OsdTrnBankAlert/Posttransfer';

                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    $modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();

                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                            });
                        }
                    }
                   

                }
            }
        }

        $scope.Complete_list = function () {
            $location.url('app/OsdBamRMCompletedSummary');
        }       

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAllocatedToRMViewController', osdBamAllocatedToRMViewController);
    osdBamAllocatedToRMViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdBamAllocatedToRMViewController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams,$sce, DownloaddocumentService, cmnfunctionService) {
      {
        var vm = this;
        vm.title = 'osdBamAllocatedToRMViewController';
        //var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        //var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        //var customer_gid = searchObject.lscustomer_gid;
        //var customer_urn = searchObject.lscustomer_urn;
        //    var lstab = searchObject.lstab;
        //$scope.lspage = searchObject.lspage;
        //var lspage = $scope.lspage;
            var searchObject = $location.search();
            var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
            var customer_gid = searchObject.lscustomer_gid;
            var customer_urn = searchObject.lscustomer_urn;
            var lstab = searchObject.lstab;
            $scope.lspage = searchObject.lspage;
            var lspage = $scope.lspage;
        activate();
        lockUI();
        function activate() {
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            var url = 'api/OsdTrnBankAlert/GetRMTempDelete';
           
            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,
              
            }
        
            SocketService.getparams(url,param).then(function (resp) {
                unlockUI();
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = customer_urn;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.employee_gid = resp.data.employee_gid;
                $scope.relationshipmanager_gid = resp.data.relationshipmanager_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();
                if ($scope.lblallocated_status == 'Completed') {
                    var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblrm_remarks = resp.data.rm_remarks;
                        // $('#lblrm_remarks').html(resp.data.rm_remarks);
                        $scope.lblrm_status = resp.data.rm_status;
                        $scope.lblupdated_date = resp.data.updated_date;
                        $scope.lblupdated_by = resp.data.updated_by;                   
                        $scope.rmdocument_list = resp.data.rmdocument_list;
                        $scope.lblrmhfilename = resp.data.rmhfilename;
                        $scope.lblrmhfilepath = resp.data.rmhfilepath;
                        });

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        unlockUI();
                    });
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                        $scope.completed_remarks = resp.data.completed_remarks;
                        $scope.completed_by = resp.data.completed_by;
                        $scope.completed_date = resp.data.completed_date;
                        $scope.complefilename = resp.data.complefilename;
                        $scope.complefilepath = resp.data.complefilepath;
                        unlockUI();
                    });
                }
                var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                }
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.lblassigned_remarks = resp.data.assigned_remarks;
                    // $('#lblassigned_remarks').html(resp.data.assigned_remarks);
                    $scope.lblassigned_date = resp.data.assigned_date;
                    $scope.lblassigned_toname = resp.data.assigned_toname;
                    $scope.lblassigned_by = resp.data.assigned_by;
                    $scope.document_list = resp.data.rmdocument_list;
                    $scope.lblrmfilename = resp.data.rmfilename;
                    $scope.lblrmfilepath = resp.data.rmfilepath;
                });
                var param = {
                    servicerequest_gid: $scope.servicerequest_gid,
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferlistdtl = resp.data.transferlistdtl;
                    $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                    unlockUI();
                });
                var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                }
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferto_name = resp.data.relationshipmanager_name;
                    $scope.transferedinitiated_by = resp.data.transferedinitiated_by;
                    $scope.transferinitiated_date = resp.data.transferinitiated_date;
                    $scope.transfer_type = resp.data.transfer_type;
                    $scope.transfer_remarks = resp.data.transfer_remarks;
                });

            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            }); 
        }
        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {
                $scope.IsLogShow = true;
            }

        }

        $scope.Back = function () {
            if (lspage == 'Allocatedsummary') { 
                $location.url("app/osdBamAllocatedToRM?lstab=" + lstab);
            }
            else if (lspage == 'Completedsummary') {
                $state.go('app.OsdBamRMCompletedSummary');
            }           
           
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
            //var relPath = phyPath.split("EMS");
            //var relpath1 = relPath[1].replace("\\", "/");
            //var hosts = window.location.host;
            //var prefix = location.protocol + "//";
            //var str = prefix.concat(hosts, relpath1);
            //var link = document.createElement("a");
            //var name = val2.split(".")
            //link.download = val2;
            //var uri = str;
            //link.href = uri;
            //link.click();

        //$scope.download = function (val1, val2) {
        //        var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //        var link = document.createElement("a");
        //        link.href = relpath2;
        //        link.setAttribute('download', val2);
        //        link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {
            
            for (var i = 0; i < val2.length; i++) {
              //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }
           
        }
        $scope.RHdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Adownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Cdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        //$scope.Submit = function () {
        //    $state.go('app.osdBamAllocatedToRM');
        //}
        $scope.uploadattachment = function (val, val1, name) {
            var fi = document.getElementById('addupload');
            if (fi.files.length > 0) {
                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;

                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                        if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }
                }
            }
            frm.append('project_flag', "Default");
            var url = 'api/OsdTrnBankAlert/RMDocumentUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                if (resp.data.status == true) {
                   
                    var url = 'api/OsdTrnBankAlert/GetRMUploadedDoc';

                    SocketService.get(url).then(function (resp) {
                        $scope.uploaddocument = resp.data.MdlDocDetails;
                        $scope.lblfilename = resp.data.filename;
                        $scope.lblfilepath = resp.data.filepath;
                    });
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }

        $scope.UploadDocCancel = function (id) {
            var params = {
                fileupload_gid: id
            }
             var url = 'api/OsdTrnBankAlert/DeleteRMUploadedDoc';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                 if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = 'api/OsdTrnBankAlert/GetRMUploadedDoc';
                    SocketService.get(url).then(function (resp) {
                        $scope.uploaddocument = resp.data.MdlDocDetails;
                        $scope.lblfilename = resp.data.filename;
                        $scope.lblfilepath = resp.data.filepath;
                    });
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', $scope.servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!', 'danger')

                }

            });

        }
        //$scope.downloadsdocument = function (val1, val2) {
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.Submit=function()
        {
            var refund = $scope.cborm_status.replace("'","");
            if($scope.cborm_status == 'Adjust against loan outstanding'){
            // var editor = new FroalaEditor('div#froala-editor', {}, function () { })
            // $scope.viewFroala = editor.html.get();
            // var remarks = $($scope.viewFroala).text();

            // if ((editor.core.isEmpty())) {
            //     Notify.alert('Enter Remarks', {
            //         status: 'warning',
            //         pos: 'top-center',
            //         timeout: 3000
            //     });
            // }
            // else {
                var params =
                  {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                    customer_gid: customer_gid,
                    rm_remarks: $scope.txtremarks,                   
                    //   rm_remarks: $scope.viewFroala,
                    rm_status: $scope.cborm_status
                  }
                var url = 'api/OsdTrnBankAlert/PostRMStatus';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $state.go('app.osdBamAllocatedToRM');
                });
            // }
            }
            else if(refund == 'Refund to clients bank account'){
                var params =
                  {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                    customer_gid: customer_gid,
                    rm_remarks: $scope.txtremarks,                 
                    rm_status: $scope.cborm_status                    
                  }
                var url = 'api/OsdTrnBankAlert/PostRHapproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $state.go('app.osdBamAllocatedToRM');
                });
            }
            
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
            $scope.documentviewer = function (val1, val2) {
                lockUI();
                var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                if (IsValidExtension == false) {
                    Notify.alert("View is not supported for this format..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    return false;
                }
                DownloaddocumentService.DocumentViewer(val1, val2);
            }
      }
        }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAllocatedViewController', osdBamAllocatedViewController);
    osdBamAllocatedViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService','cmnfunctionService'];

    function osdBamAllocatedViewController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, $sce, DownloaddocumentService,cmnfunctionService) {
        var vm = this;
        vm.title = 'osdBamAllocatedViewController';
        // var searchObject = cmnfunctionService.decryptURL($location.search() .hash);
        var searchObject = $location.search();
        var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        var customer_gid = searchObject.lscustomer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var lstab = searchObject.lstab;
        activate();
        function activate() {
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.lspagename = lstab;
           //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
           // var param = {
           //     bankalert2allocated_gid: bankalert2allocated_gid,
           //     customer_gid: customer_gid
            // }
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbltransfer_flag = resp.data.transfer_flag;
                $scope.lbltransfer_type = resp.data.transfer_type;
                $scope.bankalert2allocated_gid = bankalert2allocated_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.transferto_name = resp.data.transferto_name;
                unlockUI();
                if ($scope.lblallocated_status == 'Completed') {
                    var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblrm_remarks = resp.data.rm_remarks;
                        // $('#lblrm_remarks').html(resp.data.rm_remarks);
                        $scope.lblrm_status = resp.data.rm_status;
                        $scope.lblupdated_date = resp.data.updated_date;
                        $scope.lblupdated_by = resp.data.updated_by;
                        $scope.rmdocument_list = resp.data.rmdocument_list;
                        $scope.lblrmhfilename = resp.data.rmhfilename;
                        $scope.lblrmhfilepath = resp.data.rmhfilepath;
                     });
                }
            });
            var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.relationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.transferedinitiated_by = resp.data.transferedinitiated_by;
                $scope.transferinitiated_date = resp.data.transferinitiated_date;
                $scope.transfer_type = resp.data.transfer_type;
                $scope.transfer_remarks = resp.data.transfer_remarks;
            });
            var url = 'api/OsdTrnBankAlert/GetCustomer2RM'
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrmupdated_flag = resp.data.rmupdated_flag;
                 });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            }); 
        }
        $scope.initiate_transfer = function (bankalert2allocated_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/initiatetransfer.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var url = "api/employee/Employee";
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.transfer_submit = function () {

                    var params = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                        assigned_to: $scope.cboassign_to,
                        assigned_toname: $('#cboassign_to :selected').text(),
                        }
                     var url = 'api/OsdTrnBankAlert/Posttranasfe2Assign';

                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            $location.url('app/OsdTrnBankAlertManagementSummary?hash=' + cmnfunctionService.encryptURL('lstab=' + lstab));
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }
            }
        }
        $scope.rm_update = function (bankalert2allocated_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/rmtransfer.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var url = 'api/OsdTrnBankAlert/GetCustomer2RM';
                var params = {
                    bankalert2allocated_gid: bankalert2allocated_gid
                }
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lscustomerRM_name = resp.data.relationshipmanager_name;
                    $scope.lsbankRM_name = resp.data.lsrelationshipmanager_name;
                });
                $scope.RM_submit = function () {

                    var params = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                       }
                    var url = 'api/OsdTrnBankAlert/PostRM';

                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            $location.url('app/OsdTrnBankAlertManagementSummary?hash=' + cmnfunctionService.encryptURL('lstab=' + lstab));
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }
            }
        }

        $scope.Back = function () {
            $location.url("app/OsdTrnBankAlertManagementSummary?lstab=" + lstab);
        }
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAssign2operationController', osdBamAssign2operationController);
    osdBamAssign2operationController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdBamAssign2operationController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, $sce, DownloaddocumentService, cmnfunctionService) {
        var vm = this;
        vm.title = 'osdBamAssign2operationController';
        // var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var searchObject = $location.search();
        var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        var customer_gid = searchObject.lscustomer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var ticketref_no = searchObject.lsticketref_no;
        var lstab = searchObject.lstab;
        var lspage = searchObject.lspage;
        var compfilename, forwardfilename;
        var session_empgid;
        var compfilepath;
        var lblservicerequest_gid;
        activate();
        function activate() {

            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); }; 

            var url = 'api/OsdTrnBankAlert/GetEmployeeName';

            SocketService.get(url).then(function (resp) {
                $scope.cboemployee = resp.data.employee_gid;
                $scope.employee_name = resp.data.user_name;
                // session_empgid = resp.data.employee_gid;
                // assigned_remarks: $scope.txtremarks,
            });

            var url = 'api/OsdTrnBankAlert/GetOperationTempDelete';

            SocketService.get(url).then(function (resp) {
            });
            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource_name = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.transfer_flag = resp.data.transfer_flag;
               
                if (resp.data.operation_status == 'Completed' || resp.data.operation_status == 'Assigned')

                  {
                    var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblassigned_remarks = resp.data.assigned_remarks;
                        // $('#lblassigned_remarks').html(resp.data.assigned_remarks);
                        $scope.lblassigned_date = resp.data.assigned_date;
                        $scope.lblassigned_toname = resp.data.assigned_toname;
                        $scope.lblassigned_by = resp.data.assigned_by;
                        $scope.document_list = resp.data.rmdocument_list;
                        $scope.lblrmfilename = resp.data.rmfilename;
                        $scope.lblrmfilepath = resp.data.rmfilepath;
                    });
                   
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        unlockUI();
                    });
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                        $scope.completed_remarks = resp.data.completed_remarks;
                        $scope.completed_by = resp.data.completed_by;
                        $scope.completed_date = resp.data.completed_date;
                        $scope.lblcompfilename = resp.data.compfilename;
                        $scope.lblcompfilepath = resp.data.compfilepath;
                        unlockUI();
                    });

                } 
                var param = {
                    servicerequest_gid: $scope.servicerequest_gid,
                }
               var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferlistdtl = resp.data.transferlistdtl;
                    $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                    unlockUI();
                });
                var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                    customer_gid: customer_gid,
                    customer_urn: customer_urn,

                }

                SocketService.getparams(url, param).then(function (resp) {
                    $scope.ticketref_no = resp.data.ticketref_no;
                    $scope.lblbank_name = resp.data.bank_name;
                    $scope.lblcustomer_refno = resp.data.customer_urn;
                    $scope.lblbranch_name = resp.data.branch_name;
                    $scope.lblcr_dr = resp.data.cr_dr;
                    $scope.lbltransc_value = resp.data.transact_val;
                    $scope.lblremarks = resp.data.remarks;
                    $scope.lbltransc_balance = resp.data.transc_balance;
                    $scope.lblacc_no = resp.data.acc_no;
                    $scope.lbltrn_date = resp.data.trn_date;
                    $scope.lblvalue_date = resp.data.value_date;
                    $scope.lblpayment_date = resp.data.payment_date;
                    $scope.lbltransact_particulars = resp.data.transact_particulars;
                    $scope.lbldebit_amt = resp.data.debit_amt;
                    $scope.lblcredit_amt = resp.data.credit_amt;
                    $scope.lblchq_no = resp.data.chq_no;
                    $scope.lblcreated_by = resp.data.created_by;
                    $scope.lblbrs_flag = resp.data.brs_flag;
                    $scope.lblsource = resp.data.source;
                    $scope.lblallocated_status = resp.data.allocated_status;
                    $scope.lbloperation_status = resp.data.operation_status;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



                });
                var param = {
                    banktransc_gid: ticketref_no,
                }

                var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.uploaddocument = resp.data.MdlDocDetails;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;

                });
                if (resp.data.operation_status == 'Completed' || resp.data.operation_status == 'Assigned') {
                    var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblassigned_remarks = resp.data.assigned_remarks;
                        // $('#lblassigned_remarks').html(resp.data.assigned_remarks);
                        $scope.lblassigned_date = resp.data.assigned_date;
                        $scope.lblassigned_toname = resp.data.assigned_toname;
                        $scope.lblassigned_by = resp.data.assigned_by;
                        $scope.document_list = resp.data.rmdocument_list;
                        $scope.lblrmfilename = resp.data.rmfilename;
                        $scope.lblrmfilepath = resp.data.rmfilepath;
                    });
                    
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        unlockUI();
                    });
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                        $scope.completed_remarks = resp.data.completed_remarks;
                        $scope.completed_by = resp.data.completed_by;
                        $scope.completed_date = resp.data.completed_date;
                        $scope.lblcompfilename = resp.data.compfilename;
                        $scope.lblcompfilepath = resp.data.compfilepath;
                        unlockUI();
                    });

                } 
                 

                unlockUI();               
            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });
            //var url = 'api/employee/Employee';
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list = resp.data.employee_list;
            //});
            var url = 'api/OsdTrnBankAlert/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
            });
            
            var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferto_name = resp.data.relationshipmanager_name;
                $scope.transferedinitiated_by = resp.data.transferedinitiated_by;
                $scope.transferinitiated_date = resp.data.transferinitiated_date;
                $scope.transfer_type = resp.data.transfer_type;
                $scope.transfer_remarks = resp.data.transfer_remarks;
            });


            // var param = {
            //     bankalertrefundapprl_gid: localStorage.getItem('bankalertrefundapprl_gid')
            // }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: ticketref_no
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: ticketref_no
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });
        }

        $scope.employee = function (cboemployee) {
            for (var i = 0; i < $scope.cboemployee.length; i++) {
                if (cboemployee == $scope.cboemployee[i].employee_gid)
                    $scope.cboemployee = $scope.cboemployee[i].employee_name.replace(" ", "").toLowerCase();

            }
        }
        $scope.AckComplete = function () {
           
           
            var modalInstance = $modal.open({
                templateUrl: '/Ackcompleterequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };
                var url = 'api/OsdTrnBankAlert/GetEmployeeName';

                SocketService.get(url).then(function (resp) {

                    $scope.user_name = resp.data.user_name;
                    session_empgid = resp.data.employee_gid;
                    // assigned_remarks: $scope.txtremarks,
                });
              
                $scope.ackcompletedSubmit = function () {
                    var params =
                    {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                        customer_gid: customer_gid,
                        assigned_to: session_empgid,
                        assigned_toname: $scope.user_name,
                         assigned_remarks:  $scope.completed_remarks,
                        //    assigned_remarks: $scope.viewFroala,
                    }
                    var url = 'api/OsdTrnBankAlert/Post2OperationTeam';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            var params =
                            {
                                bankalert2allocated_gid: bankalert2allocated_gid,
                            }
                            var url = 'api/OsdTrnBankAlert/GetServiceReqDtl';

                            SocketService.getparams(url,params).then(function (resp) {
                                lblservicerequest_gid = resp.data.servicerequest_gid;
                                if (lblservicerequest_gid != null || lblservicerequest_gid != "" || lblservicerequest_gid != undefined)
                                {
                                    var params = {
                                        completed_remarks: $scope.completed_remarks,
                                        servicerequest_gid: lblservicerequest_gid,

                                    }
                                    lockUI();
                                    var url = 'api/OsdTrnMyTicket/PostAckCompleteRequest';
                                    SocketService.post(url, params).then(function (resp) {
                                        if (resp.data.status == true) {
                                            modalInstance.close('closed');
                                            Notify.alert(resp.data.message, {
                                                status: 'success',
                                                pos: 'top-center',
                                                timeout: 3000
                                            });
                                            unlockUI();
                                            $state.go('app.OsdTrnBankAlertManagementSummary');
                                            // $location.url('app/OsdTrnBankAlertManagementSummary?hash=' + cmnfunctionService.encryptURL('lstab=' + lstab));
                                        }
                                        else {
                                            modalInstance.close('closed');
                                            Notify.alert(resp.data.message, {
                                                status: 'warning',
                                                pos: 'top-center',
                                                timeout: 3000
                                            });
                                            unlockUI();
                                            $state.go('app.OsdTrnBankAlertManagementSummary');
                                            // $location.url('app/OsdTrnBankAlertManagementSummary?hash=' + cmnfunctionService.encryptURL('lstab=' + lstab));

                                        }
                                    });
                                    unlockUI();
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            

                        }
                        else {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                       
                    });
                   
                }


                $scope.downloadsdoc = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }


                $scope.Cdownloadall = function () {

                    for (var i = 0; i < compfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(compfilepath, compfilename[i]);
                    }

                }
                $scope.CompleteRequestDocumentUpload = function () {

                    var fi = document.getElementById('file2');
                    console.log(fi);
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);

                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "");

                            if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }

                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/CompleteDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file2").val('');
                            $scope.upload_list = resp.data.upload_list;
                            compfilename = resp.data.compfilename;
                            compfilepath = resp.data.compfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                }


                $scope.uploaddocumentdelete = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GettmpCompleteDocDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }
          $scope.Back = function () {
            if (lspage == 'BamCompletedList') {
                $state.go('app.osdBamTicketCompletedSummary');
            } else {
              
                $location.url("app/OsdTrnBankAlertManagementSummary?lstab=" + lstab);

            }
             
        }
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.download = function (val1, val2) {
        //var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //var link = document.createElement("a");
        //link.href = relpath2;
        //link.setAttribute('download', val2);
        //link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }

        $scope.udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.COdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {
                $scope.IsLogShow = true;
            }

        }
     
        $scope.UploadDocCancel = function (id) {
            var params = {
                fileupload_gid: id
            }
            var url = 'api/OsdTrnBankAlert/DeleteOperationUploadedDoc';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                    $scope.upload_list = resp.data.upload_list;
                    $scope.lblfilename = resp.data.doufilename;
                    $scope.lblfilepath = resp.data.doufilepath;
            });
        }
        $scope.ServiceRequestDocumentUpload = function () {
            
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
            var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                   
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                        if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }
                }
                frm.append('project_flag', "Default");
                     lockUI();
                var url = 'api/OsdTrnServiceRequest/RequestDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.upload_list = resp.data.upload_list;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }
        }
        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.downloads = function (val1, val2) {
        //var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //var link = document.createElement("a");
        //link.href = relpath2;
        //link.setAttribute('download', val2);
        //link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.rmdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Submit = function () {
            // var editor = new FroalaEditor('div#froala-editor', {}, function () { })
            // $scope.viewFroala = editor.html.get();
            // var remarks = $($scope.viewFroala).text();

            // if ((editor.core.isEmpty())) {
            //     Notify.alert('Enter Remarks', {
            //         status: 'warning',
            //         pos: 'top-center',
            //         timeout: 3000
            //     });
            // }
            // else {

            var assigned_toname = $('#employeeList :selected').text();
                var params =
                   {
                       bankalert2allocated_gid: bankalert2allocated_gid,
                       customer_gid: customer_gid,
                       assigned_to: $scope.cboemployee,
                    assigned_toname: assigned_toname,
                       assigned_remarks: $scope.txtremarks,
                    //    assigned_remarks: $scope.viewFroala,
                   }
                var url = 'api/OsdTrnBankAlert/Post2OperationTeam';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $location.url('app/OsdTrnBankAlertManagementSummary?lstab=' + lstab);
                });
            // }

               
            
        }
        ////$scope.downloadsdocument = function (val1, val2) {
        ////    var phyPath = val1;
        ////    var relPath = phyPath.split("EMS");
        ////    var relpath1 = relPath[1].replace("\\", "/");
        ////    var hosts = window.location.host;
        ////    var prefix = location.protocol + "//";
        ////    var str = prefix.concat(hosts, relpath1);
        ////    var link = document.createElement("a");
        ////    var name = val2.split(".")
        ////    link.download = val2;
        ////    var uri = str;
        ////    link.href = uri;
        ////    link.click();
        ////}
      //$scope.downloadsdocument = function (val1, val2) {
      //  var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
      //  var link = document.createElement("a");
      //  link.href = relpath2;
      //  link.setAttribute('download', val2);
      //  link.click();
      //}
        $scope.downloadsdocument = function (val1, val2) {
          DownloaddocumentService.Downloaddocument(val1, val2);
      }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamnotAllocatedViewController', osdBamnotAllocatedViewController);
    osdBamnotAllocatedViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService','cmnfunctionService'];

    function osdBamnotAllocatedViewController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, $sce, DownloaddocumentService,cmnfunctionService) {
        var vm = this;
        vm.title = 'osdBamnotAllocatedViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var lsbankalert2notallocated_gid = searchObject.lsbankalert2notallocated_gid;
        var lstab = searchObject.lstab;
        activate();
        function activate() {
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            var url = 'api/OsdTrnBankAlert/GetNotAllocatedDtl';
            var param = {
                bankalert2notallocated_gid: lsbankalert2notallocated_gid
            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                unlockUI();
            });
        }

        $scope.Back = function () {
             $location.url("app/OsdTrnBankAlertManagementSummary?lstab=" + lstab);
        }
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.Submit = function () {
            $state.go('app.osdBamAllocatedToRM');
        }
        $scope.uploadattachment = function (val, val1, name) {
            var fi = document.getElementById('addupload');
            if (fi.files.length > 0) {
                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    frm.append('project_flag', "Default");
                    $scope.uploadfrm = frm;
                }
            }
            var url = 'api/OsdTrnBankAlert/RMDocumentUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                if (resp.data.status == true) {

                    var url = 'api/OsdTrnBankAlert/GetRMUploadedDoc';

                    SocketService.get(url).then(function (resp) {
                        $scope.uploaddocument = resp.data.MdlDocDetails;

                    });
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }

    
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdBamRMCompletedSummaryController', OsdBamRMCompletedSummaryController);

    OsdBamRMCompletedSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function OsdBamRMCompletedSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdBamRMCompletedSummaryController';

        activate();

        function activate() {
            var url = 'api/OsdTrnBankAlert/GetCompletedSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankAlertCompleted_list = resp.data.BankAlertCompleted_list;
                unlockUI();
            });
        }

        $scope.Back = function () {
            $location.url('app/osdBamAllocatedToRM');
        }

        $scope.BankalertView = function (bankalert2allocated_gid, customer_gid,customer_urn) {
            $location.url('app/osdBamAllocatedToRMView?hash=' + cmnfunctionService.encryptURL('lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lscustomer_urn=' + customer_urn + '&lspage=Completedsummary'));
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamAllocatedTotransferController', osdBamAllocatedTotransferController);
    osdBamAllocatedTotransferController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService','cmnfunctionService'];

    function osdBamAllocatedTotransferController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, $sce, DownloaddocumentService,cmnfunctionService) {
        var vm = this;
        vm.title = 'osdBamAllocatedTotransferController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var bankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        var customer_gid = searchObject.lscustomer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var lstab = searchObject.lstab;
        activate();
        lockUI();
        function activate() {
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
           
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,
            }

            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.transferto_name = resp.data.transferto_name;
                $scope.employee_gid = resp.data.employee_gid;
                $scope.relationshipmanager_gid = resp.data.relationshipmanager_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();
                if ($scope.lblallocated_status == 'Completed') {
                    var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
                    var param = {
                        bankalert2allocated_gid: bankalert2allocated_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.lblrm_remarks = resp.data.rm_remarks;
                        // $('#lblrm_remarks').html(resp.data.rm_remarks);
                        $scope.lblrm_status = resp.data.rm_status;
                        $scope.lblupdated_date = resp.data.updated_date;
                        $scope.lblupdated_by = resp.data.updated_by;
                        $scope.rmdocument_list = resp.data.rmdocument_list;
                        $scope.lblrmhfilename = resp.data.rmhfilename;
                        $scope.lblrmhfilepath = resp.data.rmhfilepath;
                    });

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        unlockUI();
                    });
                    var param = {
                        servicerequest_gid: $scope.servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                        $scope.completed_remarks = resp.data.completed_remarks;
                        $scope.completed_by = resp.data.completed_by;
                        $scope.completed_date = resp.data.completed_date;
                        $scope.lblfilename = resp.data.compfilename;
                        $scope.lblfilepath = resp.data.compfilepath;
                        unlockUI();
                    });
                }
                var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
                var param = {
                    bankalert2allocated_gid: bankalert2allocated_gid,
                }
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.lblassigned_remarks = resp.data.assigned_remarks;
                    $scope.lblassigned_date = resp.data.assigned_date;
                    $scope.lblassigned_toname = resp.data.assigned_toname;
                    $scope.lblassigned_by = resp.data.assigned_by;
                    $scope.document_list = resp.data.rmdocument_list;
                });
                var param = {
                    servicerequest_gid: $scope.servicerequest_gid,
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, param).then(function (resp) {
                    $scope.transferlistdtl = resp.data.transferlistdtl;
                    $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                    unlockUI();
                });
            });
            var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.relationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.transferedinitiated_by = resp.data.transferedinitiated_by;
                $scope.transferinitiated_date = resp.data.transferinitiated_date;
                $scope.transfer_type = resp.data.transfer_type;
                $scope.transfer_remarks = resp.data.transfer_remarks;
              });
        }
        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {
                $scope.IsLogShow = true;
            }

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Back = function () {
            $location.url("app/osdBamAllocatedToRM?lstab=" + lstab);
        }
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.download = function (val1, val2) {
        //    var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //    var link = document.createElement("a");
        //    link.href = relpath2;
        //    link.setAttribute('download', val2);
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
         //$scope.downloadsdocument = function (val1, val2) {
         //   var phyPath = val1;

         //   var relPath = phyPath.split("EMS");
         //   var relpath1 = relPath[1].replace("\\", "/");
         //   var hosts = window.location.host;
         //   var prefix = location.protocol + "//";
         //   var str = prefix.concat(hosts, relpath1);
         //   var link = document.createElement("a");
         //   var name = val2.split(".")
         //   link.download = val2;
         //   var uri = str;
         //   link.href = uri;
         //   link.click();
         //}
         //$scope.downloadsdocument = function (val1, val2) {
         //    var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
         //    var link = document.createElement("a");
         //    link.href = relpath2;
         //    link.setAttribute('download', val2);
         //    link.click();
         //}
         $scope.downloadsdocument = function (val1, val2) {
             DownloaddocumentService.Downloaddocument(val1, val2);
         }
       }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBamTicketCompletedSummary', osdBamTicketCompletedSummary);

    osdBamTicketCompletedSummary.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdBamTicketCompletedSummary($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdBamTicketCompletedSummary';

        activate();

        function activate() {
            var url = 'api/OsdTrnBankAlert/GetBAMOperationCompletedSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.BankAlertCompleted_list = resp.data.BankAlertAllocated_list;
            });
        }

        //$scope.BankalertView = function (bankalert2allocated_gid, customer_gid) {
        //    $location.url('app/osdBamAssign2operation?hash=' + cmnfunctionService.encryptURL('lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lspage=BamCompletedList'));
        //}
        $scope.BankalertView = function (bankalert2allocated_gid, customer_gid) {
            $location.url('app/osdBamAssign2operation?lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lspage=BamCompletedList');
        }

        $scope.back = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdBankAlertReportController', osdBankAlertReportController);

    osdBankAlertReportController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService'];

    function osdBankAlertReportController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdBankAlertReportController';
        activate();
        function activate()
        {
            $scope.limit = 6000;
            var url = 'api/OsdTrnBankAlertReport/BankReportSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankReport_list = resp.data.BankReportSummaryList;
                unlockUI();
            });
            
        }
        
        $scope.Bankreport = function () {
            lockUI();
            var url = 'api/OsdTrnBankAlertReport/ExportBankReport';
            SocketService.get(url).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);
                    // var phyPath = resp.data.lspath;
                    // var relPath = phyPath.split("EMS");
                    // var relpath1 = relPath[1].replace("\\", "/");
                    // var hosts = window.location.host;
                    // var prefix = location.protocol + "//";
                    // var str = prefix.concat(hosts, relpath1);
                    // var link = document.createElement("a");
                    // var name = resp.data.lsname.split('.');
                    // link.download = name[0];
                    // var uri = str;
                    // link.href = uri;
                    // link.click();
                }
                else {
                    unlockUI();
                    Notify.alert('Error Occurred While Export !', 'success')

                }

            });
        }

        var limitStep = 6000;
        $scope.incrementLimit = function () {
            $scope.limit += limitStep;
        };
        $scope.decrementLimit = function () {
            $scope.limit -= limitStep;
        };
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdComposeMailController', osdComposeMailController);

    osdComposeMailController.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$timeout', '$window', 'cmnfunctionService'];

    function osdComposeMailController(DownloaddocumentService,$rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $timeout, $window, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;

        vm.title = 'osdComposeMailController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        var toMail = searchObject.toMail;
        var ccMail =searchObject.ccMail;
        var bccMail = searchObject.bccMail;
        var email_subject = searchObject.email_subject;
        var message_id = searchObject.message_id;
        var reference_id = searchObject.reference_id;
        var rmemployee_gid = searchObject.rmemployee_gid;
        var rmemployee_name = searchObject.rmemployee_name;
        var decision = searchObject.decision;
        var lspage = searchObject.lspage;
        var llspage = searchObject.llspage;

        $scope.lsShowBCC = true;
        $scope.lsShowCC = true;
    
        activate();

        function activate() {
            $scope.email_gid = email_gid;
            $scope.toMail = toMail;
            $scope.ccMail = ccMail;
            $scope.bccMail = bccMail;
            $scope.email_subject = email_subject;
            $scope.message_id = message_id;
            $scope.reference_id = reference_id;
            $scope.rmemployee_gid = rmemployee_gid;
            $scope.rmemployee_name = rmemployee_name;
            $scope.decision = decision;
            $scope.lspage = lspage;
            $scope.llspage = llspage;

         var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.pushbackcontent = resp.data.emailsignature;
                   
                });
                var url = 'api/OsdTrnCustomerQueryMgmt/Mailtempdelete';
                SocketService.get(url).then(function (resp) {
                });
        }

        $scope.uploadattachment = function (val,val1,name) {
            
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                   
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                        if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }
                    
                }
                frm.append('project_flag', "Default");
                lockUI();
                var url = 'api/OsdTrnCustomerQueryMgmt/MailAttachment';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.upload_list = resp.data.upload_list;
                    unlockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Document Uploaded Successfully..!!', 'success')
                       
                        var url = 'api/OsdTrnCustomerQueryMgmt/GetMailAttachment';
            
                        SocketService.get(url).then(function (resp) {
                           
                            $scope.uploaddocument = resp.data.MdlDocDetails;
                          
                        });
                    }
                    else {
                        unlockUI();
                        Notify.alert('File Format Not Supported!')
            
                    }
                    unlockUI();
                });
            }
            else {
                alert('Please select a file.')
            }        
        }

        $scope.updateDesicion=function(){
            
            if($scope.pushbackcontent==undefined){
                Notify.alert('Write the body of the content','success');
                return;
            }
          
            var params={
                email_gid:$scope.email_gid,
                decision:$scope.decision,
                employee_gid:$scope.rmemployee_gid,
                employee_name:$scope.rmemployee_name,
                remarks:'',
                mailcontent:$scope.pushbackcontent,
                subject:$scope.email_subject,
                tomail_id:$scope.toMail,
                ccmail_id:$scope.ccMail,
                bccmail_id:$scope.bcc_mail,
                message_id:$scope.message_id,
                reference_id:$scope.reference_id
            }
            var url='api/OsdTrnCustomerQueryMgmt/PostDecision';
            lockUI();
            SocketService.post(url,params).then(function (resp) {
                unlockUI();
                if(resp.data.status==true){
                   
                    Notify.alert(resp.data.message,'success')

                    
                                
                    if($scope.llspage == "forward")
                    {
                       
                        $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid ));
                    }
                    else if($scope.llspage == "reply")
                    {
                        $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                     
                    }
                    else if($scope.llspage == "transfer")
                    {
                        $location.url('app/osdCqmTransferSummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                 
                    }
                   
                }
                else{
                                 
                    Notify.alert(resp.data.message,'warning')    

                    if($scope.llspage == "forward")
                    {
                        $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                        
                    }
                    else if($scope.llspage == "reply")
                    {
                        $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                       
                    }
                    else if($scope.llspage == "transfer")
                    {
                        $location.url('app/osdCqmTransferSummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                       
                    }
                }
            });


        }

        $scope.UploadDocCancel = function (id) {
            var params = {
                mailattachment_gid: id
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/DeleteAttachment';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document deleted Successfully..!!', 'success')

                    var url = 'api/OsdTrnCustomerQueryMgmt/GetMailAttachment';

                    SocketService.get(url).then(function (resp) {

                        $scope.uploaddocument = resp.data.MdlDocDetails;

                    });
                }
                else {
                    unlockUI();
                    Notify.alert('Error Occurred')

                }

            });
        }
        
        $scope.closeDesicion = function () {
            $window.close();
        }

        $scope.downloads = function (path, attchment_name) {
            DownloaddocumentService.Downloaddocument(path, attchment_name);
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
        }

        $scope.back = function() {
               
            if($scope.lspage =="forward")
            {
                $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                
            }
            else if($scope.lspage =="reply")
            {
                $location.url('app/osdCqmReplaySummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                
            }
            else if($scope.lspage == "transfer")
            {
                $location.url('app/osdCqmTransferSummary?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
               
            }
            else if($scope.lspage=="assignedquery360")
            {
                $location.url('app/osdCqmAssignedQuery360?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
                
            }
            else if($scope.lspage=="replyview")
            {
                $location.url('app/osdCqmReplayView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
               
            }
            else if($scope.lspage=="forwardview")
            {
                $location.url('app/osdCqmForwardView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
               
            }
            else if($scope.lspage=="transferview")
            {
                $location.url('app/osdCqmTransferView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
               
            }
        } 

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmAssignCloseSummaryController', osdCqmAssignCloseSummaryController);

        osdCqmAssignCloseSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmAssignCloseSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmAssignCloseSummaryController';

        activate();
        function activate() {

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryCloseSummary';
            lockUI(); 
            SocketService.get(url).then(function (resp) {
                $scope.QueryAssignedCloseList = resp.data.QueryAssignedCloseList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/AssignedQueryCount";
            SocketService.get(url).then(function (resp) {
                $scope.assigned_count = resp.data.assigned_count;
                $scope.reply_count = resp.data.reply_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }
        
        $scope.CloseView = function (email_gid) {
       
            $location.url('app/osdCqmAssignCloseView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
        }

        $scope.Assigned = function () {
            $state.go('app.osdCqmAssignedQuery');
        }
        
        $scope.Closed = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.Transfer = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.Forward = function () {
            $state.go('app.osdCqmForwardSummary');
        }
        $scope.ClosedView = function () {
            $state.go('app.osdCqmAssignCloseView');
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmAssignCloseViewController', osdCqmAssignCloseViewController);

        osdCqmAssignCloseViewController.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmAssignCloseViewController(DownloaddocumentService, $rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmAssignCloseViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        activate();
        function activate() {
           
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;
            
            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params={
                email_gid: email_gid
            };
            SocketService.getparams(url,params).then(function (resp) {
                if(resp.data.status==true){  
                }
                else{

                }
                
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryClose360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.QueryAssignClose360list= resp.data.QueryAssignClose360list;
                $scope.closed_remarks= resp.data.closed_remarks;
                $scope.closed_by= resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.attch_list = resp.data.MdlAttachmentList;
                unlockUI();
            }); 

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
                
                unlockUI();
            });
        }
        
        $scope.Back = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.logdetails=function() {

            if($scope.IsLogShow == true) {
                $scope.IsLogShow = false; 
            }
            else {
                
                $scope.IsLogShow=true;
                
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';
        
                var params={
                    lsemail_gid: email_gid
                };
            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                       
                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if( $scope.MdlTransferLog  == null)
                        {
                            $scope.transfershow = true;
                        }
                        else{
                            $scope.transfershow = false;
                        }
                    }
                    else{
                       
                    }
                    
                }); 
        
                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';
        
                var params={
                    email_gid: email_gid
                };            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else{
                       
                    }
                    
                });
            } 
        }
        
        $scope.Download = function (path, attchment_name) {
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
            DownloaddocumentService.Downloaddocument(path, attchment_name);
        }

        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/employee/Employee';
                    SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                    unlockUI();
                    });

                    $scope.ticketref_no = ticketref_no;
                    $scope.subject = email_subject;
                    $scope.from = from_mailaddress;
                    $scope.checkeremployee_name = assigned_to;

                    $scope.transferWIUpdate = function () {

                        if ($scope.transfer_to == undefined) {
                            modalInstance.close('closed');
                            Notify.alert('Kindly Select the Assign to Person', 'warning');
                            return;
                        }

                        var params = {
                            email_gid: email_gid,
                            employee_gid: $scope.transfer_to,
                            employee_name: $('#transfer_to :selected').text(),
                            transfer_remarks:$scope.transfer_remarks
                        }

                        var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status = true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'success');
                                activate();
                            }
                            else {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'warning');
                                activate();
                            }
                        });

                    }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.signature = function () {
            var modalInstance = $modal.open({
                templateUrl: '/signatureContent.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.EmailSignature = resp.data.emailsignature;
                   
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                $scope.submit = function () {
                    lockUI();
                    var params={
                        emailsignature:$scope.EmailSignature
                    }
            
                    var url = "api/OsdTrnCustomerQueryMgmt/PostEmailSignature";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                         
                            $modalInstance.close('closed');
                            
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                   
            }
        }

        $scope.close = function (email_gid, ticketref_no, from_mailaddress, email_subject) {
           
            var modalInstance = $modal.open({
                templateUrl: '/closeContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ticketref_no = ticketref_no;
                $scope.subject = email_subject;

                $scope.from = from_mailaddress;
                $scope.CloseWIUpdate = function () {

                    var params = {
                        email_gid: email_gid,
                        decision: 'Close',
                        employee_gid: '',
                        employee_name: '',
                        remarks: $scope.closed_remarks,
                        mailcontent: 'Close',
                        subject: '',
                        tomail_id: '',
                        ccmail_id: '',
                        bccmail_id: ''
                    }


                    var url = 'api/OsdTrnCustomerQueryMgmt/PostDecision';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, 'success')
                        }
                        else {
                            Notify.alert(resp.data.message, 'warning')
                        }
                        modalInstance.close('closed');
                        activate();
                    });
                }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.forward=function(){
          
            var decision="Forward";
            var lspage = "forward";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }
        

        $scope.Reply=function () {
            
            var decision="Reply";
            var lspage = "reply";
            var llspage = "reply";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        
        }

    }   
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmAssignedQuery360Controller', osdCqmAssignedQuery360Controller);

        osdCqmAssignedQuery360Controller.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];
    function osdCqmAssignedQuery360Controller(DownloaddocumentService, $rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmAssignedQuery360Controller';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        var status = searchObject.status;
        activate();
        function activate() {
          
        
            $scope.transfer_status = status;
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;
            $scope.Transferlist = true;

            if ($scope.transfer_status == 'Transfer') {
                $scope.Transferlist = false;
            }
            else {
                $scope.Transferlist = true;
            }

            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
                unlockUI();
            });
            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignedQuery360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.Query360list= resp.data.Query360list;
                $scope.assigned_remarks = resp.data.assigned_remarks;
                $scope.attch_list = resp.data.MdlAttachmentList;
                unlockUI();
            }); 

           
            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
                //$scope.MdlAttachmentList = resp.data.MdlAttachmentList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params={
                email_gid: email_gid
            };
            SocketService.getparams(url,params).then(function (resp) {
                if(resp.data.status==true){  
                }
                else{

                }
                
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

            var params = {
                lsemail_gid: email_gid
            };

            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {

                    $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    if ($scope.MdlTransferLog == null) {
                        $scope.transfershow = true;
                    }
                    else {
                        $scope.transfershow = false;
                    }
                }
                else {

                }

            });
        }
        $scope.Back = function () {
            $state.go('app.osdCqmAssignedQuery');
        }

        $scope.Download = function (path, attchment_name) {
            DownloaddocumentService.Downloaddocument(path, attchment_name);
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
        }

        $scope.logdetails=function() {

            if($scope.IsLogShow == true) {
                $scope.IsLogShow = false; 
            }
            else {
                
                $scope.IsLogShow=true;
                
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';
        
                var params={
                    lsemail_gid: email_gid
                };
            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                       
                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if( $scope.MdlTransferLog  == null)
                        {
                            $scope.transfershow = true;
                        }
                        else{
                            $scope.transfershow = false;
                        }
                    }
                    else{
                       
                    }
                    
                }); 
        
                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';
        
                var params={
                    email_gid: email_gid
                };            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else{
                       
                    }
                    
                });
            } 
        }


        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });
            
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                    $scope.ticketref_no = ticketref_no;
                    $scope.subject = email_subject;
                    $scope.from = from_mailaddress;
                    $scope.checkeremployee_name = assigned_to;

                    $scope.transferWIUpdate = function () {

                        if ($scope.transfer_to == undefined) {
                            modalInstance.close('closed');
                            Notify.alert('Kindly Select the Assign to Person', 'warning');
                            return;
                        }

                        var params = {
                            email_gid: email_gid,
                            employee_gid: $scope.transfer_to,
                            employee_name: $('#transfer_to :selected').text(),
                            transfer_remarks:$scope.transfer_remarks
                        }

                        var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status = true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'success');
                                activate();
                                $state.go('app.osdCqmTransferSummary');
                            }
                            else {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'warning');
                                activate();
                            }
                        });

                    }
                    var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.signature = function () {
            var modalInstance = $modal.open({
                templateUrl: '/signatureContent.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.EmailSignature = resp.data.emailsignature;
                   
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                $scope.submit = function () {
                    lockUI();
                    var params={
                        emailsignature:$scope.EmailSignature
                    }
            
                    var url = "api/OsdTrnCustomerQueryMgmt/PostEmailSignature";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                         
                            $modalInstance.close('closed');
                            
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                   
            }
        }

        $scope.close = function (email_gid, ticketref_no, from_mailaddress, email_subject) {
           
            var modalInstance = $modal.open({
                templateUrl: '/closeContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ticketref_no = ticketref_no;
                $scope.subject = email_subject;

                $scope.from = from_mailaddress;
                $scope.CloseWIUpdate = function () {

                    var params = {
                        email_gid: email_gid,
                        decision: 'Close',
                        employee_gid: '',
                        employee_name: '',
                        remarks: $scope.close_remarks,
                        mailcontent: 'Close',
                        subject: '',
                        tomail_id: '',
                        ccmail_id: '',
                        bccmail_id: ''
                    }


                    var url = 'api/OsdTrnCustomerQueryMgmt/PostDecision';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, 'success')
                            $state.go('app.osdCqmAssignCloseSummary');
                        }
                        else {
                            Notify.alert(resp.data.message, 'warning')
                        }
                        modalInstance.close('closed');
                        activate();
                    });
                }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.forward=function(){
            
            var decision="Forward";
            var lspage = "assignedquery360";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }

        $scope.Reply=function () {
          
            var decision="Reply";
            var lspage = "assignedquery360";
            var llspage = "reply";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }
           
    }
    
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmAssignedQueryController', osdCqmAssignedQueryController);

        osdCqmAssignedQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];

    function osdCqmAssignedQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,$sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmAssignedQueryController';

        activate();
        function activate() {
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignedQuerySummary';
            SocketService.get(url).then(function (resp) {
                $scope.AssignedQueryList = resp.data.AssignedQueryList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/AssignedQueryCount";
            SocketService.get(url).then(function (resp) {
                $scope.assigned_count = resp.data.assigned_count;
                $scope.reply_count = resp.data.reply_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
            

        }
        $scope.Assigned = function () {
            $state.go('app.osdCqmAssignedQuery');
        }

        $scope.Closed = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.Transfer = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.Forward = function () {
            $state.go('app.osdCqmForwardSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.AssignedQuery360 = function (email_gid) {

          
            $location.url('app/osdCqmAssignedQuery360?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid ));
        }
        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {

            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });

            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                $scope.email_gid = email_gid;
                $scope.ticketref_no = ticketref_no;
                $scope.email_subject = email_subject;
                $scope.from_mailaddress = from_mailaddress;
                $scope.assigned_to = assigned_to;

                $scope.transferWIUpdate = function () {

                    if ($scope.transfer_to == undefined) {
                        modalInstance.close('closed');
                        Notify.alert('Kindly Select the Assign to Person', 'warning');
                        return;
                    }

                    var params = {
                        email_gid: $scope.email_gid,
                        employee_gid: $scope.transfer_to,
                        employee_name: $('#transfer_to :selected').text(),
                        transfer_remarks: $scope.transfer_remarks
                    }

                    var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status = true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'success');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'warning');
                            activate();
                        }
                    });
                    

                }
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                //var url = "api/OsdTrnCustomerQueryMgmt/TransferLog";
                //lockUI();
                //SocketService.post(url, params).then(function (resp) {
                //    $scope.MdlTransferLog = resp.data.MdlTransferLog;
                //});
            }
        }

        
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmAssignToQueryController', osdCqmAssignToQueryController);

        osdCqmAssignToQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];

    function osdCqmAssignToQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,$sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmAssignToQueryController';
        var email_gid = $location.search().email_gid;
        activate();
        function activate() {
            
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAssignSummary';
            lockUI(); 
            SocketService.get(url).then(function (resp) {
                $scope.QueryAssignList = resp.data.QueryAssignList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/QueryAssignmentCount";
            SocketService.get(url).then(function (resp) {
                $scope.pending_count = resp.data.pending_count;
                $scope.assign_count = resp.data.assign_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }

        $scope.AssignedQuery360 = function(email_gid,status) {
            
            $location.url('app/osdCqmQueryAssign360?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid +'&status=' + status ));
        }
        $scope.Pending = function () {
            $state.go('app.osdCqmQueryAssignment');
        }

        $scope.Assigned = function (){
            $state.go('app.osdCqmAssignToQuery');
        }
        
        $scope.Close = function (){
            $state.go('app.osdCqmCloseSummary');
        }

        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {

            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });

            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                $scope.email_gid = email_gid;
                $scope.ticketref_no = ticketref_no;
                $scope.email_subject = email_subject;
                $scope.from_mailaddress = from_mailaddress;
                $scope.assigned_to = assigned_to;

                $scope.transferWIUpdate = function () {

                    if ($scope.transfer_to == undefined) {
                        modalInstance.close('closed');
                        Notify.alert('Kindly Select the Assign to Person', 'warning');
                        return;
                    }

                    var params = {
                        email_gid: $scope.email_gid,
                        employee_gid: $scope.transfer_to,
                        employee_name: $('#transfer_to :selected').text(),
                        transfer_remarks: $scope.transfer_remarks
                    }

                    var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status = true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'success');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'warning');
                            activate();
                        }
                    });

                }

                var params = {
                    lsemail_gid:email_gid
                }

                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';
              
                SocketService.getparams(url, params).then(function (resp) {
                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                });

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
            
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmCloseSummaryController', osdCqmCloseSummaryController);

        osdCqmCloseSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmCloseSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmCloseSummaryController';

        activate();
        function activate() {
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryCloseSummary';
            lockUI(); 
            SocketService.get(url).then(function (resp) {
                $scope.QueryCloseList = resp.data.QueryCloseList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/QueryAssignmentCount";
            SocketService.get(url).then(function (resp) {
                $scope.pending_count = resp.data.pending_count;
                $scope.assign_count = resp.data.assign_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }
        
        $scope.Pending = function () {
            $state.go('app.osdCqmQueryAssignment');
        }

        $scope.Assigned = function (){
            $state.go('app.osdCqmAssignToQuery');
        }
        $scope.Close = function (){
            $state.go('app.osdCqmCloseSummary');
        }
        $scope.CloseView = function (email_gid) {
           
            $location.url('app/osdCqmCloseView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
        }
    }
})();

(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnMyActivityAllotted360', osdTrnMyActivityAllotted360);

    osdTrnMyActivityAllotted360.$inject = ['$rootScope', '$scope', '$modal', '$state', 'SweetAlert', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnMyActivityAllotted360($rootScope, $scope, $modal, $state, SweetAlert, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $filter, ngTableParams, $resource, $timeout, ngTableDataService, $sce, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityAllotted360';
        var assigned_status;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var request_refno = searchObject.request_refno;
        var lspage = searchObject.lspage;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;
        var compfilename, forwardfilename;
        var compfilepath;

        activate();

        function activate() {
            lockUI();
            $scope.RequestCompletedFlag = RequestCompletedFlag;
            //var url = window.location.href;
            //var relPath = url.split("lstab=");
            //$scope.relpath1 = relPath[1];
            $scope.BankAlert_View = false;



            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }


            if ($scope.RequestCompletedFlag == "N") {
                $scope.remarkscommunication = true;
            }
            else {
                $scope.remarkscommunication = false;
            }
           

            $scope.servicerequest_gid = servicerequest_gid;
            var params = {
                servicerequest_gid: servicerequest_gid

            }
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });

            var param = {
                servicerequest_gid: servicerequest_gid

            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                assigned_status = resp.data.assigned_status;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
            });
           
            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });
          
           
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityTempClear';
            SocketService.get(url).then(function (resp) {
            });


            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                unlockUI();
            });

            var url = 'api/OsdTrnMyTicket/GetBusinessunitStatusMyActivity';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.businessstatuslist = resp.data.businessstatuslist;
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"
            SocketService.getparams(url, param).then(function (resp) {

                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();
            });


            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });
             var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}

            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: request_refno,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;

            });
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };

            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.COdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;

                }

                frm.append('servicerequest_gid', servicerequest_gid);

                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.alloteddocumentdtl = resp.data.servicerequestdocumentdtl;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                alert('Please select a file.')
            }

        }

        $scope.ackActivity = function (relpath1) {
            var url = "api/OsdTrnMyTicket/PostUpdateAck";
            lockUI();
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            SocketService.post(url, params).then(function (resp) {

                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
            });
        }

        $scope.AckComplete = function () {

            var modalInstance = $modal.open({
                templateUrl: '/Ackcompleterequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };

                $scope.ackcompletedSubmit = function () {
                    var params = {
                        completed_remarks: $scope.completed_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/PostAckCompleteRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.OsdTrnAllotedMyTicket');
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.OsdTrnAllotedMyTicket');
                            

                        }
                    });
                }

               
                $scope.downloadsdoc = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }

                
                $scope.Cdownloadall = function () {

                    for (var i = 0; i < compfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(compfilepath, compfilename[i]);
                    }

                }
                $scope.CompleteRequestDocumentUpload = function () {
                
                    var fi = document.getElementById('file2');
                    console.log(fi);
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i])
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "");

                            if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }

                        }
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/CompleteDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file2").val('');
                            $scope.upload_list = resp.data.upload_list;
                            compfilename = resp.data.compfilename;
                            compfilepath = resp.data.compfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                }


                $scope.uploaddocumentdelete = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GettmpCompleteDocDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }


        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityAllotted360');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityAllotted360');
                            activate();

                        }
                    });
                }
            }
        }


        //lockUI();
        //var url = "api/OsdTrnRequestApproval/PostRequestRejected";
        //SocketService.post(url, params).then(function (resp) {
        //    unlockUI();
        //    if (resp.data.status == true) {

        //        Notify.alert(resp.data.message, {
        //            status: 'success',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();
        //        $scope.showapproval = false;
        //        $scope.hideapproval = false;
        //    }
        //    else {

        //        Notify.alert(resp.data.message, {
        //            status: 'danger',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();

        //    }
        //});


        $scope.back = function () {

            $state.go('app.OsdTrnAllotedMyTicket');


        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        $scope.RejectActivity = function () {

            var modalInstance = $modal.open({
                templateUrl: '/rejectrequestmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: "static",
                keyboard:false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.rejectSubmit = function () {
                    var params = {
                        rejected_remarks: $scope.reject_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/RejectRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            $state.go('app.OsdTrnAllotedMyTicket');


                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function (relpath1) {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }
        $scope.businessstatus_add = function () {
            //var lsbusinessstatus_gid = '';
          //  var lsbusiness_status = '';
          //  if ($scope.cbobusinessstatus != undefined || $scope.cbobusinessstatus != null) {
          //      //lsbusinessstatus_gid = $scope.cbobusinessstatus.businessstatus_gid;
          //      lsbusiness_status = $scope.cbobusinessstatus.business_status;
          //}
            //if ((cbobusinessstatus == undefined) || (cbobusinessstatus == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}
          
            
            var business_status = $('#businessstatus :selected').text();
            var params = {
                businessstatus_gid: $scope.cbobusinessstatus,
                business_status: business_status,
            
          
              //businessstatus_gid: lsbusinessstatus_gid,
            
                    

            }
            if ((business_status == null) || (business_status == ' -----Select Business Unit Status-----')) {
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
            //if ((business_status == undefined) || (business_status == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}
            //else {
                var url = 'api/OsdTrnMyTicket/PostBusinessUnitStatusMyActivity';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                 
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    
                    businessstatus_list();

                });
           }

        }
        function businessstatus_list() {
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityDrop';
            var params = {
                user_gid: $scope.user_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
        }
        // Delete Code Ends
        $scope.businessstatus_delete = function (businessstatusactivity_gid) {
            var params =
                {
                    businessstatusactivity_gid: businessstatusactivity_gid
                }
            console.log(params)
            var url = 'api/OsdTrnMyTicket/DeleteBusinessUnitStatusMyActivity';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

                businessstatus_list();
            });

        }
        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmForwardSummaryController', osdCqmForwardSummaryController);

        osdCqmForwardSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmForwardSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmForwardSummaryController';

        activate();
        function activate() {
            var email_gid = localStorage.getItem('email_gid');
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryForwardSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.QueryAssignedForwardList = resp.data.QueryAssignedForwardList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignedQuery360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.Query360list= resp.data.Query360list;
                $scope.assigned_remarks= resp.data.assigned_remarks;
                unlockUI();
            }); 

            var url = "api/OsdTrnCustomerQueryMgmt/AssignedQueryCount";
            SocketService.get(url).then(function (resp) {
                $scope.assigned_count = resp.data.assigned_count;
                $scope.reply_count = resp.data.reply_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }
        
        $scope.Assigned = function () {
            $state.go('app.osdCqmAssignedQuery');
        }

        $scope.Closed = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.Transfer = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.Forward = function () {
            $state.go('app.osdCqmForwardSummary');
        }

        $scope.ForwardView = function (email_gid) {
            $scope.email_gid = localStorage.setItem('email_gid', email_gid);
            $location.url('app/osdCqmForwardView');
           
        }
        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {

            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                $scope.email_gid = email_gid;
                $scope.ticketref_no = ticketref_no;
                $scope.email_subject = email_subject;
                $scope.from_mailaddress = from_mailaddress;
                $scope.assigned_to = assigned_to;

                $scope.transferWIUpdate = function () {

                    if ($scope.transfer_to == undefined) {
                        modalInstance.close('closed');
                        Notify.alert('Kindly Select the Assign to Person', 'warning');
                        return;
                    }

                    var params = {
                        email_gid: $scope.email_gid,
                        employee_gid: $scope.transfer_to,
                        employee_name: $('#transfer_to :selected').text(),
                        transfer_remarks: $scope.transfer_remarks
                    }

                    var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status = true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'success');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'warning');
                            activate();
                        }
                    });

                }
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });

                $scope.close = function () {
                    modalInstance.close('closed');
                };
                //var url = "api/OsdTrnCustomerQueryMgmt/TransferLog";
                //lockUI();
                //SocketService.post(url, params).then(function (resp) {
                //    $scope.MdlTransferLog = resp.data.MdlTransferLog;
                //});
            }
        }

        $scope.forward = function (email_gid) {
            
            var decision = "Forward";
            var lspage = "forward";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmForwardViewController', osdCqmForwardViewController);

        osdCqmForwardViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmForwardViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmForwardViewController';

        activate();
        function activate() {
            var email_gid = localStorage.getItem('email_gid');
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params = {
                email_gid: localStorage.getItem("email_gid")
            };
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                }
                else {

                }

            });

            var params = {
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryForward360';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.QueryAssignForward360list = resp.data.QueryAssignForward360list;
                $scope.forward_by = resp.data.forward_by;
                $scope.forward_date = resp.data.forward_date;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
                $scope.MdlAttachmentList = resp.data.MdlAttachmentList;
                unlockUI();
            });
        }
        
        $scope.Back = function () {
            $state.go('app.osdCqmForwardSummary');
        }

        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {

                $scope.IsLogShow = true;

                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                var params = {
                    lsemail_gid: localStorage.getItem("email_gid")
                };

                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if ($scope.MdlTransferLog == null) {
                            $scope.transfershow = true;
                        }
                        else {
                            $scope.transfershow = false;
                        }
                    }
                    else {

                    }

                });

                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';

                var params = {
                    email_gid: localStorage.getItem("email_gid")
                };
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else {

                    }

                });
            }
        }

        $scope.Download = function (path, attchment_name) {
            var phyPath = path;
            var relPath = phyPath.split("EMS");
            var relpath1 = relPath[1].replace("\\", "/");
            var hosts = window.location.host;
            var prefix = location.protocol + "//";
            var str = prefix.concat(hosts, relpath1);
            var link = document.createElement("a");
            var name = attchment_name.split('.');
            link.download = name[0];
            var uri = str;
            link.href = uri;
            link.click();
        }

        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                    $scope.ticketref_no = ticketref_no;
                    $scope.subject = email_subject;
                    $scope.from = from_mailaddress;
                    $scope.checkeremployee_name = assigned_to;

                    $scope.transferWIUpdate = function () {

                        if ($scope.transfer_to == undefined) {
                            modalInstance.close('closed');
                            Notify.alert('Kindly Select the Assign to Person', 'warning');
                            return;
                        }

                        var params = {
                            email_gid: localStorage.getItem("email_gid"),
                            employee_gid: $scope.transfer_to,
                            employee_name: $('#transfer_to :selected').text(),
                            transfer_remarks:$scope.transfer_remarks
                        }

                        var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status = true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'success');
                                activate();
                                $state.go('app.osdCqmTransferSummary');
                            }
                            else {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'warning');
                                activate();
                            }
                        });

                    }
                    var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });


                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.signature = function () {
            var modalInstance = $modal.open({
                templateUrl: '/signatureContent.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.EmailSignature = resp.data.emailsignature;
                   
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                $scope.submit = function () {
                    lockUI();
                    var params={
                        emailsignature:$scope.EmailSignature
                    }
            
                    var url = "api/OsdTrnCustomerQueryMgmt/PostEmailSignature";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                         
                            $modalInstance.close('closed');
                            
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                   
            }
        }

        $scope.close = function (email_gid, ticketref_no, from_mailaddress, email_subject) {
           
            var modalInstance = $modal.open({
                templateUrl: '/closeContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ticketref_no = ticketref_no;
                $scope.subject = email_subject;

                $scope.from = from_mailaddress;
                $scope.CloseWIUpdate = function () {

                    var params = {
                        email_gid: email_gid,
                        decision: 'Close',
                        employee_gid: '',
                        employee_name: '',
                        remarks: $scope.close_remarks,
                        mailcontent: 'Close',
                        subject: '',
                        tomail_id: '',
                        ccmail_id: '',
                        bccmail_id: ''
                    }


                    var url = 'api/OsdTrnCustomerQueryMgmt/PostDecision';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, 'success')
                            $state.go('app.osdCqmAssignCloseSummary');
                        }
                        else {
                            Notify.alert(resp.data.message, 'warning')
                        }
                        modalInstance.close('closed');
                        activate();
                    });
                }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.forward=function(){
            
            var decision = "Forward";
            var lspage = "forwardview";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }

        $scope.Reply=function () {
           
            var decision = "Reply";
            var lspage = "forwardview";
            var llspage = "reply";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmQueryAssign360Controller', osdCqmQueryAssign360Controller);

    osdCqmQueryAssign360Controller.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];
    function osdCqmQueryAssign360Controller( DownloaddocumentService ,$rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        var status = searchObject.status;
        vm.title = 'osdCqmQueryAssign360Controller';

        activate();
        function activate() {
        
            $scope.transfer_status = status;
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;
            $scope.Transferlist = true;

            if( $scope.transfer_status == 'Transfer') {
                $scope.Transferlist = false;
            }
            else {
                $scope.Transferlist = true;
            }

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignedQuery360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.Query360list= resp.data.Query360list;
                $scope.assigned_remarks= resp.data.assigned_remarks;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.attch_list = resp.data.MdlAttachmentList;
                unlockUI();
            }); 

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params={
                email_gid: email_gid
            };
            SocketService.getparams(url,params).then(function (resp) {
                if(resp.data.status==true){  
                }
                else{

                }
                
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
            //    $scope.MdlAttachmentList = resp.data.MdlAttachmentList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';
        
                var params={
                    lsemail_gid: email_gid
                };
            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                       
                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if( $scope.MdlTransferLog  == null)
                        {
                            $scope.transfershow = true;
                        }
                        else{
                            $scope.transfershow = false;
                        }
                    }
                    else{
                       
                    }
                    
                }); 

        }
        $scope.Back= function(){
            $state.go('app.osdCqmAssignToQuery');
        }

        $scope.Download = function (path, attchment_name) {
            DownloaddocumentService.Downloaddocument(path, attchment_name);
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
        }

        $scope.logdetails=function() {

            if($scope.IsLogShow == true) {
                $scope.IsLogShow = false; 
            }
            else {
                
                $scope.IsLogShow=true;
                
               var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';
        
                var params={
                    lsemail_gid: email_gid
                };
            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                       
                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if( $scope.MdlTransferLog  == null)
                        {
                            $scope.transfershow = true;
                        }
                        else{
                            $scope.transfershow = false;
                        }
                    }
                    else{
                       
                    }
                    
                }); 
        
                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';
        
                var params={
                    email_gid: email_gid
                };            
                SocketService.getparams(url,params).then(function (resp) {
                    if(resp.data.status==true){
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else{
                       
                    }
                    
                });
            } 
        }
               
            
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmQueryAssignmentController', osdCqmQueryAssignmentController);

    osdCqmQueryAssignmentController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];

    function osdCqmQueryAssignmentController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,$sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmQueryAssignmentController';

        activate();
        function activate() {           
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryPendingSummary';
            lockUI(); 
            SocketService.get(url).then(function (resp) {
                $scope.CustomerQuerypending_list = resp.data.QueryPendingList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/QueryAssignmentCount";
            SocketService.get(url).then(function (resp) {
                $scope.pending_count = resp.data.pending_count;
                $scope.assign_count = resp.data.assign_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }

        $scope.Refresh = function () {  
            activate();
        }

        $scope.Assign = function (email_gid) {  
           
            var params = {
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/MailSeen';
            SocketService.getparams(url, params).then(function (resp) {
            });        
            $location.url('app/osdCqmQueryTicketAssignment?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid ))
        }

        $scope.Pending = function () {
            $state.go('app.osdCqmQueryAssignment');
        }

        $scope.Assigned = function (){
            $state.go('app.osdCqmAssignToQuery');
        }
        $scope.Close = function (){
            $state.go('app.osdCqmCloseSummary');
        }
        
      
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmQueryTicketAssignmentController', osdCqmQueryTicketAssignmentController);

    osdCqmQueryTicketAssignmentController.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','$sce','cmnfunctionService'];

    function osdCqmQueryTicketAssignmentController(DownloaddocumentService,$rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,$sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmQueryTicketAssignmentController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        activate();
        function activate() {
            
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
                console.log(resp.data.employee_list);
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params = {
                email_gid: email_gid
            };
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                }
                else {

                }

            });


            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryView';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.email_from = resp.data.email_from;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.email_to = resp.data.email_to;

                $scope.email_date = resp.data.email_date;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.aging = resp.data.aging;
                $scope.cc=resp.data.cc;
                $scope.bcc=resp.data.bcc;
                unlockUI();
            });  

         
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/ReferenceMail';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.frommail_id = resp.data.frommail_id;
                $scope.tomail_id = resp.data.tomail_id;
                $scope.ccmail_id = resp.data.ccmail_id;
                $scope.bccmail_id = resp.data.bccmail_id;
                $scope.mail_date = resp.data.mail_date;
                $scope.mail_subject = resp.data.mail_subject;
                $scope.mailcontent = resp.data.mailcontent;
                unlockUI();
            });
        }
        
            $scope.Back = function () {
                $state.go('app.osdCqmQueryAssignment');
            };
           $scope.AssignTicket = function () {
                
            };

            $scope.Download = function (val1, val2) {
                // var phyPath = val1;
                // var relPath = phyPath.split("EMS");
                // var relpath1 = relPath[1].replace("\\", "/");
                // var hosts = window.location.host;
                // var prefix = location.protocol + "//";
                // var str = prefix.concat(hosts, relpath1);
                // var link = document.createElement("a");
                // var name = val2.split(".")
                // link.download = val2;
                // var uri = str;
                // link.href = uri;
                // link.click();
                DownloaddocumentService.Downloaddocument(val1, val2);
            }

            $scope.assign_ticket = function() {
                var params={
                    email_gid: email_gid,
                    employee_gid: $scope.cboemployee_list.employee_gid,
                    employee_name: $scope.cboemployee_list.employee_name,
                    assigned_remarks: $scope.assigned_remarks
                }
                lockUI();
                    var url = "api/OsdTrnCustomerQueryMgmt/PostTicketAssign";
                    SocketService.post(url, params).then(function (resp) {
                   
                    if (resp.data.status == true) {
                        $state.go('app.osdCqmQueryAssignment');
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
                
            }
            
            $scope.logdetails=function() {

                if($scope.IsLogShow == true) {
                    $scope.IsLogShow = false; 
                }
                else {
                    
                    $scope.IsLogShow=true;
                                
                    var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';
            
                    var params={
                        email_gid: email_gid
                    };            
                    SocketService.getparams(url,params).then(function (resp) {
                        if(resp.data.status==true){
                            $scope.auditlog_list = resp.data.MdlAuditLog;
                        }
                        else{
                           
                        }
                        
                    });
                } 
            }
        
    };

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmReplaySummaryController', osdCqmReplaySummaryController);

        osdCqmReplaySummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmReplaySummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmReplaySummaryController';
        var email_gid = $location.search().email_gid;
        activate();
        function activate() {
         
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            lockUI();

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryReplySummary';
            SocketService.get(url).then(function (resp) {
                $scope.QueryAssignedReplyList = resp.data.QueryAssignedReplyList;
                unlockUI();
            });
            var params = {
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryReply360';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.QueryAssignReply360list = resp.data.QueryAssignReply360list;
                $scope.reply_remarks = resp.data.reply_remarks;
                $scope.reply_by = resp.data.reply_by;
                $scope.reply_date = resp.data.reply_date;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/AssignedQueryCount";
            SocketService.get(url).then(function (resp) {
                $scope.assigned_count = resp.data.assigned_count;
                $scope.reply_count = resp.data.reply_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }
        
        $scope.Assigned = function () {
            $state.go('app.osdCqmAssignedQuery');
        }
        
        $scope.Closed = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.Transfer = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.Forward = function () {
            $state.go('app.osdCqmForwardSummary');
        }
        
        $scope.Replayview = function (email_gid) {
          
            $location.url('app/osdCqmReplayView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
        }

        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {

            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                $scope.ticketref_no = ticketref_no;
                $scope.email_subject = email_subject;
                $scope.from_mailaddress = from_mailaddress;
                $scope.assigned_to = assigned_to;
                $scope.email_gid = email_gid;

                $scope.transferWIUpdate = function () {

                    if ($scope.transfer_to == undefined) {
                        modalInstance.close('closed');
                        Notify.alert('Kindly Select the Assign to Person', 'warning');
                        return;
                    }

                    var params = {
                        email_gid: $scope.email_gid,
                        employee_gid: $scope.transfer_to,
                        employee_name: $('#transfer_to :selected').text(),
                        transfer_remarks: $scope.transfer_remarks
                    }

                    var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status = true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'success');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, 'warning');
                            activate();
                        }
                    });
                    

                }

                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });

                $scope.close = function () {
                    modalInstance.close('closed');
                };
                //var url = "api/OsdTrnCustomerQueryMgmt/TransferLog";
                //lockUI();
                //SocketService.post(url, params).then(function (resp) {
                //    $scope.MdlTransferLog = resp.data.MdlTransferLog;
                //});
            }
        }

        $scope.forward = function (email_gid) {
           
            var decision = "Forward";
            var lspage = "reply";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));

        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmReplayViewController', osdCqmReplayViewController);

        osdCqmReplayViewController.$inject = ['DownloaddocumentService','$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmReplayViewController(DownloaddocumentService,$rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmReplayViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        activate();
        function activate() {
           
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params = {
                email_gid: email_gid
            };
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                }
                else {

                }

            });

            var params = {
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryReply360';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.QueryAssignReply360list = resp.data.QueryAssignReply360list;
                $scope.attch_list = resp.data.MdlAttachmentList;
                $scope.reply_remarks = resp.data.reply_remarks;
                $scope.reply_by = resp.data.reply_by;
                $scope.reply_date = resp.data.reply_date;
               
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
                unlockUI();
            });
        }

        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {

                $scope.IsLogShow = true;

                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                var params = {
                    lsemail_gid: email_gid
                };

                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if ($scope.MdlTransferLog == null) {
                            $scope.transfershow = true;
                        }
                        else {
                            $scope.transfershow = false;
                        }
                    }
                    else {

                    }

                });

                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';

                var params = {
                    email_gid: email_gid
                };
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else {

                    }

                });
            }
        }

        $scope.Back = function(){
            $location.url('app/osdCqmReplaySummary');
        }

        $scope.Download = function (path, attchment_name) {
            DownloaddocumentService.Downloaddocument(path, attchment_name);
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
        }

        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });
            
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                    $scope.ticketref_no = ticketref_no;
                    $scope.subject = email_subject;
                    $scope.from = from_mailaddress;
                    $scope.checkeremployee_name = assigned_to;

                    $scope.transferWIUpdate = function () {

                        if ($scope.transfer_to == undefined) {
                            modalInstance.close('closed');
                            Notify.alert('Kindly Select the Assign to Person', 'warning');
                            return;
                        }

                        var params = {
                            email_gid: email_gid,
                            employee_gid: $scope.transfer_to,
                            employee_name: $('#transfer_to :selected').text(),
                            transfer_remarks:$scope.transfer_remarks
                        }

                        var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status = true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'success');
                                activate();
                                $state.go('app.osdCqmTransferSummary');
                            }
                            else {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'warning');
                                activate();
                            }
                        });

                    }
                    var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                    var params = {
                        lsemail_gid:email_gid
                    }
    
                    SocketService.getparams(url, params).then(function (resp) {
                            $scope.MdlTransferLog = resp.data.MdlTransferLog;
                    });


                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.signature = function () {
            var modalInstance = $modal.open({
                templateUrl: '/signatureContent.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.EmailSignature = resp.data.emailsignature;
                   
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                $scope.submit = function () {
                    lockUI();
                    var params={
                        emailsignature:$scope.EmailSignature
                    }
            
                    var url = "api/OsdTrnCustomerQueryMgmt/PostEmailSignature";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                         
                            $modalInstance.close('closed');
                            
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                   
            }
        }

        $scope.close = function (email_gid, ticketref_no, from_mailaddress, email_subject) {
           
            var modalInstance = $modal.open({
                templateUrl: '/closeContent.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ticketref_no = ticketref_no;
                $scope.subject = email_subject;

                $scope.from = from_mailaddress;
                $scope.CloseWIUpdate = function () {

                    var params = {
                        email_gid: email_gid,
                        decision: 'Close',
                        employee_gid: '',
                        employee_name: '',
                        remarks: $scope.close_remarks,
                        mailcontent: 'Close',
                        subject: '',
                        tomail_id: '',
                        ccmail_id: '',
                        bccmail_id: ''
                    }


                    var url = 'api/OsdTrnCustomerQueryMgmt/PostDecision';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, 'success')
                            $state.go('app.osdCqmAssignCloseSummary');
                        }
                        else {
                            Notify.alert(resp.data.message, 'warning')
                        }
                        modalInstance.close('closed');
                        activate();
                    });
                }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.forward=function(){
            
            var decision = "Forward";
            var lspage = "replyview";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));

        }

        $scope.Reply=function () {
            
            var decision = "Reply";
            var lspage = "replyview";
            var llspage = "reply";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));

        }
    
    }    

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmTransferSummaryController', osdCqmTransferSummaryController);

        osdCqmTransferSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function osdCqmTransferSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmTransferSummaryController';
        var email_gid = $location.search().email_gid;
        activate();
        function activate() {
         
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryTransferSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.QueryAssignedTransferList = resp.data.QueryAssignedTransferList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignedQuery360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.Query360list= resp.data.Query360list;
                $scope.assigned_remarks= resp.data.assigned_remarks;
                unlockUI();
            }); 

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var url = "api/OsdTrnCustomerQueryMgmt/AssignedQueryCount";
            SocketService.get(url).then(function (resp) {
                $scope.assigned_count = resp.data.assigned_count;
                $scope.reply_count = resp.data.reply_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.close_count = resp.data.close_count;
                unlockUI();
            });
        }

        $scope.Assigned = function () {
            $state.go('app.osdCqmAssignedQuery');
        }

        $scope.Closed = function () {
            $state.go('app.osdCqmAssignCloseSummary');
        }

        $scope.Transfer = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.Replay = function () {
            $state.go('app.osdCqmReplaySummary');
        }

        $scope.Forward = function () {
            $state.go('app.osdCqmForwardSummary');
        }


        $scope.TransferView = function (email_gid) {
     
            $location.url('app/osdCqmTransferView?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid));
        }
     
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdCqmTransferViewController', osdCqmTransferViewController);

    osdCqmTransferViewController.$inject = ['DownloaddocumentService', '$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce', 'cmnfunctionService'];

    function osdCqmTransferViewController(DownloaddocumentService, $rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdCqmTransferViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var email_gid = searchObject.email_gid;
        activate();
        function activate() {
            
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };
            $scope.IsLogShow = false;

            var url = 'api/OsdTrnCustomerQueryMgmt/PostAuditView';

            var params = {
                email_gid: email_gid
            };
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                }
                else {

                }

            });

            var params = {
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerAssignQueryTransfer360';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.email_gid = resp.data.email_gid;
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.assigned_by = resp.data.assigned_by;
                $scope.assigned_date = resp.data.assigned_date;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.email_from = resp.data.email_from;
                $scope.email_date = resp.data.email_date;
                $scope.status = resp.data.status;
                $scope.aging = resp.data.aging;
                $scope.email_subject = resp.data.email_subject;
                $scope.email_content = resp.data.email_content;
                $scope.email_to = resp.data.email_to;
                $scope.cc = resp.data.cc;
                $scope.bcc = resp.data.bcc;
                $scope.from_mailaddress = resp.data.from_mailaddress;
                $scope.QueryAssignTransferlist = resp.data.QueryAssignTransferlist;
                $scope.transfer_remarks = resp.data.transfer_remarks;
                $scope.transfer_by = resp.data.transfer_by;
                $scope.transfer_date = resp.data.transfer_date;
                $scope.attch_list = resp.data.MdlAttachmentList;
                unlockUI();
            });

            var url = 'api/OsdTrnCustomerQueryMgmt/CustomerQueryAttachments';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.QueryAttachmentsList = resp.data.QueryAttachmentsList;
                unlockUI();
            });

            var  params={
                email_gid: email_gid
            }
            var url = 'api/OsdTrnCustomerQueryMgmt/ComposeMail360';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.MdlComposeMaillist = resp.data.MdlComposeMaillist;
                //$scope.MdlAttachmentList = resp.data.MdlAttachmentList;
                unlockUI();
            });
        }
        $scope.Back = function () {
            $state.go('app.osdCqmTransferSummary');
        }

        $scope.logdetails = function () {

            if ($scope.IsLogShow == true) {
                $scope.IsLogShow = false;
            }
            else {

                $scope.IsLogShow = true;

                var url = 'api/OsdTrnCustomerQueryMgmt/TransferLog';

                var params = {
                    lsemail_gid: email_gid
                };

                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        $scope.MdlTransferLog = resp.data.MdlTransferLog;
                        if ($scope.MdlTransferLog == null) {
                            $scope.transfershow = true;
                        }
                        else {
                            $scope.transfershow = false;
                        }
                    }
                    else {

                    }

                });

                var url = 'api/OsdTrnCustomerQueryMgmt/AuditLog';

                var params = {
                    email_gid: email_gid
                };
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.auditlog_list = resp.data.MdlAuditLog;
                    }
                    else {

                    }

                });
            }
        }

        $scope.Download = function (path, attchment_name) {
            DownloaddocumentService.Downloaddocument(path, attchment_name);
            // var phyPath = path;
            // var relPath = phyPath.split("EMS");
            // var relpath1 = relPath[1].replace("\\", "/");
            // var hosts = window.location.host;
            // var prefix = location.protocol + "//";
            // var str = prefix.concat(hosts, relpath1);
            // var link = document.createElement("a");
            // var name = attchment_name.split('.');
            // link.download = name[0];
            // var uri = str;
            // link.href = uri;
            // link.click();
        }
        $scope.transfer = function (email_gid, ticketref_no, from_mailaddress, email_subject, assigned_to) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                var url = 'api/OsdTrnCustomerQueryMgmt/TransferEmployee';
                SocketService.get(url).then(function (resp) {
                    $scope.TransferEmployeeList = resp.data.TransferEmployeeList;
                    unlockUI();
                });

                    $scope.ticketref_no = ticketref_no;
                    $scope.subject = email_subject;
                    $scope.from = from_mailaddress;
                    $scope.checkeremployee_name = assigned_to;

                    $scope.transferWIUpdate = function () {

                        if ($scope.transfer_to == undefined) {
                            modalInstance.close('closed');
                            Notify.alert('Kindly Select the Assign to Person', 'warning');
                            return;
                        }

                        var params = {
                            email_gid: email_gid,
                            employee_gid: $scope.transfer_to,
                            employee_name: $('#transfer_to :selected').text(),
                            transfer_remarks:$scope.transfer_remarks
                        }

                        var url = "api/OsdTrnCustomerQueryMgmt/TicketTransfer";
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status = true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'success');
                                activate();
                                $state.go('app.osdCqmTransferSummary');
                            }
                            else {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, 'warning');
                                activate();
                            }
                        });

                    }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.signature = function () {
            var modalInstance = $modal.open({
                templateUrl: '/signatureContent.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var url = 'api/OsdTrnCustomerQueryMgmt/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.EmailSignature = resp.data.emailsignature;
                   
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.close = function () {
                    modalInstance.close('closed');
                };
                $scope.submit = function () {
                    lockUI();
                    var params={
                        emailsignature:$scope.EmailSignature
                    }
            
                    var url = "api/OsdTrnCustomerQueryMgmt/PostEmailSignature";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                         
                            $modalInstance.close('closed');
                            
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                   
            }
        }

        $scope.close = function (email_gid, ticketref_no, from_mailaddress, email_subject) {
           
            var modalInstance = $modal.open({
                templateUrl: '/closeContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ticketref_no = ticketref_no;
                $scope.subject = email_subject;

                $scope.from = from_mailaddress;
                $scope.CloseWIUpdate = function () {

                    var params = {
                        email_gid: email_gid,
                        decision: 'Close',
                        employee_gid: '',
                        employee_name: '',
                        remarks: $scope.close_remarks,
                        mailcontent: 'Close',
                        subject: '',
                        tomail_id: '',
                        ccmail_id: '',
                        bccmail_id: ''
                    }


                    var url = 'api/OsdTrnCustomerQueryMgmt/PostDecision';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, 'success')
                            $state.go('app.osdCqmAssignCloseSummary');
                        }
                        else {
                            Notify.alert(resp.data.message, 'warning')
                        }
                        modalInstance.close('closed');
                        activate();
                    });
                }

                $scope.close = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.forward=function(){
            
            var decision = "Forward";
            var lspage = "transferview";
            var llspage = "forward";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));

        }

        $scope.Reply=function () {
           
            var decision = "Reply";
            var lspage = "transferview";
            var llspage = "reply";
            $location.url('app/osdComposeMail?hash=' + cmnfunctionService.encryptURL('email_gid=' + email_gid + '&toMail=' + $scope.from_mailaddress + '&ccMail=' + $scope.cc + '&bccMail=' + $scope.bcc + '&email_subject=' + $scope.email_subject + '&message_id=' + $scope.message_id + '&reference_id= ' + $scope.reference_id + '&rmemployee_gid=' + $scope.rmemployee_gid + '&rmemployee_name=' + $scope.rmemployee_name + '&decision=' + decision + '&lspage=' + lspage + '&llspage=' + llspage));

        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdDashboardcontroller', osdDashboardcontroller);

    osdDashboardcontroller.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'Colors', 'ChartData', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$timeout', 'SweetAlert', '$cookies'];

    function osdDashboardcontroller($rootScope, $scope, $state, AuthenticationService, Colors, ChartData, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $timeout, SweetAlert, $cookies) {
      
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdDashboardcontroller';

        activate();

        function activate() {

            var url = 'api/osddashboard/osdprivilege';
            var user_gid = localStorage.getItem('user_gid');
            SocketService.get(url + '?user_gid=' + user_gid).then(function (resp) {

                var businessunitmaster = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDMSTMBU");
                var activebusinessunitmaster = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDMSTDPM");
                var activitymaster = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDMSTACM");
                var teammaster = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDMSTTEM");
                var service_request = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDTRNSER");
                var my_activity = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDTRNMYT");
                var activity_management = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDTRNTIR");
                var all_tickets = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDRPTALT");
                var query_assignment = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDCQMQAT");
                var assigned_query = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDCQMASQ");
                var allocatedto_rm = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDBAMARM");
                var bankalert_assignment = resp.data.osdprivilege_list.map(function (e) { return e.osdprivilege }).indexOf("OSDBAMMAL");
             
             
                if (businessunitmaster != -1) {
                    $scope.busineesunitmaster_show = 'Y';
                }

                if (activebusinessunitmaster != -1) {
                    $scope.activatebusineesunitmaster_show = 'Y';
                }

                if (activitymaster != -1) {
                    $scope.activitymaster_show = 'Y';
                }
                if (teammaster != -1) {
                    $scope.teammaster_show = 'Y';
                }
                if (service_request != -1) {
                    $scope.service_request_show = 'Y';
                }
                if (my_activity != -1) {
                    $scope.my_activity_show = 'Y';
                }
                if (activity_management != -1) {
                    $scope.activity_management_show = 'Y';
                }

                if (all_tickets != -1) {
                    $scope.all_tickets_show = 'Y';
                }

                if (query_assignment != -1) {
                    $scope.query_assignment = 'Y';
                }

                if (assigned_query != -1) {
                    $scope.assigned_query = 'Y';
                }
                if (allocatedto_rm != -1) {
                    $scope.allocatedto_rm = 'Y';
                }

                if (bankalert_assignment != -1) {
                    $scope.bankalert_assignment = 'Y';
                }
               
            });

            vm.pieOptions = {
                segmentShowStroke: true,
                segmentStrokeColor: '#fff',
                segmentStrokeWidth: 2,
                percentageInnerCutout: 0,
                animationSteps: 100,
                animationEasing: 'easeInOutBack',
                animateRotate: true,
                animateScale: false
            };

            vm.pieData = [
              {
                  value: 14,
                  color: Colors.byName('yellow'),
                  highlight: Colors.byName('info'),
                  label: 'Allotted'
              },
              {
                  value: 17,
                  color: Colors.byName('danger'),
                  highlight: Colors.byName('info'),
                  label: 'Work-In-Progress'
              },
              {
                  value: '2',
                  color: Colors.byName('purple'),
                  highlight: Colors.byName('info'),
                  label: 'Completed'
              },
              {
                  value: '1',
                  color: Colors.byName('success'),
                  highlight: Colors.byName('info'),
                  label: 'Closed'
              }
              
            ];

        }
       

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdMstActivityController', osdMstActivityController);

    osdMstActivityController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService'];

    function osdMstActivityController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdMstActivityController';

        activate();


        function activate() {
            $scope.totalDisplayed = 100;
            var url = 'api/OsdMstActivity/GetActivitySummary';
            lockUI(); 
            SocketService.get(url).then(function (resp) {
                $scope.activitymasterlist = resp.data.activitydtl;
                if ($scope.activitymasterlist == null) {
                    $scope.total = 0;
                    $scope.totalDisplayed = 0;
                }
                else {
                    $scope.total = $scope.activitymasterlist.length;
                    if ($scope.activitymasterlist.length < 100) {
                        $scope.totalDisplayed = $scope.activitymasterlist.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMore = function (pagecount) {
            if (pagecount == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();

            var Number = parseInt(pagecount);
            // new code start
            if ($scope.activitymasterlist != null) {

                if (pagecount < $scope.activitymasterlist.length) {
                    $scope.totalDisplayed += Number;
                    if ($scope.activitymasterlist.length < $scope.totalDisplayed) {
                        $scope.totalDisplayed = $scope.activitymasterlist.length;
                        Notify.alert(" Total Summary " + $scope.activitymasterlist.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.activitymasterlist.length + " Records Only", "warning");
                    return;
                }
            }
            // new code end
            unlockUI();
        };
        // Add Code Starts
        $scope.popupactivity = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addActivityModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstDepartmentManagement/GetActivatedept';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.deptmasterlist = resp.data.deptlist;

                    unlockUI();
                    if ($scope.deptmasterlist.length == 1) {
                        $scope.single = true
                        $scope.lbldepartmentname = resp.data.department_name;
                        $scope.lbldepartmentgid = resp.data.department_gid

                        var params = {
                            department_gid: resp.data.department_gid
                        }
                        var url = 'api/OsdMstActivity/GetDeptTeam';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.supportdtllist = resp.data.supportdtl;
                        });
                    }
                    else {
                        $scope.multiple = true
                        $scope.single = false
                    }
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselectdept = function (department_gid) {
                    var params = {
                        department_gid: department_gid.department_gid
                    }
                    var url = 'api/OsdMstActivity/GetDeptTeam';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.supportdtllist = resp.data.supportdtl;
                    });
                }

                $scope.activityname = function (string) {
                    if (string.length >= 100) {
                        $scope.message = "Maximum 100 characters Length";
                    }
                    else {
                        $scope.message = ""
                    }
                }


                

                $scope.activitySubmit = function () {
                    lockUI();
                    if ($scope.cbodepartment == '' || $scope.cbodepartment == null || $scope.cbodepartment == undefined) {
                        if ($scope.lbldepartmentgid == '' || $scope.lbldepartmentgid == null || $scope.lbldepartmentgid == undefined) {
                            alert('Select Department', 'warning');
                        }
                        else {
                            var params = {
                                activity_name: $scope.activity_name,
                                supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                                supportteam_name: $scope.cbosuppport_team.team_name,
                                activity_tat: $scope.activity_tat,
                                department_gid: $scope.lbldepartmentgid,
                                department_name: $scope.lbldepartmentname
                            }
                            var url = 'api/OsdMstActivity/PostActivityAdd';
                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    $modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                    unlockUI();
                                }
                                else {
                                    //$modalInstance.close('closed');
                                    alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                    unlockUI();
                                }
                            });
                        }
                    }
                    else {
                        var params = {
                            activity_name: $scope.activity_name,
                            supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                            supportteam_name: $scope.cbosuppport_team.team_name,
                            activity_tat: $scope.activity_tat,
                            department_gid: $scope.cbodepartment.department_gid,
                            department_name: $scope.cbodepartment.department_name
                        }
                        var url = 'api/OsdMstActivity/PostActivityAdd';
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                $modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                                unlockUI();
                            }
                            else {
                                //$modalInstance.close('closed');
                                alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                                unlockUI();
                            }
                        });

                    }
                  
                }

            }
        }
        // Add Code Ends

        // Edit Code Starts
        $scope.edit = function (activitymaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/activityModaledit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                

              /*  var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                   $scope.supportdtleditlist = resp.data.supportdtl;
                }); */
                var params = {
                    activitymaster_gid: activitymaster_gid
                }
                var url = 'api/OsdMstActivity/GetActivityView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.activitycodeedit = resp.data.activity_code,
                    $scope.activitynameedit = resp.data.activity_name,
                    $scope.supportteam_name = resp.data.supportteam_name;
                    $scope.activitytatedit = resp.data.activity_tat;
                    $scope.supportteam_gid = resp.data.supportteam_gid;
                    $scope.lbldepartmentnameedit = resp.data.department_name;
                    $scope.lbldepartmentgidedit = resp.data.department_gid;
                    var param = {
                        department_gid: resp.data.department_gid
                    }
                    var url = 'api/OsdMstActivity/GetTeamSummary';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.supportdtleditlist = resp.data.supportdtl;
                        if ($scope.supportteam_gid != null) {
                            console.log($scope.supportteam_gid);
                            var indexs = $scope.supportdtleditlist.map(function (x) { return x.supportteam_gid; }).indexOf(resp.data.supportdtleditlist[i].supportteam_gid);
                            //var indexs = ($scope.supportdtleditlist.findIndex(x => x.supportteam_gid === $scope.supportteam_gid));
                            console.log(indexs);
                            $scope.cbosuppport_teamedit = $scope.supportdtleditlist[indexs];
                        }
                    });
                    
                });
                

                $scope.onselectdeptedit = function (department_gid) {
                    var params = {
                        department_gid: department_gid.department_gid
                    }
                    var url = 'api/OsdMstActivity/GetDeptTeam';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.supportdtllist = resp.data.supportdtl;
                    });
                }


                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.activityUpdate = function () {
                
                            var params = {
                                activitymaster_gid: activitymaster_gid,
                                activity_name: $scope.activitynameedit,
                                activity_tat: $scope.activitytatedit,
                                department_gid: $scope.lbldepartmentgidedit,
                                department_name: $scope.lbldepartmentnameedit,
                                supportteam_gid: $scope.cbosuppport_teamedit.supportteam_gid,
                                supportteam_name: $scope.cbosuppport_teamedit.team_name
                            }

                            var url = 'api/OsdMstActivity/GetActivityUpdate';
                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    $modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                                else {
                                    //$modalInstance.close('closed');
                                    alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                            });
                       
                }
            }
        }
        // Edit Code Ends

        // Delete Code Starts
        $scope.delete = function (val) {
            var params = {
                activitymaster_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',

                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = "api/OsdMstActivity/GetActivityDelete";
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            activate();
                            SweetAlert.swal('Deleted Successfully!');
                            unlockUI();
                        }
                        else {
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });

                }

            });
        }


   // Delete Code Ends
        $scope.activityreport = function () {
            lockUI();
            var url = 'api/OsdMstActivity/ExportActivityReport';
            SocketService.get(url).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);

                }
                else {
                    unlockUI();
                    Notify.alert('Error Occurred While Export !', 'success')

                }

            });
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdMstBusinessUnit', osdMstBusinessUnit);

    osdMstBusinessUnit.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdMstBusinessUnit($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdMstBusinessUnit';
        var lstab = $location.search().lstab;
        activate();

        function activate() {

            var url = 'api/OsdMstDepartmentManagement/GetBusinessUnitSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.businessunit_list = resp.data.businessunit_list;
                unlockUI();
            });

            var url = 'api/OsdMstDepartmentManagement/GetBusinessStatusTempClear';
            SocketService.get(url).then(function (resp) {
            });

        }
        $scope.addbusinessunit = function () {
            $location.url('app/osdMstBusinessUnitAdd');
        }

        // Add Code Starts


        $scope.businessunitSubmit = function () {
            lockUI(); 
            if ($scope.txtbusinessunit_emailaddress == undefined) {
                $scope.txtbusinessunit_emailaddress = "";
            }
                        var params = {
                            businessunit_prefix: $scope.txtbusinessunit_prefix,
                            businessunit_name: $scope.txtbusinessunit_name,
                            businessunit_emailaddress: $scope.txtbusinessunit_emailaddress,
                            //business_status: $scope.txtbusinessunit_status,
                        }
                        var url = 'api/OsdMstDepartmentManagement/PostBusinessUnit';
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                              
                                unlockUI();
                                $state.go('app.osdMstBusinessUnit');
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                $modalInstance.close('closed');
                                activate();
                                unlockUI();
                            }
                        });
                    }
        //$scope.addbusinessunit = function () {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/addbusinessunitModalContent.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
                
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
                
        //        $scope.businessunitSubmit = function () {
        //            lockUI();
        //            var params = {
        //                businessunit_prefix: $scope.txtbusinessunit_prefix,
        //                businessunit_name: $scope.txtbusinessunit_name,
        //                businessunit_emailaddress: $scope.txtbusinessunit_emailaddress,
        //            }
        //            var url = 'api/OsdMstDepartmentManagement/PostBusinessUnit';
        //            SocketService.post(url, params).then(function (resp) {
        //                if (resp.data.status == true) {
        //                    Notify.alert(resp.data.message, {
        //                        status: 'success',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    $modalInstance.close('closed');
        //                    activate();
        //                    unlockUI();
        //                }
        //                else {
        //                    alert(resp.data.message, {
        //                        status: 'danger',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    $modalInstance.close('closed');
        //                    activate();
        //                    unlockUI();
        //                }
        //            });
        //        }

        //    }
        //}
        // Add Code Ends
        $scope.businessstatus_add = function () {

            if (($scope.txtbusinessunit_status == undefined) || ($scope.txtbusinessunit_status == '')) {            
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {

            var params = {
                business_status: $scope.txtbusinessunit_status,
             
            }
            var url = 'api/OsdMstDepartmentManagement/PostBusinessUnitStatus';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtbusinessunit_status = '';
                businessstatus_list();
               
            });
        }
         
        }
        function businessstatus_list() {
            var url = 'api/OsdMstDepartmentManagement/GetBusinessstatusList';
            var params = {
                user_gid: $scope.user_gid,

            }
            SocketService.getparams(url,params).then(function (resp) {
                $scope.businessstatusunit_list = resp.data.businessstatusunit_list;

            });
        }

        // Edit Code Starts
        $scope.edit = function (businessunit_gid) {
            $location.url('app/osdMstBusinessUnitEdit?hash=' + cmnfunctionService.encryptURL('businessunit_gid=' + businessunit_gid));
          

        }
        //$scope.edit = function (businessunit_gid) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/businessunitModaledit.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {

        //        var params = {
        //            businessunit_gid: businessunit_gid
        //        }
        //        var url = 'api/OsdMstDepartmentManagement/BusinessUnitView';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            $scope.txtbusinessunit_codeedit = resp.data.businessunit_code,
        //            $scope.txtbusinessunit_prefixedit = resp.data.businessunit_prefix;
        //            $scope.txtbusinessunit_nameedit = resp.data.businessunit_name,
        //            $scope.txtbusinessunit_emailaddressedit = resp.data.businessunit_emailaddress;
        //            if(resp.data.sequence_flag == 'Y')
        //            {
        //                $scope.label = true
        //                $scope.text = false
        //            }
        //            else {
        //                $scope.label = false
        //                $scope.text = true
        //            }
        //        });


        //        $scope.ok = function () {
        //            modalInstance.close('closed');
        //        };
        //        $scope.businessunitUpdate = function () {
                  
        //            var params = {
        //                businessunit_prefix: $scope.txtbusinessunit_prefixedit,
        //                businessunit_name: $scope.txtbusinessunit_nameedit,
        //                businessunit_emailaddress: $scope.txtbusinessunit_emailaddressedit,
        //                businessunit_gid: businessunit_gid,
        //            }

        //            var url = 'api/OsdMstDepartmentManagement/UpdateBusinessUnit';
        //            SocketService.post(url, params).then(function (resp) {
        //                if (resp.data.status == true) {
        //                    Notify.alert(resp.data.message, {
        //                        status: 'success',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    $modalInstance.close('closed');
        //                    activate();
        //                }
        //                else {
        //                    alert(resp.data.message, {
        //                        status: 'danger',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    $modalInstance.close('closed');
        //                    activate();
        //                }
        //            });
        //        }
        //    }
        //}
        // Edit Code Ends

        // Delete Code Starts
        $scope.delete = function (val) {
            var params = {
                businessunit_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',

                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = "api/OsdMstDepartmentManagement/DeleteBusinessUnit";
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            activate();
                            SweetAlert.swal('Deleted Successfully!');
                            unlockUI();
                        }
                        else {
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            });
        }
        // Delete Code Ends
        $scope.businessstatus_delete = function (businessstatus_gid) {
            var params =
                {
                    businessstatus_gid: businessstatus_gid
                }
            console.log(params)
            var url = 'api/OsdMstDepartmentManagement/DeleteBusinessstatus';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

                businessstatus_list();
            });

        }
        $scope.Status_update = function (businessunit_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/businessunitstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    businessunit_gid: businessunit_gid
                }
                var url = 'api/OsdMstDepartmentManagement/BusinessUnitView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.rbo_status = resp.data.businessunit_status;
                    $scope.businessunit_name = resp.data.businessunit_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        businessunit_gid: businessunit_gid,
                        businessunit_name: $scope.businessunit_name,
                        remarks: $scope.txtremarks,
                        businessunitstatus: $scope.rbo_status

                    }
                    var url = 'api/OsdMstDepartmentManagement/Postbusinessunitstatusupdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            $modalInstance.close('closed');
                           Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });
                }

                var param = {
                    businessunit_gid: businessunit_gid
                }

                var url = 'api/OsdMstDepartmentManagement/BusinessunitstatusHistory';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.businessunitstatusehistory = resp.data.businessunitstatusHistory_list;
                    unlockUI();
                });

            }
        }

        $scope.cancel = function () {
           
            $location.url('app/osdMstBusinessUnit');
            
        }
       
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdMstBusinessUnitEdit', osdMstBusinessUnitEdit);

    osdMstBusinessUnitEdit.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal','cmnfunctionService'];

    function osdMstBusinessUnitEdit($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdMstBusinessUnitEdit';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var businessunit_gid = searchObject.businessunit_gid;
      

        activate();
        function activate() {

            var url = 'api/OsdMstDepartmentManagement/GetBusinessStatusTempClear';
            SocketService.get(url).then(function (resp) {
            });

            var params = {
                            businessunit_gid: businessunit_gid
                        }
                        var url = 'api/OsdMstDepartmentManagement/BusinessUnitView';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.txtbusinessunit_codeedit = resp.data.businessunit_code,
                            $scope.txtbusinessunit_prefixedit = resp.data.businessunit_prefix;
                            $scope.txtbusinessunit_nameedit = resp.data.businessunit_name,
                            $scope.txtbusinessunit_emailaddressedit = resp.data.businessunit_emailaddress;
                            if(resp.data.sequence_flag == 'Y')
                            {
                                $scope.label = true
                                $scope.text = false
                            }
                            else {
                                $scope.label = false
                                $scope.text = true
                            }
                        });
                        
                        var url = 'api/OsdMstDepartmentManagement/GetBusinessstatusEdit';
                        lockUI();
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.businessstatusEdit_list = resp.data.businessstatusEdit_list;
                            unlockUI();
                        });
            

        }
        $scope.businessunitUpdate = function () {
                  
                        var params = {
                            businessunit_prefix: $scope.txtbusinessunit_prefixedit,
                            businessunit_name: $scope.txtbusinessunit_nameedit,
                            businessunit_emailaddress: $scope.txtbusinessunit_emailaddressedit,
                            businessunit_gid: businessunit_gid,
                        }

                        var url = 'api/OsdMstDepartmentManagement/UpdateBusinessUnit';
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                $state.go('app.osdMstBusinessUnit');
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                                activate();
                                unlockUI();
                            }
                        });
                    }
        $scope.businessstatus_add = function () {

            if (($scope.txtbusinessunit_status == undefined) || ($scope.txtbusinessunit_status == '')) {
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var businessunit_gid = cmnfunctionService.decryptURL($location.search().hash).businessunit_gid;
                var params = {
                    business_status: $scope.txtbusinessunit_status,
                    businessunit_gid: businessunit_gid,

                }
                var url = 'api/OsdMstDepartmentManagement/PostBusinessUnitStatusEdit';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $scope.txtbusinessunit_status = '';
                    businessstatus_list();

                });
            }

        }
        $scope.businessstatus_delete = function (businessstatus_gid) {
            var params =
                {
                    businessstatus_gid: businessstatus_gid
                }
            console.log(params)
            var url = 'api/OsdMstDepartmentManagement/DeleteBusinessstatus';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                activate();
                businessstatus_list();

            });

        }
        function businessstatus_list() {
            var url = 'api/OsdMstDepartmentManagement/GetBusinessstatusList';
            var params = {
                user_gid: $scope.user_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunit_list = resp.data.businessstatusunit_list;

            });
            activate();
        }

        $scope.back = function () {

            $location.url('app/osdMstBusinessUnit');

        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdMstDepartmentManagementController', osdMstDepartmentManagementController);

    osdMstDepartmentManagementController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function osdMstDepartmentManagementController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdMstDepartmentManagementController';


        activate();

        function activate() {
          
            var url = 'api/OsdMstDepartmentManagement/GetActivatedeptSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.deptmasterlist = resp.data.acivatedept;
                
                unlockUI();
            });

          
        }
     
        // Add Code Starts
        $scope.popupactivatedept = function () {
            var modalInstance = $modal.open({
                templateUrl: '/activatedepartmentModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstDepartmentManagement/GetDepartment';
                SocketService.get(url).then(function (resp) {
                    $scope.departmentList = resp.data.department;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.activityname = function (string) {
                    if (string.length >= 100) {
                        $scope.message = "Maximum 100 characters Length";
                    }
                    else {
                        $scope.message = ""
                    }
                }

             

                $scope.activatedeptSubmit = function () {
                    lockUI();
                    var params = {
                        department_gid: $scope.cbodepartment.department_gid,
                        department_name: $scope.cbodepartment.department_name,
                    }
                    var url = 'api/OsdMstDepartmentManagement/PostActivatedeptadd';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            //$modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

            }
        }
        // Add Code Ends

        // Edit Code Starts
        $scope.edit = function (activedepartment_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/activatemanagementModaledit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
             
                var params = {
                    activedepartment_gid: activedepartment_gid
                }
                var url = 'api/OsdMstDepartmentManagement/GetDepartmentEdit';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.departmentList = resp.data.department;

                });
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.activatedeptcodeedit = resp.data.department_code,
                    $scope.cbodepartmentedit = resp.data.department_gid;
                });
              
             
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.activatedeptUpdate = function () {
                    var departmentname;
                    var dept_index = $scope.departmentList.map(function (e) { return e.department_gid }).indexOf($scope.cbodepartmentedit);
                    if (dept_index == -1) { departmentname = ''; } else { departmentname = $scope.departmentList[dept_index].department_name; };

                    var params = {
                        activedepartment_gid: activedepartment_gid,
                        department_gid: $scope.cbodepartmentedit,
                        department_name: departmentname
                    }

                    var url = 'api/OsdMstDepartmentManagement/GetActivatedeptUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            //$modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }
            }
        }
        // Edit Code Ends

        // Delete Code Starts
        $scope.delete = function (val) {
            var params = {
                activedepartment_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',

                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = "api/OsdMstDepartmentManagement/GetActivatedeptDelete";
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            activate();
                            SweetAlert.swal('Deleted Successfully!');
                            unlockUI();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });

                }

            });
        }
        // Delete Code Ends

        $scope.Status_update = function (activedepartment_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/departmentstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    activedepartment_gid: activedepartment_gid
                }
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.rbo_status = resp.data.department_status;
                    $scope.department_name = resp.data.department_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        activedepartment_gid: activedepartment_gid,
                        remarks: $scope.txtremarks,
                        departmentstatus: $scope.rbo_status

                    }
                    var url = 'api/OsdMstDepartmentManagement/Postdepartmentstatusupdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                              $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                  

                }

                var param = {
                    activedepartment_gid: activedepartment_gid
                }

                var url = 'api/OsdMstDepartmentManagement/DepartmentstatusHistory';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.departmentstatusehistory = resp.data.departmentstatusehistory_list;
                    unlockUI();
                });

            }
        }



        
        $scope.assignmanager = function (activedepartment_gid) {
            lockUI();
            var modalInstance = $modal.open({
                templateUrl: '/assignmanagermodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    activedepartment_gid: activedepartment_gid
                }
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.rbo_status = resp.data.department_status;
                    $scope.department_name = resp.data.department_name;
                    $scope.department_gid = resp.data.department_gid;
                });
                var url = 'api/OsdMstDepartmentManagement/Employee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeeasssign_list;
                });
                var url = 'api/OsdMstDepartmentManagement/Assignedemplyee';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.manager_list = resp.data.managereasssigned_list;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.checkall = function (selected) {
                    angular.forEach($scope.employee_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.assign = function () {
                    lockUI();
                    var employee_gid;
                    var employeelistGId = [];
                    angular.forEach($scope.employee_list, function (val) {

                        if (val.checked == true) {
                            var employeelist_gid = val.employee_gid;
                            employee_gid = val.employee_gid;
                            employeelistGId.push(employeelist_gid);
                        }

                    });

                    var params = {
                        activedepartment_gid: activedepartment_gid,
                        employeelist_gid: employeelistGId,
                        department_gid: $scope.department_gid,
                        department_name: $scope.department_name
                    }
                    unlockUI();
                    if (employee_gid != undefined) {
                        var url = 'api/OsdMstDepartmentManagement/AssignDeptmanager';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {

                            if (resp.data.status == true) {
                              
                                var params = {
                                    activedepartment_gid: activedepartment_gid
                                }
                                var url = 'api/OsdMstDepartmentManagement/Employee';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.employee_list = resp.data.employeeasssign_list;
                                });
                                var url = 'api/OsdMstDepartmentManagement/Assignedemplyee';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.manager_list = resp.data.managereasssigned_list;
                                });
                                unlockUI();
                                Notify.alert('Manager Assigned Successfully!', 'success');

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, 'warning');
                            }

                        });
                    }
                    else {
                        Notify.alert('Select Atleast One Employee!', 'warning')
                    }
                }

                $scope.unassign = function (activedepartment2manager_gid) {
                    lockUI();
                    var url = "api/OsdMstDepartmentManagement/GetAssignmangerDelete";
                    var params = {
                        activedepartment2manager_gid: activedepartment2manager_gid
                    };
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                          
                            var params = {
                                activedepartment_gid: activedepartment_gid
                            }
                            var url = 'api/OsdMstDepartmentManagement/Employee';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeeasssign_list;
                            });
                            var url = 'api/OsdMstDepartmentManagement/Assignedemplyee';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.manager_list = resp.data.managereasssigned_list;
                            });
                            unlockUI();
                            Notify.alert('Manager UnAssigned Successfully!', 'success');

                        }
                        else {
                            unlockUI();
                            Notify.alert(resp.data.message, 'warning');
                        }

                    });
                }

            }
        }

        $scope.assignmember = function (activedepartment_gid) {
            lockUI()
            var modalInstance = $modal.open({
                templateUrl: '/assignmembermodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    activedepartment_gid: activedepartment_gid
                }
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.rbo_status = resp.data.department_status;
                    $scope.department_name = resp.data.department_name;
                    $scope.department_gid = resp.data.department_gid;
                });
                var url = 'api/OsdMstDepartmentManagement/MemberEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeeasssign_list;
                });
                var url = 'api/OsdMstDepartmentManagement/Assignedmemberemplyee';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.member_list = resp.data.membereasssigned_list;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.checkall = function (selected) {
                    angular.forEach($scope.employee_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.assign = function () {
                    lockUI();
                    var employee_gid;
                    var employeelistGId = [];
                    angular.forEach($scope.employee_list, function (val) {

                        if (val.checked == true) {
                            var employeelist_gid = val.employee_gid;
                            employee_gid = val.employee_gid;
                            employeelistGId.push(employeelist_gid);
                        }

                    });

                    var params = {
                        activedepartment_gid: activedepartment_gid,
                        employeelist_gid: employeelistGId,
                        department_gid: $scope.department_gid,
                        department_name: $scope.department_name
                    }
                    unlockUI();
                    if (employee_gid != undefined) {
                        var url = 'api/OsdMstDepartmentManagement/AssignDeptmember';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {

                            if (resp.data.status == true) {
                              
                                var params = {
                                    activedepartment_gid: activedepartment_gid
                                }
                                var url = 'api/OsdMstDepartmentManagement/MemberEmployee';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.employee_list = resp.data.employeeasssign_list;
                                });
                                var url = 'api/OsdMstDepartmentManagement/Assignedmemberemplyee';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.member_list = resp.data.membereasssigned_list;
                                });
                                unlockUI();
                                Notify.alert('Member Assigned Successfully!', 'success');

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, 'warning');
                            }

                        });
                    }
                    else {
                        Notify.alert('Select Atleast One Employee!', 'warning')
                    }
                }

                $scope.unassign = function (activedepartment2member_gid) {
                    lockUI();
                    var url = "api/OsdMstDepartmentManagement/GetAssignmemberDelete";
                    var params = {
                        activedepartment2member_gid: activedepartment2member_gid
                    };
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                           
                            var params = {
                                activedepartment_gid: activedepartment_gid
                            }
                            var url = 'api/OsdMstDepartmentManagement/MemberEmployee';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeeasssign_list;
                            });
                            var url = 'api/OsdMstDepartmentManagement/Assignedmemberemplyee';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.member_list = resp.data.membereasssigned_list;
                            });
                            unlockUI();
                            Notify.alert('Member UnAssigned Successfully!', 'success');

                        }
                        else {
                            unlockUI();
                            Notify.alert(resp.data.message, 'warning');
                        }

                    });
                }

            }
        }

       
        $scope.showPopovermanager = function (activedepartment_gid) {
            lockUI();
            var modalInstance = $modal.open({
                templateUrl: '/showpopupmanagerModal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    activedepartment_gid: activedepartment_gid
                }
               
                var url = 'api/OsdMstDepartmentManagement/Assignedemplyee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.manager_list = resp.data.managereasssigned_list;
                });
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.department_code = resp.data.department_code,
                    $scope.department_name = resp.data.department_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopovermember = function (activedepartment_gid) {
            lockUI();
            var modalInstance = $modal.open({
                templateUrl: '/showpopupmemberModal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    activedepartment_gid: activedepartment_gid
                }

                var url = 'api/OsdMstDepartmentManagement/Assignedmemberemplyee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.member_list = resp.data.membereasssigned_list;
                });
                var url = 'api/OsdMstDepartmentManagement/GetActivatedeptView';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.department_code = resp.data.department_code,
                    $scope.department_name = resp.data.department_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();

(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdMstTeamController', osdMstTeamController);

    osdMstTeamController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location','$route', 'ngTableParams'];

    function osdMstTeamController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdMstTeamController';

        activate();

        function activate() {
           
            $scope.totalDisplayed = 100;
            var url = 'api/OsdMstSupportTeam/GetSupportTeamSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.teamlist = resp.data.supportdtl;
                unlockUI();
                if ($scope.teamlist == null) {
                    $scope.total = 0;
                    $scope.totalDisplayed = 0;
                }
                else {
                    $scope.total = $scope.teamlist.length;
                    if ($scope.teamlist.length < 100) {
                        $scope.totalDisplayed = $scope.teamlist.length;
                    }
                }
            });
        }
        $scope.loadMore = function (pagecount) {
            if (pagecount == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();

            var Number = parseInt(pagecount);
            // new code start
            if ($scope.teamlist != null) {

                if (pagecount < $scope.teamlist.length) {
                    $scope.totalDisplayed += Number;
                    if ($scope.teamlist.length < $scope.totalDisplayed) {
                        $scope.totalDisplayed = $scope.teamlist.length;
                        Notify.alert(" Total Summary " + $scope.teamlist.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.teamlist.length + " Records Only", "warning");
                    return;
                }
            }
            // new code end
            unlockUI();
        };

        // Add Code Starts
        $scope.addteam = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addTeamModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams'];
            function ModalInstanceCtrl($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };


                var url = 'api/OsdMstDepartmentManagement/GetActivatedept';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.deptmasterlist = resp.data.deptlist;

                    unlockUI();
                    if(  $scope.deptmasterlist.length == 1)
                    {
                        $scope.single = true
                        $scope.lbldepartmentname = resp.data.department_name
                        $scope.lbldepartmentgid = resp.data.department_gid
                        var params = {
                            department_gid: resp.data.department_gid
                        }
                        var url = 'api/OsdMstDepartmentManagement/GetDeptEmployee';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.employee_list = resp.data.employeeasssign_list;
                        });
                    }
                    else {
                        $scope.multiple = true
                        $scope.single = false
                    }
                });

                $scope.onselectdept = function (department_gid) {
                    var params = {
                        department_gid: department_gid.department_gid
                    }
                    var url = 'api/OsdMstDepartmentManagement/GetDeptEmployee';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.employee_list = resp.data.employeeasssign_list;
                    });
                }
                

                $scope.teamname = function (string) {
                    if (string.length >= 100) {
                        $scope.message = "Maximum 100 characters Length";
                    }
                    else {
                        $scope.message =""                    
                    }
                }

                $scope.teamSubmit = function () {
                    if ($scope.cbodepartment == '' || $scope.cbodepartment == null || $scope.cbodepartment == undefined) {
                        if ($scope.lbldepartmentgid == '' || $scope.lbldepartmentgid == null || $scope.lbldepartmentgid == undefined)
                        {
                            alert('Select Department', 'warning');
                        }
                        else {
                            
                            var params = {
                                team_name: $scope.team_name,
                                team_description: $scope.team_description,
                                teammembers: $scope.cboteam_member,
                                department_gid: $scope.lbldepartmentgid,
                                department_name: $scope.lbldepartmentname
                            }
                            lockUI();
                            var url = 'api/OsdMstSupportTeam/PostSupportTeamAdd';
                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    unlockUI();
                                    activate();
                                }
                                else {
                                    //modalInstance.close('closed');
                                    alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    unlockUI();
                                    activate();
                                }
                            });
                        }

                    }
                    else {
                        
                        var params = {
                            team_name: $scope.team_name,
                            team_description: $scope.team_description,
                            teammembers: $scope.cboteam_member,
                            department_gid:$scope.cbodepartment.department_gid,
                            department_name: $scope.cbodepartment.department_name
                        }
                        lockUI();
                        var url = 'api/OsdMstSupportTeam/PostSupportTeamAdd';
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                activate();
                            }
                            else {
                                //modalInstance.close('closed');
                                alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                activate();
                            }
                        });
                    }
                }
            }
        }
        // Add Code Ends

        // Edit Code Starts
        $scope.editteam = function (supportteam_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/teamModaledit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstDepartmentManagement/GetActivatedept';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.deptmasterlist = resp.data.deptlist;

                    unlockUI();
                    if ($scope.deptmasterlist.length == 1) {
                        $scope.single = true
                        $scope.lbldepartmentnameedit = resp.data.department_name;
                        $scope.lbldepartmentgidedit = resp.data.department_gid;
                    
                    }
                    else {
                        $scope.multiple = true
                        $scope.single = false
                    }
                });
             

                $scope.onselectdeptedit = function  (department_gid) {
                    var params = {
                        department_gid: department_gid
                    }
                    var url = 'api/OsdMstDepartmentManagement/GetDeptEmployee';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.employee_listedit = resp.data.employeeasssign_list;
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                var params = {
                    supportteam_gid: supportteam_gid
                }
                var url = 'api/OsdMstSupportTeam/GetSupportTeamView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.teamcodeedit = resp.data.team_code,
                    $scope.teamnameedit = resp.data.team_name,
                    $scope.teamdescriptionedit = resp.data.team_description;
                    $scope.cbodepartmentedit = resp.data.department_gid;
                    $scope.teammembers = resp.data.teammembers;
                    $scope.employee_listedit = resp.data.employeelist;
                   
                    $scope.cboteam_member = [];
                    if (resp.data.teammembers != null) {
                        var count = resp.data.teammembers.length;
                        for (var i = 0; i < count; i++) {
                            var indexs = $scope.employee_listedit.map(function (x) { return x.employee_gid; }).indexOf(resp.data.teammembers[i].employee_gid);
                           // var indexs = $scope.employee_listedit.findIndex(x => x.employee_gid === resp.data.teammembers[i].employee_gid);
                            $scope.cboteam_member.push($scope.employee_listedit[indexs]);
                        }
                    }
                });
               
              
                $scope.teamUpdate = function () {
                    if ($scope.cbodepartmentedit == '' || $scope.cbodepartmentedit == null || $scope.cbodepartmentedit == undefined) {
                        if ($scope.lbldepartmentgidedit == '' || $scope.lbldepartmentgidedit == null || $scope.lbldepartmentgidedit == undefined) {
                            alert('Select Department', 'warning');
                        }
                        else
                        {
                            var departmentname;
                            var dept_index = $scope.deptmasterlist.map(function (e) { return e.department_gid }).indexOf($scope.cbodepartmentedit);
                            if (dept_index == -1) { departmentname = ''; } else { departmentname = $scope.deptmasterlist[dept_index].department_name; };
                            var params = {
                                supportteam_gid: supportteam_gid,
                                team_name: $scope.teamnameedit,
                                team_description: $scope.teamdescriptionedit,
                                teammembers: $scope.cboteam_member,
                                department_gid: $scope.cbodepartmentedit,
                                department_name: departmentname
                            }

                            lockUI();
                            var url = 'api/OsdMstSupportTeam/GetSupportTeamUpdate';
                            SocketService.post(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    modalInstance.close('closed');
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                    unlockUI();

                                }
                                else {
                                    //$modalInstance.close('closed');
                                    alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    unlockUI();
                                    activate();
                                }
                            });
                        }
                        }
                    else {
                        var departmentname;
                        var dept_index = $scope.deptmasterlist.map(function (e) { return e.department_gid }).indexOf($scope.cbodepartmentedit);
                        if (dept_index == -1) { departmentname = ''; } else { departmentname = $scope.deptmasterlist[dept_index].department_name; };
                        var params = {
                            supportteam_gid: supportteam_gid,
                            team_name: $scope.teamnameedit,
                            team_description: $scope.teamdescriptionedit,
                            teammembers: $scope.cboteam_member,
                            department_gid: $scope.cbodepartmentedit,
                            department_name: departmentname
                        }

                        lockUI();
                        var url = 'api/OsdMstSupportTeam/GetSupportTeamUpdate';
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                                unlockUI();

                            }
                            else {
                                //$modalInstance.close('closed');
                                alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                activate();
                            }
                        });
                    }
                }
            }
        }
        // Edit Code Ends

        // Delete Code Starts
        $scope.deleteteam = function (val) {
            var params = {
                supportteam_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',

                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = "api/OsdMstSupportTeam/GetSupportTeamDelete";
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            activate();
                            SweetAlert.swal('Deleted Successfully!');
                            unlockUI();
                        }
                        else {
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });

                }

            });
        }
        // Delete Code Ends

        $scope.showPopover = function (supportteam_gid, team_name, team_description) {
            var modalInstance = $modal.open({
                templateUrl: '/showpopupModal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    supportteam_gid: supportteam_gid
                }
                var url = 'api/OsdMstSupportTeam/GetTeamMember';
                SocketService.getparams(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                        $scope.team_name = team_name;
                        $scope.team_description = team_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdRptAllTicketsController', osdRptAllTicketsController);

    osdRptAllTicketsController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'DownloaddocumentService','cmnfunctionService'];

    function osdRptAllTicketsController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, DownloaddocumentService,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdRptAllTicketsController';

        activate();

        function activate() {
            $scope.limit = 6000;
            $scope.totalDisplayed = 100;

            vm.open = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();
                vm.opened = true;
            };
            vm.close = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();
                vm.closed = true;
            };
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];

            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1
            };

                var url = 'api/OsdMstDepartmentManagement/GetActivatedept';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.deptmasterlist = resp.data.deptlist;

                    unlockUI();
                    if ($scope.deptmasterlist.length == 1) {
                        $scope.single = true
                        $scope.lbldepartmentname = resp.data.department_name;
                        $scope.lbldepartmentgid = resp.data.department_gid

                        var params = {
                            department_gid: resp.data.department_gid
                        }
                        var url = 'api/OsdMstActivity/GetDeptTeam';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.supportdtl = resp.data.supportdtl;
                        });
                        var url = 'api/OsdTrnServiceRequest/GetDeptActivity';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.activity_list = resp.data.activitydtl;
                        });
                        var url = 'api/OsdMstSupportTeam/GetAllTeamMember';
                        SocketService.get(url).then(function (resp) {
                            $scope.employee_list = resp.data.teammembers;
                        });
                    }
                    else {
                        $scope.supportteam_gid = "";
                        $scope.activitymaster_gid = "";
                        $scope.assignedmember_gid = "";
                        $scope.multiple = true
                        $scope.single = false
                    }
                });


            
           
        
            //var url = 'api/OsdMstSupportTeam/GetSupportTeamSummary';
            //SocketService.get(url).then(function (resp) {
            //    $scope.supportdtl = resp.data.supportdtl;
            //});

            //var url = 'api/employee/Employee';
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list = resp.data.employee_list;
            //});

            //var url = 'api/OsdMstSupportTeam/GetAllTeamMember';
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list = resp.data.teammembers;
            //});

           
            var url = 'api/OsdRptAllTickets/GetAllTicketsSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.servicerequestsummary = resp.data.servicerequestdtl;
                unlockUI();
                // new code start   
                if ($scope.servicerequestsummary == null) {
                    $scope.total = 0;
                    $scope.totalDisplayed = 0;
                }
                else {
                    $scope.total = $scope.servicerequestsummary.length;
                    if ($scope.servicerequestsummary.length < 100) {
                        $scope.totalDisplayed = $scope.servicerequestsummary.length;
                    }
                }
            });
        }

        $scope.onselectdept = function (department_gid) {
            lockUI();
            var params = {
                department_gid: department_gid.department_gid
            }
            var url = 'api/OsdMstActivity/GetDeptTeam';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.supportdtl = resp.data.supportdtl;
            });
            var url = 'api/OsdTrnServiceRequest/GetDeptActivity';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.activity_list = resp.data.activitydtl;
            });
            var url = 'api/OsdMstSupportTeam/GetAllTeamMember';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.teammembers;
            });
            unlockUI();
        }

        $scope.viewNew = function (val, val2, val3, val4) {
          
            $location.url('app/osdRptAllTicketsView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 ));
        }
        var limitStep = 6000;
        $scope.incrementLimit = function () {
            $scope.limit += limitStep;
        };
        $scope.decrementLimit = function () {
            $scope.limit -= limitStep;
        };

        $scope.loadMore = function (pagecount) {
            if (pagecount == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();

            var Number = parseInt(pagecount);
            // new code start
            if ($scope.servicerequestsummary != null) {

                if (pagecount < $scope.servicerequestsummary.length) {
                    $scope.totalDisplayed += Number;
                    if ($scope.servicerequestsummary.length < $scope.totalDisplayed) {
                        $scope.totalDisplayed = $scope.servicerequestsummary.length;
                        Notify.alert(" Total Summary " + $scope.servicerequestsummary.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.servicerequestsummary.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        $scope.all = function () {
            $scope.supportteam_gid = "";
            $scope.activitymaster_gid = "";
            $scope.request_title = "";
            $scope.raisedmember_gid = "";
            $scope.assignedmember_gid = "";
            $scope.ref_no = "";
            $scope.raised_date = "";
            $scope.ticket_status = "";
            $scope.cbodepartment = "";
            $scope.ticket_source = "";
            var url = 'api/OsdRptAllTickets/GetAllTicketsSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.servicerequestsummary = resp.data.servicerequestdtl;
                unlockUI();
            });
        }
        

        $scope.search = function () {
            //var raised_date = $filter('date')($scope.raised_date, 'yyyy-MM-dd');
            //var raised_date = new Date();

            //raised_date.setDate($scope.raised_date.getDate() + 1);

            if ($scope.raised_date == undefined || $scope.raised_date == "") {
                var raised_date = 'null';
            }
            else {
                var raised_date1 = $scope.raised_date;

                var raised_date = new Date(raised_date1.getTime() - (raised_date1.getTimezoneOffset() * 60000))
                                    .toISOString()
                                    .split("T")[0];
            }
            if ($scope.lbldepartmentgid == "" || $scope.lbldepartmentgid== undefined ) {
                var departmentgid = $scope.cbodepartment.department_gid
            }
            else {
                var departmentgid =$scope.lbldepartmentgid
            }
            var params = {
                activitymaster_gid: $scope.activitymaster_gid,
                supportteam_gid: $scope.supportteam_gid,
                assignedmember_gid: $scope.assignedmember_gid,
                raisedmember_gid: $scope.raisedmember_gid,
                ticket_status: $scope.ticket_status,
                request_title: $scope.request_title,            
                request_refno: $scope.ref_no,
                raised_date: raised_date,
                department_gid: departmentgid,
                source: $scope.ticket_source 
            }

            var url = 'api/OsdRptAllTickets/PostAllTicketsSummarySearch';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                $scope.servicerequestsummary = resp.data.servicerequestdtl;
                
            });
        }

      
        $scope.viewPDF = function (val) {
            lockUI();
            var params = {
                servicerequest_gid: val
            }

            var url = 'api/OsdTrnTicketManagement/txtfile';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    unlockUI();
                }
                else {
                    //$modalInstance.close('closed');
                    alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    unlockUI();
                }
            });
        }

        $scope.export = function (val1, val2) {
            lockUI();
            if (($scope.single == false) &&  ($scope.cbodepartment == "" || $scope.cbodepartment == undefined)) {
                Notify.alert("Kindly Select Business Unit Name", "warning");
                unlockUI();
            }
            else {
                if ($scope.raised_date == undefined || $scope.raised_date == "") {
                    var raised_date = 'null';
                }
                else {
                    var raised_date1 = $scope.raised_date;

                    var raised_date = new Date(raised_date1.getTime() - (raised_date1.getTimezoneOffset() * 60000))
                                        .toISOString()
                                        .split("T")[0];
                }
                if ($scope.lbldepartmentgid == "" || $scope.lbldepartmentgid == undefined) {
                    var departmentgid = $scope.cbodepartment.department_gid
                }
                else {
                    var departmentgid = $scope.lbldepartmentgid
                }
                var params = {
                    activitymaster_gid: $scope.activitymaster_gid,
                    supportteam_gid: $scope.supportteam_gid,
                    assignedmember_gid: $scope.assignedmember_gid,
                    ticket_status: $scope.ticket_status,
                    raised_date: raised_date,
                    department_gid: departmentgid,
                    source: $scope.ticket_source 
                }
                var url = 'api/OsdRptAllTickets/TicketExport';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI();
                        DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);
                        // var phyPath = resp.data.lspath;
                        // var relPath = phyPath.split("EMS");
                        // var relpath1 = relPath[1].replace("\\", "/");
                        // var hosts = window.location.host;
                        // var prefix = location.protocol + "//";
                        // var str = prefix.concat(hosts, relpath1);
                        // var link = document.createElement("a");
                        // var name = resp.data.lsname.split('.');
                        // link.download = name[0];
                        // var uri = str;
                        // link.href = uri;
                        // link.click();
                        //DownloaddocumentService.Downloaddocument(val1, val2);
                    }
                    else {
                        unlockUI();
                        Notify.alert('Error Occurred While Export !', 'success')
                        activate();

                    }

                });
            }
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnAllotedMyTicketController', OsdTrnAllotedMyTicketController);

    OsdTrnAllotedMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];

    function OsdTrnAllotedMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnAllotedMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
            var url = "api/OsdTrnMyTicket/GetAllottedSummary";

            SocketService.get(url).then(function (resp) {
                $scope.allotedactivity_list = resp.data.allotteddtl;
               
                unlockUI();
            });

        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }

        $scope.view360 = function (val, val2, val3, val4,val6) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val6;



            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var request_refno = val6;


            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag: bankalert_flag,
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });

            var val5 = "N";
            $location.url('app/osdTrnMyActivityAllotted360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lspage=Alloted'+ '&request_refno=' + val6));
        }

        $scope.TransferAllocation = function (servicerequest_gid, assigned_team, assigned_member, assigned_membergid, assigned_supportteamgid, department_gid, department_name,activitymaster_gid, activity_name ) {

            var modalInstance = $modal.open({
                templateUrl: '/transferallocationmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                $scope.cboactivity = activitymaster_gid;
                var params = {
                    department_gid: department_gid,
                    activitymaster_gid: activitymaster_gid,
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
                var url = 'api/OsdMstActivity/GetActivity';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.activitylist = resp.data.activitydtl;
                    //activity_name = activity_name;
                    //$scope.cboactivity = activitymaster_gid;
                });
                var url = 'api/OsdTrnTicketManagement/GetActivityEdit';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboactivity.activity_name = resp.data.activity_name;
                });
                $scope.onselectedchangeteam = function (team_name) {

                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid
                    }
                    var url = 'api/OsdMstSupportTeam/GetTeamMemberExcept';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.teamSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_member,
                        assigned_membergid: assigned_membergid,
                        activitymaster_gid: $scope.cboactivity,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        //priority: $scope.priority,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

        $scope.Priority = function (servicerequest_gid, department_gid, department_name) {
            var modalInstance = $modal.open({
                templateUrl: '/prioritymodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                var params = {
                    department_gid: department_gid
                }
                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetPrioritylist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.prioritylistdtllist = resp.data.prioritylistdtl;
                    //var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    //if (transfer_flag == 'Y') {
                    //    $scope.transferlist = true;
                    //}
                    //else {
                    //    $scope.transferlist = false;
                    //}
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.prioritySubmit = function () {
                    var lspriority;
                    lockUI();
                    if (($scope.priority == undefined) || ($scope.priority == "")) {
                        lspriority = "None";
                    }
                    else {
                        lspriority = $scope.priority;
                    }
                    var params = {
                        servicerequest_gid: servicerequest_gid,

                        priority: lspriority,


                    }

                    var url = "api/OsdTrnTicketManagement/PostPriority";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

        $scope.getApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
               
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {
                });
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                SocketService.getparams(url, params).then(function (resp) {

                });
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                SocketService.getparams(url, params).then(function (resp) {

                });

                $scope.ok = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid
                    }
                    var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                    SocketService.getparams(url, params).then(function (resp) {

                    });
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            activate();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                           

                        }
                        else {
                            //modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.getReApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            activate();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                           
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnApprovalMyTicketController', OsdTrnApprovalMyTicketController);

    OsdTrnApprovalMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];

    function OsdTrnApprovalMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnApprovalMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
            var url = "api/OsdTrnMyTicket/GetApprovalPendingSummary";

            SocketService.get(url).then(function (resp) {
                $scope.allotedactivity_list = resp.data.allotteddtl;
               
                unlockUI();
            });
        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }

        $scope.view360 = function (val, val2, val3, val4,val6,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val7;
            $scope.customer_urn = val6;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var request_refno = val7;


            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag: bankalert_flag,
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });

            var val5 = "N";
            $location.url('app/osdTrnApprovalPending360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lspage=Alloted' + '&request_refno='+ val7));
        }

    }
})();

(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnApprovalPending360', osdTrnApprovalPending360);

    osdTrnApprovalPending360.$inject = ['$rootScope', '$scope', '$modal', '$state', 'SweetAlert', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnApprovalPending360($rootScope, $scope, $modal, $state, SweetAlert, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $filter, ngTableParams, $resource, $timeout, ngTableDataService, $sce, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnApprovalPending360';
        var assigned_status;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.customer_urn;
        var request_refno = searchObject.request_refno;
        var lspage = searchObject.lspage;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;

        activate();

        function activate() {
            lockUI();
            $scope.RequestCompletedFlag = RequestCompletedFlag;
            //var url = window.location.href;
            //var relPath = url.split("lstab=");
            //$scope.relpath1 = relPath[1];
            $scope.BankAlert_View = false;
            $scope.tdshow = false;


            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }


            if ($scope.RequestCompletedFlag == "N") {
                $scope.remarkscommunication = true;
            }
            else {
                $scope.remarkscommunication = false;
            }


            $scope.servicerequest_gid = servicerequest_gid;

            var param = {
                servicerequest_gid: servicerequest_gid,

            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                assigned_status = resp.data.assigned_status;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
            });

            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });

            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                unlockUI();
            });

              var url = "api/OsdTrnMyTicket/GetAssetDtls"

              SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"
            SocketService.getparams(url, param).then(function (resp) {

                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;
                //if ($scope.approvaldetails != null) {
                //    var getapproval = $scope.approvaldetails.find(function (v) { return v.approval_status === "Pending" });
                //    //var getpendingapplicant = $scope.individual_list.find(function (v) { return v.contact_status === "Pending" });
                //    //if ((getapplicant && getapplicant.contact_gid) && (getpendingapplicant == undefined || getpendingapplicant == "")) {
                //    if (getapproval && $scope.employee_gid != null) {
                //        $scope.tdshow = true;
                //    }
                //}

               
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: request_refno,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });

            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!', 'danger')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;

                }

                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.alloteddocumentdtl = resp.data.servicerequestdocumentdtl;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.','info')
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.RHdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.ackActivity = function (relpath1) {
            var url = "api/OsdTrnMyTicket/PostUpdateAck";
            lockUI();
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            SocketService.post(url, params).then(function (resp) {

                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
            });
        }


        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            //$state.go('app.osdTrnMyActivityAllotted360');
                            var val5 = "N";
                            $location.url('app/osdTrnApprovalPending360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&bankalert_flag=' + bankalert_flag + '&bankalert2allocated_gid=' + bankalert2allocated_gid + '&customer_gid=' + customer_gid + '&RequestCompletedFlag=' + val5 + '&lspage=Alloted' + '&request_refno=' + request_refno));
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            //$state.go('app.osdTrnMyActivityAllotted360');
                            $location.url('app/osdTrnApprovalPending360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&bankalert_flag=' + bankalert_flag + '&bankalert2allocated_gid=' + bankalert2allocated_gid + '&customer_gid=' + customer_gid + '&RequestCompletedFlag=' + val5 + '&lspage=Alloted' + '&request_refno=' + request_refno));
                            activate();

                        }
                    });
                }
            }
        }


        //lockUI();
        //var url = "api/OsdTrnRequestApproval/PostRequestRejected";
        //SocketService.post(url, params).then(function (resp) {
        //    unlockUI();
        //    if (resp.data.status == true) {

        //        Notify.alert(resp.data.message, {
        //            status: 'success',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();
        //        $scope.showapproval = false;
        //        $scope.hideapproval = false;
        //    }
        //    else {

        //        Notify.alert(resp.data.message, {
        //            status: 'danger',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();

        //    }
        //});


        $scope.back = function () {

            $state.go('app.OsdTrnApprovalMyTicket');


        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        $scope.RejectActivity = function () {

            var modalInstance = $modal.open({
                templateUrl: '/rejectrequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.rejectSubmit = function () {
                    var params = {
                        rejected_remarks: $scope.reject_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/RejectRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            $state.go('app.OsdTrnAllotedMyTicket');


                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function (relpath1) {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnApprovalViewController', osdTrnApprovalViewController);

    osdTrnApprovalViewController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnApprovalViewController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnApprovalViewController';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var relpath1 = relPath[1];
        activate();

        function activate() {
            var param = {
                requestapproval_gid: localStorage.getItem('requestapproval_gid')
            }
            
            var url = 'api/OsdTrnRequestApproval/GetApprovaldetails';
            lockUI();
            SocketService.getparams(url, param).then(function (resp) {
                $scope.request_title = resp.data.request_title;
                $scope.request_refno = resp.data.request_refno;
                $scope.activity_name = resp.data.activity_name;
                $scope.assigned_dtl = resp.data.assigned_dtl;
                $scope.getapproval_remarks = resp.data.getapproval_remarks;
                $scope.approval_token = resp.data.approval_token;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.approval_type = resp.data.approval_type;
                $scope.hierarylevel = resp.data.hierary_level;
                $scope.approvalreq_by = resp.data.approvalreq_by;
                $scope.approvalreqdate = resp.data.approvalreqdate;
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.requestapproval_remarks = resp.data.requestapproval_remarks;
                $scope.request_description = resp.data.request_description;
                var param = {
                    servicerequest_gid : $scope.servicerequest_gid  
                }
                var url = "api/OsdTrnMyTicket/GetAllotted360";
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                    //$scope.lblfilename = resp.data.filename;
                    //$scope.lblfilepath = resp.data.filepath;
                    $scope.lblallotfilename = resp.data.allofilename;
                    $scope.lblallotfilepath = resp.data.allofilepath;
                });
                unlockUI();
            
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                unlockUI();
            });
            

        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) { 
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        //$scope.recproof_downloads = function (val1, val2) {
        //    DownloaddocumentService.Downloaddocument(val1, val2);
        //}
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.approve_submit = function () {

            var hierarylevel = $scope.hierarylevel;
            var level = ++hierarylevel;
            var params = {
                approval_remarks: $scope.txtremarks,
                approval_token: $scope.approval_token,
                hierary_level: level,
                servicerequest_gid: $scope.servicerequest_gid,
                approval_type: $scope.approval_type,
            }
            lockUI();
            var url = "api/OsdTrnRequestApproval/PostRequestApproved";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.myApproval');
                    activate();
                    unlockUI();
                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.myApproval');
                    activate();
                    unlockUI();

                }
            });
        }

        $scope.reject_submit = function () {
            var hierarylevel = $scope.hierarylevel;
            var level = ++hierarylevel;
            var params = {
                approval_remarks: $scope.txtremarks,
                approval_token: $scope.approval_token,
                hierary_level: level,
                servicerequest_gid: $scope.servicerequest_gid,
                approval_type: $scope.approval_type,
            }
            lockUI();
            var url = "api/OsdTrnRequestApproval/PostRequestRejected";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.myApproval');
                    activate();
                    unlockUI();

                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }

        $scope.back = function () {
            $state.go('app.myApproval');
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnBAMSummary', OsdTrnBAMSummary);

    OsdTrnBAMSummary.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce','cmnfunctionService'];

    function OsdTrnBAMSummary($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnBAMSummary';
        
       
        activate();
        function activate() {
            lockUI();

            var url = 'api/OsdTrnBankAlert/GetServiceprivilege';
            SocketService.get(url).then(function (resp) {
                if (resp.data.privilege == "true") {
                    $scope.privilege = true;
                   
                }
                else {
                    $scope.privilege = false;
                   
                }
                unlockUI();
            });
            $scope.tab = {};
            var url = window.location.href;
            var relPath = url.split("lstab=");
            var relpath1 = relPath[1];
            if (relpath1 != undefined) {
                if (relpath1 == "requiredlist") {
                    $scope.tabrequiredlist = true;
                }
                else if (relpath1 == "allocatedlist") {
                    $scope.taballocatedlist = true;
                } 
                else if (relpath1 == "rhApprovePendinglist") {
                    $scope.tabrhApprovePendinglist = true;
                }
                else if (relpath1 == "assignlist") {
                    $scope.tabassignlist = true;
                }
                else if (relpath1 == "transferlist") {
                    $scope.tabtransferlist = true;
                }
            }
            else {
                if ($scope.tab.activeTabId == undefined) {
                    $scope.tabrequiredlist = true;
                }
                else if ($scope.tab.activeTabId == 'pending') {
                    $scope.tabrequiredlist = true;

                }
                else if ($scope.tab.activeTabId == 'allocatedlist') {
                    $scope.taballocatedlist = true;
                } 
                else if ($scope.tab.activeTabId == 'rhApprovePendinglist') {
                    $scope.tabrhApprovePendinglist = true;
                }
                else if ($scope.tab.activeTabId == 'assignlist') {
                    $scope.tabassignlist = true;
                }
                else if ($scope.tab.activeTabId == "transferlist") {
                    $scope.tabtransferlist = true;
                }
            }
            lockUI();
            var url = 'api/OsdTrnBankAlert/GetSeenHistory';
            SocketService.get(url).then(function (resp) {
                if (resp.data.status == true)
                {
                    unlockUI();
                }
              
              
            });
            var url = 'api/OsdTrnBankAlert/GetBAMDtlpendingSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.BAMDtlpending = resp.data.BankAlertAllocated_list;
            });
            var url = 'api/OsdTrnBankAlert/GetBAMpendingSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.BAMpendingSummary = resp.data.BankAlertAllocated_list;
            });
            var url = 'api/OsdTrnBankAlert/GetBAMRHApprovalpendingSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.RhpendingSummary = resp.data.BankAlertAllocated_list;
            });
            var url = 'api/OsdTrnBankAlert/GetBAMOperationpendingSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.BAMOperationpending = resp.data.BankAlertAllocated_list;
                //for (var i = 0; i < $scope.BAMOperationpending.length; i++) {
                //    $scope.BAMOperationpending[i].checked = true;

                //}

                //angular.forEach($scope.BAMOperationpending, function (value, key) {


                //    if (value.brs_flag == "Y") {
                //        $scope.yes_brs = true;
                //        $scope.yes_kotak = false;
                //        $scope.no_kotak = false;

                       
                //        value.yes_radio1 = true;
                //    }
                //    else if (value.kotakAPI_flag == "Y") {
                //        $scope.yes_kotak = true;
                //        $scope.yes_brs = false;
                //        $scope.no_kotak = false;
                       
                //        value.no_radio1 = true;
                //    }
                //    else if (value.kotakAPI_flag == "N") {
                //        $scope.no_kotak = true;
                //        $scope.yes_kotak = false;
                //        $scope.yes_brs = false;
                      
                //        value.partialscore_radio1 = true;
                //    }
                    
                //});
            });
           
            var url = 'api/OsdTrnBankAlert/GetBAMtransferSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.BAMtransferSummary = resp.data.BankAlerttransfer_list;
            });
            var url = 'api/OsdTrnBankAlert/GetCount';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.operation_count = resp.data.operation_count;
                $scope.allocated_count = resp.data.allocated_count;
                $scope.notallocated_count = resp.data.notallocated_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.rhApprovePending_count = resp.data.rhApprovePending_count;
                
            });
        }
        $scope.requiredlist = function (bankalert2notallocated_gid, customer_gid) {
            $location.url('app/osdBamNotAllocatedView?hash=' + cmnfunctionService.encryptURL('lsbankalert2notallocated_gid=' + bankalert2notallocated_gid + '&lstab=requiredlist'));
        }
        $scope.allocatedtoRM = function (bankalert2allocated_gid, customer_gid, customer_urn) {
            $location.url('app/osdBamAllocatedView?lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lstab=allocatedlist' + '&lscustomer_urn=' + customer_urn);
        }
        $scope.rhApprovePending = function (bankalert2allocated_gid, customer_gid, customer_urn) {
            $location.url('app/osdBamAllocatedView?lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lstab=rhApprovePendinglist' + '&lscustomer_urn=' + customer_urn);
        }
        $scope.BankalertView = function (bankalert2allocated_gid, customer_gid, customer_urn, ticketref_no) {
            $location.url('app/osdBamAssign2operation?lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lstab=assignlist' + '&lscustomer_urn=' + customer_urn + '&lsticketref_no=' + ticketref_no);
        }
        $scope.transfer = function (bankalert2allocated_gid, customer_gid, customer_urn, ticketref_no) {
            $location.url('app/osdBamAllocatedView?lsbankalert2allocated_gid=' + bankalert2allocated_gid + '&lscustomer_gid=' + customer_gid + '&lstab=transferlist' + '&lscustomer_urn=' + customer_urn + '&lsticketref_no=' + ticketref_no);
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('osdTrnCancelledRequestSummaryController', osdTrnCancelledRequestSummaryController);

        osdTrnCancelledRequestSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnCancelledRequestSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnCancelledRequestSummaryController';
        var lstab = $location.search().lstab;
        activate();
        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetCancelledSummary";
            SocketService.get(url).then(function (resp) {
                $scope.cancelledsummary = resp.data.cancelledlist;
                unlockUI();
            });
                      

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.close_count = resp.data.close_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.cancel_count = resp.data.cancel_count;
                
                unlockUI();
            });

        }

         // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }

      //Rejected Request
      $scope.Reject_request = function () {
        $state.go('app.osdTrnRejectedRequestSummary');
    }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
       
        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=myrequest'));
        }
        $scope.viewservicerequest = function (servicerequest_gid, request_status) {

            $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&lspage=cancelledrequest'));
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnClosedMyTicketController', OsdTrnClosedMyTicketController);

    OsdTrnClosedMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];


    function OsdTrnClosedMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnClosedMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
        
            var url = "api/OsdTrnMyTicket/GetClosedSummary";
            SocketService.get(url).then(function (resp) {
                $scope.closedtickets_list = resp.data.closeddtl;
               
                unlockUI();
            });

        }

        $scope.Refresh = function () {
            activate();
        }


        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }


        $scope.closedview360 = function (val, val2, val3, val4,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val7;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;



            var val5 = "Y";
            $location.url('app/osdTrnMyActivityComplete?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lspage=Closed' + '&request_refno=' + val7 ));
        }
    }
})();

(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnCloseRequestSummaryController', osdTrnCloseRequestSummaryController);

    osdTrnCloseRequestSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnCloseRequestSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnCloseRequestSummaryController';
        var lspage = $location.search().lspage;
        activate();

        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.close_count = resp.data.close_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });


            var url = "api/OsdTrnServiceRequest/GetCloseSummary";
            SocketService.get(url).then(function (resp) {
                $scope.closeddtl = resp.data.servicerequestdtl;
                unlockUI();
            });

        }

        // My Request
        $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }

        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
        

       //Cancel Activity
      $scope.Cancel_request = function () {
       $state.go('app.osdTrnCancelledRequestSummary');
      }

        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=closerequest'));
        }

        $scope.viewservicerequest = function (servicerequest_gid, request_status) {

            $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid  + '&lspage=closeactivity'));
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnCompletedMyTicketController', OsdTrnCompletedMyTicketController);

    OsdTrnCompletedMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];

    function OsdTrnCompletedMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnCompletedMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });

            lockUI();
        
            var url = "api/OsdTrnMyTicket/GetCompletedSummary";
            SocketService.get(url).then(function (resp) {

                $scope.completedticket_list = resp.data.completeddtl;
              
                unlockUI();
            });
        }



        $scope.Refresh = function () {
            activate();
        }

        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }

        $scope.completedview360 = function (val, val2, val3, val4,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val7;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var request_refno = val7;


            var val5 = "Y";
            $location.url('app/osdTrnMyActivityComplete?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lspage=Completed' + '&request_refno=' + val7 ));
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnExternalMyTicketController', OsdTrnExternalMyTicketController);

    OsdTrnExternalMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];


    function OsdTrnExternalMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnExternalMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
            var url = "api/OsdTrnMyTicket/GetForwardSummary";
            SocketService.get(url).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
               
                unlockUI();
            });
        }

    
        $scope.Refresh = function () {
            activate();
        }

        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }

        $scope.getApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            activate();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();


                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

   
  $scope.getReApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            activate();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                           
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.forwardview360 = function (val, val2, val3, val4,val6,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val7;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var request_refno = val7;


            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag: bankalert_flag,
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivityForward360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&customer_urn=' + val6 + '&lspage=Forward' + '&request_refno=' + val7));
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnForwardTransferSummaryController', osdTrnForwardTransferSummaryController);

        osdTrnForwardTransferSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnForwardTransferSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnForwardTransferSummaryController';
        var lstab = $location.search().lstab;
        activate();

        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.close_count = resp.data.close_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });
            
            //Forward Activity
            var url = "api/OsdTrnServiceRequest/GetForwardRequestSummary";
            SocketService.get(url).then(function (resp) {
                $scope.forwardactivitysummary = resp.data.forwardrequestdtl;               
                unlockUI();
            });

        }

         // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }

        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
        
       //Cancel Activity
      $scope.Cancel_request = function () {
         $state.go('app.osdTrnCancelledRequestSummary');
       }
      
        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=forwardrequest'));
        }
                

        $scope.viewforwardrequest = function (val, val2, val3, val4, request_status) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            
            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag : bankalert_flag,
                bankalert2allocated_gid : bankalert2allocated_gid,
                customer_gid : customer_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestForwardViewUpdate';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });

            if (request_status == 'Completed') {
                var val5 = "Y";
                $location.url('app/osdTrnServiceRequestForwardView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&CompletedFlag=' + val5));
             
            }
            else if (request_status == 'Closed') {
                var val5 = "C";
                $location.url('app/osdTrnServiceRequestForwardView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&CompletedFlag=' + val5));
             
            }
            else {
                var val5 = "N";
                $location.url('app/osdTrnServiceRequestForwardView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&CompletedFlag=' + val5));
                
            }
      
            
        }
       
        $scope.getApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid,
                        approvalforward_flag: 'Y',

                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                           
                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.getReApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid,
                        approvalforward_flag: 'Y',
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                            
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnInternalMyTicketController', OsdTrnInternalMyTicketController);

    OsdTrnInternalMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];


    function OsdTrnInternalMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnInternalMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
           
            var url = "api/OsdTrnMyTicket/GetTransferSummary";
            SocketService.get(url).then(function (resp) {
                $scope.transferticket_list = resp.data.transferlistdtl;
                
                unlockUI();
            });

        }

      
        $scope.Refresh = function () {
            activate();
        }


        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }


        $scope.transferview360 = function (val, val2, val3, val4, val6,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.request_refno = val7;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var request_refno = val7;


            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag: bankalert_flag,
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestTransferView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivityTransfer?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&customer_urn=' + val6 + '&lspage=Forward' + '&request_refno=' + val7));
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyActivity360', osdTrnMyActivity360);

    osdTrnMyActivity360.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnMyActivity360($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivity360';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var request_refno = searchObject.request_refno;
        var customer_urn = searchObject.customer_urn;
        var lspage = searchObject.lspage;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;
        var compfilename, forwardfilename;
        var compfilepath, forwardfilepath;
        //var p1;
        //p1='Y'
        var assigned_status;
        activate();

        function activate() {


            lockUI();
            $scope.BankAlert_View = false;
            $scope.servicerequest_gid = servicerequest_gid;


            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}


            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource_name = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });

            $scope.RequestCompletedFlag = RequestCompletedFlag;

            if ($scope.RequestCompletedFlag == "Y") {
                $scope.remarkscommunication = false;
            }
            else {
                $scope.remarkscommunication = true;
            }

            var param = {
                servicerequest_gid: servicerequest_gid
            }

            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {

                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.lblraised_date = resp.data.raised_date;
                $scope.request_title = resp.data.request_title;
                $scope.raised_by = resp.data.raised_by;
                $scope.lblraised_by = resp.data.raised_by;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_date = resp.data.forward_date;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_flag = resp.data.forward_flag;
                assigned_status = resp.data.assigned_status;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.rejected_flag = resp.data.rejected_flag;
                $scope.rejected_by = resp.data.rejected_by;
                $scope.rejected_date = resp.data.rejected_date;
                $scope.rejected_remarks = resp.data.rejected_remarks;
                $scope.cancel_flag = resp.data.cancel_flag;
                $scope.cancel_date = resp.data.cancel_date;
                $scope.forwardreopendocumentdtl = resp.data.forwardreopendocumentdtl;
                $scope.reopendtl = resp.data.reopendtl;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
                $scope.frrofilepath = resp.data.frrofilepath;
                $scope.frrofilename = resp.data.frrofilename;
                $scope.frfilepath = resp.data.frfilepath;
                $scope.frfilename = resp.data.frfilename;
                $scope.fwdfilename = resp.data.fwdfilename;
                $scope.fwdfilepath = resp.data.fwdfilepath;
                $scope.rofilename = resp.data.rofilename;
                $scope.rofilepath = resp.data.rofilepath;
                
                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }

                if ($scope.forward_flag == "Y") {
                    $scope.forward = false;
                    $scope.forwarddtls = true;
                }
                else {
                    $scope.forward = true;
                    $scope.forwarddtls = false;
                }

                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y") {
                    $scope.Completeddtls = false;
                }
                else {
                    $scope.Completeddtls = true;
                }

                if ($scope.rejected_flag == "Y") {
                    $scope.Rejectdtls = true;

                }
                else {
                    $scope.Rejecteddtls = false;

                }
                if ($scope.cancel_flag == "Y") {
                    $scope.canceldtls = true;
                    $scope.cancelleddtlsback = true;
                }
                else {
                    $scope.canceldtls = false;
                    $scope.cancelleddtlsback = false;
                }

            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityComplete';
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivitycompleted_list = resp.data.businessstatusunitmyactivity_list;

            });


            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var url = "api/OsdTrnMyTicket/GetForwardDocumentUploadtempclear"
            SocketService.getparams(url, params).then(function (resp) {

            });
            var url = "api/OsdTrnMyTicket/GetCompleteDocumentUploadtempclear"
            SocketService.getparams(url, params).then(function (resp) {

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityTempClear';
            SocketService.get(url).then(function (resp) {
            });

            var url = 'api/OsdTrnMyTicket/GetBusinessunitStatusMyActivity';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.businessstatuslist = resp.data.businessstatuslist;
            });
            var url = "api/OsdTrnMyTicket/GetMultipleForward"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                $scope.forwardreopendtl = resp.data.forwardreopendtl;
                unlockUI();
            });
          
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: request_refno,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });
            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });

            var param = {
                servicerequest_gid: servicerequest_gid
            }

            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, param).then(function (resp) {

                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                $scope.rejected_flag = resp.data.rejected_flag;
                $scope.comfilename = resp.data.comfilename;
                $scope.comfilepath = resp.data.comfilepath;
                $scope.tagmemberdtl = resp.data.tagmemberdtl;

                if ($scope.completed_flag == "Y") {
                    $scope.completeddtls = true;
                    $scope.completeddtlsback = true;

                }
                else {
                    $scope.completeddtls = false;
                    $scope.completeddtlsback = false;
                }
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                    $scope.closeddtlsback = true;
                    $scope.completeddtlsback = false;
                    $scope.rejecteddtlsback = false;
                }
                else {
                    $scope.closeddtlsback = false;
                    $scope.closeddtls = false;
                }
                if ($scope.rejected_flag == "Y") {
                    $scope.Rejectdtls = true;
                    $scope.rejecteddtlsback = true;
                    $scope.closeddtlsback = false;
                    $scope.completeddtlsback = false;
                }
                else {
                    $scope.Rejectdtls = false;
                    $scope.rejecteddtlsback = false;
                }

                unlockUI();
            });
            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                unlockUI();
            });

            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
               
                $scope.compfilename = resp.data.complefilename;
                $scope.compfilepath = resp.data.complefilepath;
                unlockUI();
            });

            var param = {
                requestreopen_gid: localStorage.getItem('requestreopen_gid')
            }

            if (localStorage.getItem('requestreopen_gid') == null || localStorage.getItem('requestreopen_gid') == '') {
            }
            else {
                var url = "api/OsdTrnMyTicket/GetReopenHistory";
                SocketService.getparams(url, param).then(function (resp) {

                    $scope.forwardreopendtl = resp.data.forwardreopendtl;
                    $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;

                    $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                    $scope.completereopendocumentdtl = resp.data.completereopendocumentdtl;
                    $scope.completed_by = resp.data.completed_by;
                    $scope.completed_date = resp.data.completed_date;
                    $scope.completed_remarks = resp.data.completed_remarks;

                    $scope.raised_by = resp.data.raised_by;
                    $scope.raised_date = resp.data.raised_date;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    $scope.fwdfilename = resp.data.fwdfilename;
                    $scope.fwdfilepath = resp.data.fwdfilepath;
                });
            }
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });

        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.FORdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.FRDdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
         $scope.Rdownloadall = function (val1, val2) {

             for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
         $scope.RHdownloadall = function (val1, val2) {

             for (var i = 0; i < val2.length; i++) {
                 //  console.log(array[i]);
                 DownloaddocumentService.Downloaddocument(val1, val2[i]);
             }

         }

        $scope.fwddownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!','warning')

                }

            });

        }
        $scope.businessstatus_add = function (servicerequest_gid) {
            //var lsbusinessstatus_gid = '';
            //  var lsbusiness_status = '';
            //  if ($scope.cbobusinessstatus != undefined || $scope.cbobusinessstatus != null) {
            //      //lsbusinessstatus_gid = $scope.cbobusinessstatus.businessstatus_gid;
            //      lsbusiness_status = $scope.cbobusinessstatus.business_status;
            //}
            //if ((cbobusinessstatus == undefined) || (cbobusinessstatus == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}

            //var servicerequest_gid = servicerequest_gid;
            var servicerequest_gid = cmnfunctionService.decryptURL($location.search().hash).servicerequest_gid;
            var business_status = $('#businessstatus :selected').text();
            var params = {
                //businessstatus_gid: $scope.cbobusinessstatus,
                servicerequest_gid: servicerequest_gid,

                business_status: business_status,



                //businessstatus_gid: lsbusinessstatus_gid,



            }
            if ((business_status == null) || (business_status == ' -----Select Business Unit Status-----')) {
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                //if ((business_status == undefined) || (business_status == '') ) {
                //    Notify.alert('Enter Business Unit Status');
                //    status: 'danger';
                //    pos: 'top-center';
                //    timeout: 3000;
                //}
                //else {
                var url = 'api/OsdTrnMyTicket/PostBusinessUnitStatusWorkinProgress';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    businessstatus_list();

                });
            }
            businessstatus_list();
        }

        // Delete Code Ends
        $scope.businessstatus_delete = function (businessstatusactivity_gid) {
            var params =
                {
                    businessstatusactivity_gid: businessstatusactivity_gid
                }
            var url = 'api/OsdTrnMyTicket/DeleteBusinessUnitStatusMyActivity';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

                businessstatus_list();
            });

        }
        function businessstatus_list() {
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';
            var params = {
                servicerequest_gid: servicerequest_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
        }
        //$scope.downloadsdocument = function (val1, val2) {
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.isDisabled = false;
        $scope.requestRejected = function () {
            var modalInstance = $modal.open({
                templateUrl: '/rejectrequestmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'

            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.rejectSubmit = function () {
                    var params = {
                        rejected_remarks: $scope.reject_remarks,
                        servicerequest_gid: servicerequest_gid


                    }
                    lockUI();
                    
                    var url = 'api/OsdTrnMyTicket/RejectRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed'); Notify.alert(resp.data.message,
                                {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            unlockUI();
                            $state.go('app.OsdTrnWorkMyTicket');

                    }

                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message,
                                {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                            }); unlockUI();
                        }

                    });


                }
            }

        }
        $scope.ForwardRequestDetails = function () {

            var modalInstance = $modal.open({
                templateUrl: '/forwardrequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdTrnServiceRequest/GetEmployees';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };
                $scope.Fdownloadall = function () {

                    for (var i = 0; i < forwardfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(forwardfilepath, forwardfilename[i]);
                    }

                }
                $scope.forwardSubmit = function () {

                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        forwardto_gid: $scope.cboteam_member.employee_gid,
                        forward_to: $scope.cboteam_member.employee_name,
                        forward_remarks: $scope.forward_remarks
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/ForwardTicket"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $scope.isDisabled = true;
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            $state.go('app.OsdTrnWorkMyTicket');
                            unlockUI();

                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                    activate();
                }


                $scope.ForwardRequestDocumentUpload = function () {
                    
                    var fi = document.getElementById('file');
                    console.log(fi);
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);
                           
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                        if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }

                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/ForwardDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file").val('');
                            $scope.upload_list = resp.data.upload_list;
                            forwardfilename = resp.data.forwardfilename;
                            forwardfilepath = resp.data.forwardfilepath;
                            console.log($scope.upload_list);
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert('Please select a file.')
                    }
                }
                //$scope.downloads = function (val1, val2) {
                //    var phyPath = val1;
                //    var relPath = phyPath.split("StoryboardAPI");
                //    var relpath1 = relPath[1].replace("\\", "/");
                //    var hosts = window.location.host;
                //    var prefix = location.protocol + "//";
                //    var str = prefix.concat(hosts, relpath1);
                //    var link = document.createElement("a");
                //    link.download = val2;
                //    var uri = str;
                //    link.href = uri;
                //    link.click();
                //}
                $scope.downloads = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }
                $scope.downloadall = function (val1, val2) {

                    for (var i = 0; i < val2.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(val1, val2[i]);
                    }

                }
                $scope.uploaddocumentcancel = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GetForwardtmpDocumentDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }

        //$scope.downloadsdocs = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloadsdocs = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.requestCompleted = function () {

            var modalInstance = $modal.open({
                templateUrl: '/completedrequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };

                $scope.completedSubmit = function () {
                    var params = {
                        completed_remarks: $scope.completed_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/GetCompletedRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.OsdTrnWorkMyTicket');
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }

                //$scope.downloadsdoc = function (val1, val2) {
                //    var phyPath = val1;
                //    var relPath = phyPath.split("StoryboardAPI");
                //    var relpath1 = relPath[1].replace("\\", "/");
                //    var hosts = window.location.host;
                //    var prefix = location.protocol + "//";
                //    var str = prefix.concat(hosts, relpath1);
                //    var link = document.createElement("a");
                //    link.download = val2;
                //    var uri = str;
                //    link.href = uri;
                //    link.click();
                //}
                $scope.downloadsdoc = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }

                
                $scope.Cdownloadall = function () {

                    for (var i = 0; i < compfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(compfilepath, compfilename[i]);
                    }

                }
                $scope.CompleteRequestDocumentUpload = function () {
                
                    var fi = document.getElementById('file2');
                    console.log(fi);
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);
                           
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "");

                            if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }

                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/CompleteDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file2").val('');
                            $scope.upload_list = resp.data.upload_list;
                            compfilename = resp.data.compfilename;
                            compfilepath = resp.data.compfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                }


                $scope.uploaddocumentdelete = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GettmpCompleteDocDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }

        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file1');
            if (fi.files.length > 0) {
                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                }
                frm.append('project_flag', "Default");
                frm.append('servicerequest_gid', servicerequest_gid);

                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file1").val('');
                    $scope.alloteddocumentdtl = resp.data.servicerequestdocumentdtl;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                alert('Please select a file.')
            }

        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.Back = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.WorkinProgressBack = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }

        $scope.CompletedBack = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.ClosedBack = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        // Previous History Code 
        $scope.tickethistory = function (servicerequest_gid) {
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
        // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {

            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + " &requestreopen_gid=" + requestreopen_gid + "");
            window.open(URL, '_blank');
        }

        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                size: 'md',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();

                        }
                    });
                }
            }
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnMyActivityAllotted360', osdTrnMyActivityAllotted360);

    osdTrnMyActivityAllotted360.$inject = ['$rootScope', '$scope', '$modal', '$state', 'SweetAlert', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnMyActivityAllotted360($rootScope, $scope, $modal, $state, SweetAlert, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $filter, ngTableParams, $resource, $timeout, ngTableDataService, $sce, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityAllotted360';
        var assigned_status;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var request_refno = searchObject.request_refno;
        var lspage = searchObject.lspage;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;
        var compfilename, forwardfilename;
        var compfilepath;

        activate();

        function activate() {
            lockUI();
            $scope.RequestCompletedFlag = RequestCompletedFlag;
            //var url = window.location.href;
            //var relPath = url.split("lstab=");
            //$scope.relpath1 = relPath[1];
            $scope.BankAlert_View = false;



            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }


            if ($scope.RequestCompletedFlag == "N") {
                $scope.remarkscommunication = true;
            }
            else {
                $scope.remarkscommunication = false;
            }
           

            $scope.servicerequest_gid = servicerequest_gid;
            var params = {
                servicerequest_gid: servicerequest_gid

            }
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });

            var param = {
                servicerequest_gid: servicerequest_gid

            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                assigned_status = resp.data.assigned_status;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
            });
           
            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });
          
           
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityTempClear';
            SocketService.get(url).then(function (resp) {
            });


            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                unlockUI();
            });

            var url = 'api/OsdTrnMyTicket/GetBusinessunitStatusMyActivity';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.businessstatuslist = resp.data.businessstatuslist;
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"
            SocketService.getparams(url, param).then(function (resp) {

                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();
            });


            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });
             var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}

            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });
            var param = {
                banktransc_gid: request_refno,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.source = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;

            });

            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });
           
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };

            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.COdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;

                }

                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.alloteddocumentdtl = resp.data.servicerequestdocumentdtl;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                alert('Please select a file.')
            }

        }

        $scope.ackActivity = function (relpath1) {
            var url = "api/OsdTrnMyTicket/PostUpdateAck";
            lockUI();
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            SocketService.post(url, params).then(function (resp) {

                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $state.go('app.OsdTrnAllotedMyTicket');

                    activate();
                }
            });
        }

        $scope.AckComplete = function () {

            var modalInstance = $modal.open({
                templateUrl: '/Ackcompleterequestmodal.html',
                controller: ModalInstanceCtrl,
                size: 'lg',
                backdrop: 'static',
                keyboard: false,
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };

                $scope.ackcompletedSubmit = function () {
                    var params = {
                        completed_remarks: $scope.completed_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/PostAckCompleteRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.OsdTrnAllotedMyTicket');
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.OsdTrnAllotedMyTicket');
                            

                        }
                    });
                }

               
                $scope.downloadsdoc = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }

                
                $scope.Cdownloadall = function () {

                    for (var i = 0; i < compfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(compfilepath, compfilename[i]);
                    }

                }
                $scope.CompleteRequestDocumentUpload = function () {
                
                    var fi = document.getElementById('file2');
                    console.log(fi);
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);
                            
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "");

                            if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }

                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/CompleteDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file2").val('');
                            $scope.upload_list = resp.data.upload_list;
                            compfilename = resp.data.compfilename;
                            compfilepath = resp.data.compfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                }


                $scope.uploaddocumentdelete = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GettmpCompleteDocDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }


        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityAllotted360');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityAllotted360');
                            activate();

                        }
                    });
                }
            }
        }


        //lockUI();
        //var url = "api/OsdTrnRequestApproval/PostRequestRejected";
        //SocketService.post(url, params).then(function (resp) {
        //    unlockUI();
        //    if (resp.data.status == true) {

        //        Notify.alert(resp.data.message, {
        //            status: 'success',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();
        //        $scope.showapproval = false;
        //        $scope.hideapproval = false;
        //    }
        //    else {

        //        Notify.alert(resp.data.message, {
        //            status: 'danger',
        //            pos: 'top-center',
        //            timeout: 3000
        //        });
        //        unlockUI();

        //    }
        //});


        $scope.back = function () {

            $state.go('app.OsdTrnAllotedMyTicket');


        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        $scope.RejectActivity = function () {

            var modalInstance = $modal.open({
                templateUrl: '/rejectrequestmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: "static",
                keyboard:false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.rejectSubmit = function () {
                    var params = {
                        rejected_remarks: $scope.reject_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/RejectRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            $state.go('app.OsdTrnAllotedMyTicket');


                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function (relpath1) {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }
        $scope.businessstatus_add = function () {
            //var lsbusinessstatus_gid = '';
          //  var lsbusiness_status = '';
          //  if ($scope.cbobusinessstatus != undefined || $scope.cbobusinessstatus != null) {
          //      //lsbusinessstatus_gid = $scope.cbobusinessstatus.businessstatus_gid;
          //      lsbusiness_status = $scope.cbobusinessstatus.business_status;
          //}
            //if ((cbobusinessstatus == undefined) || (cbobusinessstatus == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}
          
            
            var business_status = $('#businessstatus :selected').text();
            var params = {
                businessstatus_gid: $scope.cbobusinessstatus,
                business_status: business_status,
            
          
              //businessstatus_gid: lsbusinessstatus_gid,
            
                    

            }
            if ((business_status == null) || (business_status == ' -----Select Business Unit Status-----')) {
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
            //if ((business_status == undefined) || (business_status == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}
            //else {
                var url = 'api/OsdTrnMyTicket/PostBusinessUnitStatusMyActivity';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                 
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    
                    businessstatus_list();

                });
           }

        }
        function businessstatus_list() {
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityDrop';
            var params = {
                user_gid: $scope.user_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
        }
        // Delete Code Ends
        $scope.businessstatus_delete = function (businessstatusactivity_gid) {
            var params =
                {
                    businessstatusactivity_gid: businessstatusactivity_gid
                }
            console.log(params)
            var url = 'api/OsdTrnMyTicket/DeleteBusinessUnitStatusMyActivity';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

                businessstatus_list();
            });

        }
        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyActivityForward360', osdTrnMyActivityForward360);

    osdTrnMyActivityForward360.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService','cmnfunctionService'];

    function osdTrnMyActivityForward360($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityForward360';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var assigned_status;
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.customer_urn;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;
        var request_refno = searchObject.request_refno;
        var compfilename, compfilepath;

        activate();

        function activate() {
            lockUI();
            $scope.BankAlert_View = false;

            $scope.servicerequest_gid = servicerequest_gid;

            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
           

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            var param = {
                banktransc_gid: request_refno,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });

            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {

                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.request_title = resp.data.request_title;
                $scope.raised_by = resp.data.raised_by;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_date = resp.data.forward_date;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_flag = resp.data.forward_flag;
                assigned_status = resp.data.assigned_status;

                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;

                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.forwardreopendocumentdtl = resp.data.forwardreopendocumentdtl;
                $scope.reopendtl = resp.data.reopendtl;

                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.allofilename = resp.data.allofilename;
                $scope.allofilepath = resp.data.allofilepath;
                $scope.lblrofilename = resp.data.rofilename;
                $scope.lblrofilepath = resp.data.rofilepath;
                $scope.lblfrfilename = resp.data.frfilename;
                $scope.lblfrfilepath = resp.data.frfilepath;
                $scope.frrofilepath = resp.data.frrofilepath;
                $scope.frrofilename = resp.data.frrofilename;

                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }

                $scope.RequestCompletedFlag = RequestCompletedFlag;

                if ($scope.RequestCompletedFlag == "Y") {
                    $scope.remarkscommunication = false;
                }
                else {
                    $scope.remarkscommunication = true;
                }
                if ($scope.forward_flag == "Y") {
                    $scope.forward = false;
                    $scope.forwarddtls = true;
                }
                else {
                    $scope.forward = true;
                    $scope.forwarddtls = false;
                }
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
           
           

            var url = "api/OsdTrnMyTicket/GetCompleteDocumentUploadtempclear"
            SocketService.getparams(url, param).then(function (resp) {

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityTempClear';
            SocketService.get(url).then(function (resp) {
            });

            var url = 'api/OsdTrnMyTicket/GetBusinessunitStatusMyActivity';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.businessstatuslist = resp.data.businessstatuslist;
            });


            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });
            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var url = "api/OsdTrnMyTicket/GetMultipleForward"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                $scope.forwardreopendtl = resp.data.forwardreopendtl;
                unlockUI();
            });

            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                unlockUI();
            });
            var url = "api/OsdTrnMyTicket/GetCompletedDetails"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.completed_flag = resp.data.completed_flag;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.compfilename = resp.data.filename;
                $scope.compfilepath = resp.data.filepath;
                unlockUI();
            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                unlockUI();
            });

            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });

        }
        $scope.fdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.RHdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.FWdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.FROdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        
        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };

            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            //console.log(params);
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.isDisabled = false;
        $scope.requestCompleted = function () {

            var modalInstance = $modal.open({
                templateUrl: '/completedrequestmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
              
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };

                $scope.CompletedSubmit = function () {
                    var params = {
                        completed_remarks: $scope.complete_remarks,
                        servicerequest_gid: servicerequest_gid
                    }
                    //console.log(params);
                    lockUI();
                    var url = 'api/OsdTrnMyTicket/GetCompletedRequest';
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI()

                            $state.go('app.OsdTrnExternalMyTicket');

                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }

                $scope.Cdownloadall = function () {

                    for (var i = 0; i < compfilename.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(compfilepath, compfilename[i]);
                    }

                }

                $scope.CompleteRequestDocumentUpload = function () {
                    
                    var fi = document.getElementById('file');
                    console.log(fi);
                    if (fi.files.length > 0) {

                        //document.getElementById('fp').innerHTML =
                        //    'Total Files: <b>' + fi.files + '</b></br >';

                        var frm = new FormData();
                        //frm.append('allocationdtl_gid', 'RSK001')
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);
                            
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            //document.getElementById('fp').innerHTML =
                            //    document.getElementById('fp').innerHTML + '<br /> ' + fname;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                            if (IsValidExtension == false) {
                                    Notify.alert("File format is not supported..!", {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    return false;
                                }
                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnMyTicket/CompleteDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file").val('');
                            $scope.upload_list = resp.data.upload_list;
                            compfilename = resp.data.compfilename;
                            compfilepath = resp.data.compfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'info',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert('Please select a file.', 'info')
                    }
                }
                //$scope.downloads = function (val1, val2) {
                //    var phyPath = val1;
                //    var relPath = phyPath.split("StoryboardAPI");
                //    var relpath1 = relPath[1].replace("\\", "/");
                //    var hosts = window.location.host;
                //    var prefix = location.protocol + "//";
                //    var str = prefix.concat(hosts, relpath1);
                //    var link = document.createElement("a");
                //    link.download = val2;
                //    var uri = str;
                //    link.href = uri;
                //    link.click();
                //}
            
                $scope.downloads = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }
                
                
              
                $scope.uploaddocumentcancel = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnMyTicket/GettmpCompleteDocDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        $scope.lblfilename = resp.data.filename;
                        $scope.lblfilepath = resp.data.filepath;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }
        //DOc Upload
        $scope.ServiceRequestForwardDocUpload = function () {
            lockUI();
            var fi = document.getElementById('file1');
            if (fi.files.length > 0) {

                //document.getElementById('fp').innerHTML =
                //    'Total Files: <b>' + fi.files + '</b></br >';

                var frm = new FormData();
                //frm.append('allocationdtl_gid', 'RSK001')
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    //document.getElementById('fp').innerHTML =
                    //    document.getElementById('fp').innerHTML + '<br /> ' + fname;
                }

                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/ForwardViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file1").val('');
                    $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                    $scope.fwdfilename = resp.data.fwdfilename;
                    $scope.fwdfilepath = resp.data.fwdfilepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }

        }
        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                //document.getElementById('fp').innerHTML =
                //    'Total Files: <b>' + fi.files + '</b></br >';

                var frm = new FormData();
                //frm.append('allocationdtl_gid', 'RSK001')
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    //document.getElementById('fp').innerHTML =
                    //    document.getElementById('fp').innerHTML + '<br /> ' + fname;
                }

                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }

        }


        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        $scope.ForwardBack = function () {

            $state.go('app.OsdTrnExternalMyTicket');

        }

        // Previous History Code 
        $scope.tickethistory = function (servicerequest_gid) {
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
        // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {

            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("requestreopen_gid=" + requestreopen_gid + " &servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
        $scope.businessstatus_add = function (servicerequest_gid) {
            //var lsbusinessstatus_gid = '';
            //  var lsbusiness_status = '';
            //  if ($scope.cbobusinessstatus != undefined || $scope.cbobusinessstatus != null) {
            //      //lsbusinessstatus_gid = $scope.cbobusinessstatus.businessstatus_gid;
            //      lsbusiness_status = $scope.cbobusinessstatus.business_status;
            //}
            //if ((cbobusinessstatus == undefined) || (cbobusinessstatus == '') ) {
            //    Notify.alert('Enter Business Unit Status');
            //    status: 'danger';
            //    pos: 'top-center';
            //    timeout: 3000;
            //}

            //var servicerequest_gid = servicerequest_gid;
            var servicerequest_gid = cmnfunctionService.decryptURL($location.search().hash).servicerequest_gid;
            var business_status = $('#businessstatus :selected').text();
            var params = {
                //businessstatus_gid: $scope.cbobusinessstatus,
                servicerequest_gid: servicerequest_gid,

                business_status: business_status,



                //businessstatus_gid: lsbusinessstatus_gid,



            }
            if ((business_status == null) || (business_status == ' -----Select Business Unit Status-----')) {
                Notify.alert('Enter Business Unit Status', {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                //if ((business_status == undefined) || (business_status == '') ) {
                //    Notify.alert('Enter Business Unit Status');
                //    status: 'danger';
                //    pos: 'top-center';
                //    timeout: 3000;
                //}
                //else {
                var url = 'api/OsdTrnMyTicket/PostBusinessUnitStatusWorkinProgress';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    businessstatus_list();

                });
            }

        }

        // Delete Code Ends
        $scope.businessstatus_delete = function (businessstatusactivity_gid) {
            var params =
                {
                    businessstatusactivity_gid: businessstatusactivity_gid
                }
            var url = 'api/OsdTrnMyTicket/DeleteBusinessUnitStatusMyActivity';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

                businessstatus_list();
            });

        }
        function businessstatus_list() {
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';
            var params = {
                servicerequest_gid: $scope.servicerequest_gid,

            }
            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
        }

        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityForward360');
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            $state.go('app.osdTrnMyActivityForward360');
                            activate();

                        }
                    });
                }
            }
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyActivityHistory', osdTrnMyActivityHistory);

    osdTrnMyActivityHistory.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$modal', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService','cmnfunctionService'];

    function osdTrnMyActivityHistory($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $modal, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityHistory';
        //var page;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        activate();
       
        function activate() {
        //    var url = window.location.href;
        //    var relPath = url.split("redirect_page=");
        //    $scope.relpath1 = relPath[1];
        //    page = localStorage.getItem('page');
            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {

                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.request_title = resp.data.request_title;
                $scope.raised_by = resp.data.raised_by;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_date = resp.data.forward_date;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_flag = resp.data.forward_flag;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;

                $scope.reopendtl = resp.data.reopendtl;
            });

            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                unlockUI();
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.approvaldetailshistory = resp.data.approvaldetailshistory;

            });

            var url = "api/OsdTrnMyTicket/GetMultipleForward"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                unlockUI();
            });
            

            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                unlockUI();
            });

            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                $scope.requestordtlhistory = resp.data.requestordtlhistory;
                unlockUI();
            });

            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
        }

        $scope.close = function () {
            window.close();
        }
        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyActivityReopenHistory', osdTrnMyActivityReopenHistory);

    osdTrnMyActivityReopenHistory.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$modal', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService','cmnfunctionService'];

    function osdTrnMyActivityReopenHistory($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $modal, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityReopenHistory';
        //var page;
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var requestreopen_gid = searchObject.requestreopen_gid;
        activate();

        function activate() {
            //var url = window.location.href;
            //var relPath = url.split("redirect_page=");
            //$scope.relpath1 = relPath[1];

            //page = localStorage.getItem('page');
            $scope.requestreopen_gid = requestreopen_gid;
            $scope.servicerequest_gid = servicerequest_gid;
            var param = {
                requestreopen_gid: requestreopen_gid
            }
            var url = "api/OsdTrnMyTicket/GetReopenHistory";
            SocketService.getparams(url, param).then(function (resp) {

                $scope.forwardreopendtl = resp.data.forwardreopendtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                $scope.completereopendocumentdtl = resp.data.completereopendocumentdtl;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;

                $scope.raised_by = resp.data.raised_by;
                $scope.raised_date = resp.data.raised_date;
                $scope.reopencompleted_flag = resp.data.reopencompleted_flag;
                if($scope.reopencompleted_flag == 'Y')
                {
                   $scope.reopencompleteddtls=true;
                }
                else
                {
                    $scope.reopencompleteddtls=false;
                }
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }

            var url = "api/OsdTrnMyTicket/GetApprovalDtls";
                SocketService.getparams(url, params).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }

                });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });
        }


        $scope.close = function () {
            window.close();
        }
        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();

                        }
                    });
                }
            }
        }

        $scope.downloads = function (val1, val2) {
            var phyPath = val1;
            var relPath = phyPath.split("StoryboardAPI");
            var relpath1 = relPath[1].replace("\\", "/");
            var hosts = window.location.host;
            var prefix = location.protocol + "//";
            var str = prefix.concat(hosts, relpath1);
            var link = document.createElement("a");
            link.download = val2;
            var uri = str;
            link.href = uri;
            link.click();
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyActivityTransfer', osdTrnMyActivityTransfer);

    osdTrnMyActivityTransfer.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnMyActivityTransfer($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyActivityTransfer';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.customer_urn;
        var request_refno = searchObject.request_refno;
        var RequestCompletedFlag = searchObject.RequestCompletedFlag;
        activate();

        function activate() {
            lockUI();
            $scope.servicerequest_gid = servicerequest_gid;

            $scope.BankAlert_View = false;

            if( bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            //var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            //var param = {
            //    bankalert2allocated_gid: bankalert2allocated_gid,
            //    customer_gid: customer_gid
            //}
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn

            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                unlockUI();               
            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: request_refno,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });
            $scope.RequestCompletedFlag = RequestCompletedFlag;
            if ($scope.RequestCompletedFlag == "N") {
                $scope.remarkscommunication = true;
            }
            else {
                $scope.remarkscommunication = false;
            }
         
            $scope.servicerequest_gid = servicerequest_gid;

            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, param).then(function (resp) {
                unlockUI();
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.request_status = resp.data.request_status;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;               
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_member = resp.data.assigned_member;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.reopendtl = resp.data.reopendtl;

                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;

                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                unlockUI();
            });
            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });

            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });

            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                $scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
                unlockUI();
            });

            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, param).then(function (resp) {

                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;

                unlockUI();
            });
            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
            });

            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });

            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                unlockUI();
            });
             var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';
           
            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });

            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });
        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.requestCompleted = function () {
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            lockUI();
            var url = 'api/OsdTrnMyTicket/GetCompletedRequest';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();                    
                        $state.go('app.OsdTrnInternalMyTicket');
                    
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }

        $scope.back = function () {
        
                $state.go('app.OsdTrnInternalMyTicket');
          
        }

        // Previous History Code 
        $scope.tickethistory = function (servicerequest_gid) {
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
        // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {
         
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("requestreopen_gid=" + requestreopen_gid + " &servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!', 'danger')

                }

            });

        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyTicketcontroller', osdTrnMyTicketcontroller);

    osdTrnMyTicketcontroller.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];

    function osdTrnMyTicketcontroller($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;

        vm.title = 'osdTrnMyTicketcontroller';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var lstab = searchObject.lstab;
        activate();

        function activate() {
            lockUI();

    // Get My Activity Count Code 
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.alloted_count;
                $scope.workinprogress_count = resp.data.workinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.forward_count;
                unlockUI();
            });


            $scope.tab = {};
            var url = window.location.href;
            var relPath = url.split("lstab=");
            var relpath1 = relPath[1];
            var i;
            if (lstab != undefined) {
                if (lstab == "Alloted") {
                    $scope.taballoted = true;
                }
                else if (lstab == "Work-InProgress") {
                    $scope.tabworkinprogress = true;
                }
                else if (lstab == "Forward") {
                    $scope.tabforward = true;
                }
                else if (lstab == "Tagged-Ticket") {
                    $scope.tabtaggedticket = true;
                }
                else if (lstab == "Transfer-Ticket") {
                    $scope.tabtransferticket = true;
                }
                else if (lstab == "Completed") {
                    $scope.tabcompleted = true;
                }
                else if (lstab == "Closed") {
                    $scope.tabclosed = true;
                }
            }
            else {
                if ($scope.tab.activeTabId == undefined) {
                    $scope.taballoted = true;
                }
                else if ($scope.tab.activeTabId == 'Alloted') {
                    $scope.taballoted = true;
                }
                else if ($scope.tab.activeTabId == 'Work-InProgress') {
                    $scope.tabworkinprogress = true;
                }
                else if ($scope.tab.activeTabId == 'Forward') {
                    $scope.tabforward = true;
                }
                else if ($scope.tab.activeTabId == 'Tagged-Ticket') {
                    $scope.tabtaggedticket = true;
                }
                else if ($scope.tab.activeTabId == 'Transfer-Ticket') {
                    $scope.tabtransferticket = true;
                }
                else if ($scope.tab.activeTabId == 'Completed') {
                    $scope.tabcompleted = true;
                }
                else if ($scope.tab.activeTabId == 'Closed') {
                    $scope.tabclosed = true;
                }
            }



            //  Alloted Activity
            $scope.totalDisplayednew = 100;
            var url = "api/OsdTrnMyTicket/GetAllottedSummary";
            
            SocketService.get(url).then(function (resp) {
                $scope.allotedactivity_list = resp.data.allotteddtl;
                if ($scope.allotedactivity_list == null) {
                    $scope.totalnew = 0;
                    $scope.totalDisplayednew = 0;
                }
                else {
                    $scope.totalnew = $scope.allotedactivity_list.length;
                    if ($scope.allotedactivity_list.length < 100) {
                        $scope.totalDisplayednew = $scope.allotedactivity_list.length;
                    }
                }
                unlockUI();
            });

            //transfer tickets
            
                lockUI();
                $scope.totaldisplayedtransferticket = 100;
                var url = "api/OsdTrnMyTicket/GetTransferSummary";
                
                SocketService.get(url).then(function (resp) {
                    $scope.transferticket_list = resp.data.transferlistdtl;
                    if ($scope.transferticket_list == null) {
                        $scope.totaltransferticket = 0;
                        $scope.totaldisplayedtransferticket = 0;
                    }
                    else {
                        $scope.totaltransferticket = $scope.transferticket_list.length;
                        if ($scope.transferticket_list.length < 100) {
                            $scope.totaldisplayedtransferticket = $scope.transferticket_list.length;
                        }
                    }
                    unlockUI();
                });

            // Work In Progress
                    lockUI();
                    $scope.totalDisplayedworkinprogress = 100;
                    var url = "api/OsdTrnMyTicket/GetWorkInProgressSummary";
                    
                    SocketService.get(url).then(function (resp) {
                        $scope.workinprogress_list = resp.data.workinprogressdtl;
                        if ($scope.workinprogress_list == null) {
                            $scope.workinprogressCount = 0;
                            $scope.totalDisplayedworkinprogress = 0;
                        }
                        else {
                            $scope.workinprogressCount = $scope.workinprogress_list.length;
                            if ($scope.workinprogress_list.length < 100) {
                                $scope.totalDisplayedworkinprogress = $scope.workinprogress_list.length;
                            }
                        }
                        unlockUI();
                    });

            // Forward
                    lockUI();
                    $scope.totalDisplayedforward = 100;
                    var url = "api/OsdTrnMyTicket/GetForwardSummary";
                    SocketService.get(url).then(function (resp) {
                        $scope.forwarddtl = resp.data.forwarddtl;
                        if ($scope.forwarddtl == null) {
                            $scope.forwardCount = 0;
                            $scope.totalDisplayedforward = 0;
                        }
                        else {
                            $scope.forwardCount = $scope.forwarddtl.length;
                            if ($scope.forwarddtl.length < 100) {
                                $scope.totalDisplayedforward = $scope.forwarddtl.length;
                            }
                        }
                        unlockUI();
                    });

            // Completed
                    lockUI();
                    $scope.totalDisplayedcompleted = 100;
                    var url = "api/OsdTrnMyTicket/GetCompletedSummary";
                    SocketService.get(url).then(function (resp) {

                        $scope.completedticket_list = resp.data.completeddtl;

                        if ($scope.completedticket_list == null) {
                            $scope.totalcompleted = 0;
                            $scope.totalDisplayedcompleted = 0;
                        }
                        else {
                            $scope.totalcompleted = $scope.completedticket_list.length;
                            if ($scope.completedticket_list.length < 100) {
                                $scope.totalDisplayedcompleted = $scope.completedticket_list.length;
                            }
                        }
                        unlockUI();
                    });

            // Closed
                    lockUI();
                    $scope.totalDisplayedclosed = 100;
                    var url = "api/OsdTrnMyTicket/GetClosedSummary";
                    SocketService.get(url).then(function (resp) {
                        $scope.closedtickets_list = resp.data.closeddtl;
                        if ($scope.closedtickets_list == null) {
                            $scope.totalclosed = 0;
                            $scope.totalDisplayedclosed = 0;
                        }
                        else {
                            $scope.totalclosed = $scope.closedtickets_list.length;
                            if ($scope.closedtickets_list.length < 100) {
                                $scope.totalDisplayedclosed = $scope.closedtickets_list.length;
                            }
                        }
                        unlockUI();
                    });
        }
        $scope.loadMorenew = function (pagecountalloted) {
            if (pagecountalloted == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountalloted);
            if ($scope.allotedactivity_list != null) {

                if (pagecountalloted < $scope.allotedactivity_list.length) {
                    $scope.totalDisplayednew += Number;
                    if ($scope.allotedactivity_list.length < $scope.totalDisplayednew) {
                        $scope.totalDisplayednew = $scope.allotedactivity_list.length;
                        Notify.alert(" Total Summary " + $scope.allotedactivity_list.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.allotedactivity_list.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };
     // Work In Progress
        $scope.work_inprogress = function () {
            lockUI();
            $scope.totalDisplayedworkinprogress = 100;
            var url = "api/OsdTrnMyTicket/GetWorkInProgressSummary";
            SocketService.get(url).then(function (resp) {
                $scope.workinprogress_list = resp.data.workinprogressdtl;
                if ($scope.workinprogress_list == null) {
                    $scope.workinprogressCount = 0;
                    $scope.totalDisplayedworkinprogress = 0;
                }
                else {
                    $scope.workinprogressCount = $scope.workinprogress_list.length;
                    if ($scope.workinprogress_list.length < 100) {
                        $scope.totalDisplayedworkinprogress = $scope.workinprogress_list.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoreworkinprogress = function (pagecountworkinprogress) {
            if (pagecountworkinprogress == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountworkinprogress);
            if ($scope.workinprogress_list != null) {

                if (pagecountworkinprogress < $scope.workinprogress_list.length) {
                    $scope.totalDisplayedworkinprogress += Number;
                    if ($scope.workinprogress_list.length < $scope.totalDisplayedworkinprogress) {
                        $scope.totalDisplayedworkinprogress = $scope.workinprogress_list.length;
                        Notify.alert(" Total Summary " + $scope.workinprogress_list.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.workinprogress_list.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };
        //Forward Activity
        $scope.forward_request = function () {
            lockUI();
            $scope.totalDisplayedforward = 100;
            var url = "api/OsdTrnMyTicket/GetForwardSummary";
            SocketService.get(url).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                if ($scope.forwarddtl == null) {
                    $scope.forwardCount = 0;
                    $scope.totalDisplayedforward = 0;
                }
                else {
                    $scope.forwardCount = $scope.forwarddtl.length;
                    if ($scope.forwarddtl.length < 100) {
                        $scope.totalDisplayedforward = $scope.forwarddtl.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoreforward = function (pagecountforward) {
            if (pagecountforward == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountforward);
            if ($scope.forwarddtl != null) {

                if (pagecountforward < $scope.forwarddtl.length) {
                    $scope.totalDisplayedforward += Number;
                    if ($scope.forwarddtl.length < $scope.totalDisplayedforward) {
                        $scope.totalDisplayedforward = $scope.forwarddtl.length;
                        Notify.alert(" Total Summary " + $scope.forwarddtl.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.forwarddtl.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };
    //transfer tickets
        $scope.transfer_ticket = function () {
            lockUI();
            $scope.totaldisplayedtransferticket = 100;
            var url = "api/OsdTrnMyTicket/GetTransferSummary";
            SocketService.get(url).then(function (resp) {
                $scope.transferticket_list = resp.data.transferlistdtl;
                if ($scope.transferticket_list == null) {
                    $scope.totaltransferticket = 0;
                    $scope.totaldisplayedtransferticket = 0;
                }
                else {
                    $scope.totaltransferticket = $scope.transferticket_list.length;
                    if ($scope.transferticket_list.length < 100) {
                        $scope.totaldisplayedtransferticket = $scope.transferticket_list.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadmoretransferticket = function (pagecounttransferticket) {
            if (pagecounttransferticket == undefined) {
                Notify.alert("enter the total summary count", "warning");
                return;
            }
            lockUI();
            var number = parseInt(pagecounttransferticket);
            if ($scope.transferticket_list != null) {

                if (pagecounttransferticket < $scope.transferticket_list.length) {
                    $scope.totaldisplayedtransferticket += number;
                    if ($scope.transferticket_list.length < $scope.totaldisplayedtransferticket) {
                        $scope.totaldisplayedtransferticket = $scope.transferticket_list.length;
                        Notify.alert(" total summary " + $scope.transferticket_list.length + " records only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" total summary " + $scope.transferticket_list.length + " records only", "warning");
                    return;
                }
            }
            unlockUI();
        };
   // Completed Activity
        $scope.completed_ticket = function () {
            lockUI();
            $scope.totalDisplayedcompleted = 100;
            var url = "api/OsdTrnMyTicket/GetCompletedSummary";
            SocketService.get(url).then(function (resp) {
               
                $scope.completedticket_list = resp.data.completeddtl;
                
                if ($scope.completedticket_list == null) {
                    $scope.totalcompleted = 0;
                    $scope.totalDisplayedcompleted = 0;
                }
                else {
                    $scope.totalcompleted = $scope.completedticket_list.length;
                    if ($scope.completedticket_list.length < 100) {
                        $scope.totalDisplayedcompleted = $scope.completedticket_list.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMorecompleted = function (pagecountcompleted) {
            if (pagecountcompleted == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountcompleted);
            if ($scope.completedticket_list != null) {

                if (pagecountcompleted < $scope.completedticket_list.length) {
                    $scope.totalDisplayedcompleted += Number;
                    if ($scope.completedticket_list.length < $scope.totalDisplayedcompleted) {
                        $scope.totalDisplayedcompleted = $scope.completedticket_list.length;
                        Notify.alert(" Total Summary " + $scope.completedticket_list.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.completedticket_list.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };
    // Closed Activity
        $scope.closed_ticket = function () {
            lockUI();
            $scope.totalDisplayedclosed = 100;
            var url = "api/OsdTrnMyTicket/GetClosedSummary";
            SocketService.get(url).then(function (resp) {
                $scope.closedtickets_list = resp.data.closeddtl;
                if ($scope.closedtickets_list == null) {
                    $scope.totalclosed = 0;
                    $scope.totalDisplayedclosed = 0;
                }
                else {
                    $scope.totalclosed = $scope.closedtickets_list.length;
                    if ($scope.closedtickets_list.length < 100) {
                        $scope.totalDisplayedclosed = $scope.closedtickets_list.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoreclosed = function (pagecountclosed) {
            if (pagecountclosed == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountclosed);
            if ($scope.closedtickets_list != null) {

                if (pagecountclosed < $scope.closedtickets_list.length) {
                    $scope.totalDisplayedclosed += Number;
                    if ($scope.closedtickets_list.length < $scope.totalDisplayedclosed) {
                        $scope.totalDisplayedclosed = $scope.closedtickets_list.length;
                        Notify.alert(" Total Summary " + $scope.closedtickets_list.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.closedtickets_list.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        $scope.view360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

         
            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag : bankalert_flag,
                bankalert2allocated_gid : bankalert2allocated_gid,
                customer_gid : customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            
            var val5 = "N";
            $location.url('app/osdTrnMyActivityAllotted360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Alloted'));
        }
        $scope.workinprogressview360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

           
            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag : bankalert_flag,
                bankalert2allocated_gid : bankalert2allocated_gid,
                customer_gid : customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivity360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Work-InProgress'));
        }
        $scope.forwardview360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

          
            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag : bankalert_flag,
                bankalert2allocated_gid : bankalert2allocated_gid,
                customer_gid : customer_gid
            }
        var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivityForward360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Forward'));
        }
        $scope.taggedticketview360 = function (val) {
            $scope.servicerequest_gid = val;            
            var val2 = "N";
            $location.url('app/osdTrnMyTicketTag?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&RequestCompletedFlag=' + val2 + '&lstab=Tagged-Ticket'));
        }
        //$scope.transferview360 = function (val) {
        //    $scope.servicerequest_gid = val;
        //    $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
        //    localStorage.setItem('RequestCompletedFlag', 'N');
        //    $location.url('app/osdTrnMyActivityTransfer?lstab=Transfer-Ticket');
        //}
        $scope.transferview360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

        
            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag : bankalert_flag,
                bankalert2allocated_gid : bankalert2allocated_gid,
                customer_gid : customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestTransferView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivityTransfer?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Transfer-Ticket'));
        }
        $scope.completedview360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
                              
           
            var val5 = "Y";
            $location.url('app/osdTrnMyActivityComplete?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Completed'));
        }
        $scope.closedview360 = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

         
            
            var val5 = "Y";
            $location.url('app/osdTrnMyActivityComplete?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lstab=Closed'));
        }

        $scope.getApprovalRequest = function (servicerequest_gid,val) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {
                    
                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid)
                {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function(cboapproval_member)
                {
                        var params = {
                            approvalgid: $scope.cboapproval_member.employee_gid,
                            approvalname: $scope.cboapproval_member.employee_name,
                            servicerequest_gid: servicerequest_gid,
                        }

                            lockUI();
                            var url = "api/OsdTrnMyTicket/TempApprovalMember";
                            SocketService.post(url, params).then(function (resp) {
                               
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                      
                                    });
                                    unlockUI();
                                    $scope.current = $state.current.name;
                                    ScopeValueService.store("dataldCtrl", $scope);
                                    //$state.go('app.pageredirect');
                                    $scope.cboapproval_member = "";
                                    var params = {
                                        servicerequest_gid: servicerequest_gid
                                    }
                                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                                    SocketService.getparams(url, params).then(function (resp) {
                                        $scope.approvalmember = resp.data.approvalmember;
                                    });

                                    var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                                    SocketService.getparams(url, params).then(function (resp) {
                                        $scope.employee_list = resp.data.employeelist;
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    unlockUI();

                                }
                            });
                   
                 
                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid
                    }
                    
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            if (val == "alloted")
                            {
                                activate();                                
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Alloted'));
                            }
                            else if (val == "work")
                            {
                                activate();
                                work_inprogress();
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Work-InProgress'));
                            }
                            else if (val == "forward") {
                                activate();
                                forward_request();
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Forward'));
                            }
                           
                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                           
                        }
                    });
                }
            }
        }


        $scope.getReApprovalRequest = function (servicerequest_gid,val) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            if (val == "alloted") {
                                activate();
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Alloted'));
                            }
                            else if (val == "work") {
                                activate();
                                work_inprogress();
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Work-InProgress'));
                            }
                            else if (val == "forward")
                            {
                                activate();
                                forward_request();
                                $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Forward'));
                            }
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

    // Transfer Allocation in Allotted Tab
        $scope.TransferAllocation = function (servicerequest_gid, assigned_team, assigned_member, assigned_membergid, assigned_supportteamgid) {
       
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });

                $scope.onselectedchangeteam = function (team_name) {
                  
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid
                    }
                    var url = 'api/OsdMstSupportTeam/GetTeamMemberExcept';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.teamSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_member,
                        assigned_membergid: assigned_membergid,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();                          
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

   // Transfer Allocation in Work In Progress Tab
        $scope.TransferAllocationwithRemarks = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid) {
          
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationwithremarksmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });

                $scope.onselectedchangeteam = function (team_name) {
                   
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid
                    }
                    var url = 'api/OsdMstSupportTeam/GetTeamMemberExcept';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });
                // TransferAllocationremarks Submit Event
                $scope.teamSubmitremarks = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                          
                            activate();
                            $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=Work-InProgress'));
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            unlockUI();
                        }
                    });
                }
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }
      }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnMyTicketWorkinprogress360', osdTrnMyTicketWorkinprogress360);

    osdTrnMyTicketWorkinprogress360.$inject = ['$rootScope', '$scope', '$modal', '$state', 'SweetAlert', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService','cmnfunctionService'];

    function osdTrnMyTicketWorkinprogress360($rootScope, $scope, $modal, $state, SweetAlert, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $filter, ngTableParams, $resource, $timeout, ngTableDataService,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnMyTicketWorkinprogress360';

        activate();

        function activate() {
            lockUI();
            var url = window.location.href;
            var relpath = url.split("lstab=");
            $scope.relpath1 = relpath[1];
            unlockUI();
        }
        $scope.back = function (relpath1) {
            $location.url('app/osdTrnMyTicket?hash=' + cmnfunctionService.encryptURL('lstab=' + relpath1));
        }
    }
})();

(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnRejectedRequestSummaryController', osdTrnRejectedRequestSummaryController);

        osdTrnRejectedRequestSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnRejectedRequestSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnRejectedRequestSummaryController';
        var lstab = $location.search().lstab;
        activate();

        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.close_count = resp.data.close_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });

         
            var url = "api/OsdTrnServiceRequest/GetRejectedSummary";
            SocketService.get(url).then(function (resp) {
                $scope.rejectedsummary = resp.data.rejectedlist;
                unlockUI();
            });

        }

         // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }
        
        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }

        

        //Cancel Activity
      $scope.Cancel_request = function () {
       $state.go('app.osdTrnCancelledRequestSummary');
       }
      
        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=rejectrequest'));
        }
        
        $scope.viewservicerequest = function (servicerequest_gid, request_status) {

            $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid  + '&lspage=rejectedrequest'));
        }
    }
})();
(function () {
    'use strict';


    angular
        .module('angle')
        .controller('osdTrnReopenRequestSummaryController', osdTrnReopenRequestSummaryController);

        osdTrnReopenRequestSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnReopenRequestSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnReopenRequestSummaryController';
        var lstab = $location.search().lstab;
        activate();

        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.close_count = resp.data.close_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });

         
            var url = "api/OsdTrnServiceRequest/GetReopenSummary";
            SocketService.get(url).then(function (resp) {
                $scope.reopenactivitysummary = resp.data.reopendtl;
                unlockUI();
            });

        }

         // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }
        
        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
        

       //Cancel Activity
     $scope.Cancel_request = function () {
    $state.go('app.osdTrnCancelledRequestSummary');
     }

        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=reopenactivity'));
        }
      
        $scope.viewreopenrequest = function (servicerequest_gid, request_status) {
            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestViewUpdate';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });

            if (request_status == 'Completed') {
                var val = "Y";
                $location.url('app/osdTrnServiceRequestReopenView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=reopenactivity'));
                
            }
            else if (request_status == 'Closed') {
                var val = "C";
                $location.url('app/osdTrnServiceRequestReopenView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=reopenactivity'));
               
            }
            else {
                var val = "N";
                $location.url('app/osdTrnServiceRequestReopenView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=reopenactivity'));
               
            }
          
           
        }
       
        $scope.getApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid,
                        approvalreopen_flag: 'Y',

                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.getReApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid,
                        approvalreopen_flag: 'Y',
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnRHApprovalViewController', osdTrnRHApprovalViewController);

    osdTrnRHApprovalViewController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnRHApprovalViewController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnRHApprovalViewController';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var relpath1 = relPath[1];
        activate();
        
        function activate() {
            var param = {
                bankalertrefundapprl_gid: localStorage.getItem('bankalertrefundapprl_gid')
            }            
            var url = 'api/OsdTrnRequestApproval/GetRHApprovaldetails';
            lockUI();
            SocketService.getparams(url, param).then(function (resp) {
                $scope.ref_no = resp.data.ref_no;
                $scope.customerurn = resp.data.customerurn;
                $scope.customername = resp.data.customername;
                $scope.assignedrmname = resp.data.assignedrmname;
                $scope.bankalertrefundapprl_gid = resp.data.bankalertrefundapprl_gid;
                unlockUI();
            });
            
            var param = {
                bankalert2allocated_gid: localStorage.getItem('bankalert2allocated_gid'),
                customer_gid: localStorage.getItem('customername'),
                customer_urn: localStorage.getItem('customerurn')
                             
            }
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';        
            SocketService.getparams(url,param).then(function (resp) {
                unlockUI();
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;               
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;               
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.employee_gid = resp.data.employee_gid;
                $scope.relationshipmanager_gid = resp.data.relationshipmanager_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;                
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                unlockUI();            
            });
            var param = {
                bankalert2allocated_gid: localStorage.getItem('bankalert2allocated_gid'),
            }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: localStorage.getItem('bankalert2allocated_gid'),
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
        }

        $scope.rh_approve = function () {
       
            var params = {

                rh_remarks: $scope.rh_txtremarks,
                bankalertrefundapprl_gid: $scope.bankalertrefundapprl_gid,                 
            }
            var url = 'api/OsdTrnRequestApproval/PostRHApprovalUpdate';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.myApproval');
                    activate();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

     }
     $scope.rh_reject = function () {
       
        var params = {

            rh_remarks: $scope.rh_txtremarks,
            bankalertrefundapprl_gid: $scope.bankalertrefundapprl_gid,                 
        }
        var url = 'api/OsdTrnRequestApproval/PostRHApprovalReject';
        lockUI();
        SocketService.post(url, params).then(function (resp) {
            unlockUI();
            if (resp.data.status == true) {

                Notify.alert(resp.data.message, {
                    status: 'success',
                    pos: 'top-center',
                    timeout: 3000
                });
                $state.go('app.myApproval');
                activate();
            }
            else {
                Notify.alert(resp.data.message, {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

        });

        }

        $scope.back = function () {
            $state.go('app.myApproval');
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnServiceRequestAdd', osdTrnServiceRequestAdd);

    osdTrnServiceRequestAdd.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];


    function osdTrnServiceRequestAdd($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnServiceRequestAdd';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var lspage = searchObject.lspage;
        activate();

        function activate() {
           

            var url = 'api/OsdTrnServiceRequest/GetEmployees';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
                unlockUI();
            });

            var url = 'api/OsdTrnServiceRequest/tempdelete';
            SocketService.get(url).then(function (resp) {
            });

            var url = 'api/OsdMstDepartmentManagement/GetActivaterequestdept';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.deptmasterlist = resp.data.deptlist;

                unlockUI();
            });
        }
     

        $scope.titlename = function (string) {
            if (string.length >= 150) {
                $scope.message = "Maximum 150 characters Length";
            }
            else {
                $scope.message = ""
            }
        }
        $scope.onselectdept = function (department_gid) {
            var params = {
                department_gid: department_gid.department_gid
            }         
            var url = 'api/OsdMstDepartmentManagement/GetDeptActivityList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.activity_list = resp.data.activitydtl;
            });
        }

        $scope.submitserviceRequest = function () {
            // var editor = new FroalaEditor('div#froala-editor', {}, function () { })
            // $scope.viewFroala = editor.html.get();
            // var remarks = $($scope.viewFroala).text();
            // console.log('s' + $scope.viewFroala);
                      
            // if ((editor.core.isEmpty())) {
            //     Notify.alert('Enter Request Description', {
            //         status: 'warning',
            //         pos: 'top-center',
            //         timeout: 3000
            //     });
            // }
            // else {
                var params = {
                    activitymaster_gid: $scope.cboactivity.activitymaster_gid,
                    activity_name: $scope.cboactivity.activity_name,
                    request_title: $scope.request_title,
                    request_description: $scope.request_description,
                    // request_description: $scope.viewFroala,
                    tagmemberdtl: $scope.tagmember_list,
                    department_gid: $scope.cbodepartment.department_gid,
                    department_name: $scope.cbodepartment.department_name
                }

                lockUI();
                var url = "api/OsdTrnServiceRequest/PostServiceRequest"
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.osdTrnServiceRequestSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            // }
              

            
          
        }


        $scope.ServiceRequestDocumentUpload = function () {
                       
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
                //document.getElementById('fp').innerHTML =
                //    'Total Files: <b>' + fi.files + '</b></br >';
                
                var frm = new FormData();
                //frm.append('allocationdtl_gid', 'RSK001')
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                  /*  frm.append('project_flag', "Default");*/
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    //document.getElementById('fp').innerHTML =
                    //    document.getElementById('fp').innerHTML + '<br /> ' + fname;
                        
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "Default");

                        if (IsValidExtension == false) {
                                Notify.alert("File format is not supported..!", {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                return false;
                            }
                }
                frm.append('project_flag', "Default");
                lockUI(); 
                var url = 'api/OsdTrnServiceRequest/RequestDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.upload_list = resp.data.upload_list;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }
        }

        $scope.uploaddocumentcancel = function (tmp_documentGid) {
            lockUI();
            var params = {
                tmp_documentGid: tmp_documentGid
            }
            var url = 'api/OsdTrnServiceRequest/GettmpDocumentDelete';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.upload_list = resp.data.upload_list;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                unlockUI();
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }

       

        // Back Code Starts
        $scope.cancel = function () {
            if (lspage == "myrequest") {
                $location.url('app/osdTrnServiceRequestSummary');
            }
            else if (lspage == "taggedrequest") {
                $location.url('app/osdTrnTaggedRequestSummary');
            }
            else if (lspage == "forwardrequest") {
                $location.url('app/osdTrnForwardTransferSummary');
            }
            else if (lspage == "reopenactivity") {
                $location.url('app/osdTrnReopenRequestSummary');
            }
            else if (lspage == "rejectrequest") {
                $location.url('app/osdTrnReopenRequestSummary');
            }
            else if (lspage == "closerequest") {
                $location.url('app/osdTrnCloseRequestSummary');
            }
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
      
  
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnServiceRequestForwardView', osdTrnServiceRequestForwardView);

    osdTrnServiceRequestForwardView.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', '$sce', 'DownloaddocumentService','cmnfunctionService'];

    function osdTrnServiceRequestForwardView($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, $sce, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnServiceRequestForwardView';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.customer_urn;
        var lstab = searchObject.lstab;
        var CompletedFlag = searchObject.CompletedFlag;
        activate();

        function activate() {
            $scope.BankAlert_View = false;
            $scope.servicerequest_gid = servicerequest_gid;
          

            if( bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }
            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urn;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                unlockUI();               
            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: $scope.ticketref_no,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;

            });

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
            });


            $scope.completedflag = CompletedFlag
            $scope.servicerequest_gid = servicerequest_gid
            lockUI();
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                // $('#request_description').html(resp.data.request_description);
                $scope.request_status = resp.data.request_status;
                $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.rejected_flag = resp.data.rejected_flag;
                $scope.cancel_flag = resp.data.cancel_flag;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y" || $scope.completedflag == "Y" || $scope.closed_flag == "Y") {
                    $scope.fileuploaddtls = false;
                }
                else {
                    $scope.fileuploaddtls = true;
                }
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y") {
                    $scope.communicationdtls = false;
                }
                else {
                    $scope.communicationdtls = true;
                }
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;

            });

            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, params).then(function (resp) {

                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_date = resp.data.forward_date;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_flag = resp.data.forward_flag;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.forwardreopendocumentdtl = resp.data.forwardreopendocumentdtl;
                $scope.reopendtl = resp.data.reopendtl;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
                $scope.lblrofilename = resp.data.rofilename;
                $scope.lblrofilepath = resp.data.rofilepath;
                $scope.lblfrfilename = resp.data.frfilename;
                $scope.lblfrfilepath = resp.data.frfilepath;

                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }
                if ($scope.forward_flag == "Y") {
                    $scope.forward = false;
                    $scope.forwarddtls = true;
                }
                else {
                    $scope.forward = true;
                    $scope.forwarddtls = false;
                }
            });
           
            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                unlockUI();
            });

            var url = "api/OsdTrnMyTicket/GetMultipleForward"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                $scope.forwardreopendtl = resp.data.forwardreopendtl;
                unlockUI();
            });
            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });

            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.complefilename = resp.data.complefilename;
                $scope.complefilepath = resp.data.complefilepath;
                unlockUI();
            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.COMdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }
           
            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnServiceRequest/PostSendRequestorForward";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        // DOc Upload
        $scope.ServiceRequestForwardDocUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                var frm = new FormData();
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                  
                }
              
                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/ForwardViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                    fwdfilename = resp.data.fwdfilename;
                    fwdfilepath = resp.data.fwdfilepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }

        }

        $scope.uploaddocumentdelete = function (forwardreqdocument_gid) {
            lockUI();
            var params = {
                forwardreqdocument_gid: forwardreqdocument_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetTrnForwardDocDelete';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                unlockUI();
            });
        }

        $scope.requestClosed = function () {
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            lockUI();
            var url = 'api/OsdTrnServiceRequest/GetClosedRequest';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $location.url('app/osdTrnServiceRequestSummary');
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }

        $scope.requestback = function () {
            $location.url('app/osdTrnForwardTransferSummary');
        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

    // Previous History Code 
        $scope.tickethistory = function (servicerequest_gid) {
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
   // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {
          
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("requestreopen_gid=" + requestreopen_gid + "&servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('osdTrnServiceRequestSummary', osdTrnServiceRequestSummary);

    osdTrnServiceRequestSummary.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnServiceRequestSummary($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnServiceRequestSummary';
        var lstab = $location.search().lstab;
        activate();
        lockUI();
        function activate() {
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.servicerequestsummary = resp.data.servicerequestdtl;
                unlockUI();
            });           

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.close_count = resp.data.close_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });

        }

         // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }

        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
        //Cancel Activity
        $scope.Cancel_request = function () {
            $state.go('app.osdTrnCancelledRequestSummary');
        }
        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=myrequest'));
        }
        
        $scope.viewservicerequest = function (servicerequest_gid, request_status) {

            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestViewUpdate';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
          
            if (request_status == 'Completed')
            {
                var val = "Y";
                $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=myactivity'));
              
            }
            else if (request_status == 'Closed') {
                var val = "C";
                $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=myactivity'));
               
            }
            else {
                var val = "N";
                $location.url('app/osdTrnServiceRequestView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&lspage=myactivity'));
               
            }
          
          


        }       

        $scope.cancelservicerequest = function (servicerequest_gid) {
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Cancel the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, Cancel it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = "api/OsdTrnServiceRequest/ServiceRequestDelete"
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            
                            unlockUI();
                            activate();
                            
                            $state.go('app.osdTrnCancelledRequestSummary');
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                    });
                    SweetAlert.swal('Cancelled Successfully!');
                }

            });
        };


        $scope.getApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                SocketService.getparams(url, params).then(function (resp) {

                });
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                SocketService.getparams(url, params).then(function (resp) {

                });

                $scope.ok = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid
                    }
                    var url = 'api/OsdTrnMyTicket/TmpAllMembersDeleteFn';
                    SocketService.getparams(url, params).then(function (resp) {
    
                    });
                    modalInstance.close('closed');
                    
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid,
                        approvalrequest_flag: 'Y',

                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.getReApprovalRequest = function (servicerequest_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid,
                        approvalrequest_flag: 'Y',
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnServiceRequestTaggedView', osdTrnServiceRequestTaggedView);

    osdTrnServiceRequestTaggedView.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnServiceRequestTaggedView($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnServiceRequestTaggedView';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;       
        var lstab = searchObject.lstab;
        var CompletedFlag = searchObject.CompletedFlag;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.customer_urn;
        activate();

        function activate() {
            $scope.completedflag = CompletedFlag;
            $scope.servicerequest_gid = servicerequest_gid;
            lockUI();
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_by = resp.data.raised_by;
                $scope.raised_department = resp.data.raised_department;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.request_status = resp.data.request_status;
                $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.employee_number = resp.data.employee_number;
                $scope.level_one = resp.data.level_one;
                $scope.lblsrfilename = resp.data.srfilename;
                $scope.lblsrfilepath = resp.data.srfilepath;
                $scope.reopenfilename = resp.data.reopenfilename;
                $scope.reopenfilepath = resp.data.reopenfilepath;
            });
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.lblsource = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;



            });
            var param = {
                banktransc_gid: $scope.ticketref_no,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;

            });
           
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.rejected_flag = resp.data.rejected_flag;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.cancel_flag = resp.data.cancel_flag;
                $scope.closed_flag = resp.data.closed_flag;
                $scope.cancel_date = resp.data.cancel_date;
                $scope.rejected_date = resp.data.rejected_date;
                $scope.rejected_by = resp.data.rejected_by;
                $scope.rejected_remarks = resp.data.rejected_remarks;
                $scope.reopen_flag = resp.data.reopen_flag;

                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }

                $scope.completed_flag = resp.data.completed_flag;
                if ($scope.completed_flag == "Y") {
                    
                    $scope.completeddtls = false;
                }
                else {
                    
                    $scope.completeddtls = true;
                }

                if ($scope.cancel_flag == "Y") {
                    $scope.canceldtls = true;
                }
                else {
                    $scope.canceldtls = false;
                }
                if ($scope.rejected_flag == "Y") {
                    $scope.Rejectdtls = true;
                }
                else {
                    $scope.Rejecteddtls = false;
                }
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y" || $scope.completedflag == "Y" || $scope.closed_flag == "Y") {
                    $scope.fileuploaddtls = false;
                }
                else {
                    $scope.fileuploaddtls = true;
                }
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y") {
                    $scope.communicationdtls = false;
                }
                else {
                    $scope.communicationdtls = true;
                }

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, params).then(function (resp) {
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_date = resp.data.forward_date;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_flag = resp.data.forward_flag;
                $scope.reopendtl = resp.data.reopendtl;
            });

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;

            });

            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;
                unlockUI();
            });

            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
               
                unlockUI();
            });
            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });
            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
var param = {
bankalert2allocated_gid: bankalert2allocated_gid,
customer_gid: customer_gid,
customer_urn: customer_urn,



}



SocketService.getparams(url, param).then(function (resp) {
    $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
    $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
    $scope.lblsource = resp.data.source;
    $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
    $scope.lblRemitt_Info = resp.data.Remitt_Info;
    $scope.lblRemit_Name = resp.data.Remit_Name;
    $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
    $scope.lblAmount = resp.data.Amount;
    $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
    $scope.lblUtr_No = resp.data.Utr_No;
    $scope.lblPay_Mode = resp.data.Pay_Mode;
    $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
    $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
    $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
    $scope.lblTxn_Date = resp.data.Txn_Date;
    $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
    $scope.lblREF1 = resp.data.REF1;
    $scope.lblREF2 = resp.data.REF2;
    $scope.lblREF3 = resp.data.REF3;
$scope.lblticketref_no = resp.data.ticketref_no;
$scope.lblemail_from = resp.data.email_from;
$scope.lblemail_date = resp.data.email_date;
$scope.lblemail_subject = resp.data.email_subject;
$scope.lblemail_content = resp.data.email_content;
$scope.lblaging = resp.data.aging;
$scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
$scope.lblallocated_status = resp.data.allocated_status;
$scope.lblcustomer_urn = resp.data.customer_urnname;
$scope.lblcustomer_name = resp.data.customer_name;
$scope.lblvertical = resp.data.vertical;
$scope.lblconstitution = resp.data.constitution;
$scope.lblcontact_person = resp.data.contact_person;
$scope.lblzonal_head = resp.data.zonalhead_name;
$scope.lblbusiness_head = resp.data.businesshead_name;
$scope.lblrm_name = resp.data.rm_name;
$scope.lblcluster_manager = resp.data.cluster_manager;
$scope.lblcredit_manager = resp.data.credit_manager;
$scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
$scope.lblriskmanager_name = resp.data.riskmanager_name;
$scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
$scope.lblmobile_no = resp.data.mobile_no;
$scope.lbladdress_type = resp.data.address_type;
$scope.lbladdressline1 = resp.data.addressline1;
$scope.lbladdressline2 = resp.data.addressline2;
$scope.lblcity = resp.data.city;
$scope.lblstate = resp.data.state;
$scope.lbltaluka = resp.data.taluka;
$scope.lbldistrict = resp.data.district;
$scope.lblpostal_code = resp.data.postal_code;
$scope.lblcountry = resp.data.country;
$scope.lblemail_cc = resp.data.email_cc;
$scope.lblemail_bcc = resp.data.email_bcc;
$scope.lbldocument_path = resp.data.document_path;
$scope.lbldocument_name = resp.data.document_name;
$scope.lblemail_to = resp.data.email_to;
$scope.lblfrom_mailaddress = resp.data.from_mailaddress;
$scope.lbloperation_status = resp.data.operation_status;
$scope.servicerequest_gid = resp.data.servicerequest_gid;
$scope.lblcustomer_name = resp.data.customername_application;
$scope.lblvertical = resp.data.vertical_name;
$scope.lblconstitution = resp.data.constitution_name;
$scope.lblcontact_person = resp.data.contactpersonfirst_name;
$scope.lblrm_name = resp.data.drm_name;
$scope.lblrelationshipmanager_name = resp.data.relationship_managername;
$scope.lblcluster_manager = resp.data.clustermanager_name;
$scope.lblcredit_manager = resp.data.creditmanager_name;
$scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
$scope.lblriskmanager_name = resp.data.risk_managername;
$scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
$scope.lblregional_head = resp.data.regionalhead_name;
$scope.lblcredithead_name = resp.data.credithead_name;
$scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
$scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
$scope.transfer_flag = resp.data.transfer_flag;
if (resp.data.operation_status == 'Completed' || resp.data.operation_status == 'Assigned')
{
var url = 'api/OsdTrnBankAlert/GetOperationStatusDtl';
var param = {
bankalert2allocated_gid: bankalert2allocated_gid,
}
SocketService.getparams(url, param).then(function (resp) {
$scope.lblassigned_remarks = resp.data.assigned_remarks;
$scope.lblassigned_date = resp.data.assigned_date;
$scope.lblassigned_toname = resp.data.assigned_toname;
$scope.lblassigned_by = resp.data.assigned_by;
$scope.document_list = resp.data.rmdocument_list;
});
var url = "api/OsdTrnMyTicket/GetRequestorlist"
var param = {
servicerequest_gid: $scope.servicerequest_gid,
}
SocketService.getparams(url, param).then(function (resp) {
$scope.requestorlist = resp.data.requestordtl;
unlockUI();
});
var param = {
servicerequest_gid: $scope.servicerequest_gid,
}
var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
SocketService.getparams(url, param).then(function (resp) {
$scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
$scope.completed_remarks = resp.data.completed_remarks;
$scope.completed_by = resp.data.completed_by;
$scope.completed_date = resp.data.completed_date;
$scope.complefilename = resp.data.complefilename;
$scope.complefilepath = resp.data.complefilepath;
unlockUI();
});



}
var param = {
servicerequest_gid: $scope.servicerequest_gid,
}
var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"



SocketService.getparams(url, param).then(function (resp) {
$scope.transferlistdtl = resp.data.transferlistdtl;
$scope.transferlistdtlreopen = resp.data.transferlistdtlreopen;
unlockUI();
});



unlockUI();
});



var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
var param = {
bankalert2allocated_gid: bankalert2allocated_gid,
}
SocketService.getparams(url, param).then(function (resp) {
$scope.lblrm_remarks = resp.data.rm_remarks;
// $('#lblrm_remarks').html(resp.data.rm_remarks);
$scope.lblrm_status = resp.data.rm_status;
$scope.lblupdated_date = resp.data.updated_date;
$scope.lblupdated_by = resp.data.updated_by;
$scope.rmdocument_list = resp.data.rmdocument_list;
$scope.lblrmhfilename = resp.data.rmhfilename;
$scope.lblrmhfilepath = resp.data.rmhfilepath;
});
var url = 'api/employee/Employee';
SocketService.get(url).then(function (resp) {
$scope.employee_list = resp.data.employee_list;
});
var url = 'api/OsdTrnBankAlert/GetticketTransferLog'
var param = {
bankalert2allocated_gid: bankalert2allocated_gid,
}
SocketService.getparams(url, param).then(function (resp) {
$scope.transferto_name = resp.data.relationshipmanager_name;
$scope.transferedinitiated_by = resp.data.transferedinitiated_by;
$scope.transferinitiated_date = resp.data.transferinitiated_date;
$scope.transfer_type = resp.data.transfer_type;
$scope.transfer_remarks = resp.data.transfer_remarks;
});
            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.complefilename = resp.data.complefilename;
                $scope.complefilepath = resp.data.complefilepath;
                unlockUI();
            });
            var  params={
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                $scope.bankalert_flag = resp.data.bankalert_flag;
                //if ($scope.bankalert_flag == "Y") {

                //    $scope.bankalert_flag = true;
                //}
                //if ($scope.bankalert_flag == "N") {

                //    $scope.bankalert_list = true;
                //}
                //else {

                //    $scope.bankalert_flag = false;
                //}
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });

            
            
        }

       
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format Not Supported!', 'danger')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnMyTicket/PostSendRequestor";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.COMdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.requestClosed = function () {
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            lockUI();
            var url = 'api/OsdTrnServiceRequest/GetClosedRequest';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $location.url('app/osdTrnServiceRequestSummary');
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }
       
        $scope.TaggedBack = function () {
            $location.url('app/osdTrnTaggedRequestSummary');
        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Previous History Code 
        $scope.tickethistory = function (servicerequest_gid) {
            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }
        // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {

            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("requestreopen_gid=" + requestreopen_gid + "&servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnServiceRequestView', osdTrnServiceRequestView);

    osdTrnServiceRequestView.$inject = ['$rootScope', '$scope', '$modal', '$state', 'SweetAlert', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService', '$sce', 'DownloaddocumentService', 'cmnfunctionService'];

    function osdTrnServiceRequestView($rootScope, $scope, $modal, $state, SweetAlert, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $filter, ngTableParams, $resource, $timeout, ngTableDataService, $sce, DownloaddocumentService,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnServiceRequestView';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var servicerequest_gid = searchObject.servicerequest_gid;
        var bankalert_flag = searchObject.bankalert_flag;
        var bankalert2allocated_gid = searchObject.bankalert2allocated_gid;
        var customer_gid = searchObject.customer_gid;
        var customer_urn = searchObject.lscustomer_urn;
        var request_refno = searchObject.request_refno;
        var lspage = searchObject.lspage;
        var brs_flag = searchObject.brs_flag;
        var CompletedFlag = searchObject.CompletedFlag;
       
        activate();

        function activate() {

            $scope.tdshow = false;
            $scope.servicerequest_gid = cmnfunctionService.decryptURL($location.search().hash).servicerequest_gid;
            $scope.completedflag = cmnfunctionService.decryptURL($location.search().hash).CompletedFlag;
            $scope.BankAlert_View = false;


            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            if (bankalert_flag == 'Y') {
                $scope.BankAlert_View = true;
                $scope.osd_View = false
            }
            else {
                $scope.BankAlert_View = false;
                $scope.osd_View = true;
            }
            var url = 'api/OsdTrnBankAlert/GetunreconAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.ticketref_no = resp.data.ticketref_no;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.customer_urn;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lblremarks = resp.data.remarks;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblvalue_date = resp.data.value_date;
                $scope.lblpayment_date = resp.data.payment_date;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbldebit_amt = resp.data.debit_amt;
                $scope.lblcredit_amt = resp.data.credit_amt;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblcreated_by = resp.data.created_by;
                $scope.lblbrs_flag = resp.data.brs_flag;
                $scope.source = resp.data.source;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;

            });

            var url = 'api/OsdTrnBankAlert/GetAllocatedDetail';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid,
                customer_urn: customer_urn,

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblkotakAPI_flag = resp.data.kotakAPI_flag;
                $scope.lbldetailsreceived_at = resp.data.detailsreceived_at;
                $scope.lblsource = resp.data.source;
                $scope.lblMaster_Acc_No = resp.data.Master_Acc_No;
                $scope.lblRemitt_Info = resp.data.Remitt_Info;
                $scope.lblRemit_Name = resp.data.Remit_Name;
                $scope.lblRemit_Ifsc = resp.data.Remit_Ifsc;
                $scope.lblAmount = resp.data.Amount;
                $scope.lblTxn_Ref_No = resp.data.Txn_Ref_No;
                $scope.lblUtr_No = resp.data.Utr_No;
                $scope.lblPay_Mode = resp.data.Pay_Mode;
                $scope.lblE_Coll_Acc_No = resp.data.E_Coll_Acc_No;
                $scope.lblRemit_Ac_Nmbr = resp.data.Remit_Ac_Nmbr;
                $scope.lblCreditdateandtime = resp.data.Creditdateandtime;
                $scope.lblTxn_Date = resp.data.Txn_Date;
                $scope.lblBene_Cust_Acname = resp.data.Bene_Cust_Acname;
                $scope.lblREF1 = resp.data.REF1;
                $scope.lblREF2 = resp.data.REF2;
                $scope.lblREF3 = resp.data.REF3;
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urnname;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonalhead_name;
                $scope.lblbusiness_head = resp.data.businesshead_name;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                $scope.lbloperation_status = resp.data.operation_status;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.lblcustomer_name = resp.data.customername_application;
                $scope.lblvertical = resp.data.vertical_name;
                $scope.lblconstitution = resp.data.constitution_name;
                $scope.lblcontact_person = resp.data.contactpersonfirst_name;
                $scope.lblrm_name = resp.data.drm_name;
                $scope.lblrelationshipmanager_name = resp.data.relationship_managername;
                $scope.lblcluster_manager = resp.data.clustermanager_name;
                $scope.lblcredit_manager = resp.data.creditmanager_name;
                $scope.lblzonal_riskmanagerName = resp.data.zonalriskmanager_name;
                $scope.lblriskmanager_name = resp.data.risk_managername;
                $scope.lblriskMonitoring_Name = resp.data.headriskmonitoring_name;
                $scope.lblregional_head = resp.data.regionalhead_name;
                $scope.lblcredithead_name = resp.data.credithead_name;
                $scope.lblcreditnationalmanager_name = resp.data.creditnationalmanager_name;
                $scope.lblcreditregionalmanager_name = resp.data.creditregionalmanager_name;
                $scope.transfer_flag = resp.data.transfer_flag;
            });

            var url = 'api/OsdTrnBankAlert/GetAllocatedDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            lockUI();
            SocketService.getparams(url, param).then(function (resp) {               
                $scope.lblticketref_no = resp.data.ticketref_no;
                $scope.lblemail_from = resp.data.email_from;
                $scope.lblemail_date = resp.data.email_date;
                $scope.lblemail_subject = resp.data.email_subject;
                $scope.lblemail_content = resp.data.email_content;
                $scope.lblaging = resp.data.aging;
                $scope.lblrelationshipmanager_name = resp.data.relationshipmanager_name;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lblcustomer_urn = resp.data.customer_urn;
                $scope.lblcustomer_name = resp.data.customer_name;
                $scope.lblvertical = resp.data.vertical;
                $scope.lblconstitution = resp.data.constitution;
                $scope.lblcontact_person = resp.data.contact_person;
                $scope.lblzonal_head = resp.data.zonal_head;
                $scope.lblbusiness_head = resp.data.business_head;
                $scope.lblrm_name = resp.data.rm_name;
                $scope.lblcluster_manager = resp.data.cluster_manager;
                $scope.lblcredit_manager = resp.data.credit_manager;
                $scope.lblzonal_riskmanagerName = resp.data.zonal_riskmanagerName;
                $scope.lblriskmanager_name = resp.data.riskmanager_name;
                $scope.lblriskMonitoring_Name = resp.data.riskMonitoring_Name;
                $scope.lblmobile_no = resp.data.mobile_no;
                $scope.lbladdress_type = resp.data.address_type;
                $scope.lbladdressline1 = resp.data.addressline1;
                $scope.lbladdressline2 = resp.data.addressline2;
                $scope.lblcity = resp.data.city;
                $scope.lblstate = resp.data.state;
                $scope.lbltaluka = resp.data.taluka;
                $scope.lbldistrict = resp.data.district;
                $scope.lblpostal_code = resp.data.postal_code;
                $scope.lblcountry = resp.data.country;
                $scope.lblemail_cc = resp.data.email_cc;
                $scope.lblemail_bcc = resp.data.email_bcc;
                $scope.lbldocument_path = resp.data.document_path;
                $scope.lbldocument_name = resp.data.document_name;
                $scope.lblemail_to = resp.data.email_to;
                $scope.lblfrom_mailaddress = resp.data.from_mailaddress;
                unlockUI();
            });
         
            
            var param = {
                banktransc_gid: request_refno
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument1 = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });
          

            var url = 'api/OsdTrnBankAlert/GetRMStatusDtl';
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblrm_remarks = resp.data.rm_remarks;
                // $('#lblrm_remarks').html(resp.data.rm_remarks);
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblupdated_date = resp.data.updated_date;
                $scope.lblupdated_by = resp.data.updated_by;
                $scope.rmdocument_list = resp.data.rmdocument_list;
                $scope.lblrmhfilename = resp.data.rmhfilename;
                $scope.lblrmhfilepath = resp.data.rmhfilepath;
                $scope.refund = $scope.lblrm_status.replace("'","");
            });




            var params = {
                servicerequest_gid: servicerequest_gid
            }
            lockUI();
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.request_refno = resp.data.request_refno;
                $scope.raised_date = resp.data.raised_date;
                $scope.raised_department = resp.data.raised_department;
                $scope.raised_by = resp.data.raised_by;
                $scope.activity_name = resp.data.activity_name;
                $scope.request_title = resp.data.request_title;
                $scope.request_description = resp.data.request_description;
                // $('#request_description').html(resp.data.request_description);
                $scope.request_status = resp.data.request_status;
                $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.transfer_flag = resp.data.transfer_flag;
                $scope.assigned_team = resp.data.assigned_team;
                $scope.assigned_to = resp.data.assigned_to;
                $scope.assigned_status = resp.data.assigned_status;
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopen_reason = resp.data.reopen_reason;
                $scope.reopened_date = resp.data.reopened_date;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.reopen_flag = resp.data.reopen_flag;
                $scope.forward_flag = resp.data.forward_flag;
                $scope.forward_remarks = resp.data.forward_remarks;
                $scope.forward_to = resp.data.forward_to;
                $scope.forward_date = resp.data.forward_date;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                $scope.rejected_flag = resp.data.rejected_flag;
                $scope.cancel_flag = resp.data.cancel_flag;
                $scope.cancel_date = resp.data.cancel_date;
                $scope.rejected_date = resp.data.rejected_date;
                $scope.rejected_by = resp.data.rejected_by;
                $scope.rejected_remarks = resp.data.rejected_remarks;
                $scope.employee_mobileno = resp.data.employee_mobileno;
                $scope.level_one = resp.data.level_one;
                $scope.employee_number = resp.data.employee_number;
                $scope.baselocation_name = resp.data.baselocation_name;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                $scope.reopen1filename = resp.data.reopenfilename;
                $scope.reopen1filepath = resp.data.reopenfilepath;
                $scope.comfilename = resp.data.comfilename;
                $scope.comfilepath = resp.data.comfilepath;

                if ($scope.reopen_flag == "Y") {
                    $scope.reopendetails = true;
                    $scope.reqdtls = false;
                }
                else {
                    $scope.reopendetails = false;
                    $scope.reqdtls = true;
                }

                $scope.completed_flag = resp.data.completed_flag;
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = false;
                }
                else {

                    $scope.completeddtls = true;
                }

                if ($scope.forward_flag == "Y") {

                    $scope.forwarddtls = true;

                }
                else {

                    $scope.forwarddtls = false;
                }

                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = false;
                }
                else {

                    $scope.closeddtls = true;
                }
                if ($scope.cancel_flag == "Y") {
                    $scope.canceldtls = true;
                }
                else {
                    $scope.canceldtls = false;
                }
                if ($scope.rejected_flag == "Y") {
                    $scope.Rejectdtls = true;
                }
                else {
                    $scope.Rejecteddtls = false;
                }
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y" || ($scope.completed_flag == "Y" && $scope.reopen_flag != "Y") || $scope.closed_flag == "Y") {
                    $scope.fileuploaddtls = false;
                }
                else {
                    $scope.fileuploaddtls = true;
                }
                if ($scope.rejected_flag == "Y" || $scope.cancel_flag == "Y") {
                    $scope.communicationdtls = false;
                }
                else {
                    $scope.communicationdtls = true;
                }

            });
            var url = 'api/OsdTrnMyTicket/GetBusinessUnitStatusMyActivityList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.businessstatusunitmyactivity_list = resp.data.businessstatusunitmyactivity_list;

            });
            var url = 'api/OsdTrnMyTicket/GetservicerequestactivityhistoryList';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestactivityhistory_list = resp.data.servicerequestactivityhistory_list;

            });
            var url = "api/OsdTrnMyTicket/GetAllotted360";
            SocketService.getparams(url, params).then(function (resp) {
                $scope.reopenrequestdocumentdtl = resp.data.reopenrequestdocumentdtl;
                $scope.reopendtl = resp.data.reopendtl;
                $scope.alloteddocumentdtl = resp.data.alloteddocumentdtl;
                $scope.forwarddocumentdtl = resp.data.forwarddocumentdtl;
                $scope.lblallotfilename = resp.data.allofilename;
                $scope.lblallotfilepath = resp.data.allofilepath;
                $scope.reopenfilename = resp.data.reopenfilename;
                $scope.reopenfilepath = resp.data.reopenfilepath;
                $scope.fwdfilename = resp.data.fwdfilename;
                $scope.fwdfilepath = resp.data.fwdfilepath;
                $scope.frfilename = resp.data.frfilename;
                $scope.frfilepath = resp.data.frfilepath;
            });
          

            //var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.approvaldetails = resp.data.approvaldetails;
            //    $scope.employee_gid = resp.data.employee_gid;

            //    if (resp.data.approval_status == 'Pending' && $scope.employee_gid != null)
            //    {
            //        $scope.tdshow = true;
            //    }
            //    if ($scope.approvaldetails != null) {

            //        var getapproval = $scope.approvaldetails.find(function (v) { return v.approval_status === "Pending" });
            //        var getpendingapplicant = $scope.individual_list.find(function (v) { return v.contact_status === "Pending" });
            //        if ((getapplicant && getapplicant.contact_gid) && (getpendingapplicant == undefined || getpendingapplicant == "")) {
            //        if (getapproval && $scope.employee_gid != null) {
            //            $scope.tdshow = true;


            //        }
            //    }
              

            //});

            var url = "api/OsdTrnMyTicket/GetApprovalDtls"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.approvaldetails = resp.data.approvaldetails;
                $scope.employee_gid = resp.data.employee_gid;

            });
            var url = "api/OsdTrnMyTicket/GetAssetDtls"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.assetdetails = resp.data.assetdetails;
                $scope.employee_gid = resp.data.employee_gid;

            });

            var url = "api/OsdTrnMyTicket/Gettempclear"
            SocketService.getparams(url, params).then(function (resp) {

            });
            var url = "api/OsdTrnMyTicket/GetRequestorlist"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.requestorlist = resp.data.requestordtl;
                $scope.requestordtlhistory = resp.data.requestordtlhistory;
                unlockUI();
            });


            var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.transferlistdtl = resp.data.transferlistdtl;

            });

            var url = "api/OsdTrnMyTicket/GetMultipleForward"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.forwarddtl = resp.data.forwarddtl;
                unlockUI();
            });

            var url = 'api/employee/employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
                unlockUI();
            });

            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtl = resp.data.allocatelistdtl;

            });
            var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"
            SocketService.getparams(url, params).then(function (resp) {
                $scope.allocatelistdtlreopen = resp.data.allocatelistdtlreopen;

            });

            var url = "api/OsdTrnMyTicket/GetCompletedDetails"

            SocketService.getparams(url, params).then(function (resp) {
                $scope.completed_flag = resp.data.completed_flag;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                unlockUI();
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.tagmemberdtl = resp.data.tagmemberdtl;
                $scope.completed_flag = resp.data.completed_flag;
                $scope.closed_by = resp.data.closed_by;
                $scope.closed_date = resp.data.closed_date;
                $scope.closed_flag = resp.data.closed_flag;
                if ($scope.closed_flag == "Y") {

                    $scope.closeddtls = true;
                }
                else {

                    $scope.closeddtls = false;
                }
                if ($scope.completed_flag == "Y") {

                    $scope.completeddtls = true;
                }
                else {

                    $scope.completeddtls = false;
                }
            });

            var params = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnMyTicket/GetCompletedDetails';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.completerequestdocumentdtl = resp.data.completerequestdocumentdtl;
                $scope.completed_remarks = resp.data.completed_remarks;
                $scope.completed_by = resp.data.completed_by;
                $scope.completed_date = resp.data.completed_date;
                $scope.lblcompfilename = resp.data.compfilename;
                $scope.lblcompfilepath = resp.data.compfilepath;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHApprovalDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhapprovaldetails = resp.data.rhapprovaldetails;
                unlockUI();
            });
            var param = {
                bankalert2allocated_gid: bankalert2allocated_gid,
            }
            var url = "api/OsdTrnRequestApproval/GetRHRejectedDtlsByToken"
            SocketService.getparams(url, param).then(function (resp) {
                $scope.rhrejecteddetails = resp.data.rhrejecteddetails;
                unlockUI();
            });
            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: request_refno
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });

        }

        $scope.CancelApprovalPerson = function (approval_token) {

            var modalInstance = $modal.open({
                templateUrl: '/cancelmembermodal.html',
                controller: ModalInstanceCtrl,
                backdrop: "static",
                keyboard:false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                lockUI();
                var param = {
                    approval_token: approval_token
                };
                var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.request_title = resp.data.request_title;
                    $scope.request_refno = resp.data.request_refno;
                    $scope.activity_name = resp.data.activity_name;
                    $scope.assigned_dtl = resp.data.assigned_dtl;
                    $scope.getapproval_remarks = resp.data.getapproval_remarks;
                    $scope.hierary_level = resp.data.hierary_level;
                    $scope.servicerequest_gid = resp.data.servicerequest_gid;
                    $scope.approval_type = resp.data.approval_type;
                    unlockUI();
                });


                $scope.CancelMemberSubmit = function () {
                    var hierarylevel = $scope.hierary_level;
                    var level = ++hierarylevel;

                    var params = {
                        approval_token: approval_token,
                        approval_remarks: $scope.txtremarks,
                        hierary_level: level,
                        servicerequest_gid: $scope.servicerequest_gid,
                        approval_type: $scope.approval_type
                    }
                    lockUI();
                    var url = "api/OsdTrnRequestApproval/PostRequestCancelled";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            activate();

                        }
                    });
                }
            }
            $scope.tdshow = false;
        }

        //$scope.download = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.download = function (val1, val2) {
        //var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //var link = document.createElement("a");
        //link.href = relpath2;
        //link.setAttribute('download', val2);
        //link.click();
        //}
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.REOPdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
         $scope.COdownloadall = function (val1, val2) {

            for ( var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

         }
         $scope.COMdownloadall = function (val1, val2) {

             for ( var i = 0; i < val2.length; i++) {
                 //  console.log(array[i]);
                 DownloaddocumentService.Downloaddocument(val1, val2[i]);
             }

         }
        $scope.FWdownloadall = function (val1, val2) {

            for ( var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.FREdownloadall = function (val1, val2) {

            for ( var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.downloadall2 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.rmdownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploadallocation = function (val, val1, name) {
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

               if (IsValidExtension == false) {
                    Notify.alert("File format is not supported..!", {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    return false;
                }

            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            frm.append('document_title', $scope.txtdocument_title);
            frm.append('servicerequest_gid', servicerequest_gid);
            frm.append('project_flag', "Default");
            $scope.uploadfrm = frm;
            var url = 'api/OsdTrnMyTicket/ConversationDocUpload';
            lockUI();
            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                $("#addupload").val('');
                $scope.txtdocument_title = '';
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Document Uploaded Successfully..!!', 'success')

                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    unlockUI();
                    Notify.alert('File Format is Not Supported!','danger')

                }

            });

        }

        //$scope.downloadsdocument = function (val1, val2) {
        //    //console.log(val1, val2);
        //    var phyPath = val1;

        //    var relPath = phyPath.split("EMS");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    var name = val2.split(".")
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;

        //    link.click();
        //}
        //    $scope.downloadsdocument = function (val1, val2) {
        //    var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //    var link = document.createElement("a");
        //    link.href = relpath2;
        //    link.setAttribute('download', val2);
        //    link.click();
        //}
        $scope.downloadsdocument = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.sendrequestorclick = function () {
            var params = {
                servicerequest_gid: servicerequest_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/OsdTrnServiceRequest/PostSendRequestorCreate";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var url = "api/OsdTrnMyTicket/GetRequestorlist"
                    var param = {
                        servicerequest_gid: servicerequest_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.requestorlist = resp.data.requestordtl;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });

                    $scope.txtqueries = "";
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        //$scope.downloads = function (val1, val2) {
        //    var phyPath = val1;
        //    var relPath = phyPath.split("StoryboardAPI");
        //    var relpath1 = relPath[1].replace("\\", "/");
        //    var hosts = window.location.host;
        //    var prefix = location.protocol + "//";
        //    var str = prefix.concat(hosts, relpath1);
        //    var link = document.createElement("a");
        //    link.download = val2;
        //    var uri = str;
        //    link.href = uri;
        //    link.click();
        //}
        //$scope.downloads = function (val1, val2) {
        //var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
        //var link = document.createElement("a");
        //link.href = relpath2;
        //link.setAttribute('download', val2);
        //link.click();
        //}
        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.uploaddocumentdelete = function (servicereqdocument_gid) {
            lockUI();
            var params = {
                servicereqdocument_gid: servicereqdocument_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetTrnDocumentDelete';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                $scope.lblfilename = resp.data.filename;
                $scope.lblfilepath = resp.data.filepath;
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                unlockUI();
            });
        }

        $scope.ServiceRequestViewDocumentUpload = function () {
            lockUI();
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {

                //document.getElementById('fp').innerHTML =
                //    'Total Files: <b>' + fi.files + '</b></br >';

                var frm = new FormData();
                //frm.append('allocationdtl_gid', 'RSK001')
                for (var i = 0; i <= fi.files.length - 1; i++) {

                    frm.append(fi.files[i].name, fi.files[i])
                    $scope.uploadfrm = frm;
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    //document.getElementById('fp').innerHTML =
                    //    document.getElementById('fp').innerHTML + '<br /> ' + fname;
                }

                frm.append('servicerequest_gid', servicerequest_gid);
                frm.append('project_flag', "Default");
                var url = 'api/OsdTrnServiceRequest/RequestViewDocUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');
                    $scope.servicerequestdocumentdtl = resp.data.servicerequestdocumentdtl;
                    $scope.lblfilename = resp.data.filename;
                    $scope.lblfilepath = resp.data.filepath;
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'info')
            }

        }

        $scope.requestClosed = function () {
            var params = {
                servicerequest_gid: servicerequest_gid
            }
            lockUI();
            var url = 'api/OsdTrnServiceRequest/GetClosedRequest';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $location.url('app/osdTrnServiceRequestSummary');
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }

        $scope.requestback = function () {
            if (lspage == "reopenactivity") {
                $location.url('app/osdTrnReopenRequestSummary');
            }
            else if (lspage == "closeactivity") {
                $location.url('app/osdTrnCloseRequestSummary');
            }
            else if (lspage == "rejectedrequest") {
                $location.url('app/osdTrnRejectedRequestSummary');
            }
            else if (lspage == "cancelledrequest") {
                $location.url('app/osdTrnCancelledRequestSummary');
            }
            else {
                $location.url('app/osdTrnServiceRequestSummary');
            }
        }

        $scope.allActivityBack = function () {
            if (lspage == "New") {
                $location.url('app/osdTrnTicketAllotedSummary');
            }
            else if (lspage == "Workin-Progress") {
                $location.url('app/osdTrnTicketWorkSummary');
            }
            else if (lspage == "Approval-pending") {
                $location.url('app/osdTrnTicketApprovalSummary');
            }
            else if (lspage == "Forward-Ticket") {
                $location.url('app/osdTrnTicketForwardSummary');
            }
            else if (lspage == "Completed") {
                $location.url('app/osdTrnTicketCompletedSummary');
            }
            else if (lspage == "Closed") {
                $location.url('app/osdTrnTicketClosedSummary');
            }
            else if (lspage == "RejectCancel") {
                $location.url('app/osdTrnTicketRejectCancelSummary');
            }
        }

        $scope.allTicketViewBack = function () {
            $state.go('app.osdRptAllTickets')
        }

        // Reopen Code Starts
        $scope.requestReopen = function () {
            var modalInstance = $modal.open({
                templateUrl: '/reopenrequestmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Reopen Submit
                $scope.reopenSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        reopen_reason: $scope.reopen_reason,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostReopenRequest"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/osdTrnServiceRequestSummary');
                            unlockUI();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                    activate();
                };
                // Upload Document
                $scope.ReopenRequestDocumentUpload = function () {
                    
                    var fi = document.getElementById('file');
                    if (fi.files.length > 0) {
                        var frm = new FormData();
                        for (var i = 0; i <= fi.files.length - 1; i++) {

                            frm.append(fi.files[i].name, fi.files[i]);
                           
                            $scope.uploadfrm = frm;
                            var fname = fi.files.item(i).name;
                            var fsize = fi.files.item(i).size;
                            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fname, "");

                            if (IsValidExtension == false) {
                                    Notify.alert("File format is not supported..!", {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    return false;
                                }
                        }
                        frm.append('project_flag', "Default");
                        lockUI();
                        var url = 'api/OsdTrnServiceRequest/PostReopenDocumentUpload';
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $("#file").val('');
                            $scope.upload_list = resp.data.reopenrequestdocumentdtl;
                            $scope.reopfilename = resp.data.reopfilename;
                            $scope.reopfilepath = resp.data.reopfilepath;
                            unlockUI();
                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            unlockUI();
                        });
                    }
                    else {
                        alert('Please select a file.')
                    }
                }
                // Download Document
                //$scope.downloads = function (val1, val2) {
                //    var phyPath = val1;
                //    var relPath = phyPath.split("StoryboardAPI");
                //    var relpath1 = relPath[1].replace("\\", "/");
                //    var hosts = window.location.host;
                //    var prefix = location.protocol + "//";
                //    var str = prefix.concat(hosts, relpath1);
                //    var link = document.createElement("a");
                //    link.download = val2;
                //    var uri = str;
                //    link.href = uri;
                //    link.click();
                //}
                //$scope.downloads = function (val1, val2) {
                //var relpath2 = "https://devsamunnati.blob.core.windows.net/" + val1;
                //var link = document.createElement("a");
                //link.href = relpath2;
                //link.setAttribute('download', val2);
                //link.click();
                //}
                $scope.downloads = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                }

                $scope.Rdownloadall = function (val1, val2) {

                    for (var i = 0; i < val2.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(val1, val2[i]);
                    }
                }
                // Document Delete
                $scope.documentcancel = function (tmp_documentGid) {
                    lockUI();
                    var params = {
                        tmp_documentGid: tmp_documentGid
                    }
                    var url = 'api/OsdTrnServiceRequest/GetReopenDocumentDelete';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.servicerequestdocumentdtl;
                        $scope.lblfilename = resp.data.filename;
                        $scope.lblfilepath = resp.data.filepath;
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }
            }
        }

        $scope.cancelclick = function () {
            $scope.txtqueries = "";
        }
        // Previous History Code 
        $scope.tickethistory = function (val) {

            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + "");
            window.open(URL, '_blank');

        }
        // Reopen History
        $scope.ticketreopenhistory = function (requestreopen_gid, servicerequest_gid) {

            var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnMyActivityReopenHistory?hash=" + cmnfunctionService.encryptURL("servicerequest_gid=" + servicerequest_gid + " &requestreopen_gid=" + requestreopen_gid + "");
            window.open(URL, '_blank');
        }

        // Tagmember in chat Code Starts
        $scope.TagMemberChat = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagmemberinchat.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnServiceRequest/TagEmployee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                var url = 'api/OsdTrnServiceRequest/GetServiceRequestView';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.tagmemberdtl = resp.data.tagmemberdtl;
                    $scope.raised_date = resp.data.raised_date;
                });

                // Submit
                $scope.TagMemberSubmit = function () {
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        tagmemberdtl: $scope.tagmember_list
                    }
                    lockUI();
                    var url = "api/OsdTrnServiceRequest/PostTagMemberInChat"
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
                // Click Cancel Button
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }

        // Get Request Remarks
        $scope.request_remarks = function (requestapproval_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/RequestRemarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params =
                   {
                       requestapproval_gid: requestapproval_gid,
                   }
                var url = 'api/osdTrnMyTicket/GetRequestRemarks';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtrequestapproval_remarks = resp.data.requestapproval_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


            }

        }

        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTaggedRequestSummaryController', osdTrnTaggedRequestSummaryController);

        osdTrnTaggedRequestSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTaggedRequestSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTaggedRequestSummaryController';
        var lstab = $location.search().lstab;

        activate();
        lockUI();
        function activate() {

            var url = "api/OsdTrnServiceRequest/GetServiceRequestCount";
            SocketService.get(url).then(function (resp) {
                $scope.request_count = resp.data.request_count;
                $scope.tagged_count = resp.data.tagged_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.reopen_count = resp.data.reopen_count;
                $scope.Reject_count = resp.data.reject_count;
                $scope.close_count = resp.data.close_count;
                $scope.cancel_count = resp.data.cancel_count;
                unlockUI();
            });
            
            var url = "api/OsdTrnServiceRequest/GetTaggedSummary";
            SocketService.get(url).then(function (resp) {
                $scope.taggedactivitysummary = resp.data.taggeddtl;                
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetCompletedSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.BankAlertCompleted_list = resp.data.BankAlertCompleted_list;
                unlockUI();
            });
        }
        

        $scope.raiserequest = function () {
            $location.url('app/osdTrnServiceRequestAdd?hash=' + cmnfunctionService.encryptURL('lspage=taggedrequest'));
        }
        
        // My Request
         $scope.my_request = function () {
            $state.go('app.osdTrnServiceRequestSummary');
        }      

        // Tagged Request
        $scope.tagged_request = function () {
            $state.go('app.osdTrnTaggedRequestSummary');
        }

        // Forward Activity
        $scope.forward_request = function () {
            $state.go('app.osdTrnForwardTransferSummary');
        }

        // Reopen Activity
        $scope.Reopen_request = function () {
            $state.go('app.osdTrnReopenRequestSummary');
        }

        //Rejected Request
        $scope.Reject_request = function () {
            $state.go('app.osdTrnRejectedRequestSummary');
        }

        // Close Activity
        $scope.Close_request = function () {
            $state.go('app.osdTrnCloseRequestSummary');
        }
        //Cancel Activity
        $scope.Cancel_request = function () {
            $state.go('app.osdTrnCancelledRequestSummary');
        }
      
        $scope.viewtaggedrequest = function (servicerequest_gid, request_status, val2, val3, val4) {

            var param = {
                servicerequest_gid: servicerequest_gid
            }
            var url = 'api/OsdTrnServiceRequest/GetServiceRequestTagViewUpdate';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });

            if (request_status == 'Completed') {
                var  val = "Y";
                $location.url('app/osdTrnServiceRequestTaggedView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=New'));
              
            }
            else if (request_status == 'Closed') {
                var val = "C";
                $location.url('app/osdTrnServiceRequestTaggedView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=New'));
               
            }
            else {
                var val = "N";
                $location.url('app/osdTrnServiceRequestTaggedView?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + servicerequest_gid + '&CompletedFlag=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=New'));
               
            }
           
           
        }      
  
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketAllotedSummaryController', osdTrnTicketAllotedSummaryController);

    osdTrnTicketAllotedSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketAllotedSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketAllotedSummaryController';

        activate();

        function activate() {

            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });
           
            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                //unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.servicerequestdtl = resp.data.servicerequestdtl;
                $scope.count_newticket = resp.data.lsallotted_count;

                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
                if(resp.data.display=="true")
                {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }
            });
        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
            //var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnTicketClosedSummary";
            //window.open(URL, '_blank');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewNew = function (val, val2, val3, val4,val7) {           

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=New' + '&request_refno=' + val7));
          
        }


        $scope.TransferAllocation = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name,activitymaster_gid, activity_name ) {
           
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                //$scope.activity_name = activity_name;
                $scope.cboactivity = activitymaster_gid;
                //$scope.cboactivity = activity_name;
                var params = {
                    department_gid: department_gid,
                    activitymaster_gid: activitymaster_gid,
                    servicerequest_gid : servicerequest_gid
                }
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
              
                var url = 'api/OsdMstActivity/GetActivity';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.activitylist = resp.data.activitydtl;
                    //activity_name = activity_name;
                    //$scope.cboactivity = activitymaster_gid;
                });
                var url = 'api/OsdTrnTicketManagement/GetActivityEdit';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboactivity.activity_name = resp.data.activity_name;
                });

                $scope.onselectedchangeteam = function (team_name) {
                   
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdMstSupportTeam/PostTeamMemberExceptAssigned';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.teamSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        ////activity_name: $scope.cboactivity,
                        activitymaster_gid: $scope.cboactivity,
                        ////activitymaster_gid: $scope.cboactivity.activitymaster_gid,
                        //activity_name: activity_name,
                        //priority: $scope.priority,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }





        $scope.Priority = function (servicerequest_gid, department_gid, department_name) {
            var modalInstance = $modal.open({
                templateUrl: '/prioritymodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                var params = {
                    department_gid: department_gid
                }
                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetPrioritylist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.prioritylistdtllist = resp.data.prioritylistdtl;
                    //var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    //if (transfer_flag == 'Y') {
                    //    $scope.transferlist = true;
                    //}
                    //else {
                    //    $scope.transferlist = false;
                    //}
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.prioritySubmit = function () {
                    var lspriority;
                    lockUI();
                    if (($scope.priority == undefined) || ($scope.priority == "")) {
                        lspriority = "None";
                    }
                    else
                    {
                         lspriority = $scope.priority;
                    }
                    var params = {
                        servicerequest_gid: servicerequest_gid,

                        priority: lspriority,


                    }
                
                        var url = "api/OsdTrnTicketManagement/PostPriority";
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                $modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                                unlockUI();
                            }
                            else {
                                $modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                                unlockUI();
                            }
                        });
                    }
                
            $scope.ok = function () {
                modalInstance.close('closed');
            };

            }
        }
        $scope.SelfAllocation = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name,activitymaster_gid, activity_name ) {

            var modalInstance = $modal.open({
                templateUrl: '/selfallocatemodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                //$scope.activity_name = activity_name;
                $scope.cboactivity = activitymaster_gid;
                //$scope.cboactivity = activity_name;
                var params = {
                    department_gid: department_gid                  
                }
                var url = 'api/OsdTrnTicketManagement/GetManagerSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.managerdtllist = resp.data.managerdtl;
                });
                              

            

                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.allocatedlist = resp.data.allocatelistdtl;
                    var transfer_flag = resp.data.allocatelistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // SelfAllocation Submit Event
                $scope.allocateSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,                      
                        assigned_membername: assigned_to,
                        assigned_membergid: assigned_membergid,                      
                        allocate_managergid: $scope.cbomanager.manager_gid,
                        allocate_managername: $scope.cbomanager.manager_name,
                        remarks: $scope.manager_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostSelfAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketApprovalSummaryController', osdTrnTicketApprovalSummaryController);

    osdTrnTicketApprovalSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketApprovalSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketApprovalSummaryController';

        activate();

        function activate() {

            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });

            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;

                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetApprovalPendingSummary';
            SocketService.get(url).then(function (resp) {
                $scope.servicerequestdtl = resp.data.servicerequestdtl;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }
            });
        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
            //var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnTicketClosedSummary";
            //window.open(URL, '_blank');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewNew = function (val, val2, val3, val4,val7) {

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=Approval-pending' + '&request_refno=' + val7));

        }


        $scope.TransferAllocation = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name) {

            var modalInstance = $modal.open({
                templateUrl: '/transferallocationmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                var params = {
                    department_gid: department_gid
                }
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });

                $scope.onselectedchangeteam = function (team_name) {

                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdMstSupportTeam/PostTeamMemberExceptAssigned';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.teamSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketClosedSummaryController', osdTrnTicketClosedSummaryController);

    osdTrnTicketClosedSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketClosedSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketClosedSummaryController';
        var limitStep;
        activate();

        function activate() {

            lockUI();
            
            $scope.limit = 4000;

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });

            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
               // unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;

                //unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetMyClosedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.closeddtl = resp.data.closeddtl; 
                
                unlockUI();

            });

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
            
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }
               
            });
            
        }

        $scope.Refresh = function () {
            activate();
        }
        var limitStep = 6000;
        $scope.incrementLimit = function () {
            $scope.limit += limitStep;
        };
        $scope.decrementLimit = function () {
            $scope.limit -= limitStep;
        };

        //$scope.close = function () {
        //    window.close();
        //}

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
            //var URL = location.protocol + "//" + location.hostname + "/v1/#/app/osdTrnTicketClosedSummary";
            //window.open(URL, '_blank');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewClosed = function (val, val2, val3, val4,val7) {
          
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=Closed' + '&request_refno=' + val7));
            
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketCompletedSummaryController', osdTrnTicketCompletedSummaryController);

    osdTrnTicketCompletedSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketCompletedSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketCompletedSummaryController';

        activate();

        function activate() {
            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });

            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;

                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetMyCompletedSummary';
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.completeddtl = resp.data.completeddtl;
            });
            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
               
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }

            });
        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewCompleted = function (val, val2, val3, val4,val7) {
            
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=Completed' + '&request_refno=' + val7));
           
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketForwardSummaryController', osdTrnTicketForwardSummaryController);

    osdTrnTicketForwardSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketForwardSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketForwardSummaryController';

        activate();

        function activate() {

            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });

            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;

                unlockUI();
            });
           
            var url = "api/OsdTrnTicketManagement/GetAllForwardSummary";
            SocketService.get(url).then(function (resp) {
                $scope.forwardactivitysummary = resp.data.forwarddtl;                
                unlockUI();
            });
            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
               
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }

            });
        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
        }
        
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewforward = function (val, val2, val3, val4,val7) {
          
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=Forward-Ticket' + '&request_refno=' + val7));
           
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketManagement', osdTrnTicketManagement);

    osdTrnTicketManagement.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketManagement($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketManagement';
        var servicerequest_gid;
        activate();

        function activate() {
            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.alloted_count;
                $scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                unlockUI();
            });

            lockUI();

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
                if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true") {
                    if (resp.data.privilege == "true") {
                        $scope.new = true;
                        $scope.old = false;
                    }
                    else {
                        $scope.new = false;
                        $scope.old = false;
                    }

                }
                else {
                    if (resp.data.privilege == "true") {
                        $scope.new = false;
                        $scope.old = true;
                    }
                    else {
                        $scope.new = false;
                        $scope.old = false;
                    }
                }
                unlockUI();
            });

            $scope.tab = {};
            var url = window.location.href;
            var relPath = url.split("lstab=");
            var relpath1 = relPath[1];
            if (relpath1 != undefined) {
                if (relpath1 == "New") {
                    $scope.tabnew = true;
                }
                else if (relpath1 == "Workin-Progress") {
                    $scope.tabworkinprogressticket = true;
                }
                else if (relpath1 == "Forward-Ticket") {
                    $scope.tabforwardticket = true;
                }
                else if (relpath1 == "Completed") {
                    $scope.tabcompleted = true;
                }
                else if (relpath1 == "Closed") {
                    $scope.tabclosed = true;
                }
            }
            else {
                if ($scope.tab.activeTabId == undefined) {
                    $scope.tabnew = true;
                }
                else if ($scope.tab.activeTabId == 'New') {
                    $scope.tabnew = true;
                }
                else if ($scope.tab.activeTabId == 'Workin-Progress') {
                    $scope.tabworkinprogressticket = true;
                }
                else if ($scope.tab.activeTabId == 'Forward-Ticket') {
                    $scope.tabforwardticket = true;
                }
                else if ($scope.tab.activeTabId == 'Completed') {
                    $scope.tabcompleted = true;
                }
                else if ($scope.tab.activeTabId == 'Closed') {
                    $scope.tabclosed = true;
                }
            }

        
            // Allotted

                $scope.totalDisplayednew = 100;
                var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.servicerequestdtl = resp.data.servicerequestdtl;
                    if ($scope.servicerequestdtl == null) {
                        $scope.totalDisplayednew = 0;
                        $scope.totalnew = 0;
                    }
                    else {
                        $scope.totalDisplayednew = $scope.servicerequestdtl.length;
                        if ($scope.servicerequestdtl.length < 100) {
                            $scope.totalnew = $scope.servicerequestdtl.length;
                        }
                    }
                    unlockUI();
                });

            // Work-in-progress

                lockUI();
                $scope.totalDisplayedworkinprogress = 100;
                var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.workinprogressdtl = resp.data.workinprogressdtl;
                    if ($scope.workinprogressdtl == null) {
                        $scope.totalworkinprogress = 0;
                        $scope.totalDisplayedworkinprogress = 0;
                    }
                    else {
                        $scope.totalworkinprogress = $scope.workinprogressdtl.length;
                        if ($scope.workinprogressdtl.length < 100) {
                            $scope.totalDisplayedworkinprogress = $scope.workinprogressdtl.length;
                        }
                    }
                    unlockUI();
                });

            // Forward 

                lockUI();
                $scope.totalDisplayedforwardacivity = 100;
                var url = "api/OsdTrnTicketManagement/GetAllForwardSummary";
                SocketService.get(url).then(function (resp) {
                    $scope.forwardactivitysummary = resp.data.forwarddtl;
                    if ($scope.forwardactivitysummary == null) {
                        $scope.totalforwardactivity = 0;
                        $scope.totalDisplayedforwardacivity = 0;
                    }
                    else {
                        $scope.totalforwardactivity = $scope.forwardactivitysummary.length;
                        if ($scope.forwardactivitysummary.length < 100) {
                            $scope.totalDisplayedforwardacivity = $scope.forwardactivitysummary.length;
                        }
                    }
                    unlockUI();
                });

            // Completed
                lockUI();
                $scope.totalDisplayedcompleted = 100;
                var url = 'api/OsdTrnTicketManagement/GetMyCompletedSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.completeddtl = resp.data.completeddtl;
                    if ($scope.completeddtl == null) {
                        $scope.totalcompleted = 0;
                        $scope.totalDisplayedcompleted = 0;
                    }
                    else {
                        $scope.totalcompleted = $scope.completeddtl.length;
                        if ($scope.completeddtl.length < 100) {
                            $scope.totalDisplayedcompleted = $scope.completeddtl.length;
                        }
                    }
                    unlockUI();
                });

            // Closed

                lockUI();
                $scope.totalDisplayedclosed = 100;
                var url = 'api/OsdTrnTicketManagement/GetMyClosedSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.closeddtl = resp.data.closeddtl;
                    if ($scope.closeddtl == null) {
                        $scope.totalclosed = 0;
                        $scope.totalDisplayedclosed = 0;
                    }
                    else {
                        $scope.totalclosed = $scope.closeddtl.length;
                        if ($scope.closeddtl.length < 100) {
                            $scope.totalDisplayedclosed = $scope.closeddtl.length;
                        }
                    }
                    unlockUI();
                });
            }

        $scope.viewNew = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

            $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
            $scope.bankalert_flag = localStorage.setItem('bankalert_flag', val2);
            $scope.bankalert2allocated_gid = localStorage.setItem('bankalert2allocated_gid', val3);
            $scope.customer_gid = localStorage.setItem('customer_gid', val4);

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('lstab=New'));
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
        }
        $scope.viewWorking = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

            $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
            $scope.bankalert_flag = localStorage.setItem('bankalert_flag', val2);
            $scope.bankalert2allocated_gid = localStorage.setItem('bankalert2allocated_gid', val3);
            $scope.customer_gid = localStorage.setItem('customer_gid', val4);

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('lstab=Workin-Progress'));
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
        }
        $scope.viewforward = function (val, val2, val3, val4) {

            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

            $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
            $scope.bankalert_flag = localStorage.setItem('bankalert_flag', val2);
            $scope.bankalert2allocated_gid = localStorage.setItem('bankalert2allocated_gid', val3);
            $scope.customer_gid = localStorage.setItem('customer_gid', val4);

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('lstab=Forward-Ticket'));
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
        }
        $scope.viewCompleted = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

            $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
            $scope.bankalert_flag = localStorage.setItem('bankalert_flag', val2);
            $scope.bankalert2allocated_gid = localStorage.setItem('bankalert2allocated_gid', val3);
            $scope.customer_gid = localStorage.setItem('customer_gid', val4);
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('lstab=Completed'));
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
        }
        $scope.viewClosed = function (val, val2, val3, val4) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;

            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;

            $scope.servicerequest_gid = localStorage.setItem('servicerequest_gid', val);
            $scope.bankalert_flag = localStorage.setItem('bankalert_flag', val2);
            $scope.bankalert2allocated_gid = localStorage.setItem('bankalert2allocated_gid', val3);
            $scope.customer_gid = localStorage.setItem('customer_gid', val4);
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('lstab=Closed'));
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
        }
       
        $scope.loadMorenew = function (pagecountnew) {
            if (pagecountnew == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountnew);
            if ($scope.servicerequestdtl != null) {

                if (pagecountnew < $scope.servicerequestdtl.length) {
                    $scope.totalDisplayednew += Number;
                    if ($scope.servicerequestdtl.length < $scope.totalDisplayednew) {
                        $scope.totalDisplayednew = $scope.servicerequestdtl.length;
                        Notify.alert(" Total Summary " + $scope.servicerequestdtl.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.servicerequestdtl.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        // Work in Progress

        $scope.workinprogress_ticket = function () {
            lockUI();
            $scope.totalDisplayedworkinprogress = 100;
            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.workinprogressdtl = resp.data.workinprogressdtl;
                if ($scope.workinprogressdtl == null) {
                    $scope.totalworkinprogress = 0;
                    $scope.totalDisplayedworkinprogress = 0;
                }
                else {
                    $scope.totalworkinprogress = $scope.workinprogressdtl.length;
                    if ($scope.workinprogressdtl.length < 100) {
                        $scope.totalDisplayedworkinprogress = $scope.workinprogressdtl.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadmoreworkinprogress = function (pagecountworkinprogress) {
            if (pagecountworkinprogress == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountworkinprogress);
            if ($scope.workinprogressdtl != null) {

                if (pagecountworkinprogress < $scope.workinprogressdtl.length) {
                    $scope.totalDisplayedworkinprogress += Number;
                    if ($scope.workinprogressdtl.length < $scope.totalDisplayedworkinprogress) {
                        $scope.totalDisplayedworkinprogress = $scope.workinprogressdtl.length;
                        Notify.alert(" Total Summary " + $scope.workinprogressdtl.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.workinprogressdtl.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        // Transfer Activity

        $scope.transfer_ticket = function () {
            lockUI();
            $scope.totalDisplayedtransferticket = 100;
            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.transferticket_list = resp.data.workinprogressdtl;
                if ($scope.transferticket_list == null) {
                    $scope.totaltransferticket = 0;
                    $scope.totalDisplayedtransferticket = 0;
                }
                else {
                    $scope.totaltransferticket = $scope.transferticket_list.length;
                    if ($scope.transferticket_list.length < 100) {
                        $scope.totalDisplayedtransferticket = $scope.transferticket_list.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoretransferticket = function (pagecounttransferticket) {
            if (pagecounttransferticket == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecounttransferticket);
            if ($scope.transferticket_list != null) {

                if (pagecounttransferticket < $scope.transferticket_list.length) {
                    $scope.totalDisplayedtransferticket += Number;
                    if ($scope.transferticket_list.length < $scope.totalDisplayedtransferticket) {
                        $scope.totalDisplayedtransferticket = $scope.transferticket_list.length;
                        Notify.alert(" Total Summary " + $scope.transferticket_list.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.transferticket_list.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        // Forward Tickets
        $scope.forward_ticket = function () {
            lockUI();
            $scope.totalDisplayedforwardacivity = 100;
            var url = "api/OsdTrnTicketManagement/GetAllForwardSummary";
            SocketService.get(url).then(function (resp) {
                $scope.forwardactivitysummary = resp.data.forwarddtl;
                if ($scope.forwardactivitysummary == null) {
                    $scope.totalforwardactivity = 0;
                    $scope.totalDisplayedforwardacivity = 0;
                }
                else {
                    $scope.totalforwardactivity = $scope.forwardactivitysummary.length;
                    if ($scope.forwardactivitysummary.length < 100) {
                        $scope.totalDisplayedforwardacivity = $scope.forwardactivitysummary.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoreforwardactivity = function (pagecountforward) {
            if (pagecountforward == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountforward);
            if ($scope.forwardactivitysummary != null) {

                if (pagecountforward < $scope.forwardactivitysummary.length) {
                    $scope.totalDisplayedforwardacivity += Number;
                    if ($scope.forwardactivitysummary.length < $scope.totalDisplayedforwardacivity) {
                        $scope.totalDisplayedforwardacivity = $scope.forwardactivitysummary.length;
                        Notify.alert(" Total Summary " + $scope.forwardactivitysummary.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.forwardactivitysummary.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        // Completed
        $scope.completed_ticket = function () {
            lockUI();
            $scope.totalDisplayedcompleted = 100;
            var url = 'api/OsdTrnTicketManagement/GetMyCompletedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.completeddtl = resp.data.completeddtl;
                if ($scope.completeddtl == null) {
                    $scope.totalcompleted = 0;
                    $scope.totalDisplayedcompleted = 0;
                }
                else {
                    $scope.totalcompleted = $scope.completeddtl.length;
                    if ($scope.completeddtl.length < 100) {
                        $scope.totalDisplayedcompleted = $scope.completeddtl.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMorecompleted = function (pagecountcompleted) {
            if (pagecountcompleted == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountcompleted);
            if ($scope.completeddtl != null) {

                if (pagecountcompleted < $scope.completeddtl.length) {
                    $scope.totalDisplayedcompleted += Number;
                    if ($scope.completeddtl.length < $scope.totalDisplayedcompleted) {
                        $scope.totalDisplayedcompleted = $scope.completeddtl.length;
                        Notify.alert(" Total Summary " + $scope.completeddtl.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.completeddtl.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        $scope.closed_ticket = function (servicerequest_gid) {
            lockUI();
            var url = 'api/OsdTrnTicketManagement/GetMyClosedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.closeddtl = resp.data.closeddtl;
                unlockUI();
            });
        }

        // Closed Activity
        $scope.closed_ticket = function () {
            lockUI();
            $scope.totalDisplayedclosed = 100;
            var url = 'api/OsdTrnTicketManagement/GetMyClosedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.closeddtl = resp.data.closeddtl;
                if ($scope.closeddtl == null) {
                    $scope.totalclosed = 0;
                    $scope.totalDisplayedclosed = 0;
                }
                else {
                    $scope.totalclosed = $scope.closeddtl.length;
                    if ($scope.closeddtl.length < 100) {
                        $scope.totalDisplayedclosed = $scope.closeddtl.length;
                    }
                }
                unlockUI();
            });
        }
        $scope.loadMoreclosed = function (pagecountclosed) {
            if (pagecountclosed == undefined) {
                Notify.alert("Enter the Total Summary Count", "warning");
                return;
            }
            lockUI();
            var Number = parseInt(pagecountclosed);
            if ($scope.closeddtl != null) {

                if (pagecountclosed < $scope.closeddtl.length) {
                    $scope.totalDisplayedclosed += Number;
                    if ($scope.closeddtl.length < $scope.totalDisplayedclosed) {
                        $scope.totalDisplayedclosed = $scope.closeddtl.length;
                        Notify.alert(" Total Summary " + $scope.closeddtl.length + " Records Only", "warning");
                    }
                    unlockUI();
                }
                else {
                    unlockUI();
                    Notify.alert(" Total Summary " + $scope.closeddtl.length + " Records Only", "warning");
                    return;
                }
            }
            unlockUI();
        };

        $scope.TransferAllocation = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid) {
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });

                $scope.onselectedchangeteam = function (team_name) {
                    $scope.supportteam_gid = localStorage.setItem('onchangesupportteam_gid', team_name);
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        servicerequest_gid: localStorage.getItem('servicerequest_gid'),
                    }
                    var url = 'api/OsdMstSupportTeam/PostTeamMemberExceptAssigned';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }
               
                var params = {
                    servicerequest_gid: localStorage.getItem('servicerequest_gid')
                }

                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.teamSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }
               
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

        //$scope.Zip = function (servicerequest_gid) {

        //    var param = {
        //        documentIdentifier: 1,
        //        documentPaths: "F:\Web\EMS\erp_documents\SAMUNNATI\ECMS-src",
        //        zipDestinationPath: "F:\Web\EMS\erp_documents\SAMUNNATI\ECMS-test"

        //    };

        //    var url = 'api/deferral/ZipDocument';
        //    SocketService.post(url, param).then(function (resp) {
        //        var phyPath = "F:/Web/EMS/erp_documents/SAMUNNATI/ECMS-test1.zip";
        //        var relPath = phyPath.split("EMS");
        //        var relpath1 = relPath[1].replace("\\", "/");
        //        var hosts = window.location.host;
        //        var prefix = location.protocol + "//";
        //        var str = prefix.concat(hosts, relpath1);
        //        var link = document.createElement("a");
        //        var name = "name";
        //        link.download = name[0];
        //        var uri = str;
        //        link.href = uri;
        //        link.click();

        //    });
        //}

        $scope.TransferAllocationwithRemarks = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid) {
            localStorage.setItem('servicerequest_gid', servicerequest_gid)
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationwithremarksmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.get(url).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });

                $scope.onselectedchangeteam = function (team_name) {
                    $scope.supportteam_gid = localStorage.setItem('onchangesupportteam_gid', team_name);
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        servicerequest_gid: localStorage.getItem('servicerequest_gid'),
                    }
                    var url = 'api/OsdMstSupportTeam/PostTeamMemberExceptAssigned';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: localStorage.getItem('servicerequest_gid'),                   
            }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else { 
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });
                // TransferAllocationremarks Submit Event
                $scope.teamSubmitremarks = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            $state.go('app.pageredirect');
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            unlockUI();
                        }
                    });
                }
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketRejectCancelSummary', osdTrnTicketRejectCancelSummary);

    osdTrnTicketRejectCancelSummary.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketRejectCancelSummary($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketRejectCancelSummary';

        activate();

        function activate() {
            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });

            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;

                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetRejectCancelSummary';
            SocketService.get(url).then(function (resp) {
                $scope.rejectcanceldtl = resp.data.rejectcanceldtl;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }
            });
        }
        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewrejectcancel = function (val, val2, val3, val4,val7) {

            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=RejectCancel' + '&request_refno=' + val7));

        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnTicketWorkSummaryController', osdTrnTicketWorkSummaryController);

    osdTrnTicketWorkSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams','cmnfunctionService'];

    function osdTrnTicketWorkSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'osdTrnTicketWorkSummaryController';

        activate();

        function activate() {

            lockUI();

            var url = 'api/OsdTrnTicketManagement/GetCountSummary';
            SocketService.get(url).then(function (resp) {
                //$scope.count_newticket = resp.data.alloted_count;
                //$scope.count_transferticket = resp.data.workinprogress_count;
                $scope.count_completedticket = resp.data.completed_count;
                $scope.count_closedticket = resp.data.closed_count;
                $scope.forward_count = resp.data.forward_count;
                $scope.rejectcancel_count = resp.data.rejectcancel_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
            });
           
            var url = 'api/OsdTrnTicketManagement/GetMyWorkInProgressSummary';
            SocketService.get(url).then(function (resp) {
                $scope.workinprogressdtl = resp.data.workinprogressdtl;
                $scope.count_transferticket = resp.data.lsworkinprogress_count;
                unlockUI();
            });

            var url = 'api/OsdTrnTicketManagement/GetServiceRequestSummary';
            SocketService.get(url).then(function (resp) {
                $scope.count_newticket = resp.data.lsallotted_count;
                unlockUI();
            });

            var url = 'api/OsdTrnBankAlert/GetBankalertNotification';
            SocketService.get(url).then(function (resp) {
                if (resp.data.display == "true") {
                    if (resp.data.allocated_new == "true" || resp.data.notallocated_new == "true" || resp.data.allocatedtransfer_new == "true") {
                        if (resp.data.privilege == "true") {
                            $scope.new = true;
                            $scope.old = false;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }

                    }
                    else {
                        if (resp.data.privilege == "true") {
                            $scope.new = false;
                            $scope.old = true;
                        }
                        else {
                            $scope.new = false;
                            $scope.old = false;
                        }
                    }
                }
                else {
                    $scope.new = false;
                    $scope.old = false;
                }

            });

        }

        $scope.Refresh = function () {
            activate();
        }

        $scope.Alloted = function () {
            $state.go('app.osdTrnTicketAllotedSummary');
        }
        $scope.Workinprogress = function () {
            $state.go('app.osdTrnTicketWorkSummary');
        }
        $scope.approvalpending = function () {
            $state.go('app.osdTrnTicketApprovalSummary');
        }
        $scope.Forward = function () {
            $state.go('app.osdTrnTicketForwardSummary');
        }
        $scope.Completed = function () {
            $state.go('app.osdTrnTicketCompletedSummary');
        }
        $scope.RejectCancel = function () {
            $state.go('app.osdTrnTicketRejectCancelSummary');
        }
        $scope.Close = function () {
            $state.go('app.osdTrnTicketClosedSummary');
        }
        $scope.BankAlert = function () {
            $state.go('app.OsdTrnBankAlertManagementSummary');
        }

        $scope.viewWorking = function (val, val2, val3, val4,val7,val8) {
            
            $location.url('app/osdTrnActivityManagement360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&lspage=Workin-Progress' + '&request_refno=' + val7 + '&brs_flag=' + val8));
            
        }

        $scope.TransferAllocationwithRemarks = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name, activitymaster_gid, activity_name) {
            
            var modalInstance = $modal.open({
                templateUrl: '/transferallocationwithremarksmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
               
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                $scope.cboactivity = activitymaster_gid;
                var params = {
                     department_gid: department_gid,
                    activitymaster_gid: activitymaster_gid,
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
                var url = 'api/OsdMstActivity/GetActivity';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.activitylist = resp.data.activitydtl;
                    //activity_name = activity_name;
                    //$scope.cboactivity = activitymaster_gid;
                });
                var url = 'api/OsdTrnTicketManagement/GetActivityEdit';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboactivity.activity_name = resp.data.activity_name;
                });
                $scope.onselectedchangeteam = function (team_name) {
                 
                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        servicerequest_gid: servicerequest_gid
                    }
                    var url = 'api/OsdMstSupportTeam/PostTeamMemberExceptAssigned';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });
                // TransferAllocationremarks Submit Event
                $scope.teamSubmitremarks = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        activitymaster_gid: $scope.cboactivity,
                        //priority: $scope.priority,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                            unlockUI();
                        }
                    });
                }
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }


        $scope.Priority = function (servicerequest_gid, department_gid, department_name) {
            var modalInstance = $modal.open({
                templateUrl: '/prioritymodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                var params = {
                    department_gid: department_gid
                }
                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetPrioritylist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.prioritylistdtllist = resp.data.prioritylistdtl;
                    //var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    //if (transfer_flag == 'Y') {
                    //    $scope.transferlist = true;
                    //}
                    //else {
                    //    $scope.transferlist = false;
                    //}
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.prioritySubmit = function () {
                    var lspriority;
                    lockUI();
                    if (($scope.priority == undefined) || ($scope.priority == "")) {
                        lspriority = "None";
                    }
                    else
                    {
                        lspriority = $scope.priority;
                    }
                    var params = {
                        servicerequest_gid: servicerequest_gid,

                        priority: lspriority,


                    }
                
                    var url = "api/OsdTrnTicketManagement/PostPriority";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }
            
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }
        $scope.SelfAllocation = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name, activitymaster_gid, activity_name) {

            var modalInstance = $modal.open({
                templateUrl: '/selfallocatemodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                //$scope.activity_name = activity_name;
                $scope.cboactivity = activitymaster_gid;
                //$scope.cboactivity = activity_name;
                var params = {
                    department_gid: department_gid
                }
                var url = 'api/OsdTrnTicketManagement/GetManagerSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.managerdtllist = resp.data.managerdtl;
                });




                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetAllocateManagerlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.allocatedlist = resp.data.allocatelistdtl;
                    var transfer_flag = resp.data.allocatelistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });

                // SelfAllocation Submit Event
                $scope.allocateSubmit = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_membername: assigned_to,
                        assigned_membergid: assigned_membergid,
                        allocate_managergid: $scope.cbomanager.manager_gid,
                        allocate_managername: $scope.cbomanager.manager_name,
                        remarks: $scope.manager_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostSelfAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
            }
        }
    }
})();

// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('osdTrnUnreconciliationTransactionViewController', osdTrnUnreconciliationTransactionViewController);

    osdTrnUnreconciliationTransactionViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', 'cmnfunctionService', 'DownloaddocumentService'];

    function osdTrnUnreconciliationTransactionViewController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, cmnfunctionService, DownloaddocumentService) {

        var vm = this;
        vm.title = 'osdTrnUnreconciliationTransactionViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var banktransc_gid = searchObject.lsbanktransc_gid;
        var lsbankalert2allocated_gid = searchObject.lsbankalert2allocated_gid;
        var lstab = searchObject.lstab;
        activate();
        function activate() {


            var url = 'api/UnreconciliationManagement/GetAllocatedDetail';
            var param = {
                banktransc_gid: banktransc_gid

            }

            SocketService.getparams(url, param).then(function (resp) {
                $scope.lblbanktransc_gid = banktransc_gid;
                $scope.lblbank_name = resp.data.bank_name;
                $scope.lblcustomer_refno = resp.data.custref_no;
                $scope.lblbranch_name = resp.data.branch_name;
                $scope.lblcr_dr = resp.data.cr_dr;
                $scope.lbltransc_value = resp.data.transact_val;
                $scope.lbltransact_particulars = resp.data.transact_particulars;
                $scope.lbltransc_balance = resp.data.transc_balance;
                $scope.lblacc_no = resp.data.acc_no;
                $scope.lblallocated_status = resp.data.allocated_status;
                $scope.lbltrn_date = resp.data.trn_date;
                $scope.lblrm_status = resp.data.rm_status;
                $scope.lblrm_remarks = resp.data.rm_remarks;
                $scope.lblchq_no = resp.data.chq_no;
                $scope.lblremarks = resp.data.remarks;


            });
           
            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;
            });
            var param = {
                banktransc_gid: banktransc_gid,
            }

            var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
            SocketService.getparams(url, param).then(function (resp) {
                $scope.uploaddocument = resp.data.MdlDocDetails;
                $scope.filename = resp.data.filename;
                $scope.filepath = resp.data.filepath;

            });

            var url = 'api/UnreconciliationManagement/GetAssignedHistory';
            var param = {
                banktransc_gid: banktransc_gid
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.assignedlist = resp.data.assignedlist;
            });

            var url = 'api/UnreconciliationManagement/GetTransferredHistory';
            var param = {
                banktransc_gid: banktransc_gid
            }
            SocketService.getparams(url, param).then(function (resp) {
                $scope.transferlist = resp.data.transferlist;
            });

        }

        $scope.UploadDocCancel = function (id) {
            var params = {
                fileupload_gid: id
            }
            var url = 'api/OsdTrnBankAlert/DeleteUnReconUploadedDoc';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var param = {
                        banktransc_gid: banktransc_gid

                    } 
                    var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
                    SocketService.getparams(url, param).then(function (resp) {
                        $scope.uploaddocument = resp.data.MdlDocDetails;
                        $scope.filename = resp.data.filename;
                        $scope.filepath = resp.data.filepath;

                    });
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.download = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.Udownloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploadattachment = function () {
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "documentformatonly");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('project_flag', "documentformatonly");
                frm.append('banktransc_gid', banktransc_gid);
               /* frm.append('document_name', $scope.test_document);*/
                /*frm.append('fileupload', item.file);*/
                frm.append('document_name',fname);
        //        $scope.uploadfrm = frm;
                $scope.uploadfrm = frm;

                var url = 'api/OsdTrnBankAlert/UnReconDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var param = {
                            banktransc_gid: banktransc_gid

                        }   
                       
                        var url = 'api/OsdTrnBankAlert/GetUnReconUploadedDoc';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.uploaddocument = resp.data.MdlDocDetails;
                            $scope.lblfilename = resp.data.filename;
                            $scope.lblfilepath = resp.data.filepath;
                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'warning')
            }
        }
        $scope.Submit = function () {

            var params =
            {
                banktransc_gid: banktransc_gid,
                cbounreconciliation_status: $scope.cborm_status,
                /*brs_status: $scope.brs_status,*/
                updation_remarks: $scope.txtremarks
               
            }
            var url = 'api/OsdTrnBankAlert/PostUnconciliationStatusUpdation';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $location.url('app/osdBamAllocatedToRM');
            });

        }

        $scope.Back = function () {
            $location.url("app/osdBamAllocatedToRM?lstab=" + lstab);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);
        }

        $scope.Sendbacktobrs = function () {
            var modalInstance = $modal.open({
                templateUrl: '/sentbacktobrs.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.submit = function () {
                    var params = {
                        sendback_reason: $scope.txtsendbackreason,
                        banktransc_gid: banktransc_gid,
                        bankalert2allocated_gid: lsbankalert2allocated_gid
                    }
                    var url = 'api/OsdTrnBankAlert/PostRMSendback';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });

                    $modalInstance.close('closed');
                    $location.url('app/osdBamAllocatedToRM');
                }
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('OsdTrnWorkMyTicketController', OsdTrnWorkMyTicketController);

    OsdTrnWorkMyTicketController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$filter', 'ngTableParams', '$timeout','cmnfunctionService'];


    function OsdTrnWorkMyTicketController($rootScope, $scope, $sce, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, $route, $cookies, $filter, ngTableParams, $timeout,cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'OsdTrnWorkMyTicketController';

        activate();

        function activate() {
            lockUI();
            var url = "api/OsdTrnMyTicket/GetActivityCount";
            SocketService.get(url).then(function (resp) {
                $scope.alloted_count = resp.data.lsallotedcount;
                $scope.workinprogress_count = resp.data.lsworkinprogress_count;
                $scope.completed_count = resp.data.completed_count;
                $scope.closed_count = resp.data.closed_count;
                $scope.transfer_count = resp.data.transfer_count;
                $scope.forward_count = resp.data.lsforward_count;
                $scope.approvalpending_count = resp.data.approvalpending_count;
                unlockUI();
            });
            lockUI();
          
            var url = "api/OsdTrnMyTicket/GetWorkInProgressSummary";
            SocketService.get(url).then(function (resp) {
                $scope.workinprogress_list = resp.data.workinprogressdtl;
                
                unlockUI();
            });
        }


        $scope.Refresh = function () {
            activate();
        }

        $scope.Allotted = function () {
            $state.go('app.OsdTrnAllotedMyTicket');
        }
        $scope.Work = function () {
            $state.go('app.OsdTrnWorkMyTicket');
        }
        $scope.Approval = function () {
            $state.go('app.OsdTrnApprovalMyTicket');
        }
        $scope.External = function () {
            $state.go('app.OsdTrnExternalMyTicket');
        }
        $scope.Internal = function () {
            $state.go('app.OsdTrnInternalMyTicket');
        }
        $scope.Completed = function () {
            $state.go('app.OsdTrnCompletedMyTicket');
        }
        $scope.Closed = function () {
            $state.go('app.OsdTrnClosedMyTicket');
        }


        $scope.workinprogressview360 = function (val, val2, val3, val4,val6,val7) {
            $scope.servicerequest_gid = val;
            $scope.bankalert_flag = val2;
            $scope.bankalert2allocated_gid = val3;
            $scope.customer_gid = val4;
            $scope.customer_urn = val6;
            $scope.request_refno = val7;
            var servicerequest_gid = val;
            var bankalert_flag = val2;
            var bankalert2allocated_gid = val3;
            var customer_gid = val4;
            var customer_urn = val6;
            var request_refno = val7;


            var param = {
                servicerequest_gid: servicerequest_gid,
                bankalert_flag: bankalert_flag,
                bankalert2allocated_gid: bankalert2allocated_gid,
                customer_gid: customer_gid
            }
            var url = 'api/OsdTrnMyTicket/GetServiceRequestForwardView360Update';
            lockUI()
            SocketService.getparams(url, param).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                }
                else {
                    unlockUI();
                }
            });
            var val5 = "N";
            $location.url('app/osdTrnMyActivity360?hash=' + cmnfunctionService.encryptURL('servicerequest_gid=' + val + '&bankalert_flag=' + val2 + '&bankalert2allocated_gid=' + val3 + '&customer_gid=' + val4 + '&RequestCompletedFlag=' + val5 + '&lspage=Work-InProgress' + '&customer_urn=' + val6 + '&request_refno=' + val7));
        }

        $scope.TransferAllocationwithRemarks = function (servicerequest_gid, assigned_team, assigned_to, assigned_membergid, assigned_supportteamgid, department_gid, department_name,activitymaster_gid, activity_name ) {

            var modalInstance = $modal.open({
                templateUrl: '/transferallocationwithremarksmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var servicerequest_gid = servicerequest_gid;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                $scope.cboactivity = activitymaster_gid;
                var params = {
                    department_gid: department_gid,
                    activitymaster_gid: activitymaster_gid,
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdMstActivity/GetTeamSummary';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.supportdtllist = resp.data.supportdtl;
                });
                var url = 'api/OsdMstActivity/GetActivity';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.activitylist = resp.data.activitydtl;
                    //activity_name = activity_name;
                    //$scope.cboactivity = activitymaster_gid;
                });
                var url = 'api/OsdTrnTicketManagement/GetActivityEdit';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboactivity.activity_name = resp.data.activity_name;
                });

                $scope.onselectedchangeteam = function (team_name) {

                    var params = {
                        supportteam_gid: $scope.cbosuppport_team.supportteam_gid
                    }
                    var url = 'api/OsdMstSupportTeam/GetTeamMemberExcept';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.teammembers_list = resp.data.teammembers;
                    });
                }

                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = "api/OsdTrnTicketManagement/GetTransferMemberlist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.transferlistdtllist = resp.data.transferlistdtl;
                    var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    if (transfer_flag == 'Y') {
                        $scope.transferlist = true;
                    }
                    else {
                        $scope.transferlist = false;
                    }
                    unlockUI();
                });
                // TransferAllocationremarks Submit Event
                $scope.teamSubmitremarks = function () {
                    lockUI();
                    var params = {
                        servicerequest_gid: servicerequest_gid,
                        assigned_supportteam: assigned_team,
                        assigned_member: assigned_to,
                        assigned_membergid: assigned_membergid,
                        activitymaster_gid: $scope.cboactivity,
                        assigned_supportteamgid: assigned_supportteamgid,
                        transferteam_gid: $scope.cbosuppport_team.supportteam_gid,
                        transferteam_name: $scope.cbosuppport_team.team_name,
                        transferemployee_gid: $scope.cboemployee_name.employee_gid,
                        transferemployee_name: $scope.cboemployee_name.employee_name,
                        //priority: $scope.priority,
                        remarks: $scope.team_description
                    }
                    var url = "api/OsdTrnTicketManagement/PostTransferAllocation";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                            activate();                          
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            unlockUI();
                        }
                    });
                }
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }

        $scope.Priority = function (servicerequest_gid, department_gid, department_name) {
            var modalInstance = $modal.open({
                templateUrl: '/prioritymodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.department_name = department_name;
                var params = {
                    department_gid: department_gid
                }
                var params = {
                    servicerequest_gid: servicerequest_gid
                }

                var url = "api/OsdTrnTicketManagement/GetPrioritylist"

                SocketService.getparams(url, params).then(function (resp) {
                    $scope.prioritylistdtllist = resp.data.prioritylistdtl;
                    //var transfer_flag = resp.data.transferlistdtl[0].transfer_flag;
                    //if (transfer_flag == 'Y') {
                    //    $scope.transferlist = true;
                    //}
                    //else {
                    //    $scope.transferlist = false;
                    //}
                    unlockUI();
                });

                // TransferAllocation Submit Event
                $scope.prioritySubmit = function () {
                    var lspriority;
                    lockUI();
                    if (($scope.priority == undefined) || ($scope.priority == "")) {
                        lspriority = "None";
                    }
                    else {
                        lspriority = $scope.priority;
                    }
                    var params = {
                        servicerequest_gid: servicerequest_gid,

                        priority: lspriority,


                    }

                    var url = "api/OsdTrnTicketManagement/PostPriority";
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            unlockUI();
                        }
                    });
                }

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

            }
        }
        $scope.getApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    servicerequest_gid: servicerequest_gid
                }
                var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                var url = 'api/OsdTrnMyTicket/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });

                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        servicerequest_gid: servicerequest_gid,
                    }
                    var url = 'api/OsdTrnMyTicket/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;

                        var param = {
                            servicerequest_gid: servicerequest_gid
                        }
                        var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                        SocketService.getparams(url, param).then(function (resp) {
                            $scope.employee_list = resp.data.employeelist;
                        });


                    });



                }

                $scope.coreChanged = function (cboapproval_member) {
                    var params = {
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approvalname: $scope.cboapproval_member.employee_name,
                        servicerequest_gid: servicerequest_gid,
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_member = "";
                            var params = {
                                servicerequest_gid: servicerequest_gid
                            }
                            var url = 'api/OsdTrnMyTicket/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });

                            var url = 'api/OsdTrnMyTicket/EmployeeNotIn';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.employee_list = resp.data.employeelist;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approval_remarks: $scope.approval_remarks,
                        approval_type: $scope.approval_type,
                        approval_basedon: 'HA',
                        servicerequest_gid: servicerequest_gid
                    }

                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            activate();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                           

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

        $scope.getReApprovalRequest = function (servicerequest_gid, val) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            var val = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                //var url = 'api/OsdMstActivity/GetTeamSummary';
                //SocketService.get(url).then(function (resp) {
                //    $scope.supportdtllist = resp.data.supportdtl;
                //});
                $scope.ok = function () {
                    modalInstance.close('closed');
                };

                $scope.getreapprovalclick = function () {
                    var params = {
                        approvalname: $scope.cboapproval_member.employee_name,
                        approvalgid: $scope.cboapproval_member.employee_gid,
                        approval_remarks: $scope.approval_remarks,
                        approval_type: 'Approval',
                        approval_basedon: 'RA',
                        servicerequest_gid: servicerequest_gid
                    }
                    lockUI();
                    var url = "api/OsdTrnMyTicket/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            activate();
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                            
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('serviceRequestApprovalcontroller', serviceRequestApprovalcontroller);

    serviceRequestApprovalcontroller.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', '$cookies', '$timeout'];

    function serviceRequestApprovalcontroller($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $timeout) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'serviceRequestApprovalcontroller';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var relpath1 = relPath[1];
        activate();

        function activate() {
           

            $scope.showapproval = true;
            $scope.hideapproval = true;
            var params = {
                approval_token: relpath1
            };
            var url = 'api/OsdTrnRequestApproval/GetRequestDtl';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.request_title = resp.data.request_title;
                $scope.request_refno = resp.data.request_refno;
                $scope.activity_name = resp.data.activity_name;
                $scope.assigned_dtl = resp.data.assigned_dtl;
                $scope.getapproval_remarks = resp.data.getapproval_remarks;
                $scope.hierary_level = resp.data.hierary_level;
                $scope.servicerequest_gid = resp.data.servicerequest_gid;
                $scope.approval_type = resp.data.approval_type;

                unlockUI();
                if (resp.data.status == true) {
                   
                    $scope.hideapproval = true;
                    $scope.showapproval = true;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });
                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
            });
        }

        $scope.approve_submit = function () {
            
            var hierarylevel = $scope.hierary_level;
            var level = ++hierarylevel;
            var params = {
                approval_remarks: $scope.txtremarks,
                approval_token: relpath1,
                hierary_level: level,
                servicerequest_gid: $scope.servicerequest_gid,
                approval_type: $scope.approval_type
            }
            lockUI();
            var url = "api/OsdTrnRequestApproval/PostRequestApproved";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
                else {
                    
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();

                }
            });
        }

        $scope.reject_submit = function () {
            var hierarylevel = $scope.hierary_level;
            var level = ++hierarylevel;

            var params = {
                approval_remarks: $scope.txtremarks,
                approval_token: relpath1,
                hierary_level: level,
                servicerequest_gid: $scope.servicerequest_gid,
                approval_type: $scope.approval_type
            }
            lockUI();
            var url = "api/OsdTrnRequestApproval/PostRequestRejected";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                     
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
                else {
                     
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                  
                }
            });
        }
    }
})();
