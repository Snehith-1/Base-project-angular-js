(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstAuditDepartmentController', AtmMstAuditDepartmentController);

    AtmMstAuditDepartmentController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstAuditDepartmentController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstAuditDepartmentController';
        activate();


        function activate() {
            var url = 'api/AtmMstAuditDepartment/GetAuditDepartment';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditdepartment_list = resp.data.auditdepartment_list;
                unlockUI();
            });

        }



        $scope.popupaddauditdepartment = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addauditdepartment.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.auditdepartmentSubmit = function () {
                    var params = {
                        auditdepartment_gid: $scope.auditdepartment_gid,
                        auditdepartment_name: $scope.txtaudit_department,
                        department_code: $scope.txtdepartment_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code

                    }

                    var url = 'api/AtmMstAuditDepartment/AddAuditDepartment';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'Warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.edit = function (auditdepartment_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editauditdepartment.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditdepartment_gid: auditdepartment_gid
                }
                var url = 'api/AtmMstAuditDepartment/EditAuditDepartment';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditaudit_department = resp.data.auditdepartment_name;
                    $scope.txtdepartment_code = resp.data.department_code;
                    $scope.auditdepartment_gid = resp.data.auditdepartment_gid;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.auditdepartmentUpdate = function () {

                    var url = 'api/AtmMstAuditDepartment/UpdateAuditDepartment';
                    var params = {
                        auditdepartment_gid: $scope.auditdepartment_gid,
                        auditdepartment_name: $scope.txteditaudit_department,
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code

                    }
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();

                    });
                    $modalInstance.close('closed');
                }
            }
        }

        $scope.Status_update = function (auditdepartment_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusauditdepartment.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditdepartment_gid: auditdepartment_gid
                }
                var url = 'api/AtmMstAuditDepartment/EditAuditDepartment';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditdepartment_gid = resp.data.auditdepartment_gid;
                    $scope.txtaudit_department = resp.data.auditdepartment_name;
                    $scope.txtremarks = resp.data.remarks;
                    $scope.rbo_status = resp.data.Status;


                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        audit_department: $scope.lblaudit_department,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status,
                        auditdepartment_gid: auditdepartment_gid
                    }
                    var url = 'api/AtmMstAuditDepartment/InactiveAuditDepartment';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });

                    $modalInstance.close('closed');

                }

                var param = {
                    auditdepartment_gid: auditdepartment_gid
                }

                var url = 'api/AtmMstAuditDepartment/AuditDepartmentInactiveLogview';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.auditdepartmentinactivelog_data = resp.data.auditdepartment_list;
                    unlockUI();
                });

            }
        }
        //    $scope.delete = function (auditdepartment_gid) {
        //        var params = {
        //            auditdepartment_gid: auditdepartment_gid
        //        }
        //        var url = 'api/AtmMstAuditDepartment/DeleteAuditDepartment';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            if (resp.data.status == true) {

        //                SweetAlert.swal({
        //                    title: 'Are you sure?',
        //                    text: 'Do You Want To Delete the Record ?',
        //                    showCancelButton: true,
        //                    confirmButtonColor: '#DD6B55',
        //                    confirmButtonText: 'Yes, delete it!',
        //                    closeOnConfirm: false
        //                }, function (isConfirm) {
        //                    if (isConfirm) {
        //                        SweetAlert.swal('Deleted Successfully!');
        //                        unlockUI();
        //                        activate();
        //                    }

        //                });
        //            }
        //            else {
        //                Notify.alert(resp.data.message, {
        //                    status: 'warning',
        //                    pos: 'top-center',
        //                    timeout: 3000
        //                });
        //                unlockUI();
        //                activate();
        //            }
        //        });
        //    };

        //}
        $scope.delete = function (auditdepartment_gid) {
            var params = {
                auditdepartment_gid: auditdepartment_gid
            }

            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstAuditDepartment/DeleteAuditDepartment';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            SweetAlert.swal('Deleted Successfully!');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }

            });
        };

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstAuditFrequencyController', AtmMstAuditFrequencyController);

    AtmMstAuditFrequencyController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstAuditFrequencyController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstAuditFrequencyController';
        activate();


        function activate() {

            var url = 'api/AtmMstAuditFrequency/GetAuditFrequency';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditfrequency_data = resp.data.auditfrequency_list;
                unlockUI();
            });
        }

        $scope.popupauditfrequency = function () {   
            var modalInstance = $modal.open({
                templateUrl: '/myModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.auditfrequencySubmit = function () {
                    var params = {
                        auditfrequency_gid: $scope.auditfrequency_gid,
                        auditfrequency_name: $scope.txtaudit_frequency,
                        auditfrequency_code: $scope.txtauditfrequency_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code
                    }

                    var url = 'api/AtmMstAuditFrequency/CreateAuditFrequency';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                }

            }
        }

        $scope.editauditfrequency = function (auditfrequency_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editauditfrequency.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditfrequency_gid: auditfrequency_gid
                }
                var url = 'api/AtmMstAuditFrequency/EditAuditFrequency';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditauditfrequency_code = resp.data.auditfrequency_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.txteditaudit_frequency = resp.data.auditfrequency_name;
                    $scope.auditfrequency_gid = resp.data.auditfrequency_gid;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.auditfrequencyUpdate = function () {

                    var url = 'api/AtmMstAuditFrequency/UpdateAuditFrequency';
                    var params = {
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        auditfrequency_code: $scope.txteditauditfrequency_code,
                        auditfrequency_name: $scope.txteditaudit_frequency,
                        auditfrequency_gid: $scope.auditfrequency_gid
                    }
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                }

            }
        }

        $scope.Status_update = function (auditfrequency_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusauditfrequency.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditfrequency_gid: auditfrequency_gid
                }
                var url = 'api/AtmMstAuditFrequency/EditAuditFrequency';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditfrequency_gid = resp.data.auditfrequency_gid
                    $scope.txtaudit_frequency = resp.data.auditfrequency_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        auditfrequency_name: $scope.txtaudit_frequency,
                        auditfrequency_gid: $scope.auditfrequency_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstAuditFrequency/InactiveAuditFrequency';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    auditfrequency_gid: auditfrequency_gid
                }

                var url = 'api/AtmMstAuditFrequency/AuditFrequencyInactiveLogview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditfrequencyinactivelog_data = resp.data.auditfrequency_list;
                    unlockUI();
                });
            }
        }

        //$scope.deleteauditfrequency = function (auditfrequency_gid) {
        //    var params = {
        //        auditfrequency_gid: auditfrequency_gid
        //    }
        //    //var url = 'api/AtmMstAuditFrequency/DeleteAuditFrequency';
        //    SocketService.getparams(url, params).then(function (resp) {
        //        if (resp.data.status == true) {

        //            SweetAlert.swal({
        //                title: 'Are you sure?',
        //                text: 'Do You Want To Delete the Record ?',
        //                showCancelButton: true,
        //                confirmButtonColor: '#DD6B55',
        //                confirmButtonText: 'Yes, delete it!',
        //                closeOnConfirm: false
        //            }, function (isConfirm) {
        //                if (isConfirm) {
        //                    SweetAlert.swal('Deleted Successfully!');
        //                    unlockUI();
        //                    activate();
        //                }

        //            });
        //        }
        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            unlockUI();
        //            activate();
        //        }
        //    });
        //};
        $scope.deleteauditfrequency = function (auditfrequency_gid) {
                var params = {
                    auditfrequency_gid: auditfrequency_gid
                }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstAuditFrequency/DeleteAuditFrequency';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting Audit Frequency !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstAuditMappingAddController',AtmMstAuditMappingAddController );

        AtmMstAuditMappingAddController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams'];

    function AtmMstAuditMappingAddController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstAuditMappingAddController';

        activate();

        function activate() {
            var url = 'api/AtmMstAuditMapping/GetAuditMapping';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditmapping_list = resp.data.auditmapping_list;
                unlockUI();
            });
           
           
        }

        $scope.auditmappingadd = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addauditmapping.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.submit = function () {

                    var params = {
                        //employee_gid: $scope.employee_gid,
                        employee: $scope.cboemployee,
                        auditmapping_name: $scope.audit_mapping,
                        auditmapping_code: $scope.txtauditmapping_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code
                    }

                    var url = 'api/AtmMstAuditMapping/CreateAuditMapping';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.editauditmapping = function (auditmapping_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editauditmapping.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                
                var params = {
                    auditmapping_gid: auditmapping_gid
                }
                var url = 'api/AtmMstAuditMapping/EditAuditMapping';
                SocketService.getparams(url, params).then(function (resp) {
                   
                   
                    $scope.txteditauditmapping_code = resp.data.auditmapping_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.audit_mapping = resp.data.auditmapping_name;
                    $scope.auditmapping_gid = resp.data.auditmapping_gid;
                    $scope.cboemployee_editlist = resp.data.employeeem_list;
                    $scope.employee = resp.data.employee;
                    $scope.cboemployee_edit = [];
                    if (resp.data.employee != null) {
                        var count = resp.data.employee.length;
                        for (var i = 0; i < count; i++) {
                            var workerIndex = $scope.cboemployee_editlist.map(function (x) { return x.employee_gid; }).indexOf(resp.data.employee[i].employee_gid);
                            //var indexs = $scope.cboemployee_editlist.findIndex(x => x.employee_gid === resp.data.employee[i].employee_gid);
                            $scope.cboemployee_edit.push($scope.cboemployee_editlist[workerIndex]);
                            $scope.$parent.cboSecondaryValueChain = $scope.cboSecondaryValueChain;
                        }
                    }
               
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.update = function () {
                    
                    //var employeename;
                    //var employee_index = $scope.employee_list.map(function (e) { return e.employee_gid }).indexOf($scope.cboemployeeedit);
                    //if (employee_index == -1) { employeename = ''; } else { employeename = $scope.employee_list[employee_index].employee_name; };

                    var url = 'api/AtmMstAuditMapping/UpdateAuditMapping';
                    var params = {
                        auditmapping_code: $scope.txteditauditmapping_code,
                        auditmapping_name: $scope.audit_mapping,
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        auditmapping_gid: $scope.auditmapping_gid,
                        employee: $scope.cboemployee_edit,
                        
                       
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    $modalInstance.close('closed');
                }
            }
        }
        $scope.showPopover = function (auditmapping_gid, auditmapping_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditmapping_gid: auditmapping_gid
                }
                lockUI();
                var url = 'api/AtmMstAuditMapping/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();                  
                    $scope.employee_name = resp.data.employee_name;
                    $scope.auditmapping_name = resp.data.auditmapping_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.Status_update = function (auditmapping_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusauditmapping.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditmapping_gid: auditmapping_gid
                }
                var url = 'api/AtmMstAuditMapping/EditAuditMapping';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditmapping_gid = resp.data.auditmapping_gid
                    $scope.audit_mapping = resp.data.auditmapping_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        auditmapping_gid: auditmapping_gid,
                        auditmapping_name: $scope.txtauditmapping_name,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstAuditMapping/InactiveAuditMapping';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }

                var param = {
                    auditmapping_gid: auditmapping_gid
                }

                var url = 'api/AtmMstAuditMapping/AuditMappingInactiveLogview';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.auditmappinginactivelog_list = resp.data.auditmapping_list;
                    unlockUI();
                });

            }
        }

        $scope.deleteauditmapping = function (auditmapping_gid) {
            var params = {
                auditmapping_gid: auditmapping_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                   
                    var url = 'api/AtmMstAuditMapping/DeleteAuditMapping';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting Audit Mapping !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstAuditPriorityController', AtmMstAuditPriorityController);

    AtmMstAuditPriorityController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstAuditPriorityController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstAuditPriorityController';
        activate();


        function activate() {

            var url = 'api/AtmMstAuditPriority/GetAuditPriority';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditpriority_data = resp.data.auditpriority_list;
                unlockUI();
            });
        }

        $scope.popupauditpriority = function () {
            var modalInstance = $modal.open({
                templateUrl: '/myModalContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.auditprioritySubmit = function () {
                    var params = {
                        auditpriority_gid: $scope.auditpriority_gid,
                        auditpriority_name: $scope.txtaudit_priority,
                        auditpriority_code: $scope.txtauditpriority_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code
                    }

                    var url = 'api/AtmMstAuditPriority/CreateAuditPriority';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                    
                }

            }
        }

        $scope.editauditpriority = function (auditpriority_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editauditpriority.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditpriority_gid: auditpriority_gid
                }
                var url = 'api/AtmMstAuditPriority/EditAuditPriority';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditauditpriority_code = resp.data.auditpriority_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.txteditaudit_priority = resp.data.auditpriority_name;
                    $scope.auditpriority_gid = resp.data.auditpriority_gid;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.auditpriorityUpdate = function () {

                    var url = 'api/AtmMstAuditPriority/UpdateAuditPriority';
                    var params = {
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        auditpriority_code: $scope.txteditauditpriority_code,
                        auditpriority_name: $scope.txteditaudit_priority,
                        auditpriority_gid: $scope.auditpriority_gid
                    }
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                }

            }
        }

        $scope.Status_update = function (auditpriority_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusauditpriority.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditpriority_gid: auditpriority_gid
                }
                var url = 'api/AtmMstAuditPriority/EditAuditPriority';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditpriority_gid = resp.data.auditpriority_gid
                    $scope.txtaudit_priority = resp.data.auditpriority_name
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        auditpriority_name: $scope.txtaudit_priority,
                        auditpriority_gid: $scope.auditpriority_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstAuditPriority/InactiveAuditPriority';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    auditpriority_gid: auditpriority_gid
                }

                var url = 'api/AtmMstAuditPriority/AuditPriorityInactiveLogview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditpriorityinactivelog_data = resp.data.auditpriority_list;
                    unlockUI();
                });
            }
        }

        //$scope.deleteauditpriority = function (auditpriority_gid) {
        //    var params = {
        //        auditpriority_gid: auditpriority_gid
        //    }
        //    //var url = 'api/AtmMstAuditPriority/DeleteAuditPriority';
        //    SocketService.getparams(url, params).then(function (resp) {
        //        if (resp.data.status == true) {

        //            SweetAlert.swal({
        //                title: 'Are you sure?',
        //                text: 'Do You Want To Delete the Record ?',
        //                showCancelButton: true,
        //                confirmButtonColor: '#DD6B55',
        //                confirmButtonText: 'Yes, delete it!',
        //                closeOnConfirm: false
        //            }, function (isConfirm) {
        //                if (isConfirm) {
        //                    SweetAlert.swal('Deleted Successfully!');
        //                    unlockUI();
        //                    activate();
        //                }

        //            });
        //        }
        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            unlockUI();
        //            activate();
        //        }
        //    });
        //};

            $scope.deleteauditpriority = function (auditpriority_gid) {
                var params = {
                    auditpriority_gid: auditpriority_gid
                }
                
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstAuditPriority/DeleteAuditPriority';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            SweetAlert.swal('Deleted Successfully!');

                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }

            });
        };

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstAuditTypeController', AtmMstAuditTypeController);

    AtmMstAuditTypeController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstAuditTypeController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstAuditTypeController';
        activate();


        function activate() {

            var url = 'api/AtmMstAuditType/GetAuditType';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.audittype_data = resp.data.audittype_list;
                unlockUI();
            });
        }
       
        $scope.popupaudittype = function () {
            var modalInstance = $modal.open({
                templateUrl: '/myModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.audittypeSubmit = function () {
                    var params = {
                        audittype_gid: $scope.audittype_gid,
                        audittype_name: $scope.txtaudit_type,
                        audittype_code: $scope.txtaudittype_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code
                    }

                    var url = 'api/AtmMstAuditType/CreateAuditType';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }

                        activate();

                    });
                    $modalInstance.close('closed');
                   
                }

            }
        }

        $scope.editaudittype = function (audittype_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editaudittype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    audittype_gid: audittype_gid
                }
                var url = 'api/AtmMstAuditType/EditAuditType';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditaudittype_code = resp.data.audittype_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.txteditaudit_type = resp.data.audittype_name;                  
                    $scope.audittype_gid = resp.data.audittype_gid;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.audittypeUpdate = function () {

                    var url = 'api/AtmMstAuditType/UpdateAuditType';
                    var params = {
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        audittype_code: $scope.txteditaudittype_code,
                        audittype_name: $scope.txteditaudit_type,                      
                        audittype_gid: $scope.audittype_gid
                    }
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            
                        }

                        activate();

                    });
                    $modalInstance.close('closed');
                }
                
            }
        }

        $scope.Status_update = function (audittype_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusaudittype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    audittype_gid: audittype_gid
                }
                var url = 'api/AtmMstAuditType/EditAuditType';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.audittype_gid = resp.data.audittype_gid
                    $scope.txtaudit_type = resp.data.audittype_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        audittype_name: $scope.txtaudit_type,
                        audittype_gid: $scope.audittype_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstAuditType/InactiveAuditType';
                    lockUI();
                    SocketService.post(url,params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    audittype_gid: audittype_gid
                }

               var url = 'api/AtmMstAuditType/AuditTypeInactiveLogview';
                lockUI();
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.audittypeinactivelog_data = resp.data.audittype_list;
                    unlockUI();
                });
            }
        }

        //$scope.deleteaudittype = function (audittype_gid) {
        //    var params = {
        //        audittype_gid: audittype_gid
        //    }
        //    var url = 'api/AtmMstAuditType/DeleteAuditType'; 
        //    SocketService.getparams(url,params).then(function (resp) {
        //        if (resp.data.status == true) {

        //            SweetAlert.swal({
        //                title: 'Are you sure?',
        //                text: 'Do You Want To Delete the Record ?',
        //                showCancelButton: true,
        //                confirmButtonColor: '#DD6B55',
        //                confirmButtonText: 'Yes, delete it!',
        //                closeOnConfirm: false
        //            }, function (isConfirm) {
        //                if (isConfirm) {
        //                    SweetAlert.swal('Deleted Successfully!');
        //                    unlockUI();
        //                    activate();
        //                }

        //            });
        //        }
        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            unlockUI();
        //            activate();
        //        }
        //    });
        //};
            $scope.deleteaudittype = function (audittype_gid) {
                var params = {
                    audittype_gid: audittype_gid
                }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstAuditType/DeleteAuditType';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            SweetAlert.swal('Deleted Successfully!');

                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }

            });
        };
    }
    
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterAddController', AtmMstChecklistMasterAddController);

    AtmMstChecklistMasterAddController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmMstChecklistMasterAddController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterAddController';
       
        activate();

        function activate() {


            var url = 'api/MstApplication360/GetEntity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.entity_data = resp.data.application_list;
                unlockUI();
            });
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointGroupActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checkpointgroup_data = resp.data.checkpointgroup_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditDepartment/GetAuditDepartmentActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditdepartment_list = resp.data.auditdepartment_list;
                unlockUI();
            });

            var url = 'api/AtmMstAuditType/GetAuditTypeActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.audittype_data = resp.data.audittype_list;
                unlockUI();
            });

            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employeelist;
                unlockUI();
            });

            $scope.checklistmasterback = function (val) {
                $state.go('app.AtmMstChecklistMasterSummary');
            }


            var url = 'api/AtmMstChecklistMaster/GetCheckpointStatus';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checklistmaster_list = resp.data.checklistmaster_list;
                unlockUI();
            });

        }

        $scope.onchangecheckpoint = function () {
            var params = {
                checkpointgroup_list : $scope.cbocheckpoint
            }
            var url = 'api/AtmMstChecklistMaster/GetMultipleCheckpointgroup';
            SocketService.post(url, params).then(function (resp) {
                $scope.checkpointgroupadd_list = resp.data.checkpointgroupadd_list;

            });
           
        }
        
        $scope.submitAddChecklist = function () {

            var lsauditdepartment_gid = '';
            var lsauditdepartment_name = '';
            if ($scope.cboauditdepartment != undefined || $scope.cboauditdepartment != null) {
                lsauditdepartment_gid = $scope.cboauditdepartment.auditdepartment_gid;
                lsauditdepartment_name = $scope.cboauditdepartment.auditdepartment_name;
            }

            var lsentity_gid = '';
            var lsentity_name = '';
            if ($scope.cboentity != undefined || $scope.cboentity != null) {
                lsentity_gid = $scope.cboentity.entity_gid;
                lsentity_name = $scope.cboentity.entity_name;
            }

            var lscheckpointgroup_gid = '';
            var lscheckpointgroup_name = '';
            if ($scope.cbocheckpoint != undefined || $scope.cbocheckpoint != null) {
                lscheckpointgroup_gid = $scope.cbocheckpoint.checkpointgroup_gid;
                lscheckpointgroup_name = $scope.cbocheckpoint.checkpointgroup_name;
            }

            var lsaudittype_gid = '';
            var lsaudittype_name = '';
            if ($scope.cboaudittype != undefined || $scope.cboaudittype != null) {
                lsaudittype_gid = $scope.cboaudittype.audittype_gid;
                lsaudittype_name = $scope.cboaudittype.audittype_name;
            }
            var lsemployee_gid = '';
            var lsemployee_name = '';
            if ($scope.cboauditmaker != undefined || $scope.cboauditmaker != null) {
                lsemployee_gid = $scope.cboauditmaker.employee_gid;
                lsemployee_name = $scope.cboauditmaker.employee_name;
            }
            var lsauditmapping_gid = '';
            var lsaudit_checker = '';
            if ($scope.cboauditchecker != undefined || $scope.cboauditchecker != null) {
                lsauditmapping_gid = $scope.cboauditchecker.employee_gid;
                lsaudit_checker = $scope.cboauditchecker.employee_name;
            }
                var params = {
                   
                    audittype_gid: lsaudittype_gid,
                    audittype_name: lsaudittype_name,
                    entity_gid: lsentity_gid,
                    entity_name: lsentity_name,
                    checkpointgroup_gid: lscheckpointgroup_gid,
                    checkpointgroup_name: lscheckpointgroup_name,
                    auditdepartment_gid: lsauditdepartment_gid,
                    auditdepartment_name: lsauditdepartment_name,
                    audit_name: $scope.txtaudit_name,
                    audit_description: $scope.txtaudit_description,
                    employee_gid: lsemployee_gid,
                    audit_maker: lsemployee_name,
                    auditmapping_gid: lsauditmapping_gid,
                    audit_checker: lsaudit_checker,
                    checkpointgroupadd_list: $scope.cbocheckpoint,
                }
               
                var url = 'api/AtmMstChecklistMaster/PostChecklistMaster';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmMstChecklistMasterSummary');
                    }

                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
            }


        $scope.checkpointintent = function (checkpointgroupadd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checkpointgroupadd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checkpointgroupadd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointNotestoAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
            
        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        }
    })();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterAuditController', AtmMstChecklistMasterAuditController);

    AtmMstChecklistMasterAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmMstChecklistMasterAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterAuditController';
        var checklistmaster_gid = $location.search().checklistmaster_gid;
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;

        activate();

        function activate() {
           
            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });

            
            var url = 'api/AtmMstRiskcategory/GetRiskcategory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });

            var params = {
                checklistmaster_gid: checklistmaster_gid
            }
        }
          
        $scope.changevalue = function () {
            var val1 = 0;
           var val2 = 0 ;
           var val3 = 0;
           var val4 = 0;
           var val5 = 0 ;
           if ($scope.txtna_score != undefined || $scope.txtna_score != null)
           {
               val1 = $scope.txtna_score;
           }
         
           if ($scope.txtno_score != undefined || $scope.txtno_score != null)
           {
               val2 = $scope.txtno_score;
           }
          
           if ($scope.txtyes_score != undefined || $scope.txtyes_score != null)
           {
               val3 = $scope.txtyes_score;
           }
          
           if ($scope.txtpartial_score != undefined || $scope.txtpartial_score != null)
           {
               val4 = $scope.txtpartial_score;
           }
          
         
               val5 = val1 + val2 + val3 + val4;
             

               $scope.txt_totalscore = parseFloat(val5.toFixed(2));
           
        }
        $scope.submitChecklistmasterAdd = function () {
           
            var lsriskcategory_gid = '';
            var lsriskcategory_name = '';
            if ($scope.cboriskcategory != undefined || $scope.cboriskcategory != null) {
                lsriskcategory_gid = $scope.cboriskcategory.riskcategory_gid;
                lsriskcategory_name = $scope.cboriskcategory.riskcategory_name;
            }

            var lspositiveconfirmity_gid = '';
            var lspositiveconfirmity_name = '';
            if ($scope.cbopositiveconfirmity != undefined || $scope.cbopositiveconfirmity != null) {
                lspositiveconfirmity_gid = $scope.cbopositiveconfirmity.positiveconfirmity_gid;
                lspositiveconfirmity_name = $scope.cbopositiveconfirmity.positiveconfirmity_name;
            }
            var params = {
                positiveconfirmity_gid: lspositiveconfirmity_gid,
                positiveconfirmity_name: lspositiveconfirmity_name,
                riskcategory_gid: lsriskcategory_gid,
                riskcategory_name: lsriskcategory_name,
                checklistmaster_gid: checklistmaster_gid,
                checkpoint_intent: $scope.txtcheckpoint_intent,
                checkpoint_description: $scope.txtcheckpoint_description,
                noteto_auditor: $scope.txtnoteto_auditor,
                yes_score: $scope.txtyes_score,
                yes_disposition: $scope.txtyes_disposition,
                no_score: $scope.txtno_score,
                no_disposition: $scope.txtno_disposition,
                partial_score: $scope.txtpartial_score,
                partial_disposition: $scope.txtpartial_disposition,
                na_score: $scope.txtna_score,
                na_disposition: $scope.txtna_disposition,
                total_score: $scope.txt_totalscore,

            }

            var url = 'api/AtmMstChecklistMaster/PostChecklistMasterAdd';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {


                    $scope.cboriskcategory = '';
                    $scope.cbopositiveconfirmity = '';
                    $scope.txtcheckpoint_intent = '';
                    $scope.txtcheckpoint_description = '';
                    $scope.txtnoteto_auditor = '';
                    $scope.txtyes_score = '';
                    $scope.txtyes_disposition = '';
                    $scope.txtno_score = '';
                    $scope.txtno_disposition = '';
                    $scope.txtpartial_score = '';
                    $scope.txtpartial_disposition = '';
                    $scope.txtna_score = '';
                    $scope.txtna_disposition = '';
                    $scope.txt_totalscore = '';
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    //$state.go('app.AtmMstChecklistMasterAudit');
                    //activate();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
       
        $scope.checklistback = function () {
            $location.url('app/AtmMstCheckpointSummary?checklistmaster_gid=' + checklistmaster_gid)
        }
      
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterAuditEditController', AtmMstChecklistMasterAuditEditController);

    AtmMstChecklistMasterAuditEditController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];

    function AtmMstChecklistMasterAuditEditController($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterAuditEditController';
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        activate();
        function activate() {
            

            var url = 'api/AtmMstRiskCategory/GetRiskCategory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });

            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });

          

            var params = {
                checklistmasteradd_gid: checklistmasteradd_gid
            }
            var url = 'api/AtmMstChecklistMaster/EditChecklistMaster';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboriskcategoryedit = resp.data.riskcategory_gid,
                $scope.cbopositiveconfirmityedit = resp.data.positiveconfirmity_gid,
                $scope.txteditcheckpoint_intent = resp.data.checkpoint_intent,
                $scope.txteditcheckpoint_description = resp.data.checkpoint_description,
                $scope.txteditnoteto_auditor = resp.data.noteto_auditor,
                $scope.txtedityes_score = parseFloat(resp.data.yes_score),
                $scope.txtedityes_disposition = resp.data.yes_disposition,
                $scope.txteditno_score = parseFloat(resp.data.no_score),
                $scope.txteditno_disposition = resp.data.no_disposition,
                $scope.txteditpartial_score = parseFloat(resp.data.partial_score),
                $scope.txteditpartial_disposition = resp.data.partial_disposition,
                $scope.txteditna_score = parseFloat(resp.data.na_score),
                $scope.txteditna_disposition = resp.data.na_disposition,
                $scope.txtedit_totalscore = parseFloat(resp.data.total_score),
                
             
                unlockUI();
            });     
        }

        $scope.changevalue = function () {
            //var val1 = parseFloat($scope.txteditna_score);
            var val1 = parseFloat($scope.txteditna_score);
            var val2 = parseFloat($scope.txteditno_score);
            var val3 = parseFloat($scope.txtedityes_score);
            var val4 = parseFloat($scope.txteditpartial_score);
            var val5 = parseFloat($scope.txtedit_totalscore);
            if ($scope.txteditna_score != undefined || $scope.txteditna_score != null) {
                val1 = parseFloat($scope.txteditna_score);
            }

            if ($scope.txteditno_score != undefined || $scope.txteditno_score != null) {
                val2 = parseFloat($scope.txteditno_score);
            }

            if ($scope.txtedityes_score != undefined || $scope.txtedityes_score != null) {
                val3 = parseFloat($scope.txtedityes_score);
            }

            if ($scope.txteditpartial_score != undefined || $scope.txteditpartial_score != null) {
                val4 = parseFloat($scope.txteditpartial_score);
            }

           
                val5 = val1 + val2 + val3 + val4;
         

            $scope.txtedit_totalscore = val5;

        }
        $scope.checklistmasterUpdate = function () {
           
            var riskcategoryname;
            var riskcategory_index = $scope.riskcategory_list.map(function (e) { return e.riskcategory_gid }).indexOf($scope.cboriskcategoryedit);
            if (riskcategory_index == -1) { riskcategoryname = ''; } else { riskcategoryname = $scope.riskcategory_list[riskcategory_index].riskcategory_name; };
            var positiveconfirmityname;
            var positiveconfirmity_index = $scope.positiveconfirmity_data.map(function (e) { return e.positiveconfirmity_gid }).indexOf($scope.cbopositiveconfirmityedit);
            if (positiveconfirmity_index == -1) { positiveconfirmityname = ''; } else { positiveconfirmityname = $scope.positiveconfirmity_data[positiveconfirmity_index].positiveconfirmity_name; };

            var params = {
               
                checklistmasteradd_gid: checklistmasteradd_gid,
                riskcategory_gid: $scope.cboriskcategoryedit,
                riskcategory_name: riskcategoryname,
                positiveconfirmity_gid: $scope.cbopositiveconfirmityedit,
                positiveconfirmity_name: positiveconfirmityname,
                checkpoint_intent: $scope.txteditcheckpoint_intent,
                checkpoint_description: $scope.txteditcheckpoint_description,
                noteto_auditor: $scope.txteditnoteto_auditor,
                yes_score: $scope.txtedityes_score,
                yes_disposition: $scope.txtedityes_disposition,
                no_score: $scope.txteditno_score,
                no_disposition: $scope.txteditno_disposition,
                partial_score: $scope.txteditpartial_score,
                partial_disposition: $scope.txteditpartial_disposition,
                na_score: $scope.txteditna_score,
                na_disposition: $scope.txteditna_disposition,
                total_score: $scope.txtedit_totalscore,
                             
            }

            var url = 'api/AtmMstChecklistMaster/UpdateChecklistMaster';
            lockUI()
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                    activate();
                    $state.go('app.AtmMstChecklistMasterSummary');
                    Notify.alert(resp.data.message, 'success')
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, 'warning')
                }

            });
        }
        $scope.back = function (val) {
            $state.go('app.AtmMstChecklistMasterSummary');
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterAuditViewController', AtmMstChecklistMasterAuditViewController);

    AtmMstChecklistMasterAuditViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];

    function AtmMstChecklistMasterAuditViewController($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterAuditViewController';
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        var checklistmaster_gid = $location.search().checklistmaster_gid;


        activate();
        function activate() {
            var url = 'api/AtmMstChecklistMaster/EditChecklistMaster';
            var params = {
                checklistmasteradd_gid: checklistmasteradd_gid
            }       
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboriskcategory = resp.data.riskcategory_gid,
                  $scope.cboriskcategory = resp.data.riskcategory_name,
                 $scope.cbocheckpointgroup = resp.data.checkpointgroup_gid,
                  $scope.cbocheckpointgroup = resp.data.checkpointgroup_name,
                 $scope.cbopositiveconfirmity = resp.data.positiveconfirmity_gid,
                  $scope.cbopositiveconfirmity = resp.data.positiveconfirmity_name,
                $scope.txtcheckpoint_intent = resp.data.checkpoint_intent,
                $scope.txtcheckpoint_description = resp.data.checkpoint_description,
                $scope.txtnoteto_auditor = resp.data.noteto_auditor,
                $scope.txtyes_score = resp.data.yes_score,
                $scope.txtyes_disposition = resp.data.yes_disposition,
                $scope.txtno_score = resp.data.no_score,
                $scope.txtno_disposition = resp.data.no_disposition,
                $scope.txtpartial_score = resp.data.partial_score,
                $scope.txtpartial_disposition = resp.data.partial_disposition,
                $scope.txtna_score = resp.data.na_score,
                $scope.txtna_disposition = resp.data.na_disposition,
                $scope.txt_totalscore = resp.data.total_score,

               
                unlockUI();
            });
        }
        $scope.checklistback = function () {
            $state.go('app.AtmMstChecklistMasterSummary');
            //var checklistmaster_gid = $scope.checklistmaster_gid;
            //$location.url('app/AtmMstCheckpointSummary?checklistmaster_gid=' + checklistmaster_gid)
        }
    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterEditController', AtmMstChecklistMasterEditController);

    AtmMstChecklistMasterEditController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmMstChecklistMasterEditController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterEditController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var checklistmaster_gid = searchObject.checklistmaster_gid;
        var checkpointgroup_gid = searchObject.checkpointgroup_gid;

        activate();
        function activate() {

            //var params = {
            //    checkpointgroup_gid: checkpointgroup_gid
            //}
            //var url = 'api/AtmMstChecklistMaster/GetCheckpointgroupMultiple';
            //SocketService.getparams(url,params).then(function (resp) {
            //    $scope.checkpointgroupadd_list = resp.data.checkpointgroupadd_list;


            //});

            $scope.cbocheckpointgroup_edit = [];
            var url = 'api/MstApplication360/GetEntity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.entity_data = resp.data.application_list;
                unlockUI();
            });
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointGroupActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checkpointgroup_data = resp.data.checkpointgroup_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditDepartment/GetAuditDepartmentActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditdepartment_list = resp.data.auditdepartment_list;
                unlockUI();
            });

            var url = 'api/AtmMstAuditType/GetAuditTypeActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.audittype_data = resp.data.audittype_list;
                unlockUI();
            });

            //var url = 'api/SystemMaster/GetEmployeelist';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list = resp.data.employeelist;
            //    unlockUI();
            //});

            //var url = 'api/SystemMaster/GetEmployeelist';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list1 = resp.data.employeelist;
            //    unlockUI();
            //});

            var url = 'api/AtmMstChecklistMaster/GetCheckpointStatus';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checklistmaster_list = resp.data.checklistmaster_list;
                unlockUI();
            });
            var url = 'api/AtmMstChecklistMaster/EditChecklistMasterAudit';
            var params = {
                checklistmaster_gid: checklistmaster_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboentityedit = resp.data.entity_gid,
                $scope.cboauditdepartmentedit = resp.data.auditdepartment_gid,
                $scope.cboaudittypeedit = resp.data.audittype_gid,
                $scope.cboauditeechecker_edit = resp.data.auditmapping_gid,
                $scope.cboauditeemaker_edit = resp.data.employee_gid,
                $scope.txtauditname_edit = resp.data.audit_name,
                $scope.txtauditedit_description = resp.data.audit_description,
                $scope.checkpointaddgroup_list = resp.data.checkpointaddgroup_list;
                $scope.checkpoint_list = resp.data.checkpoint_list; 
                $scope.cbocheckpointgroup_edit = [];
                if (resp.data.checkpoint_list != null) {
                    var count = resp.data.checkpoint_list.length;
                    for (var i = 0; i < count; i++) {
                        //var indexs = $scope.checkpointaddgroup_list.findIndex(x => x.checkpointgroup_gid === resp.data.checkpoint_list[i].checkpointgroup_gid);
                        var workerIndex = $scope.checkpointaddgroup_list.map(function (x) { return x.checkpointgroup_gid; }).indexOf(resp.data.checkpoint_list[i].checkpointgroup_gid);
                        $scope.cbocheckpointgroup_edit.push($scope.checkpointaddgroup_list[workerIndex]);
                        $scope.$parent.cbocheckpointgroup_edit = $scope.cbocheckpointgroup_edit;
                    }
                }
                unlockUI();
            });


            var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAdd';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.checklistmasteradd_list = resp.data.checklistmasteradd_list;
                unlockUI();
            });

            //angular.forEach($scope.covenant_documentlist, function (value, key) {
            //    var getselected = $scope.covenant_taggeddoclist.find(a => a.companydocument_gid === value.document_gid)
            //    if (getselected != null) {
            //        value.groupcovdocumentchecklist_gid = getselected.groupcovdocumentchecklist_gid;
            //        value.covenantchecked = true;
            //        value.covenantperiod = getselected.covenantperiod == 'Each month' ? 1 : getselected.covenantperiod == 'Every 3 months' ? 2 : getselected.covenantperiod == 'Every 6 months' ? 3 : ""
            //        value.dropdownchk = false;
            //        if (lspage == "StartCreditUnderwriting" && getselected.taggedby == "Credit")
            //            value.taggedby = '';
            //        else if (lspage != "StartCreditUnderwriting" && getselected.taggedby == "CAD")
            //            value.taggedby = '';
            //        else if (getselected.taggedby == "N")
            //            value.taggedby = 'Business';
            //        else
            //            value.taggedby = getselected.taggedby;
            //    }
            //    else {
            //        value.dropdownchk = true;
            //        value.covenantperiod = '';
            //        value.covenantchecked = false;
            //    }
            //});

        }
        $scope.onchangecheckpoint = function (selectedchecklist) {
            lockUI();
            var params = {
                checkpointgroup_list: $scope.cbocheckpointgroup_edit,
                checklistmaster_gid: checklistmaster_gid
            }
            var url = 'api/AtmMstChecklistMaster/GetEditMultipleCheckpointgroup';
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistmasteradd_list = resp.data.checkpointgroupadd_list;
            });
        }
        
        $scope.UpdateChecklistMaster = function () {

            if ($scope.checklistmasteradd_list == null) {
                Notify.alert('Select Atleast One Checkpointgroup!', 'warning');
                unlockUI();
                return false;
            }

            var entityname;
            var entityname_index = $scope.entity_data.map(function (e) { return e.entity_gid }).indexOf($scope.cboentityedit);
            if (entityname_index == -1) { entityname = ''; } else { entityname = $scope.entity_data[entityname_index].entity_name; };

            var auditdepartmentname;
            var auditdepartment_index = $scope.auditdepartment_list.map(function (e) { return e.auditdepartment_gid }).indexOf($scope.cboauditdepartmentedit);
            if (auditdepartment_index == -1) { auditdepartmentname = ''; } else { auditdepartmentname = $scope.auditdepartment_list[auditdepartment_index].auditdepartment_name; };

            var audittypename;
            var audittype_index = $scope.audittype_data.map(function (e) { return e.audittype_gid }).indexOf($scope.cboaudittypeedit);
            if (audittype_index == -1) { audittypename = ''; } else { audittypename = $scope.audittype_data[audittype_index].audittype_name; };

            var checkpointgroupname;
            var checkpointgroup_index = $scope.checkpoint_list.map(function (e) { return e.checkpointgroup_gid }).indexOf($scope.cbocheckpointgroup_edit);
            if (checkpointgroup_index == -1) { checkpointgroupname = ''; } else { checkpointgroupname = $scope.checkpoint_list[checkpointgroup_index].checkpointgroup_name; };


            var params = {

                checklistmaster_gid: checklistmaster_gid,
                entity_gid: $scope.cboentityedit,
                entity_name: entityname,
                auditdepartment_gid: $scope.cboauditdepartmentedit,
                auditdepartment_name: auditdepartmentname,
                audittype_gid: $scope.cboaudittypeedit,
                audittype_name: audittypename,
                checkpoint_list: $scope.cbocheckpointgroup_edit,
                //checkpointgroup_name: checkpointgroupname,               
                audit_name: $scope.txtauditname_edit,
                audit_description: $scope.txtauditedit_description,


            }

            var url = 'api/AtmMstChecklistMaster/UpdateChecklistMasterAudit';
            lockUI()
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                    activate();
                    $state.go('app.AtmMstChecklistMasterSummary');
                    Notify.alert(resp.data.message, 'success')
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, 'warning')
                }

            });
        }

        $scope.back = function (val) {
            $state.go('app.AtmMstChecklistMasterSummary');
        }
        $scope.editcheckpoint = function (val3) {
            $location.url('app/AtmMstChecklistMasterAuditEdit?checklistmasteradd_gid=' + val3)
        }
        $scope.viewcheckpoint = function (val2) {
            $location.url('app/AtmMstChecklistMasterAuditView?checklistmasteradd_gid=' + val2)
        }
        $scope.deletechecklistmaster = function (checklistmasteradd_gid) {
            var params = {
                checklistmasteradd_gid: checklistmasteradd_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {

                    var url = 'api/AtmMstChecklistMaster/DeleteChecklistMasterAdd';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting ChecklistMaster !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };
        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) { 
                $scope.txtcheckpointintent = checkpoint_intent; 
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {  
                $scope.txtcheckpointdescription = checkpoint_description; 
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.auditname = function (checklistmaster_gid, audit_description) {
            var modalInstance = $modal.open({
                templateUrl: '/auditname.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmaster_gid: checklistmaster_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditorName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtaudit_description = resp.data.audit_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstChecklistMasterSummaryController', AtmMstChecklistMasterSummaryController);

    AtmMstChecklistMasterSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal','cmnfunctionService'];

    function AtmMstChecklistMasterSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstChecklistMasterSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmMstChecklistMaster/GetChecklistMaster';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checklistmaster_list = resp.data.checklistmaster_list;
                unlockUI();
            });

            //var url = 'api/AtmMstChecklistMaster/GetChecklistMaster';
            //SocketService.get(url).then(function (resp) {
            //    unlockUI()
            //    $scope.checklistmaster_list = resp.data.checklistmaster_list
            //    //angular.forEach($scope.checklistmaster_list, function (value, key) {
            //        var params = {
            //            checklistmaster_gid: value.checklistmaster_gid
            //        };

                   
            //    });

        }

        $scope.addchecklist = function () {
            $state.go('app.AtmMstChecklistMasterAdd');
        }     
        $scope.Edit = function (val1,val2) {
            $location.url('app/AtmMstChecklistMasterEdit?hash=' + cmnfunctionService.encryptURL('checklistmaster_gid=' + val1 + '&checkpointgroup_gid=' + val2))
        }
        $scope.createchecklist = function (val) {
            $location.url('app/AtmMstCheckpointSummary?checklistmaster_gid=' + val)
        }
       
        $scope.deletechecklist = function (checklistmasteradd_gid) {
            var params = {
                checklistmasteradd_gid: checklistmasteradd_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {

                    var url = 'api/AtmMstChecklistMaster/DeleteChecklistMasterAdd';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting ChecklistMaster !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };

        $scope.delete = function (checklistmaster_gid) {
            var params = {
                checklistmaster_gid: checklistmaster_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {

                    var url = 'api/AtmMstChecklistMaster/DeleteChecklistMaster';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting ChecklistMaster !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.auditname = function (checklistmaster_gid, audit_description) {
            var modalInstance = $modal.open({
                templateUrl: '/auditname.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmaster_gid: checklistmaster_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditorName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtaudit_description = resp.data.audit_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.checklistmaster_gid = checklistmaster_gid;

                var params = {
                    checklistmaster_gid: checklistmaster_gid
                }

                //var url = 'api/AtmMstChecklistMaster/GetExcelImportLog';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.excelimport_List = resp.data.excelimport_List;
                //});



                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelChecklist.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }
                
                $scope.excelupload = function (val, val1, name) {
                    var checklistmaster_gid = $scope.checklistmaster_gid;

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelChecklist") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('checklistmaster_gid', checklistmaster_gid);
                        $scope.uploadfrm = frm;
                    }
                }


                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmMstChecklistMaster/ImportExcelChecklist';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };



            }
        }





    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointAddController', AtmMstCheckpointAddController);

    AtmMstCheckpointAddController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmMstCheckpointAddController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointAddController';
        $scope.checkpointgroup_gid = $location.search().checkpointgroup_gid;
        var checkpointgroup_gid = $location.search().checkpointgroup_gid;
        var checkpointgroup_gid = $scope.checkpointgroup_gid;
        activate();

        function activate() {


            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });


            var url = 'api/AtmMstRiskcategory/GetRiskcategory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });

            var params = {
                checkpointgroup_gid: checkpointgroup_gid
            }
        }

        $scope.changevalue = function () {
            var val1 = 0;
            var val2 = 0;
            var val3 = 0;
            var val4 = 0;
            var val5 = 0;
            if ($scope.txtna_score != undefined || $scope.txtna_score != null) {
                val1 = $scope.txtna_score;
            }

            if ($scope.txtno_score != undefined || $scope.txtno_score != null) {
                val2 = $scope.txtno_score;
            }

            if ($scope.txtyes_score != undefined || $scope.txtyes_score != null) {
                val3 = $scope.txtyes_score;
            }

            if ($scope.txtpartial_score != undefined || $scope.txtpartial_score != null) {
                val4 = $scope.txtpartial_score;
            }


            val5 = val1 + val2 + val3 + val4;


            $scope.txt_totalscore = parseFloat(val5.toFixed(2));

        }
        $scope.submitAdd = function () {

            var lsriskcategory_gid = '';
            var lsriskcategory_name = '';
            if ($scope.cboriskcategory != undefined || $scope.cboriskcategory != null) {
                lsriskcategory_gid = $scope.cboriskcategory.riskcategory_gid;
                lsriskcategory_name = $scope.cboriskcategory.riskcategory_name;
            }

            var lspositiveconfirmity_gid = '';
            var lspositiveconfirmity_name = '';
            if ($scope.cbopositiveconfirmity != undefined || $scope.cbopositiveconfirmity != null) {
                lspositiveconfirmity_gid = $scope.cbopositiveconfirmity.positiveconfirmity_gid;
                lspositiveconfirmity_name = $scope.cbopositiveconfirmity.positiveconfirmity_name;
            }
            var params = {
                positiveconfirmity_gid: lspositiveconfirmity_gid,
                positiveconfirmity_name: lspositiveconfirmity_name,
                riskcategory_gid: lsriskcategory_gid,
                riskcategory_name: lsriskcategory_name,
                checkpointgroup_gid: checkpointgroup_gid,
                checkpoint_intent: $scope.txtcheckpoint_intent,
                checkpoint_description: $scope.txtcheckpoint_description,
                noteto_auditor: $scope.txtnoteto_auditor,
                yes_score: $scope.txtyes_score,
                yes_disposition: $scope.txtyes_disposition,
                no_score: $scope.txtno_score,
                no_disposition: $scope.txtno_disposition,
                partial_score: $scope.txtpartial_score,
                partial_disposition: $scope.txtpartial_disposition,
                na_score: $scope.txtna_score,
                na_disposition: $scope.txtna_disposition,
                total_score: $scope.txt_totalscore,

            }

            var url = 'api/AtmMstCheckpointGroup/PostCheckpointAdd';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {


                    $scope.cboriskcategory = '';
                    $scope.cbopositiveconfirmity = '';
                    $scope.txtcheckpoint_intent = '';
                    $scope.txtcheckpoint_description = '';
                    $scope.txtnoteto_auditor = '';
                    $scope.txtyes_score = '';
                    $scope.txtyes_disposition = '';
                    $scope.txtno_score = '';
                    $scope.txtno_disposition = '';
                    $scope.txtpartial_score = '';
                    $scope.txtpartial_disposition = '';
                    $scope.txtna_score = '';
                    $scope.txtna_disposition = '';
                    $scope.txt_totalscore = '';
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    //$state.go('app.AtmMstChecklistMasterAudit');
                    //activate();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.back = function (val) {
            $state.go('app.AtmMstCheckpointGroupAdd');
        }

        $scope.importexcel = function (checkpointgroup_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    checkpointgroup_gid: checkpointgroup_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {                  
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelCheckpoint.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelCheckpoint") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('checkpointgroup_gid', checkpointgroup_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmMstCheckpointGroup/ImportExcelCheckpoint';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $state.go('app.AtmMstCheckpointGroupAdd');

                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }



    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointAddSummaryController', AtmMstCheckpointAddSummaryController);

    AtmMstCheckpointAddSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmMstCheckpointAddSummaryController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointAddSummaryController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.checkpointgroup_gid = searchObject.checkpointgroup_gid;
        var checkpointgroup_gid = $scope.checkpointgroup_gid;
        $scope.checkpointgroupadd_gid = searchObject.checkpointgroupadd_gid;
        var checkpointgroupadd_gid = $scope.checkpointgroupadd_gid;
        $scope.IsVisible = false;
        $scope.IsVisible1 = false;
        $scope.IsVisible2 = false;
        $scope.IsVisible3 = false;

        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/TempDeleteAuditee';
            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/AtmMstCheckpointGroup/TempDeleteCheckpointList';
            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmityActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });

         
            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employeelist;
                unlockUI();
            });
            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee1_list = resp.data.employeelist;
                unlockUI();
            });
            //var url = 'api/AtmMstCheckpointGroup/GetCheckListToCheckpoint';
            //SocketService.get(url).then(function (resp) {
            //    $scope.checklist_list = resp.data.checklistcheckpoint_list;
            //});
            var url = 'api/AtmMstRiskcategory/GetRiskcategoryActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });


            var params = {
                checkpointgroup_gid: checkpointgroup_gid
            };

            var url = 'api/AtmMstCheckpointGroup/GetCheckpointAdd';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.checkpointgroupadd_list = resp.data.checkpointgroupadd_list;
                unlockUI();
            });
           
            var params = {
                checkpointgroup_gid: checkpointgroup_gid
            };

            var url = 'api/AtmMstCheckpointGroup/GetCheckpointGroupName';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cbocheckpointgroup = resp.data.checkpointgroup_name;

                unlockUI();
            });

        }      

        $scope.addcheckpoint = function (checkpointgroup_gid) {
        $scope.IsVisible = $scope.IsVisible ? false : true;
        $scope.IsVisible1 = $scope.IsVisible1 ? false : true;
        $scope.IsVisible2 = false;
        $scope.IsVisible3 = false;
    }

    $scope.changevalueadd = function () {
        var val1 = 0;
        var val2 = 0;
        var val3 = 0;
        var val4 = 0;
        var val5 = 0;
        if ($scope.txtna_score != undefined || $scope.txtna_score != null) {
            val1 = $scope.txtna_score;
        }

        if ($scope.txtno_score != undefined || $scope.txtno_score != null) {
            val2 = $scope.txtno_score;
        }

        if ($scope.txtyes_score != undefined || $scope.txtyes_score != null) {
            val3 = $scope.txtyes_score;
        }

        if ($scope.txtpartial_score != undefined || $scope.txtpartial_score != null) {
            val4 = $scope.txtpartial_score;
        }


        /*val5 = val1 + val2 + val3 + val4;*/
        val5 = val3;

        $scope.txt_totalscore = parseFloat(val5.toFixed(2));

    }
    $scope.submitAdd = function () {

        var lsriskcategory_gid = '';
        var lsriskcategory_name = '';
        if ($scope.cboriskcategory != undefined || $scope.cboriskcategory != null) {
            lsriskcategory_gid = $scope.cboriskcategory.riskcategory_gid;
            lsriskcategory_name = $scope.cboriskcategory.riskcategory_name;
        }

        var lspositiveconfirmity_gid = '';
        var lspositiveconfirmity_name = '';
        if ($scope.cbopositiveconfirmity != undefined || $scope.cbopositiveconfirmity != null) {
            lspositiveconfirmity_gid = $scope.cbopositiveconfirmity.positiveconfirmity_gid;
            lspositiveconfirmity_name = $scope.cbopositiveconfirmity.positiveconfirmity_name;
        }

        //var lscheckpointgroup_gid = '';
        //var lscheckpointgroup_name = '';
        //if ($scope.cbocheckpointgroup != undefined || $scope.cbocheckpointgroup != null) {
        //    lscheckpointgroup_gid = $scope.cbocheckpointgroup.checkpointgroup_gid;
        //    lscheckpointgroup_name = $scope.cbocheckpointgroup.checkpointgroup_name;
        //}
       

        var params = {
            
            positiveconfirmity_gid: lspositiveconfirmity_gid,
            positiveconfirmity_name: lspositiveconfirmity_name,
            riskcategory_gid: lsriskcategory_gid,
            riskcategory_name: lsriskcategory_name,
            checkpointgroup_gid: checkpointgroup_gid,
            checkpoint_intent: $scope.txtcheckpoint_intent,
            checkpoint_description: $scope.txtcheckpoint_description,
            noteto_auditor: $scope.txtnoteto_auditor,
            yes_score: $scope.txtyes_score,
            yes_disposition: $scope.txtyes_disposition,
            no_score: $scope.txtno_score,
            no_disposition: $scope.txtno_disposition,
            partial_score: $scope.txtpartial_score,
            partial_disposition: $scope.txtpartial_disposition,
            na_score: $scope.txtna_score,
            na_disposition: $scope.txtna_disposition,
            total_score: $scope.txt_totalscore,

        }

        var url = 'api/AtmMstCheckpointGroup/PostCheckpointAdd';
        lockUI();
        SocketService.post(url, params).then(function (resp) {
            unlockUI();
            if (resp.data.status == true) {
               
                $scope.cboriskcategory = '';
                $scope.cbopositiveconfirmity = '';
                $scope.txtcheckpoint_intent = '';
                $scope.txtcheckpoint_description = '';
                $scope.txtnoteto_auditor = '';
                $scope.txtyes_score = '';
                $scope.txtyes_disposition = '';
                $scope.txtno_score = '';
                $scope.txtno_disposition = '';
                $scope.txtpartial_score = '';
                $scope.txtpartial_disposition = '';
                $scope.txtna_score = '';
                $scope.txtna_disposition = '';
                $scope.txt_totalscore = '';
                Notify.alert(resp.data.message, {
                    status: 'success',
                    pos: 'top-center',
                    timeout: 3000
                });
                //$state.go('app.AtmMstCheckpointGroupAdd');

                //$location.url('app/AtmMstCheckpointAddSummary?checkpointgroup_gid=' + checkpointgroup_gid);
                
                //activate();
                location.reload(true);
            }
            else {
                Notify.alert(resp.data.message, {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
        //    location.reload(true);
        });

        $scope.IsVisible1 = $scope.IsVisible1 ? false : true;
        $scope.IsVisible = $scope.IsVisible ? false : true;

    }



    $scope.edit = function (val) {
        $scope.checkpointgroupadd_gid = val;
        var params = {
            checkpointgroupadd_gid: val
        }

        var url = 'api/AtmMstCheckpointGroup/EditCheckpoint';
        lockUI();
        SocketService.getparams(url, params).then(function (resp) {
            $scope.cbocheckpointgroup = resp.data.checkpointgroup_name           
            $scope.cboriskcategoryedit = resp.data.riskcategory_gid,
            $scope.cbopositiveconfirmityedit = resp.data.positiveconfirmity_gid,
            $scope.txteditcheckpoint_intent = resp.data.checkpoint_intent,
            $scope.txteditcheckpoint_description = resp.data.checkpoint_description,
            $scope.txteditnoteto_auditor = resp.data.noteto_auditor,
            $scope.txtedityes_score = parseFloat(resp.data.yes_score),
            $scope.txtedityes_disposition = resp.data.yes_disposition,
            $scope.txteditno_score = parseFloat(resp.data.no_score),
            $scope.txteditno_disposition = resp.data.no_disposition,
            $scope.txteditpartial_score = parseFloat(resp.data.partial_score),
            $scope.txteditpartial_disposition = resp.data.partial_disposition,
            $scope.txteditna_score = parseFloat(resp.data.na_score),
            $scope.txteditna_disposition = resp.data.na_disposition,
            $scope.txtedit_totalscore = parseFloat(resp.data.total_score),


            unlockUI();
        });
        $scope.IsVisible2 = true;
        $scope.IsVisible3 = false;
        $scope.IsVisible1 = false;
        //$scope.IsVisible2 = $scope.IsVisible2 ? false : true;
        $scope.IsVisible = $scope.IsVisible ? false : true;
        $scope.id = val;
        activate();

        var url = 'api/AtmMstCheckpointGroup/GetCheckpointCheckList';
        SocketService.getparams(url, params).then(function (resp) {
            $scope.checklist_list = resp.data.checklistcheckpoint_list;
        });
        var url = 'api/AtmMstCheckpointGroup/GetAuditeeSummaryList';
        SocketService.getparams(url, params).then(function (resp) {
            $scope.multipleauditee_list = resp.data.multipleauditee_list;
        });
    }

    $scope.changevalue = function () {
        //var val1 = parseFloat($scope.txteditna_score);
        var val1 = parseFloat($scope.txteditna_score);
        var val2 = parseFloat($scope.txteditno_score);
        var val3 = parseFloat($scope.txtedityes_score);
        var val4 = parseFloat($scope.txteditpartial_score);
        var val5 = parseFloat($scope.txtedit_totalscore);
        if ($scope.txteditna_score != undefined || $scope.txteditna_score != null) {
            val1 = parseFloat($scope.txteditna_score);
        }

        if ($scope.txteditno_score != undefined || $scope.txteditno_score != null) {
            val2 = parseFloat($scope.txteditno_score);
        }

        if ($scope.txtedityes_score != undefined || $scope.txtedityes_score != null) {
            val3 = parseFloat($scope.txtedityes_score);
        }

        if ($scope.txteditpartial_score != undefined || $scope.txteditpartial_score != null) {
            val4 = parseFloat($scope.txteditpartial_score);
        }


        //val5 = val1 + val2 + val3 + val4;
         val5 =  val3;

        $scope.txtedit_totalscore = val5;

    }
    $scope.Update = function (id) {

        var riskcategoryname;
        var riskcategory_index = $scope.riskcategory_list.map(function (e) { return e.riskcategory_gid }).indexOf($scope.cboriskcategoryedit);
        if (riskcategory_index == -1) { riskcategoryname = ''; } else { riskcategoryname = $scope.riskcategory_list[riskcategory_index].riskcategory_name; };
        var positiveconfirmityname;
        var positiveconfirmity_index = $scope.positiveconfirmity_data.map(function (e) { return e.positiveconfirmity_gid }).indexOf($scope.cbopositiveconfirmityedit);
        if (positiveconfirmity_index == -1) { positiveconfirmityname = ''; } else { positiveconfirmityname = $scope.positiveconfirmity_data[positiveconfirmity_index].positiveconfirmity_name; };
        
        var params = {

            checkpointgroupadd_gid: id,           
            riskcategory_gid: $scope.cboriskcategoryedit,
            checkpointgroup_gid: checkpointgroup_gid,
            riskcategory_name: riskcategoryname,
            positiveconfirmity_gid: $scope.cbopositiveconfirmityedit,
            positiveconfirmity_name: positiveconfirmityname,
            checkpoint_intent: $scope.txteditcheckpoint_intent,
            checkpoint_description: $scope.txteditcheckpoint_description,
            noteto_auditor: $scope.txteditnoteto_auditor,
            yes_score: $scope.txtedityes_score,
            yes_disposition: $scope.txtedityes_disposition,
            no_score: $scope.txteditno_score,
            no_disposition: $scope.txteditno_disposition,
            partial_score: $scope.txteditpartial_score,
            partial_disposition: $scope.txteditpartial_disposition,
            na_score: $scope.txteditna_score,
            na_disposition: $scope.txteditna_disposition,
            total_score: $scope.txtedit_totalscore,

        }

        var url = 'api/AtmMstCheckpointGroup/UpdateCheckpoint';
        lockUI()
        SocketService.post(url, params).then(function (resp) {
            if (resp.data.status == true) {
                unlockUI()
                
                //$state.go('app.AtmMstCheckpointGroupAdd');
                //$location.url('app/AtmMstCheckpointAddSummary?checkpointgroup_gid=' + checkpointgroup_gid);
                location.reload(true);
                //activate();
                Notify.alert(resp.data.message, 'success')
            }
            else {
                unlockUI();
                Notify.alert(resp.data.message, 'warning')
            }

        });
        $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
        $scope.IsVisible = $scope.IsVisible ? false : true;      
    }

    $scope.edit_back = function (val1) {
        $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
        //$scope.IsVisible = $scope.IsVisible ? false : true;
        $scope.IsVisible = false;

    }
    $scope.viewback = function () {
        
        $scope.IsVisible3 = $scope.IsVisible3 ? false : true;
        //$scope.IsVisible = $scope.IsVisible ? false : true;
        $scope.IsVisible = false;

    }



    $scope.view = function (val7) {
        //$scope.IsVisible = $scope.IsVisible ? false : true;
        //$scope.IsVisible3 = $scope.IsVisible3 ? false : true;


        var url = 'api/AtmMstCheckpointGroup/EditCheckpoint';
        var params = {
            checkpointgroupadd_gid: val7
        }
        lockUI();
        SocketService.getparams(url, params).then(function (resp) {
            $scope.txtcheckpoint1 = resp.data.checkpointgroup_name
            $scope.cboriskcategory1 = resp.data.riskcategory_gid,
              $scope.cboriskcategory1 = resp.data.riskcategory_name,
             $scope.cbopositiveconfirmity1 = resp.data.positiveconfirmity_gid,
                $scope.cbopositiveconfirmity1 = resp.data.positiveconfirmity_name,             
            $scope.txtcheckpoint_intent1 = resp.data.checkpoint_intent,
            $scope.txtcheckpoint_description1 = resp.data.checkpoint_description,
            $scope.txtnoteto_auditor1 = resp.data.noteto_auditor,
            $scope.txtyes_score1 = resp.data.yes_score,
            $scope.txtyes_disposition1 = resp.data.yes_disposition,
            $scope.txtno_score1 = resp.data.no_score,
            $scope.txtno_disposition1 = resp.data.no_disposition,
            $scope.txtpartial_score1 = resp.data.partial_score,
            $scope.txtpartial_disposition1 = resp.data.partial_disposition,
            $scope.txtna_score1 = resp.data.na_score,
            $scope.txtna_disposition1 = resp.data.na_disposition,
            $scope.txt_totalscore1 = resp.data.total_score,


            unlockUI();
        });

        $scope.IsVisible3 = true;
        $scope.IsVisible2 = false;
        $scope.IsVisible1 = false;
        //$scope.IsVisible3 = $scope.IsVisible3 ? false : true;
        $scope.IsVisible = $scope.IsVisible ? false : true;
        $scope.id = val7;
        activate();
        var url = 'api/AtmMstCheckpointGroup/GetCheckListToCheckpointView';
        SocketService.getparams(url, params).then(function (resp) {
            $scope.checklist_list = resp.data.checklistcheckpoint_list;
        });
        //var url = 'api/AtmTrnAuditCreation/GetAuditeeList';
        //SocketService.getparams(url, params).then(function (resp) {
        //    $scope.multipleauditee_list = resp.data.multipleauditee_list;
        //});
        var url = 'api/AtmMstCheckpointGroup/GetAuditeeSummaryList';
        SocketService.getparams(url, params).then(function (resp) {
            $scope.multipleauditee_list = resp.data.multipleauditee_list;
        });
    }

    $scope.backcheckpoint = function (val) {
        $state.go('app.AtmMstCheckpointGroupAdd');
    }

    $scope.checkpointintent = function (checkpointgroupadd_gid, checkpoint_intent, checkpoint_description) {
        var modalInstance = $modal.open({
            templateUrl: '/checkpointintent.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }
            lockUI();
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointIntent';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtcheckpointintent = resp.data.checkpoint_intent;
                $scope.txtcheckpointdescription = resp.data.checkpoint_description;


            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }
    $scope.description = function (checkpointgroupadd_gid, checkpoint_description) {
        var modalInstance = $modal.open({
            templateUrl: '/checkpointdescription.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            'use strict';

            angular
                .module('angle')
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }
            lockUI();
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointDescription';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtcheckpointdescription = resp.data.checkpoint_description;

            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }
    $scope.notetoauditor = function (checkpointgroupadd_gid, noteto_auditor) {
        var modalInstance = $modal.open({
            templateUrl: '/notetoauditor.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }
            lockUI();
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointNotestoAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtnotetoauditor = resp.data.noteto_auditor;

            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }



    $scope.deletecheckpoint = function (checkpointgroupadd_gid) {
        var params = {
            checkpointgroupadd_gid: checkpointgroupadd_gid
        }


        SweetAlert.swal({
            title: 'Are you sure?',
            text: 'Do You Want To Delete the Record ?',
            showCancelButton: true,
            confirmButtonColor: '#DD6B55',
            confirmButtonText: 'Yes, delete it!',
            closeOnConfirm: false
        }, function (isConfirm) {
            if (isConfirm) {
                var url = 'api/AtmMstCheckpointGroup/DeleteCheckpointAdd';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        activate();
                    }
                    else {
                        Notify.alert('Error Occurred While Deleting Check Point Group !!!', {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();
                    }
                });
                SweetAlert.swal('Deleted Successfully!');
            }

        });
    };

    $scope.importexcel = function (checkpointgroup_gid) {
        var modalInstance = $modal.open({
            templateUrl: '/importexcel.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'lg'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {


            var params = {
                checkpointgroup_gid: checkpointgroup_gid,
            }

            $scope.ok = function () {
                $modalInstance.close('closed');
            };

            $scope.downloadtemplate_importexcel = function () {
              
                var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                var filename = "\ImportExcelCheckpoint.xlsx";
                //var phyPath = resp.data.file_path;
                var phyPath = Templateurl + filename;
                var relPath = phyPath.split("EMS");
                var relpath1 = relPath[1].replace("\\", "/");
                var prefix = window.location.protocol + "//";
                var hosts = window.location.host;
                var str = prefix.concat(hosts, relpath1);
                var link = document.createElement("a");
                var name = filename.split('.');
                link.download = name[0];
                link.href = str;
                link.click();
            }

            $scope.excelupload = function (val, val1, name) {

                var fileInput = document.getElementById('fileimport');
                var filePath = fileInput.value;

                $scope.fileinputvalue = filePath;

                // Allowing file type
                var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                if (!allowedExtensions.exec(filePath)) {
                    Notify.alert('File Format Not Supported!', 'warning')
                    $modalInstance.close('closed');
                    //fileInput.value = '';
                }
                else if (filePath.includes("ImportExcelCheckpoint") == false) {
                    Notify.alert('File Name / Template Not Supported!', 'warning')
                    $modalInstance.close('closed');
                }
                else {
                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };
                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('checkpointgroup_gid', checkpointgroup_gid);
                    frm.append('project_flag', "Default");

                    $scope.uploadfrm = frm;
                }
            }

            $scope.uploadexcel = function () {

                if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                    Notify.alert('Kindly Select the Excel file', 'warning')
                }
                else {
                    var url = 'api/AtmMstCheckpointGroup/ImportExcelCheckpoint';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        if (resp.data.status == true) {
                            activate();
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmMstCheckpointAddSummary?checkpointgroup_gid=' + checkpointgroup_gid)
                            location.reload(true);
                            //activate()
                            $modalInstance.close('closed');
                        }
                        else {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                        }
                        $("#fileimport").val('');
                    });
                }

            }

            $scope.uploadexcelcancel = function () {
                $("#fileimport").val('');
            };
        }
    }
    $scope.checklist_add = function () {
        if (($scope.txtchecklist == undefined) || ($scope.txtchecklist == '')) {
            Notify.alert('Enter Check List', 'warning');
        }
        else {

            var params = {
                checkpointgroup_gid: checkpointgroup_gid,      
                checklist_name: $scope.txtchecklist,

            }
            lockUI();
            var url = 'api/AtmMstCheckpointGroup/CreateCheckListToCheckpoint';
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                checklist();
                $scope.txtchecklist = '';

            });
        }
    }

    function checklist() {
       
        var url = 'api/AtmMstCheckpointGroup/GetCheckListToCheckpoint';
        SocketService.get(url).then(function (resp) {
            $scope.checklistpoint_list = resp.data.checklistcheckpoint_list;
        });
    }
  
    function checkpoint() {
        var params = {
            checkpointgroupadd_gid: checkpointgroupadd_gid,
        }

        var url = 'api/AtmMstCheckpointGroup/GetCheckListToCheckpointView';
        SocketService.getparams(url,params).then(function (resp) {
            $scope.checklist_list = resp.data.checklistcheckpoint_list;
        });
    }
    $scope.checklist_edit = function (checkpointgroupadd_gid) {
        if (($scope.txtchecklist == undefined) || ($scope.txtchecklist == '')) {
            Notify.alert('Enter Check List', 'warning');
        }
        else {

            var params = {
                checkpointgroup_gid: checkpointgroup_gid,
                checkpointgroupadd_gid: checkpointgroupadd_gid,
                checklist_name: $scope.txtchecklist,

            }
            lockUI();
            var url = 'api/AtmMstCheckpointGroup/UpdateCheckListToCheckpoint';
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                checkpointcheck_editlist(checkpointgroupadd_gid);
                $scope.txtchecklist = '';

            });
        }
    }

    function checkpointcheck_editlist(checkpointgroupadd_gid) {
        var params =
        {
            checkpointgroupadd_gid: checkpointgroupadd_gid,
        }
        var url = 'api/AtmMstCheckpointGroup/GetTempCheckpointCheckList';
        SocketService.getparams(url, params).then(function (resp) {
            $scope.checklist_list = resp.data.checklistcheckpoint_list;
        });
    }
    $scope.checklist_delete = function (checklist2checkpoint,checkpointgroupadd_gid) {
        var params =
            {
                checklist2checkpoint: checklist2checkpoint
            }
        lockUI();
        var url = 'api/AtmMstCheckpointGroup/DeleteChecklist2Checkpoint';
        SocketService.getparams(url, params).then(function (resp) {
            unlockUI();
            if (resp.data.status == true) {
                Notify.alert(resp.data.message, {
                    status: 'success',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                Notify.alert(resp.data.message, {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            checkpointcheck_editlist(checkpointgroupadd_gid);
            
        });
    }
        $scope.delete_checkpoint = function (checklist2checkpoint) {
        var params =
            {
            checklist2checkpoint: checklist2checkpoint
            }
        var url = 'api/AtmMstCheckpointGroup/DeleteCheckpointList';

        lockUI();
        SocketService.getparams(url, params).then(function (resp) {
            unlockUI();
            if (resp.data.status == true) {
                Notify.alert(resp.data.message, {
                    status: 'success',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                Notify.alert(resp.data.message, {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            checkpoint_list();
        });
    }
    function checkpoint_list() {
        var url = 'api/AtmMstCheckpointGroup/GetCheckpointList';
        SocketService.get(url).then(function (resp) {
            $scope.checklistpoint_list = resp.data.checklistcheckpoint_list;
        });
    }


    $scope.delete_checkpointchecklist = function (checklist2checkpoint) {
        var params =
            {
                checklist2checkpoint: checklist2checkpoint
            }
        var url = 'api/AtmMstCheckpointGroup/DeleteCheckpointList';

        lockUI();
        SocketService.getparams(url, params).then(function (resp) {
            unlockUI();
            if (resp.data.status == true) {
                Notify.alert(resp.data.message, {
                    status: 'success',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                Notify.alert(resp.data.message, {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            checkpointcheck_list();
        });
        }
        $scope.addauditee = function () {
            var lsauditeemaker_gid = '';
            var lsauditeemaker_name = '';
            if ($scope.cboauditeemaker != undefined || $scope.cboauditeemaker != null) {
                lsauditeemaker_gid = $scope.cboauditeemaker.employee_gid;
                lsauditeemaker_name = $scope.cboauditeemaker.employee_name;
            }
            var lsauditeechecker_gid = '';
            var lsauditeechecker_name = '';
            if ($scope.cboauditeechecker != undefined || $scope.cboauditeechecker != null) {
                lsauditeechecker_gid = $scope.cboauditeechecker.employee_gid;
                lsauditeechecker_name = $scope.cboauditeechecker.employee_name;
            }

            if (($scope.cboauditeemaker == '' || $scope.cboauditeemaker == null) || ($scope.cboauditeechecker == '' || $scope.cboauditeechecker == null)) {
                Notify.alert('Kindly Fill Auditee Details', 'warning')
            }
            else {
                var params = {
                    auditeemaker_gid: lsauditeemaker_gid,
                    auditeemaker_name: lsauditeemaker_name,
                    auditeechecker_gid: lsauditeechecker_gid,
                    auditeechecker_name: lsauditeechecker_name,
                }
                var url = 'api/AtmMstCheckpointGroup/PostMultipleAuditee';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        auditee_list();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $scope.cboauditeemaker = '';
                    $scope.cboauditeechecker = '';
                });
            }
        }


        function auditee_list() {

            var url = 'api/AtmMstCheckpointGroup/GetAuditeeList';
            SocketService.get(url).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
        $scope.delete_auditee = function (multipleauditee_gid) {
            var params =
            {
                multipleauditee_gid: multipleauditee_gid
            }
            var url = 'api/AtmMstCheckpointGroup/DeleteAuditeeList';

            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                deleteauditee_list();
            });
        }
        function deleteauditee_list() {
            var url = 'api/AtmMstCheckpointGroup/GetAuditeeList';
            SocketService.get(url).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
              
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.add_auditee = function (checkpointgroupadd_gid) {
            var lsauditeemaker_gid = '';
            var lsauditeemaker_name = '';
            if ($scope.cboauditeemaker != undefined || $scope.cboauditeemaker != null) {
                lsauditeemaker_gid = $scope.cboauditeemaker.employee_gid;
                lsauditeemaker_name = $scope.cboauditeemaker.employee_name;
            }
            var lsauditeechecker_gid = '';
            var lsauditeechecker_name = '';
            if ($scope.cboauditeechecker != undefined || $scope.cboauditeechecker != null) {
                lsauditeechecker_gid = $scope.cboauditeechecker.employee_gid;
                lsauditeechecker_name = $scope.cboauditeechecker.employee_name;
            }

            if (($scope.cboauditeemaker == '' || $scope.cboauditeemaker == null) || ($scope.cboauditeechecker == '' || $scope.cboauditeechecker == null)) {
                Notify.alert('Kindly Fill Auditee Details', 'warning')
            }
            else {
                var params = {
                    auditeemaker_gid: lsauditeemaker_gid,
                    auditeemaker_name: lsauditeemaker_name,
                    auditeechecker_gid: lsauditeechecker_gid,
                    auditeechecker_name: lsauditeechecker_name,
                    checkpointgroupadd_gid: checkpointgroupadd_gid

                }
                var url = 'api/AtmMstCheckpointGroup/MultipleAuditeeEdit';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    auditeeedit_list(checkpointgroupadd_gid);
                    $scope.cboauditeemaker = '';
                    $scope.cboauditeechecker = '';
                });
            }

        }
        $scope.editdelete_auditee = function (multipleauditee_gid) {
            var params =
            {
                multipleauditee_gid: multipleauditee_gid
            }
            var url = 'api/AtmMstCheckpointGroup/DeleteAuditee';

            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                auditeeedit_list();
            });
        }
        function auditeeedit_list(checkpointgroupadd_gid) {
            var params =
            {
                checkpointgroupadd_gid: checkpointgroupadd_gid,
            }
            var url = 'api/AtmMstCheckpointGroup/GetTempAssignedAuditeeList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
}

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointEditController', AtmMstCheckpointEditController);

    AtmMstCheckpointEditController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];

    function AtmMstCheckpointEditController($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointEditController';
        var checkpointgroupadd_gid = $location.search().checkpointgroupadd_gid;
        activate();
        function activate() {
            var url = 'api/AtmMstRiskCategory/GetRiskCategory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });

            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }
            var url = 'api/AtmMstCheckpointGroup/EditCheckpoint';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboriskcategoryedit = resp.data.riskcategory_gid,
                $scope.cbopositiveconfirmityedit = resp.data.positiveconfirmity_gid,
                $scope.txteditcheckpoint_intent = resp.data.checkpoint_intent,
                $scope.txteditcheckpoint_description = resp.data.checkpoint_description,
                $scope.txteditnoteto_auditor = resp.data.noteto_auditor,
                $scope.txtedityes_score = parseFloat(resp.data.yes_score),
                $scope.txtedityes_disposition = resp.data.yes_disposition,
                $scope.txteditno_score = parseFloat(resp.data.no_score),
                $scope.txteditno_disposition = resp.data.no_disposition,
                $scope.txteditpartial_score = parseFloat(resp.data.partial_score),
                $scope.txteditpartial_disposition = resp.data.partial_disposition,
                $scope.txteditna_score = parseFloat(resp.data.na_score),
                $scope.txteditna_disposition = resp.data.na_disposition,
                $scope.txtedit_totalscore = parseFloat(resp.data.total_score),


                unlockUI();
            });
        }

        $scope.changevalue = function () {
            //var val1 = parseFloat($scope.txteditna_score);
            var val1 = parseFloat($scope.txteditna_score);
            var val2 = parseFloat($scope.txteditno_score);
            var val3 = parseFloat($scope.txtedityes_score);
            var val4 = parseFloat($scope.txteditpartial_score);
            var val5 = parseFloat($scope.txtedit_totalscore);
            if ($scope.txteditna_score != undefined || $scope.txteditna_score != null) {
                val1 = parseFloat($scope.txteditna_score);
            }

            if ($scope.txteditno_score != undefined || $scope.txteditno_score != null) {
                val2 = parseFloat($scope.txteditno_score);
            }

            if ($scope.txtedityes_score != undefined || $scope.txtedityes_score != null) {
                val3 = parseFloat($scope.txtedityes_score);
            }

            if ($scope.txteditpartial_score != undefined || $scope.txteditpartial_score != null) {
                val4 = parseFloat($scope.txteditpartial_score);
            }


            val5 = val1 + val2 + val3 + val4;


            $scope.txtedit_totalscore = val5;

        }
        $scope.Update = function () {

            var riskcategoryname;
            var riskcategory_index = $scope.riskcategory_list.map(function (e) { return e.riskcategory_gid }).indexOf($scope.cboriskcategoryedit);
            if (riskcategory_index == -1) { riskcategoryname = ''; } else { riskcategoryname = $scope.riskcategory_list[riskcategory_index].riskcategory_name; };
            var positiveconfirmityname;
            var positiveconfirmity_index = $scope.positiveconfirmity_data.map(function (e) { return e.positiveconfirmity_gid }).indexOf($scope.cbopositiveconfirmityedit);
            if (positiveconfirmity_index == -1) { positiveconfirmityname = ''; } else { positiveconfirmityname = $scope.positiveconfirmity_data[positiveconfirmity_index].positiveconfirmity_name; };

            var params = {

                checkpointgroupadd_gid: checkpointgroupadd_gid,
                riskcategory_gid: $scope.cboriskcategoryedit,
                riskcategory_name: riskcategoryname,
                positiveconfirmity_gid: $scope.cbopositiveconfirmityedit,
                positiveconfirmity_name: positiveconfirmityname,
                checkpoint_intent: $scope.txteditcheckpoint_intent,
                checkpoint_description: $scope.txteditcheckpoint_description,
                noteto_auditor: $scope.txteditnoteto_auditor,
                yes_score: $scope.txtedityes_score,
                yes_disposition: $scope.txtedityes_disposition,
                no_score: $scope.txteditno_score,
                no_disposition: $scope.txteditno_disposition,
                partial_score: $scope.txteditpartial_score,
                partial_disposition: $scope.txteditpartial_disposition,
                na_score: $scope.txteditna_score,
                na_disposition: $scope.txteditna_disposition,
                total_score: $scope.txtedit_totalscore,

            }

            var url = 'api/AtmMstCheckpointGroup/UpdateCheckpoint';
            lockUI()
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                    activate();
                    $state.go('app.AtmMstCheckpointGroupAdd');
                    Notify.alert(resp.data.message, 'success')
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, 'warning')
                }

            });
        }
        $scope.back = function (val) {
            $state.go('app.AtmMstCheckpointGroupAdd');
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointGroupAddController', AtmMstCheckpointGroupAddController);

    AtmMstCheckpointGroupAddController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams','cmnfunctionService'];

    function AtmMstCheckpointGroupAddController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointGroupAddController';

        activate();

        function activate() {
            var url = 'api/AtmMstCheckpointGroup/GetCheckpointGroup';
             lockUI();
             SocketService.get(url).then(function (resp) {
                 $scope.checkpointgroup_data = resp.data.checkpointgroup_list;
                 unlockUI();
             });


            //var url = 'api/AtmMstCheckpointGroup/GetCheckpointGroup';
            //SocketService.get(url).then(function (resp) {
            //    unlockUI()
            //    $scope.checkpointgroup_data = resp.data.checkpointgroup_list
            //    angular.forEach($scope.checkpointgroup_data, function (value, key) {
            //        var params = {
            //            checkpointgroup_gid: value.checkpointgroup_gid
            //        };

            //        var url = 'api/AtmMstCheckpointGroup/GetCheckpointAdd';
            //        SocketService.getparams(url, params).then(function (resp) {
            //            value.checkpointgroupadd_list = resp.data.checkpointgroupadd_list;
            //            value.expand = false;

            //        });


                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistMasterAdd';
                    //SocketService.getparams(url, params).then(function (resp) {
                    //    value.checklistmasteradd_list = resp.data.checklistmasteradd_list;
                    //    value.expand = false;

                    //});
            //    });
            //});

        }


        $scope.createchecklist = function (val) {
            $location.url('app/AtmMstCheckpointAddSummary?hash=' + cmnfunctionService.encryptURL('checkpointgroup_gid=' + val))
        }

        //$scope.createchecklist = function (val) {
        //    $location.url('app/AtmMstCheckpointAdd?checkpointgroup_gid=' + val)
        //}

        $scope.edit = function (val1) {
            $location.url('app/AtmMstCheckpointEdit?checkpointgroupadd_gid=' + val1)
        }

        $scope.view = function (val2) {
            $location.url('app/AtmMstCheckpointView?checkpointgroupadd_gid=' + val2)
        }


        $scope.addCheckpointGroup = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addCheckpointGroup.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.submit = function () {

                    var params = {
                        checkpointgroup_name: $scope.txtcheckpointgroup_name,
                        checkpointgroup_code: $scope.txtcheckpointgroup_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code

                    }
                    var url = 'api/AtmMstCheckpointGroup/CreateCheckpointGroup';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.editCheckpointGroup = function (checkpointgroup_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editCheckpointGroup.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    checkpointgroup_gid: checkpointgroup_gid
                }
                var url = 'api/AtmMstCheckpointGroup/EditCheckpointGroup';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditcheckpointgroup_code = resp.data.checkpointgroup_code;
                    $scope.txteditcheckpointgroup_name = resp.data.checkpointgroup_name;
                    $scope.checkpointgroup_gid = resp.data.checkpointgroup_gid;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.update = function () {

                    var url = 'api/AtmMstCheckpointGroup/UpdateCheckpointGroup';
                    var params = {
                        checkpointgroup_code: $scope.txteditcheckpointgroup_code,
                        checkpointgroup_name: $scope.txteditcheckpointgroup_name,
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        checkpointgroup_gid: $scope.checkpointgroup_gid
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }

        $scope.Status_update = function (checkpointgroup_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusCheckpointGroup.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    checkpointgroup_gid: checkpointgroup_gid
                }
                var url = 'api/AtmMstCheckpointGroup/EditCheckpointGroup';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checkpointgroup_gid = resp.data.checkpointgroup_gid
                    $scope.txtcheckpointgroup_name = resp.data.checkpointgroup_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        checkpointgroup_name: $scope.txtcheckpointgroup_name,
                        checkpointgroup_gid: $scope.checkpointgroup_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstCheckpointGroup/InactiveCheckpointGroup';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    checkpointgroup_gid: checkpointgroup_gid
                }

                var url = 'api/AtmMstCheckpointGroup/CheckpointGroupInactiveLogview';
                lockUI();
                SocketService.getparams(url, param).then(function (resp) {
                    $scope.checkpointgroupinactivelog_data = resp.data.checkpointgroup_list;
                    unlockUI();
                });
            }
        }


        $scope.delete = function (checkpointgroup_gid) {
            var params = {
                checkpointgroup_gid: checkpointgroup_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstCheckpointGroup/DeleteCheckpointGroup';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting Check Point Group !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };


        $scope.checkpointintent = function (checkpointgroupadd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checkpointgroupadd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checkpointgroupadd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                lockUI();
                var url = 'api/AtmMstCheckpointGroup/GetCheckpointNotestoAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }



        $scope.deletecheckpoint = function (checkpointgroupadd_gid) {
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }


            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstCheckpointGroup/DeleteCheckpointAdd';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert('Error Occurred While Deleting Check Point Group !!!', {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };



        $scope.importexcel = function (checkpointgroup_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    checkpointgroup_gid: checkpointgroup_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelCheckpoint.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();


                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelCheckpoint") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('checkpointgroup_gid', checkpointgroup_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmMstCheckpointGroup/ImportExcelCheckpoint';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $state.go('app.AtmMstCheckpointGroupAdd');

                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }




    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointSummaryController', AtmMstCheckpointSummaryController);

    AtmMstCheckpointSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmMstCheckpointSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointSummaryController';
        var checklistmaster_gid = $location.search().checklistmaster_gid;
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        $scope.IsVisible = false;
        $scope.IsVisible1 = false;
        $scope.IsVisible2 = false;
        activate();

        function activate() {

            var params =
                {
                    checklistmaster_gid: checklistmaster_gid
                }
            var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAdd';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.checklistmasteradd_list = resp.data.checklistmasteradd_list;
                unlockUI();
            });
            var url = 'api/AtmMstRiskCategory/GetRiskCategoryActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_list = resp.data.riskcategory_list;
                unlockUI();
            });

            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmityActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });
            var url = 'api/AtmMstChecklistMaster/GetCheckpointStatus';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checklistmaster_list = resp.data.checklistmaster_list;
                unlockUI();
            });
        }
        $scope.addcheckpoint = function () {
            $scope.IsVisible = $scope.IsVisible ? false : true;
            $scope.IsVisible1 = $scope.IsVisible1 ? false : true;
            $scope.IsVisible2 = false;
            $scope.IsVisible3 = false;
        }
        $scope.edit = function (val) {
           
            var params = {
                checklistmasteradd_gid: val
            }
            var url = 'api/AtmMstChecklistMaster/EditChecklistMaster';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cbocheckpointgroup_edit = resp.data.checkpointgroup_gid,
                $scope.cboriskcategoryedit = resp.data.riskcategory_gid,
                $scope.cbopositiveconfirmityedit = resp.data.positiveconfirmity_gid,
                $scope.txteditcheckpoint_intent = resp.data.checkpoint_intent,
                $scope.txteditcheckpoint_description = resp.data.checkpoint_description,
                $scope.txteditnoteto_auditor = resp.data.noteto_auditor,
                $scope.txtedityes_score = parseFloat(resp.data.yes_score),
                $scope.txtedityes_disposition = resp.data.yes_disposition,
                $scope.txteditno_score = parseFloat(resp.data.no_score),
                $scope.txteditno_disposition = resp.data.no_disposition,
                $scope.txteditpartial_score = parseFloat(resp.data.partial_score),
                $scope.txteditpartial_disposition = resp.data.partial_disposition,
                $scope.txteditna_score = parseFloat(resp.data.na_score),
                $scope.txteditna_disposition = resp.data.na_disposition,
                $scope.txtedit_totalscore = parseFloat(resp.data.total_score),


                unlockUI();
            });
            $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
            $scope.IsVisible = $scope.IsVisible ? false : true;
            $scope.IsVisible3 = false;
            $scope.IsVisible1 = false;
 
            $scope.id = val;
            activate();
        }
        $scope.changevalue = function () {
            //var val1 = parseFloat($scope.txteditna_score);
            var val1 = parseFloat($scope.txteditna_score);
            var val2 = parseFloat($scope.txteditno_score);
            var val3 = parseFloat($scope.txtedityes_score);
            var val4 = parseFloat($scope.txteditpartial_score);
            var val5 = parseFloat($scope.txtedit_totalscore);
            if ($scope.txteditna_score != undefined || $scope.txteditna_score != null) {
                val1 = parseFloat($scope.txteditna_score);
            }

            if ($scope.txteditno_score != undefined || $scope.txteditno_score != null) {
                val2 = parseFloat($scope.txteditno_score);
            }

            if ($scope.txtedityes_score != undefined || $scope.txtedityes_score != null) {
                val3 = parseFloat($scope.txtedityes_score);
            }

            if ($scope.txteditpartial_score != undefined || $scope.txteditpartial_score != null) {
                val4 = parseFloat($scope.txteditpartial_score);
            }


            val5 = val1 + val2 + val3 + val4;


            $scope.txtedit_totalscore = val5;

        }
        $scope.checklistmasterUpdate = function (id) {

            var riskcategoryname;
            var riskcategory_index = $scope.riskcategory_list.map(function (e) { return e.riskcategory_gid }).indexOf($scope.cboriskcategoryedit);
            if (riskcategory_index == -1) { riskcategoryname = ''; } else { riskcategoryname = $scope.riskcategory_list[riskcategory_index].riskcategory_name; };

            var positiveconfirmityname;
            var positiveconfirmity_index = $scope.positiveconfirmity_data.map(function (e) { return e.positiveconfirmity_gid }).indexOf($scope.cbopositiveconfirmityedit);
            if (positiveconfirmity_index == -1) { positiveconfirmityname = ''; } else { positiveconfirmityname = $scope.positiveconfirmity_data[positiveconfirmity_index].positiveconfirmity_name; };

            var checkpointgroupname;
            var checkpointgroup_index = $scope.checklistmaster_list.map(function (e) { return e.checkpointgroup_gid }).indexOf($scope.cbocheckpointgroup_edit);
            if (checkpointgroup_index == -1) { checkpointgroupname = ''; } else { checkpointgroupname = $scope.checklistmaster_list[checkpointgroup_index].checkpointgroup_name; };

            var params = {

                checklistmasteradd_gid: id,
                riskcategory_gid: $scope.cboriskcategoryedit,
                riskcategory_name: riskcategoryname,
                checkpointgroup_gid: $scope.cbocheckpointgroup_edit,
                checkpointgroup_name: checkpointgroupname,
                positiveconfirmity_gid: $scope.cbopositiveconfirmityedit,
                positiveconfirmity_name: positiveconfirmityname,
                checkpoint_intent: $scope.txteditcheckpoint_intent,
                checkpoint_description: $scope.txteditcheckpoint_description,
                noteto_auditor: $scope.txteditnoteto_auditor,
                yes_score: $scope.txtedityes_score,
                yes_disposition: $scope.txtedityes_disposition,
                no_score: $scope.txteditno_score,
                no_disposition: $scope.txteditno_disposition,
                partial_score: $scope.txteditpartial_score,
                partial_disposition: $scope.txteditpartial_disposition,
                na_score: $scope.txteditna_score,
                na_disposition: $scope.txteditna_disposition,
                total_score: $scope.txtedit_totalscore,

            }

            var url = 'api/AtmMstChecklistMaster/UpdateChecklistMaster';
            lockUI()
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI()
                    activate();
                    $state.go('app.AtmMstChecklistMasterSummary');
                    Notify.alert(resp.data.message, 'success')
                }
                else {
                    unlockUI();
                    Notify.alert(resp.data.message, 'warning')
                }

            });
            $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
            $scope.IsVisible = $scope.IsVisible ? false : true;
        }
        $scope.changevalueadd = function () {
            var val1 = 0;
            var val2 = 0;
            var val3 = 0;
            var val4 = 0;
            var val5 = 0;
            if ($scope.txtna_score != undefined || $scope.txtna_score != null) {
                val1 = $scope.txtna_score;
            }

            if ($scope.txtno_score != undefined || $scope.txtno_score != null) {
                val2 = $scope.txtno_score;
            }

            if ($scope.txtyes_score != undefined || $scope.txtyes_score != null) {
                val3 = $scope.txtyes_score;
            }

            if ($scope.txtpartial_score != undefined || $scope.txtpartial_score != null) {
                val4 = $scope.txtpartial_score;
            }


            val5 = val1 + val2 + val3 + val4;


            $scope.txt_totalscore = parseFloat(val5.toFixed(2));

        }
        $scope.submitChecklistmasterAdd = function () {

            var lsriskcategory_gid = '';
            var lsriskcategory_name = '';
            if ($scope.cboriskcategory != undefined || $scope.cboriskcategory != null) {
                lsriskcategory_gid = $scope.cboriskcategory.riskcategory_gid;
                lsriskcategory_name = $scope.cboriskcategory.riskcategory_name;
            }

            var lspositiveconfirmity_gid = '';
            var lspositiveconfirmity_name = '';
            if ($scope.cbopositiveconfirmity != undefined || $scope.cbopositiveconfirmity != null) {
                lspositiveconfirmity_gid = $scope.cbopositiveconfirmity.positiveconfirmity_gid;
                lspositiveconfirmity_name = $scope.cbopositiveconfirmity.positiveconfirmity_name;
            }
            var lscheckpointgroup_gid = '';
            var lscheckpointgroup_name = '';
            if ($scope.cbocheckpointgroup != undefined || $scope.cbocheckpointgroup != null) {
                lscheckpointgroup_gid = $scope.cbocheckpointgroup.checkpointgroup_gid;
                lscheckpointgroup_name = $scope.cbocheckpointgroup.checkpointgroup_name;
            }
            var params = {
                checkpointgroup_gid: lscheckpointgroup_gid,
                checkpointgroup_name: lscheckpointgroup_name,
                positiveconfirmity_gid: lspositiveconfirmity_gid,
                positiveconfirmity_name: lspositiveconfirmity_name,
                riskcategory_gid: lsriskcategory_gid,
                riskcategory_name: lsriskcategory_name,
                checklistmaster_gid: checklistmaster_gid,
                checkpoint_intent: $scope.txtcheckpoint_intent,
                checkpoint_description: $scope.txtcheckpoint_description,
                noteto_auditor: $scope.txtnoteto_auditor,
                yes_score: $scope.txtyes_score,
                yes_disposition: $scope.txtyes_disposition,
                no_score: $scope.txtno_score,
                no_disposition: $scope.txtno_disposition,
                partial_score: $scope.txtpartial_score,
                partial_disposition: $scope.txtpartial_disposition,
                na_score: $scope.txtna_score,
                na_disposition: $scope.txtna_disposition,
                total_score: $scope.txt_totalscore,

            }

            var url = 'api/AtmMstChecklistMaster/PostChecklistMasterAdd';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {


                    $scope.cboriskcategory = '';
                    $scope.cbopositiveconfirmity = '';
                    $scope.txtcheckpoint_intent = '';
                    $scope.txtcheckpoint_description = '';
                    $scope.txtnoteto_auditor = '';
                    $scope.txtyes_score = '';
                    $scope.txtyes_disposition = '';
                    $scope.txtno_score = '';
                    $scope.txtno_disposition = '';
                    $scope.txtpartial_score = '';
                    $scope.txtpartial_disposition = '';
                    $scope.txtna_score = '';
                    $scope.txtna_disposition = '';
                    $scope.txt_totalscore = '';
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    //$state.go('app.AtmMstChecklistMasterAudit');
                    //activate();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                   
                }
                location.reload(true);
            });
            $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
            $scope.IsVisible = $scope.IsVisible ? false : true;
           
        }
        $scope.edit_back = function (val1) {
            $scope.IsVisible2 = $scope.IsVisible2 ? false : true;
            $scope.IsVisible = false;
        }

        $scope.backcheckpoint = function (val) {
            $state.go('app.AtmMstChecklistMasterSummary');
        }

        //$scope.view = function (val2) {
        //    //var checklistmaster_gid = $scope.checklistmaster_gid;

        //    $location.url('app/AtmMstChecklistMasterAuditView?checklistmasteradd_gid=' + val2 )
        //}

        $scope.viewback = function () {

            $scope.IsVisible3 = $scope.IsVisible3 ? false : true;
            $scope.IsVisible = false;

        }

        $scope.view = function (val7) {

            var url = 'api/AtmMstChecklistMaster/EditChecklistMaster';
            var params = {
                checklistmasteradd_gid: val7
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtcheckpoint1 = resp.data.checkpointgroup_name
                $scope.cboriskcategory1 = resp.data.riskcategory_gid,
                  $scope.cboriskcategory1 = resp.data.riskcategory_name,
                 $scope.cbopositiveconfirmity1 = resp.data.positiveconfirmity_gid,
                  $scope.cbopositiveconfirmity1 = resp.data.positiveconfirmity_name,
                $scope.txtcheckpoint_intent1 = resp.data.checkpoint_intent,
                $scope.txtcheckpoint_description1 = resp.data.checkpoint_description,
                $scope.txtnoteto_auditor1 = resp.data.noteto_auditor,
                $scope.txtyes_score1 = resp.data.yes_score,
                $scope.txtyes_disposition1 = resp.data.yes_disposition,
                $scope.txtno_score1 = resp.data.no_score,
                $scope.txtno_disposition1 = resp.data.no_disposition,
                $scope.txtpartial_score1 = resp.data.partial_score,
                $scope.txtpartial_disposition1 = resp.data.partial_disposition,
                $scope.txtna_score1 = resp.data.na_score,
                $scope.txtna_disposition1 = resp.data.na_disposition,
                $scope.txt_totalscore1 = resp.data.total_score,

                unlockUI();
            });

            $scope.IsVisible3 = true;
            $scope.IsVisible2 = false;
            $scope.IsVisible1 = false;
            $scope.IsVisible = $scope.IsVisible ? false : true;
            $scope.id = val7;
            activate();
        }


        $scope.addchecklist = function () {
            $state.go('app.AtmMstChecklistMasterSummary');
        }
        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.auditname = function (checklistmaster_gid, audit_name) {
            var modalInstance = $modal.open({
                templateUrl: '/auditname.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmaster_gid: checklistmaster_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditorName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtaudit_name = resp.data.audit_name;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
    })();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstCheckpointViewController', AtmMstCheckpointViewController);

    AtmMstCheckpointViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];

    function AtmMstCheckpointViewController($rootScope, $scope, $state, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstCheckpointViewController';
        var checkpointgroupadd_gid = $location.search().checkpointgroupadd_gid;
        activate();
        function activate() {
            var url = 'api/AtmMstCheckpointGroup/EditCheckpoint';
            var params = {
                checkpointgroupadd_gid: checkpointgroupadd_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboriskcategory = resp.data.riskcategory_gid,
                  $scope.cboriskcategory = resp.data.riskcategory_name,
                 $scope.cbopositiveconfirmity = resp.data.positiveconfirmity_gid,
                  $scope.cbopositiveconfirmity = resp.data.positiveconfirmity_name,
                $scope.txtcheckpoint_intent = resp.data.checkpoint_intent,
                $scope.txtcheckpoint_description = resp.data.checkpoint_description,
                $scope.txtnoteto_auditor = resp.data.noteto_auditor,
                $scope.txtyes_score = resp.data.yes_score,
                $scope.txtyes_disposition = resp.data.yes_disposition,
                $scope.txtno_score = resp.data.no_score,
                $scope.txtno_disposition = resp.data.no_disposition,
                $scope.txtpartial_score = resp.data.partial_score,
                $scope.txtpartial_disposition = resp.data.partial_disposition,
                $scope.txtna_score = resp.data.na_score,
                $scope.txtna_disposition = resp.data.na_disposition,
                $scope.txt_totalscore = resp.data.total_score,


                unlockUI();
            });
        }
        $scope.back = function (val) {
            $state.go('app.AtmMstCheckpointGroupAdd');
        }
    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstPositiveConfirmityController', AtmMstPositiveConfirmityController);

    AtmMstPositiveConfirmityController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstPositiveConfirmityController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstPositiveConfirmityController';
        activate();


        function activate() {

            var url = 'api/AtmMstPositiveConfirmity/GetPositiveConfirmity';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.positiveconfirmity_data = resp.data.positiveconfirmity_list;
                unlockUI();
            });
        }

        $scope.popuppositiveconfirmity = function () {
            var modalInstance = $modal.open({
                templateUrl: '/myModalContent.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.positiveconfirmitySubmit = function () {
                    var params = {
                        positiveconfirmity_gid: $scope.positiveconfirmity_gid,
                        positiveconfirmity_name: $scope.txtpositive_confirmity,
                        positiveconfirmity_code: $scope.txtpositiveconfirmity_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code
                    }

                    var url = 'api/AtmMstPositiveConfirmity/CreatePositiveConfirmity';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                    
                }

            }
        }

        $scope.editpositiveconfirmity = function (positiveconfirmity_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editpositiveconfirmity.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    positiveconfirmity_gid: positiveconfirmity_gid
                }
                var url = 'api/AtmMstPositiveConfirmity/EditPositiveConfirmity';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txteditpositiveconfirmity_code = resp.data.positiveconfirmity_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.txteditpositive_confirmity = resp.data.positiveconfirmity_name;
                    $scope.positiveconfirmity_gid = resp.data.positiveconfirmity_gid;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.positiveconfirmityUpdate = function () {

                    var url = 'api/AtmMstPositiveConfirmity/UpdatePositiveConfirmity';
                    var params = {
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        positiveconfirmity_code: $scope.txteditpositiveconfirmity_code,
                        positiveconfirmity_name: $scope.txteditpositive_confirmity,
                        positiveconfirmity_gid: $scope.positiveconfirmity_gid
                    }
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                           

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });
                    $modalInstance.close('closed');
                }

            }
        }

        $scope.Status_update = function (positiveconfirmity_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statuspositiveconfirmity.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    positiveconfirmity_gid: positiveconfirmity_gid
                }
                
                var url = 'api/AtmMstPositiveConfirmity/EditPositiveConfirmity';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.positiveconfirmity_gid = resp.data.positiveconfirmity_gid
                    $scope.txtpositive_confirmity = resp.data.positiveconfirmity_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        positiveconfirmity_name: $scope.txtpositive_confirmity,
                        positiveconfirmity_gid: $scope.positiveconfirmity_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstPositiveConfirmity/InactivePositiveConfirmity';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    positiveconfirmity_gid: positiveconfirmity_gid
                }

                var url = 'api/AtmMstPositiveConfirmity/PositiveConfirmityInactiveLogview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.positiveconfirmityinactivelog_data = resp.data.positiveconfirmity_list;
                    unlockUI();
                });
            }
        }

        //$scope.deletepositiveconfirmity = function (positiveconfirmity_gid) {
        //    var params = {
        //        positiveconfirmity_gid: positiveconfirmity_gid
        //    }
        //    //var url = 'api/AtmMstPositiveConfirmity/DeletePositiveConfirmity';
        //    SocketService.getparams(url, params).then(function (resp) {
        //        if (resp.data.status == true) {

        //            SweetAlert.swal({
        //                title: 'Are you sure?',
        //                text: 'Do You Want To Delete the Record ?',
        //                showCancelButton: true,
        //                confirmButtonColor: '#DD6B55',
        //                confirmButtonText: 'Yes, delete it!',
        //                closeOnConfirm: false
        //            }, function (isConfirm) {
        //                if (isConfirm) {
        //                    SweetAlert.swal('Deleted Successfully!');
        //                    unlockUI();
        //                    activate();
        //                }

        //            });
        //        }
        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            unlockUI();
        //            activate();
        //        }
        //    });
        //};

        $scope.deletepositiveconfirmity = function (positiveconfirmity_gid) {
                var params = {
                    positiveconfirmity_gid: positiveconfirmity_gid
                }
            
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstPositiveConfirmity/DeletePositiveConfirmity';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }

            });
        };

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmMstRiskCategoryController', AtmMstRiskCategoryController);

    AtmMstRiskCategoryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmMstRiskCategoryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmMstRiskCategoryController';
        activate();


        function activate() {

            var url = 'api/AtmMstRiskCategory/GetRiskCategory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.riskcategory_data = resp.data.riskcategory_list;
                unlockUI();
            });
        }

      
        $scope.popupriskcategory = function () {
            var modalInstance = $modal.open({
                templateUrl: '/myModalContent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.riskcategorySubmit = function () {
                    var params = {
                        riskcategory_name: $scope.txtrisk_category,
                        riskcategory_code: $scope.txtriskcategory_code,
                        lms_code: $scope.txtlms_code,
                        bureau_code: $scope.txtbureau_code

                    }
                    var url = 'api/AtmMstRiskCategory/CreateRiskCategory';
                    lockUI();
                    SocketService.post(url,params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                
            }
        }

        $scope.edit = function (riskcategory_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/editriskcategory.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    riskcategory_gid: riskcategory_gid
                }
                var url = 'api/AtmMstRiskCategory/EditRiskCategory';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.txteditriskcategory_code = resp.data.riskcategory_code;
                    $scope.txteditlms_code = resp.data.lms_code;
                    $scope.txteditbureau_code = resp.data.bureau_code;
                    $scope.txteditrisk_category = resp.data.riskcategory_name;                  
                    $scope.riskcategory_gid = resp.data.riskcategory_gid;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.riskcategoryUpdate = function () {

                    var url = 'api/AtmMstRiskCategory/UpdateRiskCategory';
                    var params = {
                        lms_code: $scope.txteditlms_code,
                        bureau_code: $scope.txteditbureau_code,
                        riskcategory_code: $scope.txteditriskcategory_code,
                        riskcategory_name: $scope.txteditrisk_category,                      
                        riskcategory_gid: $scope.riskcategory_gid
                    }
                    SocketService.post(url,params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            
                        }
                    });
                    $modalInstance.close('closed');
                }
                
            }
        }

        $scope.Status_update = function (riskcategory_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusriskcategory.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    riskcategory_gid: riskcategory_gid
                }
                var url = 'api/AtmMstRiskCategory/EditRiskCategory';
                SocketService.getparams(url,params).then(function (resp) {
                    $scope.riskcategory_gid = resp.data.riskcategory_gid
                    $scope.txtriskcategory_name = resp.data.riskcategory_name;
                    $scope.rbo_status = resp.data.Status;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.update_status = function () {

                    var params = {
                        riskcategory_name: $scope.txtriskcategory_name,
                        riskcategory_gid: $scope.riskcategory_gid,
                        remarks: $scope.txtremarks,
                        rbo_status: $scope.rbo_status

                    }
                    var url = 'api/AtmMstRiskCategory/InactiveRiskCategory';
                    lockUI();
                    SocketService.post(url,params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }
                var param = {
                    riskcategory_gid: riskcategory_gid
                }

               var url = 'api/AtmMstRiskCategory/RiskCategoryInactiveLogview';
                lockUI();
                SocketService.getparams(url,param).then(function (resp) {
                    $scope.riskcategoryinactivelog_data = resp.data.riskcategory_list;
                    unlockUI();
                });
            }
        }

        //$scope.delete = function (riskcategory_gid) {
        //    var params = {
        //        riskcategory_gid: riskcategory_gid
        //    }
        //    var url = 'api/AtmMstRiskCategory/DeleteRiskCategory'; 
        //    SocketService.getparams(url,params).then(function (resp) {
        //        if (resp.data.status == true) {

        //            SweetAlert.swal({
        //                title: 'Are you sure?',
        //                text: 'Do You Want To Delete the Record ?',
        //                showCancelButton: true,
        //                confirmButtonColor: '#DD6B55',
        //                confirmButtonText: 'Yes, delete it!',
        //                closeOnConfirm: false
        //            }, function (isConfirm) {
        //                if (isConfirm) {
        //                    SweetAlert.swal('Deleted Successfully!');
        //                    unlockUI();
        //                    activate();
        //                }

        //            });
        //        }
        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            unlockUI();
        //            activate();
        //        }
        //    });
        //};
            $scope.delete = function (riskcategory_gid) {
                var params = {
                    riskcategory_gid: riskcategory_gid
                }
                
                SweetAlert.swal({
                    title: 'Are you sure?',
                    text: 'Do You Want To Delete the Record ?',
                    showCancelButton: true,
                    confirmButtonColor: '#DD6B55',
                    confirmButtonText: 'Yes, delete it!',
                    closeOnConfirm: false
                }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmMstRiskCategory/DeleteRiskCategory';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            SweetAlert.swal('Deleted Successfully!');

                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                    });
                }

            });
        };

    }
})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmRptAuditReportSampleScoreViewController', AtmRptAuditReportSampleScoreViewController);

    AtmRptAuditReportSampleScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmRptAuditReportSampleScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditReportSampleScoreViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                    $scope.status_flag = resp.data.status_flag,
                    $scope.DBobservation_score = resp.data.sampleobservation_score,
                    $scope.txttotal_score = $scope.DBobservation_score,
                    $scope.observationfill = resp.data.observation_fill,
                    $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
                    $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                    $scope.samplecapture_field = resp.data.samplecapture_field,
                    $scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                    //if (resp.data.observation_fill == 'N') {
                    //    $scope.observationfillenable = false;
                    //    $scope.makersaveapprove = false;
                    //}
                    //else if (resp.data.observation_fill == 'Y') {
                    //    $scope.observationfillenable = true;
                    //    $scope.makersaveapprove = true;
                    //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            //$scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    sampleimport_gid: sampleimport_gid
                }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function () {
            $location.url('app/AtmRptAuditReportView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid ))

        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                }); 
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditReportViewController', AtmRptAuditReportViewController);

    AtmRptAuditReportViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'cmnfunctionService'];

    function AtmRptAuditReportViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditReportViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid
            }
           
            var url = 'api/AtmRptAuditReports/EditAuditReports';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {

                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtauditdepartment_name = resp.data.auditdepartment_name,
                $scope.txtaudit_name = resp.data.audit_name,
                $scope.txtpriority_name = resp.data.auditpriority_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_description = resp.data.audit_description,
                $scope.txtend_date = resp.data.due_date,
                $scope.txtfrom_date = resp.data.auditperiod_fromdate,
                $scope.txtto_date = resp.data.auditperiod_todate,
                $scope.txtauditee_maker = resp.data.auditeemaker_name,
                $scope.txtauditee_checker = resp.data.auditeechecker_name,
                $scope.txtauditor_maker = resp.data.auditmaker_name,
                $scope.txtauditor_checker = resp.data.auditchecker_name,
                $scope.txtauditor_approver = resp.data.auditapprover_name,
                $scope.txtauditcreated_date = resp.data.created_date,
                $scope.txtauditcreated_by = resp.data.created_by,
                $scope.txtapproved_date = resp.data.auditapproved_date,
                $scope.txtapproved_by = resp.data.auditapproved_by,
                $scope.txttag_user = resp.data.tagged_user,
                $scope.txtmaker_initiate = resp.data.AuditorMakerInitiatedDate,
                $scope.txtauditee_initiate = resp.data.AuditeeCheckerInitiatedDate,
                $scope.txtauditorapproved_date = resp.data.AuditorApprovedDate,
                $scope.txtchecker_initiate = resp.data.Auditorcheckerinitiated_date
                unlockUI();
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                    $scope.cboauditdepartment = resp.data.auditdepartment_name,
                    $scope.cboauditname = resp.data.checklistmaster_gid,
                    $scope.cboauditname = resp.data.audit_name,
                    $scope.cboauditmaker = resp.data.employee_gid,
                    $scope.cboauditmaker = resp.data.audit_maker,
                    $scope.cboauditchecker = resp.data.auditmapping_gid,
                    $scope.cboauditchecker = resp.data.audit_checker,
                    $scope.cboauditapprover = resp.data.employee_gid,
                    $scope.cboauditapprover = resp.data.audit_approver,
                    $scope.cboauditpriority = resp.data.auditpriority_gid,
                    $scope.cboauditpriority = resp.data.auditpriority_name,
                    $scope.txtdue_date = resp.data.end_date,
                    $scope.txtreport_date = resp.data.report_date,
                    $scope.txtperiod_from = resp.data.periodfrom_date,
                    $scope.txtperiod_to = resp.data.auditperiod_to,
                    $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                    $scope.cboauditeemaker = resp.data.auditeemaker_name,
                    $scope.cboauditeechecker = resp.data.auditeechecker_name,
                    $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
                    $scope.txtaudit_type = resp.data.audittype_name,
                    $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                    $scope.txtaudit_desc = resp.data.audit_description,
                    $scope.openquerycount = resp.data.openquerycount,
                    $scope.status_update = resp.data.status_update,
                    $scope.DBobservation_score = resp.data.observation_score,
                    $scope.txttotal_score = $scope.DBobservation_score,
                    $scope.observationfill = resp.data.observation_fill;
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                //$scope.tagsamplebutton = true;
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;

                //}
                //else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}
                //else {
                //    $scope.observationfillenable = "Disable";
                //    $scope.makersaveapprove = false;
                //}

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
           
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });


            //var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI();
            //    $scope.auditquerydata = resp.data.auditquerydata;
            //    $scope.close_disabled = false;
            //    if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
            //        lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
            //        lspage == 'auditeecheckercompleted')) {
            //        $scope.close_disabled = true;
            //    }
            //});
            defaultdynamic();



            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            });
            /*    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;
                    for (var i = 0; i < $scope.makerobservationsampleview_list.length; i++) {
                        $scope.makerobservationsampleview_list[i].checked = true;
    
                    }
    
                    angular.forEach($scope.makerobservationsampleview_list, function (value, key) {
    
    
                        if (value.capture_field == "Yes") {
                            value.yes_radio = true;
                            value.yes_radio1 = true;
                        }
                        else if (value.capture_field == "No") {
                            value.no_radio = true;
                            value.no_radio1 = true;
                        }
                        else if (value.capture_field == "Partial") {
                            value.partialscore_radio = true;
                            value.partialscore_radio1 = true;
                        }
                        else if (value.capture_field == "NA") {
                            value.nascore_radio = true;
                            value.nascore_radio1 = true;
                        }
                        else if (value.capture_field == "") {
                            $scope.allobservationfilled = false;
    
                        }
    
                    });
                }); */
            function expand(expand_flag) {
                if (expand_flag = true) {
                    alert('true');
                }
                else {
                    alert('fasle');
                }
            }
            function defaultdynamic() {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                        $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.expandCount = 3;
                        $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                        $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                        $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                        $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                        for (i in $scope.SampleDynamicTabledata) {

                            //delete $scope.SampleDynamicTabledata[i].makerobservationsampleview_list;
                            delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                            delete $scope.SampleDynamicTabledata[i].taguser_flag;
                            delete $scope.SampleDynamicTabledata[i].tagged_employee;

                        }

                        for (i in $scope.raisedqueryarray) {
                            //delete $scope.raisedqueryarray[i].sampleimport_gid;
                            delete $scope.raisedqueryarray[i].raisedquery_flag;
                        }
                        $scope.raisedquerytable = true;
                        $scope.showtablediv = true;
                        if ($scope.SampleDynamicTabledata.length == 0) {
                            $scope.showtablediv = false;
                        }
                        if ($scope.raisedqueryarray.length == 0) {
                            $scope.raisedquerytable = false;
                        }

                    }
                    //else {
                    //    $scope.SampleDynamicTabledata = "";
                    //    $scope.raisedqueryarray = "";
                    //    $scope.showtablediv = false;
                    //    $scope.raisedquerytable = false;
                    //}
                    //angular.forEach($scope.SampleDynamicTabledata, function (value, key) {


                    //    var params = {
                    //        sampleimport_gid: value.sampleimport_gid,
                    //    };
                    //    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                    //    lockUI();
                    //    SocketService.getparams(url, params).then(function (resp) {
                    //        unlockUI();
                    //        value.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;

                    //        for (var i = 0; i < value.makerobservationview_list.length; i++) {
                    //            value.makerobservationview_list[i].checked = true;

                    //        }

                    //        angular.forEach(value.makerobservationview_list, function (value, key) {


                    //            if (value.capture_field == "Yes") {
                    //                value.yes_radio = true;
                    //                value.yes_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "No") {
                    //                value.no_radio = true;
                    //                value.no_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "Partial") {
                    //                value.partialscore_radio = true;
                    //                value.partialscore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "NA") {
                    //                value.nascore_radio = true;
                    //                value.nascore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "") {
                    //                $scope.allobservationfilled = false;

                    //            }

                    //        });
                    //    });
                    //    value.expand = false;

                    //});
                });
            }
        }


        $scope.back = function () {
            $state.go('app.AtmMstAuditReportSummary');
        }
        $scope.onselected = function (val, val1, val2) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;


                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_score = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }



        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

        $scope.makerinitiateapproval = function () {
            if ($scope.openquerycount != '0' && $scope.DBobservation_score != "") {
                Notify.alert("Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if ($scope.auditobservation_name == 'Observation score for Audit & sample' && $scope.checklistverified_flag == 'N') {
                Notify.alert("Atleast one sample observation score saved", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    makerinitiate_approvalflag: 'Y',
                    observation_percentage: $scope.txt_percent

                }
                var url = 'api/AtmTrnAuditorMaker/PostMakerInitiateApproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorMakerSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }

                });
            }

        }



        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $scope.tagsamplebutton = true;
                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }
                activate();

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.description = function (checklistmasteradd_gid, checkpoint_description) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/checkpointdescription.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        'use strict';

        //        angular
        //            .module('angle')
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid

                }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }

                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        $scope.sampleobservationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    sampleimport_gid: sampleimport_gid
                }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmRptAuditReportSampleScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmRptAuditReportSampleScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmRptAuditReportSampleScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.back = function (val) {
            $location.url('app/AtmMstAuditReportSummary')

        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovalApprovedSummaryController', AtmRptAuditVisitReportApprovalApprovedSummaryController);

    AtmRptAuditVisitReportApprovalApprovedSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal','cmnfunctionService'];

    function AtmRptAuditVisitReportApprovalApprovedSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovalApprovedSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetAuditVisitReportApprovalApprovedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;

            });

        }

        $scope.approvalpending = function () {
            $state.go('app.AtmRptAuditVisitReportApprovalSummary');
        }

        $scope.approvedapproved = function () {
            $state.go('app.AtmRptAuditVisitReportApprovalApprovedSummary');
        }

        //$scope.editauditvisitreport = function (val) {

        //    $location.url('app/AtmRptAuditVisitReportEdit?auditvisit_gid=' + val);

        //}

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportApprovalApprovedView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }



    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovalApprovedViewController', AtmRptAuditVisitReportApprovalApprovedViewController);

    AtmRptAuditVisitReportApprovalApprovedViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportApprovalApprovedViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovalApprovedViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.reportingmanager_name = resp.data.reportingmanager_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportApprovalApprovedSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovalController', AtmRptAuditVisitReportApprovalController);

    AtmRptAuditVisitReportApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportApprovalController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovalController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditvisit_gid = searchObject.auditvisit_gid;
        var auditvisit_gid = $scope.auditvisit_gid;
        activate();

        function activate() {
            var url = 'api/AtmRptAuditReports/DeleteVisittmpDocument';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpPhoto';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpContact';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmppersondtl';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpAddress';
            SocketService.get(url).then(function (resp) {

            });
            vm.calender1 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open1 = true;
            };
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];
            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1
            };
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamfinCustomerSummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditvisitreport_list = resp.data.auditvisitreport_list;

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamagroCustomerSummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditvisitreport_list1 = resp.data.auditvisitreport_list;

            });
            var url = 'api/AtmRptAuditReports/GetVisitedplace';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.visitdone_list = resp.data.mdlvisitdone;
            });
            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;

            });
            var url = 'api/Marketing/GetEntity';
            SocketService.get(url).then(function (resp) {
                $scope.entity_list = resp.data.inboundentity_list;
            });
            var url = 'api/AtmRptAuditReports/EditAuditVisitReport';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.draft_flag == "Y") {
                    $scope.draft = true;
                    $scope.update = false;
                }
                else {
                    $scope.draft = false;
                    $scope.update = true;
                }
                $scope.draft_flag = resp.data.draft_flag,
                    $scope.txtdateof_visit = resp.data.auditvisit_date,
                    $scope.txtclient_kmp = resp.data.clientkmp_activities,
                    $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_observation = resp.data.overall_observations;
                $scope.txtinspections_official = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.mstinspectingofficials = resp.data.mstinspectingofficials;
                $scope.employeeedit_list = resp.data.employeelist;
                $scope.visitdone_list = resp.data.visitdone_list;
                $scope.msteditvisitlist = resp.data.mdlvisitdone;
                $scope.cboentity = resp.data.entity_gid;
                $scope.entity_name = resp.data.entity_name;
                $scope.cbosamfin = resp.data.samfincustomer_gid;
                $scope.cbosamagro = resp.data.samagrocustomer_gid;

                $scope.cboinspecting_list = [];
                if (resp.data.mstinspectingofficials != null) {
                    var count = resp.data.mstinspectingofficials.length;
                    for (var i = 0; i < count; i++) {
                        var indexs = $scope.employeeedit_list.map(function (x) { return x.employee_gid; }).indexOf(resp.data.mstinspectingofficials[i].employee_gid);
                        $scope.cboinspecting_list.push($scope.employeeedit_list[indexs]);
                    }
                }
                $scope.cbovisit_done = [];
                if (resp.data.visitdone_list != null) {
                    var count = resp.data.visitdone_list.length;
                    for (var i = 0; i < count; i++) {
                        var indexs = $scope.msteditvisitlist.map(function (x) { return x.visitdone_gid; }).indexOf(resp.data.visitdone_list[i].visitdone_gid);
                        $scope.cbovisit_done.push($scope.msteditvisitlist[indexs]);
                    }
                }

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPersondtlList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitAddressList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersonaddressdtl_list = resp.data.mstVisitpersonaddress_list;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
           
        }
        $scope.changeentitiy = function (cboentity) {
            for (var i = 0; i < $scope.entity_list.length; i++) {
                if (cboentity == $scope.entity_list[i].entity_gid)
                    $scope.entity_name = $scope.entity_list[i].entity_name
            }
        }
        $scope.Back = function () {

            $location.url('app/AtmRptAuditVisitReportApprovalSummary');
        }

        $scope.addaddress = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addaddresstype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txtpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txtcity = resp.data.city;
                        $scope.txttaluka = resp.data.taluka;
                        $scope.txtdistrict = resp.data.district;
                        $scope.txtstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txtpostal_code.length == 6) {
                        if ($scope.txtaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtaddressline2.toString(), ",", $scope.txtpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";
                $scope.addressSubmit = function () {

                    var params = {
                        addresstype_name: $scope.cboaddresstype.address_type,
                        addresstype_gid: $scope.cboaddresstype.address_gid,
                        primary_status: $scope.rdbprimarystatus,
                        address_line1: $scope.txtaddressline1,
                        address_line2: $scope.txtaddressline2,
                        landmark: $scope.txtLand_Mark,
                        postal_code: $scope.txtpostal_code,
                        taluk: $scope.txttaluka,
                        city: $scope.txtcity,
                        state_name: $scope.txtstate,
                        district: $scope.txtdistrict,
                        country: $scope.txtcountry,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitAddress';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });

                    $modalInstance.close('closed');

                }
            }


        }


        $scope.addressdelete = function (val) {
            var params =
            {
                auditvisit2address_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Address ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpAddressList';

                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        address_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });

        }

        function address_list() {
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetEditAuditVisitAddressList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersonaddressdtl_list = resp.data.mstVisitpersonaddress_list;

            });
        }


        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.addvisitedpersondetails = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addvisitpersondetails.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.mobileno_add = function () {

                    var params = {
                        mobile_no: $scope.txtmobile_no,
                        whatsapp_mobileno: $scope.rdbwhatsappmobile_no,
                        primary_status: $scope.rdbprimarystatus,
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                            SocketService.get(url).then(function (resp) {
                                $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                            });
                            $scope.txtmobile_no = '';
                            $scope.rdbprimarystatus = '';
                            $scope.rdbwhatsappmobile_no = '';
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });



                }
                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Contact ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                                    SocketService.get(url).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.visitpersondtlSubmit = function () {
                    if ($scope.Visitpersoncontact_list == '' || $scope.Visitpersoncontact_list == undefined || $scope.Visitpersoncontact_list == null) {
                        Notify.alert('Add Atleast One Mobile Number', 'warning');
                    }
                    else {

                        var params = {
                            clientrepresentative_name: $scope.txtresp_client,
                            clientrepresentative_designationgid: $scope.cboresp_designation.designation_gid,
                            clientrepresentative_designationname: $scope.cboresp_designation.designation_type,
                            clientrepresentative_personalmail: $scope.txtpersonalid_no,
                            clientrepresentative_officemail: $scope.txtofficalid_no,


                        }

                        var url = 'api/AtmRptAuditReports/PostAuditPersonDetails';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                visitedpersondetails_list();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });

                        $modalInstance.close('closed');
                    }

                }


            }
        }

        $scope.visitpersondtldelete = function (val) {
            var params =
            {
                auditvisit2person_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Visit Person Details ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmppersondtlList';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        visitedpersondetails_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        function visitedpersondetails_list() {
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetEditAuditVisitPersondtlList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;

            });
        }


        $scope.editaddress = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editaddresstype.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            var auditvisit2address_gid = val
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });

                var params = {
                    auditvisit2address_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitaddress';
                SocketService.getparams(url, params).then(function (resp) {


                    $scope.cboeditaddresstype = resp.data.addresstype_gid;
                    $scope.rdbeditprimaryaddress = resp.data.primary_status;
                    $scope.txteditaddressline1 = resp.data.address_line1;
                    $scope.txteditaddressline2 = resp.data.address_line2;
                    $scope.txteditLand_Mark = resp.data.landmark;
                    $scope.txteditpostal_code = resp.data.postal_code;
                    $scope.txtedittaluka = resp.data.taluk;
                    $scope.txteditcity = resp.data.city;
                    $scope.txteditstate = resp.data.state_name;
                    $scope.txtlatitude = resp.data.latitude;
                    $scope.txtlongitude = resp.data.longitude;
                    $scope.txteditdistrict = resp.data.district;
                    $scope.txteditcountry = resp.data.country;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txteditpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txteditcity = resp.data.city;
                        $scope.txtedittaluka = resp.data.taluka;
                        $scope.txteditdistrict = resp.data.district;
                        $scope.txteditstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txteditpostal_code.length == 6) {
                        if ($scope.txteditaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditaddressline2.toString(), ",", $scope.txteditpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";

                $scope.addressUpdate = function () {
                    var address_type = $('#address_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonaddressUpdate';
                    var params = {
                        auditvisit2address_gid: val,
                        addresstype_name: address_type,
                        addresstype_gid: $scope.cboeditaddresstype,
                        primary_status: $scope.rdbeditprimaryaddress,
                        address_line1: $scope.txteditaddressline1,
                        address_line2: $scope.txteditaddressline2,
                        landmark: $scope.txteditLand_Mark,
                        postal_code: $scope.txteditpostal_code,
                        taluk: $scope.txtedittaluka,
                        city: $scope.txteditcity,
                        //state_name: $scope.cboeditstate.state_name,
                        //state_gid: $scope.cboeditstate.state_gid,
                        state_name: $scope.txteditstate,
                        district: $scope.txteditdistrict,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude,
                        country: $scope.txteditcountry
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                    });

                }
            }
        }
        $scope.auditvisitreportapprovalupdate = function () {
            var entityname;
            var entity_index = $scope.entity_list.map(function (e) { return e.entity_gid }).indexOf($scope.cboentity);
            if (entity_index == -1) { entityname = ''; } else { entityname = $scope.entity_list[entity_index].entity_name; };

            var samfincustomername;
            var samfincustomer_index = $scope.auditvisitreport_list.map(function (e) { return e.samfincustomer_gid }).indexOf($scope.cbosamfin);
            if (samfincustomer_index == -1) { samfincustomername = ''; } else { samfincustomername = $scope.auditvisitreport_list[samfincustomer_index].samfincustomer_name; };

            var samagrocustomername;
            var samagrocustomer_index = $scope.auditvisitreport_list1.map(function (e) { return e.samagrocustomer_gid }).indexOf($scope.cbosamagro);
            if (samagrocustomer_index == -1) { samagrocustomername = ''; } else { samagrocustomername = $scope.auditvisitreport_list1[samagrocustomer_index].samagrocustomer_name; };



            var params = {

                auditvisit_gid: auditvisit_gid,
                auditvisit_date: $scope.txtdateof_visit,
                auditvisitdate: $scope.txtdateof_visit,
                mstinspectingofficials: $scope.cboinspecting_list,
                mdlvisitdone: $scope.cbovisit_done,
                clientkmp_activities: $scope.txtclient_kmp,
                promoter_background: $scope.txtpromoter_background,
                overall_observations: $scope.txtoverall_observation,
                inspectingofficial_recommenation: $scope.txtinspections_official,
                trading_relationship: $scope.txttrading_relationship,
                summary: $scope.txtsummary,
                entity_gid: $scope.cboentity,
                entity_name: entityname,
                samfincustomer_gid: $scope.cbosamfin,
                samfincustomer_name: samfincustomername,
                samagrocustomer_gid: $scope.cbosamagro,
                samagrocustomer_name: samagrocustomername,

            }
            var url = 'api/AtmRptAuditReports/PostAuditVisitReportApprovalUpdate';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    //var params = {
                    //    application_gid: application_gid,
                    //    statusupdated_by: 'RM',
                    //}
                    //var url = 'api/AtmRptAuditReports/GetAuditVisitReportList';
                    //SocketService.getparams(url, params).then(function (resp) {
                    //    $scope.VisitReportList = resp.data.VisitReportList;

                    //});
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $location.url('app/AtmRptAuditVisitReportApprovalSummary');
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }
        $scope.auditvisitreportapproval = function () {
            var entityname;
            var entity_index = $scope.entity_list.map(function (e) { return e.entity_gid }).indexOf($scope.cboentity);
            if (entity_index == -1) { entityname = ''; } else { entityname = $scope.entity_list[entity_index].entity_name; };

            var samfincustomername;
            var samfincustomer_index = $scope.auditvisitreport_list.map(function (e) { return e.samfincustomer_gid }).indexOf($scope.cbosamfin);
            if (samfincustomer_index == -1) { samfincustomername = ''; } else { samfincustomername = $scope.auditvisitreport_list[samfincustomer_index].samfincustomer_name; };

            var samagrocustomername;
            var samagrocustomer_index = $scope.auditvisitreport_list1.map(function (e) { return e.samagrocustomer_gid }).indexOf($scope.cbosamagro);
            if (samagrocustomer_index == -1) { samagrocustomername = ''; } else { samagrocustomername = $scope.auditvisitreport_list1[samagrocustomer_index].samagrocustomer_name; };



            var params = {

                auditvisit_gid: auditvisit_gid,
                auditvisit_date: $scope.txtdateof_visit,
                auditvisitdate: $scope.txtdateof_visit,
                mstinspectingofficials: $scope.cboinspecting_list,
                mdlvisitdone: $scope.cbovisit_done,
                clientkmp_activities: $scope.txtclient_kmp,
                promoter_background: $scope.txtpromoter_background,
                overall_observations: $scope.txtoverall_observation,
                inspectingofficial_recommenation: $scope.txtinspections_official,
                trading_relationship: $scope.txttrading_relationship,
                summary: $scope.txtsummary,
                entity_gid: $scope.cboentity,
                entity_name: entityname,
                samfincustomer_gid: $scope.cbosamfin,
                samfincustomer_name: samfincustomername,
                samagrocustomer_gid: $scope.cbosamagro,
                samagrocustomer_name: samagrocustomername,

            }
            var url = 'api/AtmRptAuditReports/PostAuditVisitReportApproval';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    //var params = {
                    //    application_gid: application_gid,
                    //    statusupdated_by: 'RM',
                    //}
                    //var url = 'api/AtmRptAuditReports/GetAuditVisitReportList';
                    //SocketService.getparams(url, params).then(function (resp) {
                    //    $scope.VisitReportList = resp.data.VisitReportList;

                    //});
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $location.url('app/AtmRptAuditVisitReportApprovalSummary');
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }

        $scope.mobileno_summary = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                }; 

            }
        }

        $scope.VisitReportDocumentUpload = function () {
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "documentformatonly");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('document_name', $scope.txtreport_name);
                frm.append('project_flag', "documentformatonly");

                $scope.uploadfrm = frm;
                var url = 'api/AtmRptAuditReports/PostAuditVisitDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var params = {
                            auditvisit_gid: auditvisit_gid
                        }
                        var url = 'api/AtmRptAuditReports/GetEditAuditVisitDocumentList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.UploadDocumentList = resp.data.UploadDocumentList;

                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.')
            }
        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploaddocumentcancel = function (val) {

            var params = {
                auditvisit2document_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Document ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpDocumentList';
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            var params = {
                                auditvisit_gid: auditvisit_gid
                            }
                            var url = 'api/AtmRptAuditReports/GetEditAuditVisitDocumentList';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.UploadDocumentList = resp.data.UploadDocumentList;

                            });
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        $scope.VisitReportPhotoUpload = function () {
            var fi = document.getElementById('photo');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "photo");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('photo_name', $scope.txtphoto_name);
                frm.append('project_flag', "photo");

                $scope.uploadfrm = frm;
                var url = 'api/AtmRptAuditReports/AuditVisitPhotoUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#photo").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var params = {
                            auditvisit_gid: auditvisit_gid
                        }
                        var url = 'api/AtmRptAuditReports/GetEditAuditVisitPhotoList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.UploadphotoList = resp.data.UploadphotoList;
                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.')
            }
        }

        $scope.uploadphotocancel = function (val) {

            var params = {
                auditvisit2photo_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Photo ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        lockUI();
                        var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpPhotoList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.upload_list = resp.data.upload_list;
                            if (resp.data.status == true) {
                                var params = {
                                    auditvisit_gid: auditvisit_gid
                                }
                                var url = 'api/AtmRptAuditReports/GetEditAuditVisitPhotoList';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.UploadphotoList = resp.data.UploadphotoList;

                                });
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                            unlockUI();
                        });
                        SweetAlert.swal('Deleted Successfully!');
                    }
                });
        }

        $scope.editvisitedpersondetails = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editvisitedpersondetails.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            var auditvisit2person_gid = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitpersondtl';
                SocketService.getparams(url, params).then(function (resp) {

                    $scope.txteditresp_client = resp.data.clientrepresentative_name;
                    $scope.cboeditresp_designation = resp.data.clientrepresentative_designationgid;
                    $scope.txteditpersonalid_no = resp.data.clientrepresentative_personalmail;
                    $scope.txteditofficialid_no = resp.data.clientrepresentative_officemail;

                });
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                });
                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Contact ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var params = {
                                        auditvisit2person_gid: auditvisit2person_gid
                                    }
                                    var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                    SocketService.getparams(url, params).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.mobileno_edit = function () {
                    if (($scope.txteditmobile_no == undefined) || ($scope.txteditmobile_no == '') || ($scope.rdbeditprimarystatus == undefined) || ($scope.rdbeditwhatsappmobile_no == undefined) || ($scope.rdbeditwhatsappmobile_no == '') || ($scope.rdbeditprimarystatus == '')) {
                        Notify.alert('Enter mobile No/select primary status and whatsapp number', 'warning');
                    }
                    else {

                        var params = {
                            mobile_no: $scope.txteditmobile_no,
                            whatsapp_mobileno: $scope.rdbeditwhatsappmobile_no,
                            primary_status: $scope.rdbeditprimarystatus,
                        }

                        var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {
                                var params = {
                                    auditvisit2person_gid: auditvisit2person_gid
                                }
                                var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                });
                                $scope.txteditmobile_no = '';
                                $scope.rdbeditprimarystatus = '';
                                $scope.rdbeditwhatsappmobile_no = '';
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });
                    }
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.visitpersondtlupdate = function () {
                    var designationtype = $('#designation_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonDetailsUpdate';
                    var params = {
                        auditvisit2person_gid: auditvisit2person_gid,
                        clientrepresentative_name: $scope.txteditresp_client,
                        clientrepresentative_designationgid: $scope.cboeditresp_designation,
                        clientrepresentative_designationname: designationtype,
                        clientrepresentative_personalmail: $scope.txteditpersonalid_no,
                        clientrepresentative_officemail: $scope.txteditofficialid_no,
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                    });

                }
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovalPendingViewController', AtmRptAuditVisitReportApprovalPendingViewController);

    AtmRptAuditVisitReportApprovalPendingViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportApprovalPendingViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovalPendingViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        addresslist();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportApprovalSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovalSummaryController', AtmRptAuditVisitReportApprovalSummaryController);

    AtmRptAuditVisitReportApprovalSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmRptAuditVisitReportApprovalSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovalSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetAuditVisitReportApprovalPendingSummary';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;

            });
        }

        $scope.approvalpending = function () {
            $state.go('app.AtmRptAuditVisitReportApprovalSummary');
        }

        $scope.approvedapproved = function () {
            $state.go('app.AtmRptAuditVisitReportApprovalApprovedSummary');
        }

        $scope.editauditvisitreport = function (val) {

            $location.url('app/AtmRptAuditVisitReportApproval?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));

        }

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportApprovalPendingView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }



    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovedSummaryController', AtmRptAuditVisitReportApprovedSummaryController);

    AtmRptAuditVisitReportApprovedSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmRptAuditVisitReportApprovedSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovedSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetAuditVisitReportApprovedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;

            });

        }

        $scope.reportpending = function () {
            $state.go('app.AtmRptAuditVisitReportSummary');
        }

        $scope.reportapproved = function () {
            $state.go('app.AtmRptAuditVisitReportApprovedSummary');
        }

        $scope.editauditvisitreport = function (val) {

            $location.url('app/AtmRptAuditVisitReportEdit?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));

        }

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportApprovedView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }
        $scope.createauditvisit = function () {
            $state.go('app.AtmRptAuditVisitReport');
        }


    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportApprovedViewController', AtmRptAuditVisitReportApprovedViewController);

    AtmRptAuditVisitReportApprovedViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportApprovedViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportApprovedViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.reportingmanager_name = resp.data.reportingmanager_name;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        addresslist();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportApprovedSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportController', AtmRptAuditVisitReportController);

    AtmRptAuditVisitReportController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmRptAuditVisitReportController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportController';
        var application_gid = $location.search().application_gid;

        activate();
        function activate() {
            var url = 'api/AtmRptAuditReports/DeleteVisittmpDocument';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpPhoto';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpContact';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmppersondtl';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpAddress';
            SocketService.get(url).then(function (resp) {

            });
            // Calender Popup... //

            vm.calender1 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open1 = true;
            };
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];
            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1
            };
            //var params = {
            //    application_gid: application_gid,
            //    statusupdated_by: 'RM',
            //}
            var url = 'api/AtmRptAuditReports/GetVisitReportList';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });
            var url = 'api/MstApplicationVisitReport/GetVisitedplace';
            SocketService.get(url).then(function (resp) {
                $scope.visitdone_list = resp.data.mdlvisitdone;
            });
            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;

            });
            var url = 'api/Marketing/GetEntity';
            SocketService.get(url).then(function (resp) {
                $scope.entity_list = resp.data.inboundentity_list;
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamfinCustomerSummary';
            SocketService.get(url).then(function (resp) {
                $scope.auditvisitreport_list = resp.data.auditvisitreport_list;

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamagroCustomerSummary';
            SocketService.get(url).then(function (resp) {
                $scope.auditvisitreport_list1 = resp.data.auditvisitreport_list;

            });
        }

        $scope.editauditvisitreport = function (val) {

            $location.url('app/AtmRptAuditVisitReportEdit?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));

        }

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }

        $scope.Back = function () {
            $state.go('app.AtmRptAuditVisitReportSummary');

        }

        $scope.changeentitiy = function (cboentity) {
            for (var i = 0; i < $scope.entity_list.length; i++) {
                if (cboentity == $scope.entity_list[i].entity_gid)
                    $scope.entityselect = $scope.entity_list[i].entity_name
            }
        }
        $scope.addaddress = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addaddresstype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txtpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txtcity = resp.data.city;
                        $scope.txttaluka = resp.data.taluka;
                        $scope.txtdistrict = resp.data.district;
                        $scope.txtstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txtpostal_code.length == 6) {
                        if ($scope.txtaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtaddressline2.toString(), ",", $scope.txtpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";
                $scope.addressSubmit = function () {

                    var params = {
                        addresstype_name: $scope.cboaddresstype.address_type,
                        addresstype_gid: $scope.cboaddresstype.address_gid,
                        primary_status: $scope.rdbprimarystatus,
                        address_line1: $scope.txtaddressline1,
                        address_line2: $scope.txtaddressline2,
                        landmark: $scope.txtLand_Mark,
                        postal_code: $scope.txtpostal_code,
                        taluk: $scope.txttaluka,
                        city: $scope.txtcity,
                        state_name: $scope.txtstate,
                        district: $scope.txtdistrict,
                        country: $scope.txtcountry,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitAddress';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });

                    $modalInstance.close('closed');

                }
            }
        }


        $scope.addressdelete = function (val) {
            var params =
            {
                auditvisit2address_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Visit Address ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpAddressList';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        address_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });

        }

        function address_list() {
            var url = 'api/AtmRptAuditReports/GetAuditVisittmpAddressList';
            SocketService.get(url).then(function (resp) {
                $scope.Visitpersonaddressdtl_list = resp.data.mstVisitpersonaddress_list;

            });
        }

        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.addvisitedpersondetails = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addvisitpersondetails.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.mobileno_add = function () {
                    var params = {
                        mobile_no: $scope.txtmobile_no,
                        whatsapp_mobileno: $scope.rdbwhatsappmobile_no,
                        primary_status: $scope.rdbprimarystatus,
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                            SocketService.get(url).then(function (resp) {
                                $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                            });
                            $scope.txtmobile_no = '';
                            $scope.rdbprimarystatus = '';
                            $scope.rdbwhatsappmobile_no = '';
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Record ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                                    SocketService.get(url).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.visitpersondtlSubmit = function () {
                    if ($scope.Visitpersoncontact_list == '' || $scope.Visitpersoncontact_list == undefined || $scope.Visitpersoncontact_list == null) {
                        Notify.alert('Add Atleast One Mobile Number', 'warning');
                    }
                    else {

                        var params = {
                            clientrepresentative_name: $scope.txtresp_client,
                            clientrepresentative_designationgid: $scope.cboresp_designation.designation_gid,
                            clientrepresentative_designationname: $scope.cboresp_designation.designation_type,
                            clientrepresentative_personalmail: $scope.txtpersonalid_no,
                            clientrepresentative_officemail: $scope.txtofficalid_no,

                        }

                        var url = 'api/AtmRptAuditReports/PostAuditPersonDetails';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                visitedpersondetails_list();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        $scope.visitpersondtldelete = function (val) {
            var params =
            {
                auditvisit2person_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Person Details ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmppersondtlList';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        visitedpersondetails_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });

        }

        function visitedpersondetails_list() {
            var url = 'api/AtmRptAuditReports/GetAuditVisittmpPersondtlList';
            SocketService.get(url).then(function (resp) {
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;

            });
        }


        $scope.editaddress = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editaddresstype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            var applicationvisit2address_gid = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditvisit2address_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitaddress';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboeditaddresstype = resp.data.addresstype_gid;
                    $scope.rdbeditprimaryaddress = resp.data.primary_status;
                    $scope.txteditaddressline1 = resp.data.address_line1;
                    $scope.txteditaddressline2 = resp.data.address_line2;
                    $scope.txteditLand_Mark = resp.data.landmark;
                    $scope.txteditpostal_code = resp.data.postal_code;
                    $scope.txtedittaluka = resp.data.taluk;
                    $scope.txteditcity = resp.data.city;
                    $scope.txteditstate = resp.data.state_name;
                    $scope.txtlatitude = resp.data.latitude;
                    $scope.txtlongitude = resp.data.longitude;
                    $scope.txteditdistrict = resp.data.district;
                    $scope.txteditcountry = resp.data.country;
                });
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txteditpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txteditcity = resp.data.city;
                        $scope.txtedittaluka = resp.data.taluka;
                        $scope.txteditdistrict = resp.data.district;
                        $scope.txteditstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txteditpostal_code.length == 6) {
                        if ($scope.txteditaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditaddressline2.toString(), ",", $scope.txteditpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";

                $scope.addressUpdate = function () {
                    var address_type = $('#address_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonaddressUpdate';
                    var params = {
                        auditvisit2address_gid: val,
                        addresstype_name: address_type,
                        addresstype_gid: $scope.cboeditaddresstype,
                        primary_status: $scope.rdbeditprimaryaddress,
                        address_line1: $scope.txteditaddressline1,
                        address_line2: $scope.txteditaddressline2,
                        landmark: $scope.txteditLand_Mark,
                        postal_code: $scope.txteditpostal_code,
                        taluk: $scope.txtedittaluka,
                        city: $scope.txteditcity,
                        state_name: $scope.txteditstate,
                        district: $scope.txteditdistrict,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude,
                        country: $scope.txteditcountry
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                    });

                }
            }
        }

        $scope.saveasauditvisitreport = function () {

            var lsentity_name = '';
            var lsentity_gid = '';
            lsentity_name = $('#entity :selected').text();
            lsentity_gid = $scope.cboentity;

            var lssamfincustomer_name = '';
            var lssamfincustomer_gid = '';
            if ($scope.cbosamfin != undefined || $scope.cbosamfin != null) {
                lssamfincustomer_gid = $scope.cbosamfin.samfincustomer_gid;
                lssamfincustomer_name = $scope.cbosamfin.samfincustomer_name;
            }

            var lssamagrocustomer_name = '';
            var lssamagrocustomer_gid = '';
            if ($scope.cbosamagro != undefined || $scope.cbosamagro != null) {
                lssamagrocustomer_gid = $scope.cbosamagro.samagrocustomer_gid;
                lssamagrocustomer_name = $scope.cbosamagro.samagrocustomer_name;
            }
           
                var params = {
                    auditvisit_date: $scope.txtdateof_visit,
                    mstinspectingofficials: $scope.cboinspecting_list,
                    mdlvisitdone: $scope.cbovisit_done,
                    clientkmp_activities: $scope.txtclient_kmp,
                    promoter_background: $scope.txtpromoter_background,
                    overall_observations: $scope.txtoverall_observation,
                    inspectingofficial_recommenation: $scope.txtinspections_official,
                    trading_relationship: $scope.txttrading_relationship,
                    summary: $scope.txtsummary,
                    entity_gid: lsentity_gid,
                    entity_name: lsentity_name,
                    samagrocustomer_gid: lssamagrocustomer_gid,
                    samagrocustomer_name: lssamagrocustomer_name,
                    samfincustomer_gid: lssamfincustomer_gid,
                    samfincustomer_name: lssamfincustomer_name,
                }

                var url = 'api/AtmRptAuditReports/PostAuditVisitReport';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmRptAuditVisitReportSummary');

                        activate();
                        $scope.txtdateof_visit = '';
                        $scope.cboinspecting_list = '';
                        $scope.cbovisit_done = '';
                        $scope.txtclient_kmp = '';
                        $scope.txtpromoter_background = '';
                        $scope.txtoverall_observation = '';
                        $scope.txtinspections_official = '';
                        $scope.txttrading_relationship = '';
                        $scope.txtsummary = '';
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });
            
        }

        $scope.submit_visitreport = function () {

            var lsentity_name = '';
            var lsentity_gid = '';
            lsentity_name = $('#entity :selected').text();
            lsentity_gid = $scope.cboentity;

            var lssamagrocustomer_name = '';
            var lssamagrocustomer_gid = '';
            if ($scope.cbosamagro != undefined || $scope.cbosamagro != null) {
                lssamagrocustomer_gid = $scope.cbosamagro.samagrocustomer_gid;
                lssamagrocustomer_name = $scope.cbosamagro.samagrocustomer_name;
            }
            var lssamfincustomer_name = '';
            var lssamfincustomer_gid = '';
            if ($scope.cbosamfin != undefined || $scope.cbosamfin != null) {
                lssamfincustomer_gid = $scope.cbosamfin.samfincustomer_gid;
                lssamfincustomer_name = $scope.cbosamfin.samfincustomer_name;
            }
            if ((lsentity_name == "SAMAGRO") && ((lssamagrocustomer_name == null || lssamagrocustomer_name == ''))) {

                Notify.alert('Kindly Select Customer Name', 'warning')


            }
            else if ((lsentity_name == "SAMFIN") && ((lssamfincustomer_name == null || lssamfincustomer_name == ''))) {

                Notify.alert('Kindly Select Customer Name', 'warning')

            }
            else if ((lssamfincustomer_name == null || lssamfincustomer_name == '') && (lssamagrocustomer_name == null || lssamagrocustomer_name == '')) {
                Notify.alert('Kindly Select Customer Name', 'warning')
            }
            else {

                var params = {

                    auditvisit_date: $scope.txtdateof_visit,
                    mstinspectingofficials: $scope.cboinspecting_list,
                    mdlvisitdone: $scope.cbovisit_done,
                    clientkmp_activities: $scope.txtclient_kmp,
                    promoter_background: $scope.txtpromoter_background,
                    overall_observations: $scope.txtoverall_observation,
                    inspectingofficial_recommenation: $scope.txtinspections_official,
                    trading_relationship: $scope.txttrading_relationship,
                    summary: $scope.txtsummary,
                    entity_gid: lsentity_gid,
                    entity_name: lsentity_name,
                    samagrocustomer_gid: lssamagrocustomer_gid,
                    samagrocustomer_name: lssamagrocustomer_name,
                    samfincustomer_gid: lssamfincustomer_gid,
                    samfincustomer_name: lssamfincustomer_name,

                }
                var url = 'api/AtmRptAuditReports/PostSubmitAuditVisitReport';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmRptAuditVisitReportSummary');

                        activate();
                        $scope.txtdateof_visit = '';
                        $scope.cboinspecting_list = '';
                        $scope.cbovisit_done = '';
                        $scope.txtclient_kmp = '';
                        $scope.txtpromoter_background = '';
                        $scope.txtoverall_observation = '';
                        $scope.txtinspections_official = '';
                        $scope.txttrading_relationship = '';
                        $scope.txtsummary = '';
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });
            }
        }

        $scope.mobileno_summary = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.VisitReportDocumentUpload = function () {
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "documentformatonly");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('document_name', $scope.txtreport_name);
                frm.append('project_flag', "documentformatonly");

                $scope.uploadfrm = frm;

                var url = 'api/AtmRptAuditReports/PostAuditVisitDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var url = 'api/AtmRptAuditReports/GetAuditVisittmpDocumentList';
                        SocketService.get(url).then(function (resp) {
                            $scope.lsfilename = resp.data.filesname;
                            $scope.lsfilepath = resp.data.filepath;
                            $scope.UploadDocumentList = resp.data.UploadDocumentList;
                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.', 'warning')
            }
        }

       

        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        
        $scope.uploaddocumentcancel = function (val) {

            var params = {
                auditvisit2document_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Document ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpDocumentList';
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            var url = 'api/AtmRptAuditReports/GetAuditVisittmpDocumentList';
                            SocketService.get(url).then(function (resp) {
                                $scope.UploadDocumentList = resp.data.UploadDocumentList;

                            });
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        $scope.VisitReportPhotoUpload = function () {
            var fi = document.getElementById('photo');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                }
                frm.append('photo_name', $scope.txtphoto_name);
                frm.append('project_flag', "photo");

                $scope.uploadfrm = frm;
                var url = 'api/AtmRptAuditReports/AuditVisitPhotoUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#photo").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var url = 'api/AtmRptAuditReports/GetAuditVisittmpPhotosList';
                        SocketService.get(url).then(function (resp) {
                            $scope.lsfilename = resp.data.filesname;
                            $scope.lsfilepath = resp.data.filepath;
                            $scope.UploadphotoList = resp.data.UploadphotoList;
                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.')
            }
        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        
        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.uploadphotocancel = function (val) {

            var params = {
                auditvisit2photo_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Record ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpPhotoList';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.upload_list = resp.data.upload_list;
                        if (resp.data.status == true) {
                            var url = 'api/AtmRptAuditReports/GetAuditVisittmpPhotosList';
                            SocketService.get(url).then(function (resp) {
                                $scope.UploadphotoList = resp.data.UploadphotoList;

                            });
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        $scope.editvisitedpersondetails = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editvisitedpersondetails.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            var auditvisit2person_gid = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitpersondtl';
                SocketService.getparams(url, params).then(function (resp) {

                    $scope.txteditresp_client = resp.data.clientrepresentative_name;
                    $scope.cboeditresp_designation = resp.data.clientrepresentative_designationgid;
                    $scope.txteditpersonalid_no = resp.data.clientrepresentative_personalmail;
                    $scope.txteditofficialid_no = resp.data.clientrepresentative_officemail;

                });
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                });

                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Contact ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var params = {
                                        auditvisit2person_gid: auditvisit2person_gid
                                    }
                                    var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                    SocketService.getparams(url, params).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.mobileno_edit = function () {
                    if (($scope.txteditmobile_no == undefined) || ($scope.txteditmobile_no == '') || ($scope.rdbeditprimarystatus == undefined) || ($scope.rdbeditwhatsappmobile_no == undefined) || ($scope.rdbeditwhatsappmobile_no == '') || ($scope.rdbeditprimarystatus == '')) {
                        Notify.alert('Enter mobile No/select primary status and whatsapp number', 'warning');
                    }
                    else {
                        var params = {
                            mobile_no: $scope.txteditmobile_no,
                            whatsapp_mobileno: $scope.rdbeditwhatsappmobile_no,
                            primary_status: $scope.rdbeditprimarystatus,
                        }

                        var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {
                                var params = {
                                    auditvisit2person_gid: auditvisit2person_gid
                                }
                                var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                });
                                $scope.txteditmobile_no = '';
                                $scope.rdbeditprimarystatus = '';
                                $scope.rdbeditwhatsappmobile_no = '';
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });
                    }
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.visitpersondtlupdate = function () {
                    var designationtype = $('#designation_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonDetailsUpdate';
                    var params = {
                        auditvisit2person_gid: auditvisit2person_gid,
                        clientrepresentative_name: $scope.txteditresp_client,
                        clientrepresentative_designationgid: $scope.cboeditresp_designation,
                        clientrepresentative_designationname: designationtype,
                        clientrepresentative_personalmail: $scope.txteditpersonalid_no,
                        clientrepresentative_officemail: $scope.txteditofficialid_no,
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                    });

                }
            }
        }

        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();


(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportEditController', AtmRptAuditVisitReportEditController);

    AtmRptAuditVisitReportEditController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportEditController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportEditController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditvisit_gid = searchObject.auditvisit_gid;
        var auditvisit_gid = $scope.auditvisit_gid;
        activate();

        function activate() {
            var url = 'api/AtmRptAuditReports/DeleteVisittmpDocument';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpPhoto';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpContact';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmppersondtl';
            SocketService.get(url).then(function (resp) {

            });
            var url = 'api/AtmRptAuditReports/DeleteVisittmpAddress';
            SocketService.get(url).then(function (resp) {

            });
            vm.calender1 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open1 = true;
            };
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];
            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1
            };
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamfinCustomerSummary';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.auditvisitreport_list = resp.data.auditvisitreport_list;

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitSamagroCustomerSummary';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.auditvisitreport_list1 = resp.data.auditvisitreport_list;

            });
            var url = 'api/AtmRptAuditReports/GetVisitedplace';
            SocketService.getparams(url,params).then(function (resp) {
                $scope.visitdone_list = resp.data.mdlvisitdone;
            });
            var url = 'api/employee/Employee';
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employee_list;

            });
            var url = 'api/Marketing/GetEntity';
            SocketService.get(url).then(function (resp) {
                $scope.entity_list = resp.data.inboundentity_list;
            });
            var url = 'api/AtmRptAuditReports/EditAuditVisitReport';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.draft_flag == "Y") {
                    $scope.draft = true;
                    $scope.update = false;
                }
                else {
                    $scope.draft = false;
                    $scope.update = true;
                }
                $scope.draft_flag = resp.data.draft_flag,
                    $scope.txtdateof_visit = resp.data.auditvisit_date,
                    $scope.txtclient_kmp = resp.data.clientkmp_activities,
                    $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_observation = resp.data.overall_observations;
                $scope.txtinspections_official = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.mstinspectingofficials = resp.data.mstinspectingofficials;
                $scope.employeeedit_list = resp.data.employeelist;
                $scope.visitdone_list = resp.data.visitdone_list;
                $scope.msteditvisitlist = resp.data.mdlvisitdone;
                $scope.cboentity = resp.data.entity_gid;
                $scope.entity_name = resp.data.entity_name;
                $scope.cbosamfin = resp.data.samfincustomer_gid;
                $scope.cbosamagro = resp.data.samagrocustomer_gid;
                $scope.approval_status = resp.data.approval_status;
                $scope.cboinspecting_list = [];
                if (resp.data.mstinspectingofficials != null) {
                    var count = resp.data.mstinspectingofficials.length;
                    for (var i = 0; i < count; i++) {
                        var indexs = $scope.employeeedit_list.map(function (x) { return x.employee_gid; }).indexOf(resp.data.mstinspectingofficials[i].employee_gid);
                        $scope.cboinspecting_list.push($scope.employeeedit_list[indexs]);
                    }
                }
                $scope.cbovisit_done = [];
                if (resp.data.visitdone_list != null) {
                    var count = resp.data.visitdone_list.length;
                    for (var i = 0; i < count; i++) {
                        var indexs = $scope.msteditvisitlist.map(function (x) { return x.visitdone_gid; }).indexOf(resp.data.visitdone_list[i].visitdone_gid);
                        $scope.cbovisit_done.push($scope.msteditvisitlist[indexs]);
                    }
                }

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPersondtlList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;

            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitAddressList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersonaddressdtl_list = resp.data.mstVisitpersonaddress_list;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
            
        }
        $scope.changeentitiy = function (cboentity) {
            for (var i = 0; i < $scope.entity_list.length; i++) {
                if (cboentity == $scope.entity_list[i].entity_gid)
                    $scope.entity_name = $scope.entity_list[i].entity_name
            }
        }
        $scope.Back = function () {

            $location.url('app/AtmRptAuditVisitReportSummary');
        }

        $scope.addaddress = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addaddresstype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txtpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txtcity = resp.data.city;
                        $scope.txttaluka = resp.data.taluka;
                        $scope.txtdistrict = resp.data.district;
                        $scope.txtstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txtpostal_code.length == 6) {
                        if ($scope.txtaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txtaddressline1.toString(), ",", $scope.txtaddressline2.toString(), ",", $scope.txtpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";
                $scope.addressSubmit = function () {

                    var params = {
                        addresstype_name: $scope.cboaddresstype.address_type,
                        addresstype_gid: $scope.cboaddresstype.address_gid,
                        primary_status: $scope.rdbprimarystatus,
                        address_line1: $scope.txtaddressline1,
                        address_line2: $scope.txtaddressline2,
                        landmark: $scope.txtLand_Mark,
                        postal_code: $scope.txtpostal_code,
                        taluk: $scope.txttaluka,
                        city: $scope.txtcity,
                        state_name: $scope.txtstate,
                        district: $scope.txtdistrict,
                        country: $scope.txtcountry,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitAddress';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });

                    $modalInstance.close('closed');

                }
            }


        }


        $scope.addressdelete = function (val) {
            var params =
            {
                auditvisit2address_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Address ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpAddressList';

                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        address_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });

        }

        function address_list() {
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetEditAuditVisitAddressList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersonaddressdtl_list = resp.data.mstVisitpersonaddress_list;

            });
        }


        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.addvisitedpersondetails = function () {
            var modalInstance = $modal.open({
                templateUrl: '/addvisitpersondetails.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.mobileno_add = function () {

                    var params = {
                        mobile_no: $scope.txtmobile_no,
                        whatsapp_mobileno: $scope.rdbwhatsappmobile_no,
                        primary_status: $scope.rdbprimarystatus,
                    }

                    var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                            SocketService.get(url).then(function (resp) {
                                $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                            });
                            $scope.txtmobile_no = '';
                            $scope.rdbprimarystatus = '';
                            $scope.rdbwhatsappmobile_no = '';
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });



                }
                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Contact ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var url = 'api/AtmRptAuditReports/GetAuditVisittmpContactList';
                                    SocketService.get(url).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.visitpersondtlSubmit = function () {
                    if ($scope.Visitpersoncontact_list == '' || $scope.Visitpersoncontact_list == undefined || $scope.Visitpersoncontact_list == null) {
                        Notify.alert('Add Atleast One Mobile Number', 'warning');
                    }
                    else {

                        var params = {
                            clientrepresentative_name: $scope.txtresp_client,
                            clientrepresentative_designationgid: $scope.cboresp_designation.designation_gid,
                            clientrepresentative_designationname: $scope.cboresp_designation.designation_type,
                            clientrepresentative_personalmail: $scope.txtpersonalid_no,
                            clientrepresentative_officemail: $scope.txtofficalid_no,


                        }

                        var url = 'api/AtmRptAuditReports/PostAuditPersonDetails';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                visitedpersondetails_list();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });

                        $modalInstance.close('closed');
                    }

                }


            }
        }

        $scope.visitpersondtldelete = function (val) {
            var params =
            {
                auditvisit2person_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Visit Person Details ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmppersondtlList';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                        visitedpersondetails_list();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        function visitedpersondetails_list() {
            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetEditAuditVisitPersondtlList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;

            });
        }


        $scope.editaddress = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editaddresstype.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            var applicationvisit2address_gid = val
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/AddressType/GetAddressTypeASC';
                SocketService.get(url).then(function (resp) {
                    $scope.addresstype_list = resp.data.addresstype_list;
                });

                var params = {
                    auditvisit2address_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitaddress';
                SocketService.getparams(url, params).then(function (resp) {


                    $scope.cboeditaddresstype = resp.data.addresstype_gid;
                    $scope.rdbeditprimaryaddress = resp.data.primary_status;
                    $scope.txteditaddressline1 = resp.data.address_line1;
                    $scope.txteditaddressline2 = resp.data.address_line2;
                    $scope.txteditLand_Mark = resp.data.landmark;
                    $scope.txteditpostal_code = resp.data.postal_code;
                    $scope.txtedittaluka = resp.data.taluk;
                    $scope.txteditcity = resp.data.city;
                    $scope.txteditstate = resp.data.state_name;
                    $scope.txtlatitude = resp.data.latitude;
                    $scope.txtlongitude = resp.data.longitude;
                    $scope.txteditdistrict = resp.data.district;
                    $scope.txteditcountry = resp.data.country;
                });
                $scope.onchangepostal_code = function () {
                    var params = {
                        postal_code: $scope.txteditpostal_code
                    }

                    var url = 'api/Mstbuyer/GetPostalCodeDetails';

                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.txteditcity = resp.data.city;
                        $scope.txtedittaluka = resp.data.taluka;
                        $scope.txteditdistrict = resp.data.district;
                        $scope.txteditstate = resp.data.state_name;
                    });
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.getGeoCoding = function () {
                    if ($scope.txtpostal_code == undefined) {
                        $scope.txtlatitude = '';
                        $scope.txtlongitude = '';
                    }
                    else if ($scope.txteditpostal_code.length == 6) {
                        if ($scope.txteditaddressline2 == undefined) {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditpostal_code.toString());
                        } else {
                            var addressString = ''.concat($scope.txteditaddressline1.toString(), ",", $scope.txteditaddressline2.toString(), ",", $scope.txteditpostal_code.toString());
                        }
                        var params = {
                            address: addressString
                        }
                        var url = 'api/GoogleMapsAPI/GetGeoCoding';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == "OK") {
                                $scope.txtlatitude = resp.data.results[0].geometry.location.lat.toString();
                                $scope.txtlongitude = resp.data.results[0].geometry.location.lng.toString();
                                $scope.geocodingFailed = false;
                            }
                            else if (resp.data.status == "ZERO_RESULTS") {
                                $scope.geocodingFailed = true;
                            }
                        });
                    }
                }

                $scope.txtcountry = "India";

                $scope.addressUpdate = function () {
                    var address_type = $('#address_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonaddressUpdate';
                    var params = {
                        auditvisit2address_gid: val,
                        addresstype_name: address_type,
                        addresstype_gid: $scope.cboeditaddresstype,
                        primary_status: $scope.rdbeditprimaryaddress,
                        address_line1: $scope.txteditaddressline1,
                        address_line2: $scope.txteditaddressline2,
                        landmark: $scope.txteditLand_Mark,
                        postal_code: $scope.txteditpostal_code,
                        taluk: $scope.txtedittaluka,
                        city: $scope.txteditcity,
                        //state_name: $scope.cboeditstate.state_name,
                        //state_gid: $scope.cboeditstate.state_gid,
                        state_name: $scope.txteditstate,
                        district: $scope.txteditdistrict,
                        latitude: $scope.txtlatitude,
                        longitude: $scope.txtlongitude,
                        country: $scope.txteditcountry
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            address_list();
                        }
                    });

                }
            }
        }


        $scope.saveasdraft_update = function () {
            if ($scope.txtdateof_visit == '' || $scope.txtdateof_visit == null || $scope.txtdateof_visit == undefined) {
                Notify.alert('Select Date Of Visit', 'warning');
            }

            else {

                var params = {
                    auditvisit_gid: auditvisit_gid,
                    auditvisit_date: $scope.txtdateof_visit,
                    auditvisitdate: $scope.txtdateof_visit,
                    mstinspectingofficials: $scope.cboinspecting_list,
                    mdlvisitdone: $scope.cbovisit_done,
                    clientkmp_activities: $scope.txtclient_kmp,
                    promoter_background: $scope.txtpromoter_background,
                    overall_observations: $scope.txtoverall_observation,
                    inspectingofficial_recommenation: $scope.txtinspections_official,
                    trading_relationship: $scope.txttrading_relationship,
                    summary: $scope.txtsummary,
                    
                }
                var url = 'api/AtmRptAuditReports/PostSaveAuditVisitReportUpdate';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //var params = {
                        //    application_gid: application_gid,
                        //    statusupdated_by: 'RM',
                        //}
                        //var url = 'api/AtmRptAuditReports/GetVisitReportList';
                        //SocketService.getparams(url, params).then(function (resp) {
                        //    $scope.VisitReportList = resp.data.VisitReportList;

                        //});
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $location.url('app/MstVisitReportAdd?application_gid=' + application_gid);
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }

        $scope.visitreportSubmit = function () {


            var params = {
                auditvisit_gid: auditvisit_gid,
                auditvisit_date: $scope.txtdateof_visit,
                auditvisitdate: $scope.txtdateof_visit,
                mstinspectingofficials: $scope.cboinspecting_list,
                mdlvisitdone: $scope.cbovisit_done,
                clientkmp_activities: $scope.txtclient_kmp,
                promoter_background: $scope.txtpromoter_background,
                overall_observations: $scope.txtoverall_observation,
                inspectingofficial_recommenation: $scope.txtinspections_official,
                trading_relationship: $scope.txttrading_relationship,
                summary: $scope.txtsummary,
            }
            var url = 'api/AtmRptAuditReports/PostSubmitAuditVisitReportUpdate';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    var params = {
                        application_gid: application_gid,
                        statusupdated_by: 'RM',
                    }
                    var url = 'api/AtmRptAuditReports/GetAuditVisitReportList';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.VisitReportList = resp.data.VisitReportList;

                    });
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $location.url('app/MstVisitReportAdd?application_gid=' + application_gid);
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }

        $scope.visitreportUpdate = function () {
            var entityname;
            var entity_index = $scope.entity_list.map(function (e) { return e.entity_gid }).indexOf($scope.cboentity);
            if (entity_index == -1) { entityname = ''; } else { entityname = $scope.entity_list[entity_index].entity_name; };

            var samfincustomername;
            var samfincustomer_index = $scope.auditvisitreport_list.map(function (e) { return e.samfincustomer_gid }).indexOf($scope.cbosamfin);
            if (samfincustomer_index == -1) { samfincustomername = ''; } else { samfincustomername = $scope.auditvisitreport_list[samfincustomer_index].samfincustomer_name; };

            var samagrocustomername;
            var samagrocustomer_index = $scope.auditvisitreport_list1.map(function (e) { return e.samagrocustomer_gid }).indexOf($scope.cbosamagro);
            if (samagrocustomer_index == -1) { samagrocustomername = ''; } else { samagrocustomername = $scope.auditvisitreport_list1[samagrocustomer_index].samagrocustomer_name; };

           

            var params = {
               
                auditvisit_gid: auditvisit_gid,
                auditvisit_date: $scope.txtdateof_visit,
                auditvisitdate: $scope.txtdateof_visit,
                mstinspectingofficials: $scope.cboinspecting_list,
                mdlvisitdone: $scope.cbovisit_done,
                clientkmp_activities: $scope.txtclient_kmp,
                promoter_background: $scope.txtpromoter_background,
                overall_observations: $scope.txtoverall_observation,
                inspectingofficial_recommenation: $scope.txtinspections_official,
                trading_relationship: $scope.txttrading_relationship,
                summary: $scope.txtsummary,
                entity_gid: $scope.cboentity,
                entity_name: entityname,
                samfincustomer_gid: $scope.cbosamfin,
                samfincustomer_name: samfincustomername,
                samagrocustomer_gid:  $scope.cbosamagro,
                samagrocustomer_name: samagrocustomername,
                
            }
            var url = 'api/AtmRptAuditReports/PostUpdateAuditVisitReportUpdate';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    //var params = {
                    //    application_gid: application_gid,
                    //    statusupdated_by: 'RM',
                    //}
                    //var url = 'api/AtmRptAuditReports/GetAuditVisitReportList';
                    //SocketService.getparams(url, params).then(function (resp) {
                    //    $scope.VisitReportList = resp.data.VisitReportList;

                    //});
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $location.url('app/AtmRptAuditVisitReportSummary');
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        }

        $scope.mobileno_summary = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.VisitReportDocumentUpload = function () {
            var fi = document.getElementById('file');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "documentformatonly");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('document_name', $scope.txtreport_name);
                frm.append('project_flag', "documentformatonly");

                $scope.uploadfrm = frm;
                var url = 'api/AtmRptAuditReports/PostAuditVisitDocumentUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#file").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var params = {
                            auditvisit_gid: auditvisit_gid
                        }
                        var url = 'api/AtmRptAuditReports/GetEditAuditVisitDocumentList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.UploadDocumentList = resp.data.UploadDocumentList;

                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.')
            }
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.uploaddocumentcancel = function (val) {

            var params = {
                auditvisit2document_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Document ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    lockUI();
                    var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpDocumentList';
                    SocketService.getparams(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            var params = {
                                auditvisit_gid: auditvisit_gid
                            }
                            var url = 'api/AtmRptAuditReports/GetEditAuditVisitDocumentList';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.UploadDocumentList = resp.data.UploadDocumentList;

                            });
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        unlockUI();
                    });
                    SweetAlert.swal('Deleted Successfully!');
                }
            });
        }

        $scope.VisitReportPhotoUpload = function () {
            var fi = document.getElementById('photo');
            if (fi.files.length > 0) {
                lockUI();

                var frm = new FormData();
                for (var i = 0; i < fi.files.length; i++) {

                    frm.append(fi.files[i].name, fi.files[i]);
                    var fname = fi.files.item(i).name;
                    var fsize = fi.files.item(i).size;
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(fi.files[i].name, "photo");
                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                }
                frm.append('photo_name', $scope.txtphoto_name);
                frm.append('project_flag', "photo");

                $scope.uploadfrm = frm;
                var url = 'api/AtmRptAuditReports/AuditVisitPhotoUpload';
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                    $("#photo").val('');

                    unlockUI();
                    if (resp.data.status == true) {
                        var params = {
                            auditvisit_gid: auditvisit_gid
                        }
                        var url = 'api/AtmRptAuditReports/GetEditAuditVisitPhotoList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.UploadphotoList = resp.data.UploadphotoList;
                        });

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    unlockUI();
                });
            }
            else {
                Notify.alert('Please select a file.')
            }
        }

        $scope.uploadphotocancel = function (val) {

            var params = {
                auditvisit2photo_gid: val
            }
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Photo ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        lockUI();
                        var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpPhotoList';
                        SocketService.getparams(url, params).then(function (resp) {
                            $scope.upload_list = resp.data.upload_list;
                            if (resp.data.status == true) {
                                var params = {
                                    auditvisit_gid: auditvisit_gid
                                }
                                var url = 'api/AtmRptAuditReports/GetEditAuditVisitPhotoList';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.UploadphotoList = resp.data.UploadphotoList;

                                });
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                            unlockUI();
                        });
                        SweetAlert.swal('Deleted Successfully!');
                    }
                });
        }

        $scope.editvisitedpersondetails = function (val) {
            var modalInstance = $modal.open({
                templateUrl: '/editvisitedpersondetails.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            var auditvisit2person_gid = val;
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/Designation/GetDesignation';
                SocketService.get(url).then(function (resp) {
                    $scope.designation_list = resp.data.designation_list;
                });
                var params = {
                    auditvisit2person_gid: val
                }
                var url = 'api/AtmRptAuditReports/EditAuditVisitpersondtl';
                SocketService.getparams(url, params).then(function (resp) {

                    $scope.txteditresp_client = resp.data.clientrepresentative_name;
                    $scope.cboeditresp_designation = resp.data.clientrepresentative_designationgid;
                    $scope.txteditpersonalid_no = resp.data.clientrepresentative_personalmail;
                    $scope.txteditofficialid_no = resp.data.clientrepresentative_officemail;

                });
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                });
                $scope.mobileno_delete = function (val) {
                    var params = {
                        auditvisitperson2contact_gid: val
                    }
                    SweetAlert.swal({
                        title: 'Are you sure?',
                        text: 'Do You Want To Delete the Contact ?',
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes, delete it!',
                        closeOnConfirm: false
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var url = 'api/AtmRptAuditReports/DeleteAuditVisittmpContactList';
                            SocketService.getparams(url, params).then(function (resp) {
                                if (resp.data.status == true) {
                                    var params = {
                                        auditvisit2person_gid: auditvisit2person_gid
                                    }
                                    var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                    SocketService.getparams(url, params).then(function (resp) {
                                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                    });
                                }
                                else {
                                    Notify.alert('Error Occurred While Deleting Mobile Number!', {
                                        status: 'warning',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                            });
                            SweetAlert.swal('Deleted Successfully!');
                        }

                    });
                };
                $scope.mobileno_edit = function () {
                    if (($scope.txteditmobile_no == undefined) || ($scope.txteditmobile_no == '') || ($scope.rdbeditprimarystatus == undefined) || ($scope.rdbeditwhatsappmobile_no == undefined) || ($scope.rdbeditwhatsappmobile_no == '') || ($scope.rdbeditprimarystatus == '')) {
                        Notify.alert('Enter mobile No/select primary status and whatsapp number', 'warning');
                    }
                    else {
                        var params = {
                            mobile_no: $scope.txteditmobile_no,
                            whatsapp_mobileno: $scope.rdbeditwhatsappmobile_no,
                            primary_status: $scope.rdbeditprimarystatus,
                               }

                        var url = 'api/AtmRptAuditReports/PostAuditVisitContactNo';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {
                                var params = {
                                    auditvisit2person_gid: auditvisit2person_gid
                                }
                                var url = 'api/AtmRptAuditReports/GetEditAuditVisitContactList';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                                });
                                $scope.txteditmobile_no = '';
                                $scope.rdbeditprimarystatus = '';
                                $scope.rdbeditwhatsappmobile_no = '';
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });
                    }
                }
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.visitpersondtlupdate = function () {
                    var designationtype = $('#designation_type :selected').text();

                    var url = 'api/AtmRptAuditReports/PostAuditPersonDetailsUpdate';
                    var params = {
                        auditvisit2person_gid: auditvisit2person_gid,
                        clientrepresentative_name: $scope.txteditresp_client,
                        clientrepresentative_designationgid: $scope.cboeditresp_designation,
                        clientrepresentative_designationname: designationtype,
                        clientrepresentative_personalmail: $scope.txteditpersonalid_no,
                        clientrepresentative_officemail: $scope.txteditofficialid_no,
                    }
                    SocketService.post(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                        else {
                            $modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            visitedpersondetails_list();
                        }
                    });

                }
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportManagementApprovedSummaryController', AtmRptAuditVisitReportManagementApprovedSummaryController);

    AtmRptAuditVisitReportManagementApprovedSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmRptAuditVisitReportManagementApprovedSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportManagementApprovedSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetAuditVisitReportManagementApprovedSummary';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;
                $scope.management_pending = resp.data.management_pending;
                $scope.management_approved = resp.data.management_approved;

            });

        }
        $scope.AuditVisitApprovedReport = function () {
            lockUI();
            var url = 'api/AtmRptAuditReports/ExportAuditVisitApprovedReport';
            SocketService.get(url).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);

                    //var phyPath = resp.data.lspath;
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = resp.data.lsname.split('.');
                    //link.download = name[0];
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }
                else {
                    unlockUI();
                    Notify.alert('Error Occurred While Exporting !', 'warning')

                }

            });
        }
        $scope.approvalpending = function () {
            $state.go('app.AtmRptAuditVisitReportManagementPendingSummary');
        }

        $scope.approvedapproved = function () {
            $state.go('app.AtmRptAuditVisitReportManagementApprovedSummary');
        }

        //$scope.editauditvisitreport = function (val) {

        //    $location.url('app/AtmRptAuditVisitReportEdit?auditvisit_gid=' + val);

        //}

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportManagementApprovedView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }



    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportManagementApprovedViewController', AtmRptAuditVisitReportManagementApprovedViewController);

    AtmRptAuditVisitReportManagementApprovedViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportManagementApprovedViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportManagementApprovedViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.reportingmanager_name = resp.data.reportingmanager_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        addresslist();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportManagementApprovedSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportManagementPendingSummaryController', AtmRptAuditVisitReportManagementPendingSummaryController);

    AtmRptAuditVisitReportManagementPendingSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmRptAuditVisitReportManagementPendingSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportManagementPendingSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetAuditVisitReportManagementPendingSummary';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;
                $scope.management_pending = resp.data.management_pending;
                $scope.management_approved = resp.data.management_approved;

            });
        }
        $scope.AuditVisitPendingReport = function () {
            lockUI();
            var url = 'api/AtmRptAuditReports/ExportAuditVisitPendingReport';
            SocketService.get(url).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);

                    //var phyPath = resp.data.lspath;
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = resp.data.lsname.split('.');
                    //link.download = name[0];
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }
                else {
                    unlockUI();
                    Notify.alert('Error Occurred While Exporting !', 'warning')

                }

            });
        }

        $scope.approvalpending = function () {
            $state.go('app.AtmRptAuditVisitReportManagementPendingSummary');
        }

        $scope.approvedapproved = function () {
            $state.go('app.AtmRptAuditVisitReportManagementApprovedSummary');
        }

        $scope.editauditvisitreport = function (val) {

            $location.url('app/AtmRptAuditVisitReportApproval?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));

        }

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportManagementPendingView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }



    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportManagementPendingViewController', AtmRptAuditVisitReportManagementPendingViewController);

    AtmRptAuditVisitReportManagementPendingViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportManagementPendingViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportManagementPendingViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.reportingmanager_name = resp.data.reportingmanager_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        addresslist();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportManagementPendingSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportSummaryController', AtmRptAuditVisitReportSummaryController);

    AtmRptAuditVisitReportSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal','cmnfunctionService'];

    function AtmRptAuditVisitReportSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmRptAuditReports/GetVisitReportList';
            SocketService.get(url).then(function (resp) {
                $scope.VisitReportList = resp.data.VisitReportList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitReportCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pending = resp.data.pending;
                $scope.approved = resp.data.approved;
                $scope.approval_pending = resp.data.approval_pending;
                $scope.approval_approved = resp.data.approval_approved;
               
            });

        }

        $scope.reportpending = function () {
            $state.go('app.AtmRptAuditVisitReportSummary');
        }

        $scope.reportapproved = function () {
            $state.go('app.AtmRptAuditVisitReportApprovedSummary');
        }

        $scope.createauditvisit = function () {
            $state.go('app.AtmRptAuditVisitReport');
        }

        $scope.editauditvisitreport = function (val) {

            $location.url('app/AtmRptAuditVisitReportEdit?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));

        }

        $scope.viewauditvisitreport = function (val) {
            $location.url('app/AtmRptAuditVisitReportView?hash=' + cmnfunctionService.encryptURL('auditvisit_gid=' + val));


        }
        


    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmRptAuditVisitReportViewController', AtmRptAuditVisitReportViewController);

    AtmRptAuditVisitReportViewController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'DownloaddocumentService', 'cmnfunctionService'];


    function AtmRptAuditVisitReportViewController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, DownloaddocumentService, cmnfunctionService) {

        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmRptAuditVisitReportViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var auditvisit_gid = searchObject.auditvisit_gid;
        activate();

        function activate() {

            var params = {
                auditvisit_gid: auditvisit_gid
            }
            var url = 'api/AtmRptAuditReports/GetAuditVisitReportDtls';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtdate_ofvisit = resp.data.auditvisit_date;
                $scope.txtname_inspecting = resp.data.inspectingofficials_name;
                $scope.txtwhere_visitdone = resp.data.visitdone_name;
                $scope.Visitpersondtl_list = resp.data.mstVisitpersondtl_list;
                $scope.Visitpersonaddress_list = resp.data.mstVisitpersonaddress_list;
                $scope.txtkmp_activities = resp.data.clientkmp_activities;
                $scope.txtpromoter_background = resp.data.promoter_background;
                $scope.txtoverall_onservation = resp.data.overall_observations;
                $scope.txtinspecting_officials = resp.data.inspectingofficial_recommenation;
                $scope.txttrading_relationship = resp.data.trading_relationship;
                $scope.txtsummary = resp.data.summary;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.reportingmanager_name = resp.data.reportingmanager_name;
                $scope.txtsamfincustomer_name = resp.data.samfincustomer_name;
                $scope.txtsamagrocustomer_name = resp.data.samagrocustomer_name;
                //$scope.lsfilename = resp.data.filesname;
                //$scope.lsfilepath = resp.data.filepath;
                //$scope.UploadDocumentList = resp.data.UploadDocumentList;
                //$scope.UploadphotoList = resp.data.UploadphotoList;
                unlockUI();
            });
            var url = 'api/AtmRptAuditReports/GetAuditVisitPhotosList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadphotoList = resp.data.UploadphotoList;

            });

            var url = 'api/AtmRptAuditReports/GetAuditVisitDocumentList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.lsfilename = resp.data.filesname;
                $scope.lsfilepath = resp.data.filepath;
                $scope.UploadDocumentList = resp.data.UploadDocumentList;

            });
        }

        $scope.visitreportmobileno_view = function (auditvisit2person_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/mobileno_summary.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditvisit2person_gid: auditvisit2person_gid

                }
                var url = 'api/AtmRptAuditReports/GetAuditVisitContactList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.Visitpersoncontact_list = resp.data.mstVisitpersoncontact_list;
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        addresslist();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'info',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function () {
            $location.url('app/AtmRptAuditVisitReportSummary');
        }

        $scope.Document_Downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }

        $scope.photo_downloads = function (val1, val2) {
            DownloaddocumentService.Downloaddocument(val1, val2);
        }
        $scope.documentviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.documentphotoviewer = function (val1, val2) {
            lockUI();
            var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
            if (IsValidExtension == false) {
                Notify.alert("View is not supported for this format..!", {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                unlockUI();
                return false;
            }
            DownloaddocumentService.DocumentViewer(val1, val2);

        }
        $scope.downloadall1 = function (val1, val2) {

            for (var i = 0; i < val2.length; i++) {
                //  console.log(array[i]);
                DownloaddocumentService.Downloaddocument(val1, val2[i]);
            }

        }
        $scope.StaticMapAndPhotos_View = function (latitude, longitude, address_line1, address_line2, postal_code) {
            var modalInstance = $modal.open({
                templateUrl: '/StaticMapAndPhotosView.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    latitude: latitude,
                    longitude: longitude
                }
                var url = 'api/GoogleMapsAPI/GetStaticMapUrl';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.staticmapImgUrl = resp.data;
                });
                if (address_line2 == '') {
                    var addressString = ''.concat(address_line1.toString(), ",", postal_code.toString());
                } else {
                    var addressString = ''.concat(address_line1.toString(), ",", address_line2.toString(), ",", postal_code.toString());
                }
                var params = {
                    address: addressString
                }
                var url = 'api/GoogleMapsAPI/GetPlaceImage';
                SocketService.getparams(url, params).then(function (resp) {
                    var photoUrlArray = [];
                    for (var i = 0; i < resp.data.length; i++) {
                        if (resp.data[i] != null) {
                            photoUrlArray[i] = resp.data[i];
                        }
                    }
                    if (photoUrlArray.length == 0) {
                        $scope.photoNotFound = true;
                    } else {
                        $scope.photoUrlList = photoUrlArray;
                        $scope.photoFound = true;
                    }
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.downloadall = function () {
            for (var i = 0; i < $scope.UploadDocumentList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadDocumentList[i].document_path, $scope.UploadDocumentList[i].filename);
            }
        }
        $scope.downloadall_photo = function () {
            for (var i = 0; i < $scope.UploadphotoList.length; i++) {
                DownloaddocumentService.Downloaddocument($scope.UploadphotoList[i].document_path, $scope.UploadphotoList[i].filename);
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnApprovalController', AtmTrnApprovalController);

    AtmTrnApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnApprovalController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnApprovalController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditorMaker/GetInitialApproval';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.initialapproval_list = resp.data.initialapproval_list;
                $scope.approvalhistory_list = resp.data.approvalhistory_list;
                unlockUI();

            });           
            $scope.view = function (val1,val2) {
                $location.url('app/AtmTrnApprovalView?initialapproval_gid=' + val1 + '&auditcreation_gid=' + val2)
            }
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnApprovalViewController', AtmTrnApprovalViewController);

    AtmTrnApprovalViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnApprovalViewController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnApprovalViewController';
        var auditcreation_gid = $location.search().auditcreation_gid;
        var initialapproval_gid = $location.search().initialapproval_gid;

        activate();


        function activate() {

            var params = {
                initialapproval_gid: initialapproval_gid
            }
            var url = 'api/AtmTrnAuditorMaker/GetInitialApprovalView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.initialapprovalview_list = resp.data.initialapprovalview_list;
                unlockUI();

            });                     
        }
        $scope.approve_submit = function () {
            
         
            var params = {
                initialapproval_gid: initialapproval_gid,
                auditcreation_gid: auditcreation_gid,
                approve_remark: $scope.reject_remarks,
                
            }
          
            var url = "api/AtmTrnAuditorMaker/PostObservationApproval";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnApproval');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.reject_submit = function () {


            var params = {
                initialapproval_gid: initialapproval_gid,
                auditcreation_gid: auditcreation_gid,
                approve_remark: $scope.reject_remark,

            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostObservationRejected";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnApproval');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.back = function () {
            $state.go('app.AtmTrnApproval');
        }
    }
})();


(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnApproverCheckpointObservationController', AtmTrnApproverCheckpointObservationController);

    AtmTrnApproverCheckpointObservationController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnApproverCheckpointObservationController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnApproverCheckpointObservationController';
        //$scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation2checklist_gid = $location.search().auditcreation2checklist_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerCheckpointObservation';
            var params = {
                auditcreation_gid: auditcreation_gid,

            };
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                  $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });
            var url = 'api/AtmTrnAuditorMaker/AuditorMakerCheckpointObservationView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_totalscore: $scope.total_score,

            }


            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    unlockUI()
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'bottom-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'bottom-center',
                        timeout: 3000
                    });
                    unlockUI();
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorMakerSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }



        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }


        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.btntaguser = function (auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        employelist: $scope.cboemployee_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: auditcreation_gid,

                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.assignedquery = function (val, val1) {
            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + val + '&sampleimport_gid=' + val1);
        }


        $scope.view = function (val, val1) {
            var sampleimport_gid = $scope.sampleimport_gid;
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.back = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.samplequery = function (val, val1) {
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }

        $scope.downloadtemplate_importexcel = function () {
           
            var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
            var filename = "\ImportExcelSample.xlsx";
            //var phyPath = resp.data.file_path;
            var phyPath = Templateurl + filename;
            var relPath = phyPath.split("EMS");
            var relpath1 = relPath[1].replace("\\", "/");
            var prefix = window.location.protocol + "//";
            var hosts = window.location.host;
            var str = prefix.concat(hosts, relpath1);
            var link = document.createElement("a");
            var name = filename.split('.');
            link.download = name[0];
            link.href = str;
            link.click();

        }

        $scope.excelupload = function (val, val1, name) {

            var fileInput = document.getElementById('fileimport');
            var filePath = fileInput.value;

            $scope.fileinputvalue = filePath;

            // Allowing file type
            var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

            if (!allowedExtensions.exec(filePath)) {
                Notify.alert('File Format Not Supported!', 'warning')
                $modalInstance.close('closed');
                //fileInput.value = '';
            }
            else if (filePath.includes("ImportExcelSample") == false) {
                Notify.alert('File Name / Template Not Supported!', 'warning')
                $modalInstance.close('closed');
            }
            else {
                var item = {
                    name: val[0].name,
                    file: val[0]
                };
                var frm = new FormData();
                frm.append('fileupload', item.file);
                frm.append('file_name', item.name);
                frm.append('auditcreation_gid', auditcreation_gid);
                $scope.uploadfrm = frm;
            }
        }

        $scope.uploadexcel = function () {

            if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                Notify.alert('Kindly Select the Excel file', 'warning')
            }
            else {
                var url = 'api/AtmTrnSampling/ImportExcelSample';
                lockUI();
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                    if (resp.data.status == true) {
                        activate();
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
                        $modalInstance.close('closed');
                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $modalInstance.close('closed');
                    }
                    $("#fileimport").val('');
                });
            }

        }

        $scope.uploadexcelcancel = function () {
            $("#fileimport").val('');
        };

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAssignedQueryController', AtmTrnAssignedQueryController);

    AtmTrnAssignedQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce'];

    function AtmTrnAssignedQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAssignedQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,

            };

            var url = 'api/AtmTrnMyAuditTask/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.AssignedQueryList = resp.data.AssignedQueryList;
                unlockUI();
            });


            var url = 'api/AtmTrnSampling/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                auditcreation_gid = resp.data.auditcreation_gid
                $scope.sample_list = resp.data.sample_list

            });


            //var url = "api//";
            //SocketService.get(url).then(function (resp) {
            //    $scope.assigned_count = resp.data.assigned_count;
            //    $scope.reply_count = resp.data.reply_count;
            //    $scope.close_count = resp.data.close_count;
            //    unlockUI();
            //});


        }
        

        //$scope.Reply = function (val1) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //     $location.url('app.AtmTrnReplyToQuery?auditcreation_gid=' + auditcreation_gid + '&raisequery_gid=' + val1);
        //}

        $scope.Reply = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnReplyToQuery?auditcreation_gid=' + auditcreation_gid);
        }

        $scope.replytoquery = function (raisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/replytoquery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    raisequery_gid: raisequery_gid
                }
                var url = 'api/AtmTrnMyAuditTask/EditAssignedQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.raisequery_gid = resp.data.raisequery_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                

                $scope.submit = function () {

                    var params = {
                        raisequery_gid: $scope.raisequery_gid,
                        reply_query: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTask/PostReplyToQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        //$scope.showPopover = function (raisequery_gid) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/showemployee.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        var params = {
        //            raisequery_gid: raisequery_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmTrnMyAuditTask/GetEmployeeName';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.employee_name = resp.data.employee_name;
        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}


        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskSummary');
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAudit360ViewController', AtmTrnAudit360ViewController);

    AtmTrnAudit360ViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnAudit360ViewController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAudit360ViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        var checklistmaster_gid = searchObject.checklistmaster_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        var sampleimport_gid = searchObject.sampleimport_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
             $scope.auditobservation = resp.data.auditobservation_name,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
              $scope.txtaudit_type = resp.data.audittype_name,
              $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
               $scope.txtrejected_remarks = resp.data.rejected_remarks,
              $scope.txtaudit_desc = resp.data.audit_description
                if (resp.data.status_update == 'Open') {
                    $scope.showAprrovalbutton = true;
                    var params = {
                        checklistmaster_gid: checklistmaster_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                    var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

                        angular.forEach($scope.checkpointsummary_list, function (value, key) {
                            //if (value.checklist_flag != '0') {
                            //    value.checked = true;
                            //}

                            value.checked = true;
                        });

                    });
                }
                else if (resp.data.status_update == 'Initiate Audit Approval pending')
                {
                    var params = {
                        checklistmaster_gid: checklistmaster_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                    var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;                       
                    });
                }
                else {
                    var params = {
                        auditcreation_gid: auditcreation_gid
                    }
                    var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
                    }); 
                    $scope.showAprrovalbutton = false;
                }

                if (resp.data.status_update == 'Audit Approval pending' || resp.data.status_update == "Approved")
                    $scope.showsubmitbutton = true;
                else
                    $scope.showsubmitbutton = false;
                unlockUI();
            });
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            //var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.auditcreation_list = resp.data.auditcreation_list;
            //    unlockUI();

            //});
            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    $scope.sample_list = resp.data.sample_list

            //});

            var params = {
                checklistmaster_gid: checklistmaster_gid,
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

                angular.forEach($scope.checkpointsummary_list, function (value, key) {
                    if (value.checklist_flag != '0') {
                        value.checked = true;
                    }
                });

            });

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function (submitevent) {
            lockUI();
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) { 
                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!', 'warning'); 
                unlockUI();
                return false; 
            }
            var params = {
                auditcreation_gid: auditcreation_gid,
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                submitevent: submitevent
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    if (submitevent == 'Y') {
                        Notify.alert('Checklist Assigned Successfully!', 'success');
                    }
                    else {
                        Notify.alert(resp.data.message, 'success');
                    }
                    $state.go('app.AtmTrnAuditCreationSummary');
                    unlockUI();
                }
                else {
                    Notify.alert('Error Occured..!', 'warning');
                    unlockUI();
                }

            });

        }
       

        //$scope.auditcreation_gid = $location.search().auditcreation_gid;
        //var auditcreation_gid = $location.search().auditcreation_gid;

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    //var filename = "ImportExcelSample.xlsx";
                    ////var phyPath = resp.data.file_path;
                    //var phyPath = "E:\\Web\\EMS\\templates\\ImportExcelSample.xlsx";
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var prefix = window.location.protocol;
                    //var hosts = window.location.host;
                    //var prefix = "http://"
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = filename.split('.');
                    //link.download = name[0];
                    //var uri = str;
                    //link.href = uri;
                    //link.click();

                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });

                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }





        //$scope.back = function (val) {
        //    $state.go('app.AtmTrnAuditCreationSummary');
        //}
        $scope.back = function (val) {
            if (lspage == 'initiateaudit') {
                $location.url('app/AtmTrnAuditCreationSummary');
            }
            else if (lspage == 'auditapproved') {
                $location.url('app/AtmTrnInitiateAuditApproved');
            }
            else if (lspage == 'audithold') {
                $location.url('app/AtmTrnInitiateAuditHold');
            }
            else if (lspage == 'auditclosed') {
                $location.url('app/AtmTrnInitiateAuditClosed');
            }
            else if (lspage == 'auditcompleted') {
                $location.url('app/AtmTrnInitiateAuditCompleted');
            }
            else if (lspage == 'auditrejected') {
                $location.url('app/AtmTrnInitiateAuditRejected');
            }

        }
        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }

        //$scope.view = function (val1, val2, val3) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //    var checklistmaster_gid = $scope.checklistmaster_gid;
        //    var sampleimport_gid = $scope.sampleimport_gid;
        //    $location.url('app/AtmTrnAuditTaskSample?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
        //}
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditApprovalController', AtmTrnAuditApprovalController);

    AtmTrnAuditApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditApprovalController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditApprovalController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditorMaker/GetObservationApproval';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.approvalhistory_list = resp.data.approvalhistory_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditApprovalHistory';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditapprovalhistory_list = resp.data.auditapprovalhistory_list;
                unlockUI();

            });
            $scope.auditview = function (val1, val2) {
                $location.url('app/AtmTrnAuditApprovalView?observationapproval_gid=' + val1 + '&auditcreation_gid=' + val2)
            }
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditApprovalViewController', AtmTrnAuditApprovalViewController);

    AtmTrnAuditApprovalViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditApprovalViewController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditApprovalViewController';
        var auditcreation_gid = $location.search().auditcreation_gid;
        var observationapproval_gid = $location.search().observationapproval_gid;
        var initialapproval_gid = $location.search().initialapproval_gid;

        activate();


        function activate() {

            var params = {
                observationapproval_gid: observationapproval_gid
            }
            var url = 'api/AtmTrnAuditorMaker/GetAuditApprovalView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.observationapprovalview_list = resp.data.observationapprovalview_list;
                unlockUI();

            });
        }
        $scope.auditapprove_submit = function () {


            var params = {
                observationapproval_gid: observationapproval_gid,
                auditcreation_gid: auditcreation_gid,
                approve_remark: $scope.auditapproval_remarks,

            }

            var url = "api/AtmTrnAuditorMaker/PostAuditApproval";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnApproval');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.auditreject_submit = function () {


            var params = {
                initialapproval_gid: initialapproval_gid,
                auditcreation_gid: auditcreation_gid,
                approve_remark: $scope.auditapproval_remarks,

            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostAuditRejected";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnApproval');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.back = function () {
            $state.go('app.AtmTrnApproval');
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditCreationEditController', AtmTrnAuditCreationEditController);

    AtmTrnAuditCreationEditController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'cmnfunctionService'];

    function AtmTrnAuditCreationEditController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditCreationEditController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var auditcreation_gid = searchObject.auditcreation_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();
        function activate() {
           
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];
            vm.calender1 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();
                vm.open1 = true;
            };
            vm.calender2 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();
                vm.open2 = true;
            };
            vm.calender3 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();
                vm.open3 = true;
            };     
            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1
            };
            var url = 'api/AtmMstChecklistMaster/GetChecklistMaster';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.checklistmaster_list = resp.data.checklistmaster_list
                unlockUI();
            });
            var url = 'api/AtmTrnAuditCreation/TempDeleteAuditee';
            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/AtmMstAuditPriority/GetAuditPriorityActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditpriority_data = resp.data.auditpriority_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditType/GetAuditTypeActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.audittype_list = resp.data.audittype_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditMapping/GetAuditMappingMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();

                $scope.auditmapping1_list = resp.data.auditmappingmaker_list;

            });

            var url = 'api/AtmMstAuditMapping/GetAuditMappingChecker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.auditmapping_list = resp.data.auditmappingchecker_list;

            });
            var url = 'api/AtmMstAuditMapping/GetAuditMappingApprover';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.auditmapping2_list = resp.data.auditmappingapprover_list;

            });
            var url = 'api/AtmMstAuditDepartment/GetAuditDepartment';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditdepartment_list = resp.data.auditdepartment_list;
                unlockUI();
            });
            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employeelist;
                unlockUI();
            });

            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee1_list = resp.data.employeelist;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequencyedit = resp.data.auditfrequency_gid,
                $scope.cboauditobservationedit = resp.data.auditobservation_name,
                 $scope.cboauditnameedit = resp.data.checklistmaster_gid,
                 $scope.cboauditdepartmentedit = resp.data.auditdepartment_gid,
                  $scope.cboaudittypeedit = resp.data.audittype_gid,
                  $scope.cboauditmakeredit = resp.data.employee_gid,
                 $scope.cboauditcheckeredit = resp.data.auditmapping_gid,
                 $scope.cboauditapproveredit = resp.data.auditmapping2employee_gid,
                 $scope.cboauditpriorityedit = resp.data.auditpriority_gid,               
                 $scope.txteditaudit_ref_no = resp.data.audit_uniqueno,              
                $scope.txteditend_date = resp.data.end_date,
                $scope.txteditperiod_from = resp.data.periodfrom_date,
                $scope.txteditperiod_to = resp.data.auditperiod_to,
                $scope.txteditaudit_ref_no = resp.data.audit_uniqueno,
                 $scope.cboauditeechecker_edit = resp.data.auditeechecker_gid,
                 $scope.cboauditeemaker_edit = resp.data.auditeemaker_gid,
                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtcheckpointgroup_name = resp.data.checkpointgroup_name,
                 $scope.txtauditdescription_name = resp.data.audit_description,
                unlockUI();
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
        }
       
        $scope.auditname_change = function (cboauditnameedit) {
            var params = {
                //checklistmaster_gid: $scope.cboauditname.checklistmaster_gid
                checklistmaster_gid: cboauditnameedit

            }
            var url = 'api/AtmTrnAuditCreation/GetAuditNameDetail';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.checklistmaster_gid = resp.data.checklistmaster_gid;
                $scope.checkpointgroup_gid = resp.data.checkpointgroup_gid;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.txtauditdescription_name = resp.data.audit_description;
                $scope.txtcheckpointgroup_name = resp.data.checkpointgroup_name;
            });
            $scope.txtentity_name = '';
        }
        $scope.auditdepartmentname_change = function (cboauditdepartmentedit) {
            var params = {
                // auditdepartment_gid: $scope.cboauditdepartment.auditdepartment_gid
                auditdepartment_gid: cboauditdepartmentedit
            }
            var url = 'api/AtmTrnAuditCreation/GetAuditName';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistmaster_list = resp.data.auditname_list;
            });

        }

       
        $scope.UpdateAuditCreation = function () {

            var auditname;
            var auditname_index = $scope.checklistmaster_list.map(function (e) { return e.checklistmaster_gid }).indexOf($scope.cboauditnameedit);
            if (auditname_index == -1) { auditname = ''; } else { auditname = $scope.checklistmaster_list[auditname_index].audit_name; };

            var auditpriorityname;
            var auditpriority_index = $scope.auditpriority_data.map(function (e) { return e.auditpriority_gid }).indexOf($scope.cboauditpriorityedit);
            if (auditpriority_index == -1) { auditpriorityname = ''; } else { auditpriorityname = $scope.auditpriority_data[auditpriority_index].auditpriority_name; };

            var auditdepartmentname;
            var auditdepartment_index = $scope.auditdepartment_list.map(function (e) { return e.auditdepartment_gid }).indexOf($scope.cboauditdepartmentedit);
            if (auditdepartment_index == -1) { auditdepartmentname = ''; } else { auditdepartmentname = $scope.auditdepartment_list[auditdepartment_index].auditdepartment_name; };

            var audittypename;
            var audittype_index = $scope.audittype_list.map(function (e) { return e.audittype_gid }).indexOf($scope.cboaudittypeedit);
            if (audittype_index == -1) { audittypename = ''; } else { audittypename = $scope.audittype_list[audittype_index].audittype_name; };

            var auditmakername;
            var auditmaker_index = $scope.auditmapping1_list.map(function (e) { return e.employee_gid }).indexOf($scope.cboauditmakeredit);
            if (auditmaker_index == -1) { auditmakername = ''; } else { auditmakername = $scope.auditmapping1_list[auditmaker_index].employee_name; };

            var auditcheckername;
            var auditchecker_index = $scope.auditmapping_list.map(function (e) { return e.auditmapping_gid }).indexOf($scope.cboauditcheckeredit);
            if (auditchecker_index == -1) { auditcheckername = ''; } else { auditcheckername = $scope.auditmapping_list[auditchecker_index].employee_name; };

            var auditapprovername;
            var auditapprover_index = $scope.auditmapping2_list.map(function (e) { return e.auditmapping2employee_gid }).indexOf($scope.cboauditapproveredit);
            if (auditapprover_index == -1) { auditapprovername = ''; } else { auditapprovername = $scope.auditmapping2_list[auditapprover_index].approver_name; };

            var auditeemakername;
            var auditeemaker_index = $scope.employee_list.map(function (e) { return e.employee_gid }).indexOf($scope.cboauditeemaker_edit);
            if (auditeemaker_index == -1) { auditeemakername = ''; } else { auditeemakername = $scope.employee_list[auditeemaker_index].employee_name; };

            var auditeecheckername;
            var auditeechecker_index = $scope.employee1_list.map(function (e) { return e.employee_gid }).indexOf($scope.cboauditeechecker_edit);
            if (auditeechecker_index == -1) { auditeecheckername = ''; } else { auditeecheckername = $scope.employee1_list[auditeechecker_index].employee_name; };

            var params = {

                auditcreation_gid: auditcreation_gid,
                checklistmaster_gid: $scope.cboauditnameedit,
                audit_name: auditname,
                auditdepartment_gid: $scope.cboauditdepartmentedit,
                auditdepartment_name: auditdepartmentname,
                auditpriority_gid: $scope.cboauditpriorityedit,
                auditpriority_name: auditpriorityname,
                audittype_gid: $scope.cboaudittypeedit,
                audittype_name: audittypename,
                auditmapping_gid: $scope.cboauditcheckeredit,
                audit_checker: auditcheckername,
                employee_gid: $scope.cboauditmakeredit,
                audit_maker: auditmakername,
                auditmapping2employee_gid: $scope.cboauditapproveredit,
                audit_approver: auditapprovername,
                audit_uniqueno: $scope.txteditaudit_ref_no,
                end_date: $scope.txteditend_date,             
                periodfrom_date: $scope.txteditperiod_from,
                auditperiod_to: $scope.txteditperiod_to,
                //auditeemaker_gid: $scope.cboauditeemaker_edit,
                //auditeemaker_name: auditeemakername,
                //auditeechecker_gid: $scope.cboauditeechecker_edit,
                //auditeechecker_name: auditeecheckername,
                auditobservation_name: $scope.cboauditobservationedit,
                checkpointgroup_name: $scope.txtcheckpointgroup_name,
                checkpointgroup_gid: $scope.checkpointgroup_gid
            }
           
                var url = 'api/AtmTrnAuditCreation/UpdateAuditCreation';
                lockUI()
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI()
                        activate();
                        $state.go('app.AtmTrnAuditCreationSummary');
                        Notify.alert(resp.data.message, 'success')
                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, 'warning')
                    }

                });
            }
        
        $scope.back = function (val) {
            if (lspage == 'auditapproved') {
                $location.url('app/AtmTrnInitiateAuditApproved');
            }
            else if (lspage == 'initiateaudit') {
                $location.url('app/AtmTrnAuditCreationSummary');
            }
        }

        $scope.add_auditee = function () {
            var lsauditeemaker_gid = '';
            var lsauditeemaker_name = '';
            if ($scope.cboauditeemaker != undefined || $scope.cboauditeemaker != null) {
                lsauditeemaker_gid = $scope.cboauditeemaker.employee_gid;
                lsauditeemaker_name = $scope.cboauditeemaker.employee_name;
            }
            var lsauditeechecker_gid = '';
            var lsauditeechecker_name = '';
            if ($scope.cboauditeechecker != undefined || $scope.cboauditeechecker != null) {
                lsauditeechecker_gid = $scope.cboauditeechecker.employee_gid;
                lsauditeechecker_name = $scope.cboauditeechecker.employee_name;
            }

            if (($scope.cboauditeemaker == '' || $scope.cboauditeemaker == null) || ($scope.cboauditeechecker == '' || $scope.cboauditeechecker == null)) {
                Notify.alert('Kindly Fill Auditee Details', 'warning')
            }
            else {
                var params = {
                    auditeemaker_gid: lsauditeemaker_gid,
                    auditeemaker_name: lsauditeemaker_name,
                    auditeechecker_gid: lsauditeechecker_gid,
                    auditeechecker_name: lsauditeechecker_name,
                }
                var url = 'api/AtmTrnAuditCreation/MultipleAuditeeEdit';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    auditee_list();
                    $scope.cboauditeemaker = '';
                    $scope.cboauditeechecker = '';
                });
            }
            
        }
        $scope.delete_auditee = function (multipleauditee_gid) {
            var params =
                {
                    multipleauditee_gid: multipleauditee_gid
                }
            var url = 'api/AtmTrnAuditCreation/DeleteAuditee';

            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                auditee_list();
            });
        }
        function auditee_list() {
            var params =
            {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/GetTempAssignedAuditeeList';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
       
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditCreationSummaryController', AtmTrnAuditCreationSummaryController);

    AtmTrnAuditCreationSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnAuditCreationSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditCreationSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditCreation/GetMyOpenAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list; 
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }

        $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   


      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }

       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 

        $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 


        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=initiateaudit'))
        }

       
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&lspage=initiateaudit'));
        }

       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditCreationViewController', AtmTrnAuditCreationViewController);

    AtmTrnAuditCreationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnAuditCreationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditCreationViewController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;

        activate();
        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                $scope.cboauditfrequency = resp.data.auditfrequency_name,
                $scope.cboauditname = resp.data.checklistmaster_gid,
                $scope.cboauditname = resp.data.audit_name,
                $scope.cboauditmaker = resp.data.employee_gid,
                $scope.cboauditmaker = resp.data.audit_maker,
                $scope.cboauditchecker = resp.data.auditmapping_gid,
                $scope.cboauditchecker = resp.data.audit_checker,
                $scope.cboauditapprover = resp.data.auditmapping2employee_gid,
                $scope.cboauditapprover = resp.data.audit_approver,
                $scope.cboauditpriority = resp.data.auditpriority_gid,
                $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });    
            var url = 'api/AtmTrnAuditCreation/ChecklistAssignView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistassignview_list = resp.data.checklistassignview_list;

            });
            var params = {
                auditcreation_gid: auditcreation_gid,

            };


            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                auditcreation_gid = resp.data.auditcreation_gid
                $scope.sample_list = resp.data.sample_list

            });

        }
        $scope.view = function (val1) {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnAuditCreationSampleView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + val1)
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditCreationSummary');
        }
        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }



        $scope.checkpointintent = function (auditcreation2checklist_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation2checklist_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation2checklist_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditeeCheckerApprovalController', AtmTrnAuditeeCheckerApprovalController);

    AtmTrnAuditeeCheckerApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditeeCheckerApprovalController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeCheckerApprovalController';

        var auditcreation_gid = $location.search().auditcreation_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        var initialapproval_gid = $location.search().initialapproval_gid;

        activate();


        function activate() {
            var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservationview_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;
            });
            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }
        $scope.view = function (val, val1) {

            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.auditeechecker_submit = function () {


            var params = {
                auditcreation_gid: auditcreation_gid,
                auditeeapproval_remark: $scope.auditeechecker_remark,

            }

            var url = "api/AtmTrnMyAuditTaskAuditee/PostAuditeeCheckerApproval";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditeeCheckerSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.auditeereject_submit = function () {


            var params = {
                auditcreation_gid: auditcreation_gid,
                auditeerejected_remark: $scope.auditeechecker_remark,

            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostAuditeeCheckerRejected";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnMyAuditTaskAuditeeSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }



        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskAuditeeSummary');
        }

    }
})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditeeCheckerObservationViewController', AtmTrnAuditeeCheckerObservationViewController);

    AtmTrnAuditeeCheckerObservationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditeeCheckerObservationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeCheckerObservationViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeSampleCheckerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditeecheckerpending) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditeecheckerpending'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditeeCheckerOpenObservationViewController', AtmTrnAuditeeCheckerOpenObservationViewController);

    AtmTrnAuditeeCheckerOpenObservationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditeeCheckerOpenObservationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeCheckerOpenObservationViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                    $scope.status_flag = resp.data.status_flag,
                    $scope.DBobservation_score = resp.data.sampleobservation_score,
                    $scope.txttotal_score = $scope.DBobservation_score,
                    $scope.observationfill = resp.data.observation_fill,
                    $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
                    $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                    $scope.samplecapture_field = resp.data.samplecapture_field,
                    //$scope.txt_overallscore = resp.data.sampleoverall_score;
                    $scope.txt_percent = resp.data.sampleobservation_percentage,
                    //if (resp.data.observation_fill == 'N') {
                    //    $scope.observationfillenable = false;
                    //    $scope.makersaveapprove = false;
                    //}
                    //else if (resp.data.observation_fill == 'Y') {
                    //    $scope.observationfillenable = true;
                    //    $scope.makersaveapprove = true;
                    //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeSampleCheckerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    sampleimport_gid: sampleimport_gid
                }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditeecheckerpending) {
            $location.url('app/AtmTrnMyAuditeeTaskCheckerAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditeecheckeropensummary'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();


(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditeeCheckerRaiseQueryController', AtmTrnAuditeeCheckerRaiseQueryController);

    AtmTrnAuditeeCheckerRaiseQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll'];

    function AtmTrnAuditeeCheckerRaiseQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeCheckerRaiseQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;

        activate();
        lockUI();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
            };

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Querydetaillist = resp.data.Querydetaillist;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.audittaguser_list = resp.data.audittaguser_list;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.closequery_list = resp.data.closequery_list;
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetclosequeryAudit';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditraisequery_status = resp.data.auditraisequery_status;
                unlockUI();
            });
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }

        $scope.replytoquery = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostQuerydetail";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = "api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist";
                    var param = {
                        auditcreation_gid: auditcreation_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        unlockUI();
                        $scope.Querydetaillist = resp.data.Querydetaillist;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtqueries = "";
            });
        }

        $scope.Back = function (val) {
            $state.go('app.AtmTrnAuditeeCheckerSummary');
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditeeCheckerSummary');
        }

        $scope.tagemployee = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuditee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid;
                    $scope.txtaudit_name = resp.data.audit_name;
                });

                $scope.ok = function () {
                    //$location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + auditcreation_gid)
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        tagemployelist: $scope.cboemployee_name,
                        audit_name: $scope.txtaudit_name,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostTagUserAudit';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var param = {
                //    auditcreation_gid: auditcreation_gid
                //}

                //var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
                //lockUI();
                //SocketService.getparams(url, param).then(function (resp) {
                //    $scope.audittaguser_list = resp.data.audittaguser_list;
                //    unlockUI();
                //});

            }
        }



        $scope.close_query = function () {

            var params = {
                auditcreation_gid: auditcreation_gid,
                closing_description: $scope.txtdescription

            }

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                    activate();

                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.showPopover = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditeeCheckerSummaryController', AtmTrnAuditeeCheckerSummaryController);

    AtmTrnAuditeeCheckerSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditeeCheckerSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeCheckerSummaryController';

        activate();

        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeChecker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
            });

        }

        $scope.maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }


        $scope.checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }


        $scope.Approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }


        $scope.auditee_maker = function () {
            $state.go('app.AtmTrnAuditeeMakerSummary');
        }


        $scope.auditee_checker = function () {
            $state.go('app.AtmTrnAuditeeCheckerSummary');
        }

        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditeeCheckerRaiseQuery?auditcreation_gid=' + val1)
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + val)
        }
        $scope.auditeecheckerapproval = function (val2) {
            $location.url('app/AtmTrnAuditeeCheckerApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditeeMakerRaiseQueryController', AtmTrnAuditeeMakerRaiseQueryController);

    AtmTrnAuditeeMakerRaiseQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll'];

    function AtmTrnAuditeeMakerRaiseQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeMakerRaiseQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;

        activate();
        lockUI();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
            };

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Querydetaillist = resp.data.Querydetaillist;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.audittaguser_list = resp.data.audittaguser_list;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.closequery_list = resp.data.closequery_list;
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetclosequeryAudit';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditraisequery_status = resp.data.auditraisequery_status;
                unlockUI();
            });
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }

        $scope.replytoquery = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostQuerydetail";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = "api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist";
                    var param = {
                        auditcreation_gid: auditcreation_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        unlockUI();
                        $scope.Querydetaillist = resp.data.Querydetaillist;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtqueries = "";
            });
        }

        $scope.Back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskAuditeeSummary');
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditeeMakerSummary');
        }

        $scope.tagemployee = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuditee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid;
                    $scope.txtaudit_name = resp.data.audit_name;
                });

                $scope.ok = function () {
                    //$location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + auditcreation_gid)
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        tagemployelist: $scope.cboemployee_name,
                        audit_name: $scope.txtaudit_name,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostTagUserAudit';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var param = {
                //    auditcreation_gid: auditcreation_gid
                //}

                //var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
                //lockUI();
                //SocketService.getparams(url, param).then(function (resp) {
                //    $scope.audittaguser_list = resp.data.audittaguser_list;
                //    unlockUI();
                //});

            }
        }



        $scope.close_query = function () {

            var params = {
                auditcreation_gid: auditcreation_gid,
                closing_description: $scope.txtdescription

            }

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                    activate();

                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.showPopover = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditeeMakerSummaryController', AtmTrnAuditeeMakerSummaryController);

    AtmTrnAuditeeMakerSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditeeMakerSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditeeMakerSummaryController';

        activate();

        function activate() {
   
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
            });

        }

        $scope.maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }


        $scope.checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }


        $scope.Approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }


        $scope.auditee_maker = function () {
            $state.go('app.AtmTrnAuditeeMakerSummary');
        }


        $scope.auditee_checker = function () {
            $state.go('app.AtmTrnAuditeeCheckerSummary');
        }



        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTask/GettaggedsamplesSummary';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.taggedsamples_list = resp.data.taggedsamples_list;
        //        unlockUI();

        //    });
        //}

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditeeMakerRaiseQuery?auditcreation_gid=' + val1)
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?auditcreation_gid=' + val)
        }
        $scope.approval = function (val2) {
            $location.url('app/AtmTrnApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;
                    $scope.status_remarks = resp.data.status_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.status_remarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {                  
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApprovalController', AtmTrnAuditorApprovalController);

    AtmTrnAuditorApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditorApprovalController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApprovalController';
        var auditcreation_gid = $location.search().auditcreation_gid;
        var observationapproval_gid = $location.search().observationapproval_gid;
        var initialapproval_gid = $location.search().initialapproval_gid;

        activate();

            function activate() {
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                      $scope.cboauditfrequency = resp.data.auditfrequency_name,
                     $scope.cboauditname = resp.data.checklistmaster_gid,
                      $scope.cboauditname = resp.data.audit_name,
                      $scope.cboauditmaker = resp.data.employee_gid,
                      $scope.cboauditmaker = resp.data.audit_maker,
                     $scope.cboauditchecker = resp.data.auditmapping_gid,
                      $scope.cboauditchecker = resp.data.audit_checker,
                      $scope.cboauditapprover = resp.data.employee_gid,
                      $scope.cboauditapprover = resp.data.audit_approver,
                     $scope.cboauditpriority = resp.data.auditpriority_gid,
                      $scope.cboauditpriority = resp.data.auditpriority_name,
                    $scope.txtdue_date = resp.data.due_date,
                    $scope.txtreport_date = resp.data.report_date,
                    $scope.txtperiod_from = resp.data.periodfrom_date,
                    $scope.txtperiod_to = resp.data.auditperiod_to,
                    $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                    $scope.cboauditmaker_name = resp.data.auditmaker_name,
                    $scope.cboauditchecker_name = resp.data.auditchecker_name,
                    unlockUI();
                });

                var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.makercheckpointobservationview_list = resp.data.makercheckpointobservationview_list;
                    $scope.txttotal_score = resp.data.total_score;
                });
                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI()
                    $scope.sample_list = resp.data.sample_list

                });
        }
        $scope.auditorapproval_submit = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                auditorapproval_remark: $scope.auditorapproval_remark,

            }

            var url = "api/AtmTrnAuditorMaker/PostAuditorApproval";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorApproverSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.auditorreject_submit = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                auditorreject_remark: $scope.auditorapproval_remark,

            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostAuditorRejected";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorApproverSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.back = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverClosedAuditController', AtmTrnAuditorApproverClosedAuditController);

    AtmTrnAuditorApproverClosedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverClosedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverClosedAuditController';

        activate();

        function activate() {

            //$scope.closed_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetClosedAuditorApprover';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}

                var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverCounts';
                SocketService.get(url).then(function (resp) {
                    unlockUI()
                    $scope.auditsapproveronhold_count = resp.data.auditsapproveronhold_count;
                    $scope.closedapproveraudit_count = resp.data.closedapproveraudit_count;
                    $scope.openapproveraudit_count = resp.data.openapproveraudit_count;
                    $scope.pendingapproverapproval_count = resp.data.auditapproverpending_count;
                    $scope.completed_count = resp.data.completedapproveraudit_count

                });


        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorapproverClosed'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverCompletedAuditController', AtmTrnAuditorApproverCompletedAuditController);

    AtmTrnAuditorApproverCompletedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverCompletedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams,cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverCompletedAuditController';


        activate();

        function activate() {

            //$scope.completed_audit = function () {

            var url = 'api/AtmTrnAuditorMaker/GetCompletedAuditorApprover';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}


                var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsapproveronhold_count = resp.data.auditsapproveronhold_count;
                $scope.closedapproveraudit_count = resp.data.closedapproveraudit_count;
                $scope.openapproveraudit_count = resp.data.openapproveraudit_count;
                $scope.pendingapproverapproval_count = resp.data.auditapproverpending_count;
                $scope.completed_count = resp.data.completedapproveraudit_count

            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

       
       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorapproverCompleted'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverHoldAuditController', AtmTrnAuditorApproverHoldAuditController);

    AtmTrnAuditorApproverHoldAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverHoldAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverHoldAuditController';

        activate();

        function activate() {

            //$scope.hold_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetOnholdAuditorApprover';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}

                var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverCounts';
                SocketService.get(url).then(function (resp) {
                    unlockUI()
                    $scope.auditsapproveronhold_count = resp.data.auditsapproveronhold_count;
                    $scope.closedapproveraudit_count = resp.data.closedapproveraudit_count;
                    $scope.openapproveraudit_count = resp.data.openapproveraudit_count;
                    $scope.pendingapproverapproval_count = resp.data.auditapproverpending_count;
                    $scope.completed_count = resp.data.completedapproveraudit_count

                });

        }


        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

       

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorapproverHold'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverObservationViewController', AtmTrnAuditorApproverObservationViewController);

    AtmTrnAuditorApproverObservationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverObservationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverObservationViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_update = resp.data.status_update,
                $scope.DBobservation_score = resp.data.observation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill;
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                //$scope.tagsamplebutton = true;
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;

                }
                else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });


            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });
            defaultdynamic();



            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            });
            /*    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;
                    for (var i = 0; i < $scope.makerobservationsampleview_list.length; i++) {
                        $scope.makerobservationsampleview_list[i].checked = true;
    
                    }
    
                    angular.forEach($scope.makerobservationsampleview_list, function (value, key) {
    
    
                        if (value.capture_field == "Yes") {
                            value.yes_radio = true;
                            value.yes_radio1 = true;
                        }
                        else if (value.capture_field == "No") {
                            value.no_radio = true;
                            value.no_radio1 = true;
                        }
                        else if (value.capture_field == "Partial") {
                            value.partialscore_radio = true;
                            value.partialscore_radio1 = true;
                        }
                        else if (value.capture_field == "NA") {
                            value.nascore_radio = true;
                            value.nascore_radio1 = true;
                        }
                        else if (value.capture_field == "") {
                            $scope.allobservationfilled = false;
    
                        }
    
                    });
                }); */
            function expand(expand_flag) {
                if (expand_flag = true) {
                    alert('true');
                }
                else {
                    alert('fasle');
                }
            }
            function defaultdynamic() {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                        $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.expandCount = 3;
                        $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                        $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                        $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                        $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                        for (i in $scope.SampleDynamicTabledata) {

                            //delete $scope.SampleDynamicTabledata[i].makerobservationsampleview_list;
                            delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                            delete $scope.SampleDynamicTabledata[i].taguser_flag;
                            delete $scope.SampleDynamicTabledata[i].tagged_employee;

                        }

                        for (i in $scope.raisedqueryarray) {
                            //delete $scope.raisedqueryarray[i].sampleimport_gid;
                            delete $scope.raisedqueryarray[i].raisedquery_flag;
                        }
                        $scope.raisedquerytable = true;
                        $scope.showtablediv = true;
                        if ($scope.SampleDynamicTabledata.length == 0) {
                            $scope.showtablediv = false;
                        }
                        if ($scope.raisedqueryarray.length == 0) {
                            $scope.raisedquerytable = false;
                        }

                    }
                    //else {
                    //    $scope.SampleDynamicTabledata = "";
                    //    $scope.raisedqueryarray = "";
                    //    $scope.showtablediv = false;
                    //    $scope.raisedquerytable = false;
                    //}
                    //angular.forEach($scope.SampleDynamicTabledata, function (value, key) {


                    //    var params = {
                    //        sampleimport_gid: value.sampleimport_gid,
                    //    };
                    //    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                    //    lockUI();
                    //    SocketService.getparams(url, params).then(function (resp) {
                    //        unlockUI();
                    //        value.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;

                    //        for (var i = 0; i < value.makerobservationview_list.length; i++) {
                    //            value.makerobservationview_list[i].checked = true;

                    //        }

                    //        angular.forEach(value.makerobservationview_list, function (value, key) {


                    //            if (value.capture_field == "Yes") {
                    //                value.yes_radio = true;
                    //                value.yes_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "No") {
                    //                value.no_radio = true;
                    //                value.no_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "Partial") {
                    //                value.partialscore_radio = true;
                    //                value.partialscore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "NA") {
                    //                value.nascore_radio = true;
                    //                value.nascore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "") {
                    //                $scope.allobservationfilled = false;

                    //            }

                    //        });
                    //    });
                    //    value.expand = false;

                    //});
                });
            }

        }

        $scope.onselected = function (val, val1, val2) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;


                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_score = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }



        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

        $scope.makerinitiateapproval = function () {
            if ($scope.openquerycount != '0' && $scope.DBobservation_score != "") {
                Notify.alert("Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if ($scope.auditobservation_name == 'Observation score for Audit & sample' && $scope.checklistverified_flag == 'N') {
                Notify.alert("Atleast one sample observation score saved", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    makerinitiate_approvalflag: 'Y',
                    observation_percentage: $scope.txt_percent

                }
                var url = 'api/AtmTrnAuditorMaker/PostMakerInitiateApproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorMakerSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }

                });
            }

        }



        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $scope.tagsamplebutton = true;
                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }
                activate();

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.description = function (checklistmasteradd_gid, checkpoint_description) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/checkpointdescription.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        'use strict';

        //        angular
        //            .module('angle')
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid

                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }

                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        $scope.sampleobservationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstApproverObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstApproverObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstApproverObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.back = function (val) {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')

        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverPendingApprovalController', AtmTrnAuditorApproverPendingApprovalController);

    AtmTrnAuditorApproverPendingApprovalController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverPendingApprovalController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverPendingApprovalController';

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsapproveronhold_count;
                $scope.closedaudit_count = resp.data.closedapproveraudit_count;
                $scope.openaudit_count = resp.data.openapproveraudit_count;
                $scope.pendingapproval_count = resp.data.auditapproverpending_count;
                $scope.completed_count = resp.data.completedapproveraudit_count
            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorapproverPending'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();


                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverRaiseQueryController', AtmTrnAuditorApproverRaiseQueryController);

    AtmTrnAuditorApproverRaiseQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll'];

    function AtmTrnAuditorApproverRaiseQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverRaiseQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;

        activate();
        lockUI();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
            };

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Querydetaillist = resp.data.Querydetaillist;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.audittaguser_list = resp.data.audittaguser_list;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.closequery_list = resp.data.closequery_list;
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetclosequeryAudit';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditraisequery_status = resp.data.auditraisequery_status;
                unlockUI();
            });
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }

        $scope.replytoquery = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostQuerydetail";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = "api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist";
                    var param = {
                        auditcreation_gid: auditcreation_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        unlockUI();
                        $scope.Querydetaillist = resp.data.Querydetaillist;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtqueries = "";
            });
        }

        $scope.Back = function (val) {
            if (lspage == 'auditorapproveropen') {
                $location.url('app/AtmTrnAuditorApproverSummary');
            }
            else if (lspage == 'auditorapproverPending') {
                $location.url('app/AtmTrnAuditorApproverPendingApproval');
            }
            else if (lspage == 'auditorapproverHold') {
                $location.url('app/AtmTrnAuditorApproverHoldAudit');
            }
            else if (lspage == 'auditorapproverClosed') {
                $location.url('app/AtmTrnAuditorApproverClosedAudit');
            }
            else if (lspage == 'auditorapproverTagged') {
                $location.url('app/AtmTrnAuditorApproverTaggedItems');
            }
            else if (lspage == 'auditorapproverCompleted') {
                $location.url('app/AtmTrnAuditorApproverCompletedAudit');
            }
        }

        $scope.tagemployee = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuditee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid;
                    $scope.txtaudit_name = resp.data.audit_name;
                });

                $scope.ok = function () {
                    //$location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + auditcreation_gid)
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        tagemployelist: $scope.cboemployee_name,
                        audit_name: $scope.txtaudit_name,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostTagUserAudit';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var param = {
                //    auditcreation_gid: auditcreation_gid
                //}

                //var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
                //lockUI();
                //SocketService.getparams(url, param).then(function (resp) {
                //    $scope.audittaguser_list = resp.data.audittaguser_list;
                //    unlockUI();
                //});

            }
        }



        $scope.close_query = function () {

            var params = {
                auditcreation_gid: auditcreation_gid,
                closing_description: $scope.txtdescription

            }

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                    activate();

                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.showPopover = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverSummaryController', AtmTrnAuditorApproverSummaryController);

    AtmTrnAuditorApproverSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditorApproverSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverSummaryController';

        activate();

        function activate() {

           

                var url = 'api/AtmTrnAuditorMaker/GetOpenAuditorApprover';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}
            var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsapproveronhold_count = resp.data.auditsapproveronhold_count;
                $scope.closedapproveraudit_count = resp.data.closedapproveraudit_count;
                $scope.openapproveraudit_count = resp.data.openapproveraudit_count;
            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

       
       


        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditorApproverRaiseQuery?auditcreation_gid=' + val1 + '&lspage=auditorapproveropen')
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnApproverCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverView?auditcreation_gid=' + val + '&lspage=auditorapproveropen')
        }
        $scope.approval = function (val2) {
            $location.url('app/AtmTrnApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditorApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.statusremarks = function (auditcreation_gid, status_remarks) {
            var modalInstance = $modal.open({
                templateUrl: '/statusremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetStatusRemarks';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtremarks = resp.data.status_remarks;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverTaggedItemsController', AtmTrnAuditorApproverTaggedItemsController);

    AtmTrnAuditorApproverTaggedItemsController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditorApproverTaggedItemsController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverTaggedItemsController';


        activate();

        function activate() {

            var url = 'api/AtmTrnAuditorMaker/GetAuditorApproverSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorApproverSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorApproverPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorApproverHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorApproverTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorApproverCompletedAudit')
        }

        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditorApproverRaiseQuery?auditcreation_gid=' + val1 + '&lspage=auditorapproverTagged')
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnApproverCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorApproverView?auditcreation_gid=' + val + '&lspage=auditorapproverTagged')
        }
        $scope.approval = function (val2) {
            $location.url('app/AtmTrnApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditorApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorApproverViewController', AtmTrnAuditorApproverViewController);

    AtmTrnAuditorApproverViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorApproverViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorApproverViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;

        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                   $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.openquerycount = resp.data.openquerycount;
                $scope.auditopenquerycount = resp.data.auditopenquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                $scope.auditorapprover_approvalflag = resp.data.auditorapprover_approvalflag
                if (lspage == 'auditorapproverPending' && $scope.auditorapprover_approvalflag == "N") {
                    $scope.proceedtocomplete = true;
                }
                else {
                    $scope.proceedtocomplete = false;
                }
                unlockUI();
            });

            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            //var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerobservationscore';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.txt_percent = resp.data.observation_percentage;
            //    unlockUI();

            //});

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            };


            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {
                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }
                });
            });

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //  //  auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});



        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: $scope.auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_score: $scope.total_score,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    if (resp.data.allobservationfilled == true) {
                        $scope.allobservationfilled = true;
                    }
                    else {
                        $scope.allobservationfilled = false;
                    }
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

      
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                }); 
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            // activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }
            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.auditorapproval_submit = function (auditcreation_gid) {
            if ($scope.openquerycount != '0' || $scope.auditopenquerycount != '0')
            {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else if($scope.auditobservation_name =='Observation score for sample')
            {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditorapproval_remark: $scope.auditorapproval_remark,

                }

                var url = "api/AtmTrnAuditorMaker/PostAuditorSampleApproval";
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmTrnAuditorApproverCompletedAudit');
                    }

                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            }
            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditorapproval_remark: $scope.auditorapproval_remark,
                    observation_percentage: $scope.txt_percent

                }

                var url = "api/AtmTrnAuditorMaker/PostAuditorApproval";
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmTrnAuditorApproverCompletedAudit');
                    }

                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            } 
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorApproverPendingApproval');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        //$scope.observationquery = function () {

        //    $state.go('app.AtmTrnAuditObservationQuery')
        //}

        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid

                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                           
                        }

                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }


                $scope.checkpointobservationupdate = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservationUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
  $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;

                        }

                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                            if (value.checklist_verified == "Yes") {
                                value.document_verifiedradio = true;
                                value.document_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "No") {
                                value.tag_verifiedradio = true;
                                value.tag_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "Partial") {
                                value.partial_verifiedradio = true;
                               
                            }
                            else if (value.checklist_verified == "NA") {
                                value.na_verifiedradio = true;
                               
                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
            }
        }

        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstApproverObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstApproverObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }

        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function (val) {
            if (lspage == 'auditorapproveropen') {
                $location.url('app/AtmTrnAuditorApproverSummary');
            }
            else if (lspage == 'auditorapproverPending') {
                $location.url('app/AtmTrnAuditorApproverPendingApproval');
            }
            else if (lspage == 'auditorapproverHold') {
                $location.url('app/AtmTrnAuditorApproverHoldAudit');
            }
            else if (lspage == 'auditorapproverClosed') {
                $location.url('app/AtmTrnAuditorApproverClosedAudit');
            }
            else if (lspage == 'auditorapproverTagged') {
                $location.url('app/AtmTrnAuditorApproverTaggedItems');
            }
            else if (lspage == 'auditorapproverCompleted') {
                $location.url('app/AtmTrnAuditorApproverCompletedAudit');
            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerApprovalController', AtmTrnAuditorCheckerApprovalController);

    AtmTrnAuditorCheckerApprovalController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditorCheckerApprovalController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerApprovalController';

        var auditcreation_gid = $location.search().auditcreation_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        var initialapproval_gid = $location.search().initialapproval_gid;

        activate();


        function activate() {
            var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservationview_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;
            });
            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }
        $scope.view = function (val, val1) {

            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.checkerapproval_submit = function () {
            var params = {              
                auditcreation_gid: auditcreation_gid,
                checkerapproval_remark: $scope.checkerapprove_remarks,
            }
            var url = "api/AtmTrnAuditorMaker/PostAuditorCheckerApproval";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorCheckerSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        $scope.checkerreject_submit = function () {


            var params = {
                auditcreation_gid: auditcreation_gid,
                checkerapproval_remark: $scope.checkerapprove_remark,

            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostAuditorCheckerRejected";
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

            

        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerClosedAuditController', AtmTrnAuditorCheckerClosedAuditController);

    AtmTrnAuditorCheckerClosedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerClosedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerClosedAuditController';

        activate();

        function activate() {
            //var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});
            //$scope.closed_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetClosedAuditorChecker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}
            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.pendingcheckerapproval_count = resp.data.pendingapprovalaudit_count
                $scope.completed_count = resp.data.completedcheckeraudit_count

            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }


        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerClosed'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark,
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();


                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerCompletedAuditController', AtmTrnAuditorCheckerCompletedAuditController);

    AtmTrnAuditorCheckerCompletedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerCompletedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerCompletedAuditController';

        activate();

        function activate() {
            //var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});

            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.pendingcheckerapproval_count = resp.data.pendingapprovalaudit_count
                $scope.completed_count = resp.data.completedcheckeraudit_count
            });
            var url = 'api/AtmTrnAuditorMaker/GetCompletedAuditorChecker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }


        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

      
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorCheckerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerCompleted'))
        }
        
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark,
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerHoldAuditController', AtmTrnAuditorCheckerHoldAuditController);

    AtmTrnAuditorCheckerHoldAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerHoldAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerHoldAuditController';

        activate();

        function activate() {
           

            //$scope.hold_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetOnholdAuditorChecker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}

                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerCounts';
                SocketService.get(url).then(function (resp) {
                    unlockUI()
                    $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                    $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                    $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                    $scope.pendingcheckerapproval_count = resp.data.pendingapprovalaudit_count
                    $scope.completed_count = resp.data.completedcheckeraudit_count

                });
        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }


        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerHold'))
        }
        
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark,
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                 
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerObservationViewController', AtmTrnAuditorCheckerObservationViewController);

    AtmTrnAuditorCheckerObservationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerObservationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerObservationViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_update = resp.data.status_update,
                $scope.DBobservation_score = resp.data.observation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill;
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                //$scope.tagsamplebutton = true;
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;

                }
                else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
            defaultdynamic();



            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            });
            /*    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;
                    for (var i = 0; i < $scope.makerobservationsampleview_list.length; i++) {
                        $scope.makerobservationsampleview_list[i].checked = true;
    
                    }
    
                    angular.forEach($scope.makerobservationsampleview_list, function (value, key) {
    
    
                        if (value.capture_field == "Yes") {
                            value.yes_radio = true;
                            value.yes_radio1 = true;
                        }
                        else if (value.capture_field == "No") {
                            value.no_radio = true;
                            value.no_radio1 = true;
                        }
                        else if (value.capture_field == "Partial") {
                            value.partialscore_radio = true;
                            value.partialscore_radio1 = true;
                        }
                        else if (value.capture_field == "NA") {
                            value.nascore_radio = true;
                            value.nascore_radio1 = true;
                        }
                        else if (value.capture_field == "") {
                            $scope.allobservationfilled = false;
    
                        }
    
                    });
                }); */

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });
            function expand(expand_flag) {
                if (expand_flag = true) {
                    alert('true');
                }
                else {
                    alert('fasle');
                }
            }
            function defaultdynamic() {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                        $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.expandCount = 3;
                        $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                        $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                        $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                        $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                        for (i in $scope.SampleDynamicTabledata) {

                            //delete $scope.SampleDynamicTabledata[i].makerobservationsampleview_list;
                            delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                            delete $scope.SampleDynamicTabledata[i].taguser_flag;
                            delete $scope.SampleDynamicTabledata[i].tagged_employee;

                        }

                        for (i in $scope.raisedqueryarray) {
                            //delete $scope.raisedqueryarray[i].sampleimport_gid;
                            delete $scope.raisedqueryarray[i].raisedquery_flag;
                        }
                        $scope.raisedquerytable = true;
                        $scope.showtablediv = true;
                        if ($scope.SampleDynamicTabledata.length == 0) {
                            $scope.showtablediv = false;
                        }
                        if ($scope.raisedqueryarray.length == 0) {
                            $scope.raisedquerytable = false;
                        }

                    }
                    //else {
                    //    $scope.SampleDynamicTabledata = "";
                    //    $scope.raisedqueryarray = "";
                    //    $scope.showtablediv = false;
                    //    $scope.raisedquerytable = false;
                    //}
                    //angular.forEach($scope.SampleDynamicTabledata, function (value, key) {


                    //    var params = {
                    //        sampleimport_gid: value.sampleimport_gid,
                    //    };
                    //    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                    //    lockUI();
                    //    SocketService.getparams(url, params).then(function (resp) {
                    //        unlockUI();
                    //        value.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;

                    //        for (var i = 0; i < value.makerobservationview_list.length; i++) {
                    //            value.makerobservationview_list[i].checked = true;

                    //        }

                    //        angular.forEach(value.makerobservationview_list, function (value, key) {


                    //            if (value.capture_field == "Yes") {
                    //                value.yes_radio = true;
                    //                value.yes_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "No") {
                    //                value.no_radio = true;
                    //                value.no_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "Partial") {
                    //                value.partialscore_radio = true;
                    //                value.partialscore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "NA") {
                    //                value.nascore_radio = true;
                    //                value.nascore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "") {
                    //                $scope.allobservationfilled = false;

                    //            }

                    //        });
                    //    });
                    //    value.expand = false;

                    //});
                });
            }

        }

        $scope.onselected = function (val, val1, val2) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;


                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_score = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }



        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

        $scope.makerinitiateapproval = function () {
            if ($scope.openquerycount != '0' && $scope.DBobservation_score != "") {
                Notify.alert("Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if ($scope.auditobservation_name == 'Observation score for Audit & sample' && $scope.checklistverified_flag == 'N') {
                Notify.alert("Atleast one sample observation score saved", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    makerinitiate_approvalflag: 'Y',
                    observation_percentage: $scope.txt_percent

                }
                var url = 'api/AtmTrnAuditorMaker/PostMakerInitiateApproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorMakerSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }

                });
            }

        }



        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
      
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $scope.tagsamplebutton = true;
                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }
                activate();

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.description = function (checklistmasteradd_gid, checkpoint_description) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/checkpointdescription.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        'use strict';

        //        angular
        //            .module('angle')
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill)
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }


                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        $scope.sampleobservationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleQueryAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstCheckerObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.back = function (val) {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')

        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    //if ($scope.approval_status == 'Completed') {
                    //    $scope.hide = 1;
                    //}

                    unlockUI();
                });
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerOpenViewController', AtmTrnAuditorCheckerOpenViewController);

    AtmTrnAuditorCheckerOpenViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerOpenViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerOpenViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.auditorchecker_approvalflag = resp.data.auditorchecker_approvalflag;
                $scope.openquerycount = resp.data.openquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;
                if (lspage == 'auditorcheckerPending' && $scope.auditorchecker_approvalflag == "N") {
                    $scope.proceedtoapprover = true;
                }
                else {
                    $scope.proceedtoapprover = false;
                }
                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });

            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;
                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {
                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }
                });
            });
            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});



            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    //auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    //for (i in $scope.SampleDynamicTabledata) {
                    //    delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                    //}
                }
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                        //delete $scope.raisedqueryarray[i].taguser_flag;
                        //delete $scope.raisedqueryarray[i].tagged_employee;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.getapprovalclick = function (auditcreation_gid) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    //approval_name: $scope.cboapproval_member.employee_name,
                    //approval_gid: $scope.cboapproval_member.employee_gid,
                    auditcreation_gid: auditcreation_gid,
                    getapproval_remark: $scope.getapproval_remark,
                    observation_percentage: $scope.txt_percent

                }
                lockUI();
                var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorCheckerPendingApproval');
                    }
                    else {
                        modalInstance.close('closed');
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            }
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        frm.append('project_flag', "Default");

                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });

                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }




        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: $scope.auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_score: $scope.total_score,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    if (resp.data.allobservationfilled == true) {
                        $scope.allobservationfilled = true;
                    }
                    else {
                        $scope.allobservationfilled = false;
                    }
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorMakerSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            value.tag_radio1 = true;
                        }


                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }


                $scope.checkpointobservationupdate = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservationUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }

        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstCheckerObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleQueryAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function (val) {
            if (lspage == 'auditorcheckerOpen') {
                $location.url('app/AtmTrnAuditorCheckerSummary');
            }           
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerPendingApprovalController', AtmTrnAuditorCheckerPendingApprovalController);

    AtmTrnAuditorCheckerPendingApprovalController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerPendingApprovalController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerPendingApprovalController';

        activate();

        function activate() {
            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.pendingcheckerapproval_count = resp.data.pendingapprovalaudit_count;
                $scope.completed_count = resp.data.completedcheckeraudit_count

            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }


        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

        
        
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerPending'))
        }
        $scope.viewobservation = function (val) {
            $location.url('app/AtmTrnAuditorCheckerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerPending'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark,
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                   
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerRaiseQueryController', AtmTrnAuditorCheckerRaiseQueryController);

    AtmTrnAuditorCheckerRaiseQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll'];

    function AtmTrnAuditorCheckerRaiseQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerRaiseQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;

        activate();
        lockUI();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
            };

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Querydetaillist = resp.data.Querydetaillist;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.audittaguser_list = resp.data.audittaguser_list;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.closequery_list = resp.data.closequery_list;
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetclosequeryAudit';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditraisequery_status = resp.data.auditraisequery_status;
                unlockUI();
            });
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }

        $scope.replytoquery = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostQuerydetail";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = "api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist";
                    var param = {
                        auditcreation_gid: auditcreation_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        unlockUI();
                        $scope.Querydetaillist = resp.data.Querydetaillist;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtqueries = "";
            });
        }


        $scope.Back = function (val) {
            if (lspage == 'auditorcheckerOpen') {
                $location.url('app/AtmTrnAuditorCheckerSummary');
            }
            else if (lspage == 'auditorcheckerPending') {
                $location.url('app/AtmTrnAuditorCheckerPendingApproval');
            }
            else if (lspage == 'auditorcheckerClosed') {
                $location.url('app/AtmTrnAuditorCheckerClosedAudit');
            }
            else if (lspage == 'auditorcheckerTagged') {
                $location.url('app/AtmTrnAuditorCheckerTaggedItems');
            }
            else if (lspage == 'auditorcheckerHold') {
                $location.url('app/AtmTrnAuditorCheckerHoldAudit');
            }
            else if (lspage == 'auditorcheckerCompleted') {
                $location.url('app/AtmTrnAuditorCheckerCompletedAudit');
            }
        }
        

        $scope.tagemployee = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuditee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid;
                    $scope.txtaudit_name = resp.data.audit_name;
                });

                $scope.ok = function () {
                    //$location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + auditcreation_gid)
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        tagemployelist: $scope.cboemployee_name,
                        audit_name: $scope.txtaudit_name,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostTagUserAudit';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var param = {
                //    auditcreation_gid: auditcreation_gid
                //}

                //var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
                //lockUI();
                //SocketService.getparams(url, param).then(function (resp) {
                //    $scope.audittaguser_list = resp.data.audittaguser_list;
                //    unlockUI();
                //});

            }
        }



        $scope.close_query = function () {

            var params = {
                auditcreation_gid: auditcreation_gid,
                closing_description: $scope.txtdescription

            }

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                    activate();

                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.showPopover = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerSummaryController', AtmTrnAuditorCheckerSummaryController);

    AtmTrnAuditorCheckerSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerSummaryController';

        activate();

        function activate() {

            //var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});
            //$scope.open_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetOpenAuditorChecker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}


            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.pendingcheckerapproval_count = resp.data.pendingapprovalaudit_count
                $scope.completed_count = resp.data.completedcheckeraudit_count

            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }



       
        $scope.viewchecker = function (val) {
            $location.url('app/AtmTrnAuditorCheckerOpenView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditorcheckerOpen'))
        }
       
        
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.txtremarks

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.statusremarks = function (auditcreation_gid, status_remarks) {
            var modalInstance = $modal.open({
                templateUrl: '/statusremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetStatusRemarks';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtremarks = resp.data.status_remarks;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }

      
        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark, }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate(); }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI(); }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                  
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerTaggedItemsController', AtmTrnAuditorCheckerTaggedItemsController);

    AtmTrnAuditorCheckerTaggedItemsController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditorCheckerTaggedItemsController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerTaggedItemsController';

        activate();

        function activate() {
            var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckerSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
            });

        }

        $scope.auditor_maker = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.auditor_checker = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnAuditorCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorCheckerTaggedItems')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorCheckerCompletedAudit')
        }


        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditorCheckerRaiseQuery?auditcreation_gid=' + val1 + '&lspage=auditorcheckerTagged')
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnCheckerCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorCheckerView?auditcreation_gid=' + val + '&lspage=auditorcheckerTagged')
        }
        $scope.checkerapproval = function (val2) {
            $location.url('app/AtmTrnAuditorCheckerApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.getauditapproval = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getReApprovalmodal.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var url = 'api/employee/employee';
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employee_list;
                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                }; $scope.getreapprovalclick = function () {
                    var params = {
                        approval_name: $scope.cboapproval_member.employee_name,
                        approval_gid: $scope.cboapproval_member.employee_gid,
                        auditcreation_gid: auditcreation_gid,
                        getapproval_remark: $scope.getapproval_remark,
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();
                        }
                        else {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorCheckerViewController', AtmTrnAuditorCheckerViewController);

    AtmTrnAuditorCheckerViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnAuditorCheckerViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorCheckerViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = $location.search().checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        var checklistmasteradd_gid = $scope.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.auditorchecker_approvalflag = resp.data.auditorchecker_approvalflag;
                $scope.openquerycount = resp.data.openquerycount;
                $scope.auditopenquerycount = resp.data.auditopenquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;
                if (lspage == 'auditorcheckerPending' && $scope.auditorchecker_approvalflag == "N") {
                    $scope.proceedtoapprover = true;
                }
                else {
                    $scope.proceedtoapprover = false;
                }
                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list; 

            });

            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true; 
                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) { 
                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }
                });
            });

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});



            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    //auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});
           
        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    //for (i in $scope.SampleDynamicTabledata) {
                    //    delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                    //}
                }
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y'  });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                        //delete $scope.raisedqueryarray[i].taguser_flag;
                        //delete $scope.raisedqueryarray[i].tagged_employee;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.getapprovalclick = function (auditcreation_gid) {
            if ($scope.openquerycount != '0' || $scope.auditopenquerycount != '0')
            {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {

                var txt_percent = $scope.txt_percent;

                 var params = {
                //approval_name: $scope.cboapproval_member.employee_name,
                //approval_gid: $scope.cboapproval_member.employee_gid,
                auditcreation_gid: auditcreation_gid,
                getapproval_remark: $scope.getapproval_remark,
                observation_percentage: $scope.txt_percent

            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostAuditorGetApproval";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $state.go('app.AtmTrnAuditorCheckerPendingApproval');
                }
                else {
                    //modalInstance.close('closed');
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
            });
            } 
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        frm.append('project_flag', "Default");

                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) { 
                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/notetoauditor.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'lg'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtnotetoauditor = resp.data.noteto_auditor;

        //        });

        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}

        $scope.showPopover = function (sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                }; 
                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }



      
        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: $scope.auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_score: $scope.total_score, 
            } 

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;
                   
                    if (resp.data.allobservationfilled == true) {
                        $scope.allobservationfilled = true;
                    }
                    else {
                        $scope.allobservationfilled = false;
                    } 
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorCheckerSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                           
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            
                        }

                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }


                $scope.checkpointobservationupdate = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservationUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'Warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            //$scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;
                        }
                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                            if (value.overall_detail == "Yes") {
                                value.document_radio = true;
                                value.document_radio1 = true;
                            }
                            else if (value.overall_detail == "No") {
                                value.tag_radio = true;
                                value.tag_radio1 = true;
                            }
                            else if (value.overall_detail == "Partial") {
                                value.partial_radio = true;
                               
                            }
                            else if (value.overall_detail == "NA") {
                                value.na_radio = true;
                              
                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
            }
        }

        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstCheckerObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstCheckerObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }

        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.Back = function (val) {
            if (lspage == 'auditorcheckerOpen') {
                $location.url('app/AtmTrnAuditorCheckerSummary');
            }
            else if (lspage == 'auditorcheckerPending') {
                $location.url('app/AtmTrnAuditorCheckerPendingApproval');
            }
            else if (lspage == 'auditorcheckerClosed') {
                $location.url('app/AtmTrnAuditorCheckerClosedAudit');
            }
            else if (lspage == 'auditorcheckerTagged') {
                $location.url('app/AtmTrnAuditorCheckerTaggedItems');
            }
            else if (lspage == 'auditorcheckerHold') {
                $location.url('app/AtmTrnAuditorCheckerHoldAudit');
            }
            else if (lspage == 'auditorcheckerCompleted') {
                $location.url('app/AtmTrnAuditorCheckerCompletedAudit');
            }
        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerClosedAuditController', AtmTrnAuditorMakerClosedAuditController);

    AtmTrnAuditorMakerClosedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorMakerClosedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerClosedAuditController';

        activate();
        function activate() {
            //var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});
            //$scope.closed_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetClosedAuditorMaker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}
            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.completed_count = resp.data.completedaudit_count

            });


           

        }

        $scope.auditor_maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.auditor_checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorMakerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorMakerTaggedAudit')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerCompletedAudit')
        }

        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

        //$scope.closed_audit = function () {

        //    var url = 'api/AtmTrnAuditorMaker/GetClosedAuditorMaker';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myauditormaker_list = resp.data.myauditormaker_list;
        //        $scope.employee_gid = resp.data.employee_gid; unlockUI();

        //    });
        //}

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditormakerClosed'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerCompletedAuditController', AtmTrnAuditorMakerCompletedAuditController);

    AtmTrnAuditorMakerCompletedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorMakerCompletedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerCompletedAuditController';

        activate();
        function activate() {
            var url = 'api/AtmTrnAuditorMaker/GetCompletedAuditorMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.completed_count = resp.data.completedaudit_count

            });

        }

        $scope.auditor_maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.auditor_checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorMakerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorMakerTaggedAudit')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerCompletedAudit')
        }

        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditormakerCompleted'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerHoldAuditController', AtmTrnAuditorMakerHoldAuditController);

    AtmTrnAuditorMakerHoldAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorMakerHoldAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerHoldAuditController';

        activate();
        function activate() {
            //var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});

            //$scope.hold_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetOnholdAuditorMaker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });
            //}


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.completed_count = resp.data.completedaudit_count

            });

        }


        $scope.auditor_maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.auditor_checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorMakerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorMakerTaggedAudit')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerCompletedAudit')
        }




        //$scope.taggedsamples = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        unlockUI();

        //    });
        //}

       
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditormakerHold'))
        }
       
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerObservationViewController', AtmTrnAuditorMakerObservationViewController);

    AtmTrnAuditorMakerObservationViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService','cmnfunctionService'];

    function AtmTrnAuditorMakerObservationViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerObservationViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        var auditcreation_gid = searchObject.auditcreation_gid;
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        var sampleimport_gid = searchObject.sampleimport_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {
            $scope.nodivng = true;
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_update = resp.data.status_update,
                $scope.DBobservation_score = resp.data.observation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill;
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                //$scope.tagsamplebutton = true;
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;

                }
                else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


           
            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            });
        /*    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;
                for (var i = 0; i < $scope.makerobservationsampleview_list.length; i++) {
                    $scope.makerobservationsampleview_list[i].checked = true;

                }

                angular.forEach($scope.makerobservationsampleview_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            }); */
            function expand(expand_flag) {
                if (expand_flag = true)
                {
                    alert('true');
                }
                else {
                    alert('fasle');
                }
            }
            function defaultdynamic() {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                        $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);
                        $scope.expandCount = 3;
                        $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                        $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                        $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                        $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                        for (i in $scope.SampleDynamicTabledata) {
                           
                            //delete $scope.SampleDynamicTabledata[i].makerobservationsampleview_list;
                            delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                            delete $scope.SampleDynamicTabledata[i].taguser_flag;
                            delete $scope.SampleDynamicTabledata[i].tagged_employee;
                            
                        }

                        for (i in $scope.raisedqueryarray) {
                            //delete $scope.raisedqueryarray[i].sampleimport_gid;
                            delete $scope.raisedqueryarray[i].raisedquery_flag;
                        }
                        $scope.raisedquerytable = true;
                        $scope.showtablediv = true;
                        if ($scope.SampleDynamicTabledata.length == 0) {
                            $scope.showtablediv = false;
                        }
                        if ($scope.raisedqueryarray.length == 0) {
                            $scope.raisedquerytable = false;
                        }

                    }
                    //else {
                    //    $scope.SampleDynamicTabledata = "";
                    //    $scope.raisedqueryarray = "";
                    //    $scope.showtablediv = false;
                    //    $scope.raisedquerytable = false;
                    //}
                    //var subdatagrid = [];
                    //angular.forEach($scope.SampleDynamicTabledata, function (value, key) {
                    //    console.log(value);
                    //    var params = {
                    //        sampleimport_gid: value.sampleimport_gid,
                    //    };
                    //    var url = 'api/AtmTrnAuditorMaker/MakerObservationSampleView';
                    //    lockUI();
                    //    SocketService.getparams(url, params).then(function (resp) {
                    //        unlockUI();
                    //        var val = "{makerobservationsampleview_list" + resp.data.makerobservationsampleview_list + "}";
                            
                    //        subdatagrid.makerobservationsampleview_list = resp.data.makerobservationsampleview_list;
                                                      
                    //        for (var i = 0; i < value.makerobservationsampleview_list.length; i++) {
                    //            value.makerobservationsampleview_list[i].checked = true;

                    //        }
                            
                    //        angular.forEach(value.makerobservationsampleview_list, function (value, key) {


                    //            if (value.capture_field == "Yes") {
                    //                value.yes_radio = true;
                    //                value.yes_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "No") {
                    //                value.no_radio = true;
                    //                value.no_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "Partial") {
                    //                value.partialscore_radio = true;
                    //                value.partialscore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "NA") {
                    //                value.nascore_radio = true;
                    //                value.nascore_radio1 = true;
                    //            }
                    //            else if (value.capture_field == "") {
                    //                $scope.allobservationfilled = false;

                    //            }

                    //        });
                    //    });
                        //value.expand = false;
                      
                    //});
                     
                });
            }

        }

        $scope.onselected = function (val, val1, val2) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;


                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_score = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }



        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

        $scope.makerinitiateapproval = function () {
            if ($scope.openquerycount != '0' && $scope.DBobservation_score != "") {
                Notify.alert("Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if ($scope.auditobservation_name == 'Observation score for Audit & sample' && $scope.checklistverified_flag == 'N') {
                Notify.alert("Atleast one sample observation score saved", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    makerinitiate_approvalflag: 'Y',
                    observation_percentage: $scope.txt_percent

                }
                var url = 'api/AtmTrnAuditorMaker/PostMakerInitiateApproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorMakerSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }

                });
            }

        }

        

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });                    
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $scope.tagsamplebutton = true;
                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }
                activate();

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.description = function (checklistmasteradd_gid, checkpoint_description) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/checkpointdescription.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        'use strict';

        //        angular
        //            .module('angle')
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

       
        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }


                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url("app/MstMarketingSummary");
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        
       
        $scope.sampleobservationscoreview = function (val,val1, val2, val3) {

            $location.url('app/AtmTrnSampleAgainstMakerObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }


        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    //if ($scope.approval_status == 'Completed') {
                    //    $scope.hide = 1;
                    //}

                    unlockUI();
                });
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }


        $scope.Back = function (val) {
            if (lspage == 'auditormakerOpen') {
                $location.url('app/AtmTrnAuditorMakerSummary');
            }
            else if (lspage == 'auditormakerHold') {
                $location.url('app/AtmTrnAuditorMakerHoldAudit');
            }
            else if (lspage == 'auditormakerClosed') {
                $location.url('app/AtmTrnAuditorMakerClosedAudit');
            }
            else if (lspage == 'auditormakerTagged') {
                $location.url('app/AtmTrnAuditorMakerTaggedAudit');
            }
            else if (lspage == 'auditormakerCompleted') {
                $location.url('app/AtmTrnAuditorMakerCompletedAudit');
            }

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerSummaryController', AtmTrnAuditorMakerSummaryController);

    AtmTrnAuditorMakerSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnAuditorMakerSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerSummaryController';

        activate();

        function activate() {


            //var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerSummary';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.myauditormaker_list = resp.data.myauditormaker_list;
            //    $scope.employee_gid = resp.data.employee_gid;
            //    unlockUI();

            //});

            //$scope.open_audit = function () {

                var url = 'api/AtmTrnAuditorMaker/GetOpenAuditorMaker';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myauditormaker_list = resp.data.myauditormaker_list;
                    $scope.employee_gid = resp.data.employee_gid; unlockUI();

                });

            //}

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.completed_count = resp.data.completedaudit_count
            });

        }

        $scope.auditor_maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.auditor_checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverPendingApproval');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorMakerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorMakerTaggedAudit')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerCompletedAudit')
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnMakerCheckpointObservation?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1))
        }      
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditormakerOpen'))
        }
        $scope.viewobservation = function (val) {
            $location.url('app/AtmTrnAuditorMakerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&lspage=auditormakerOpen'))
        }
        
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.trackingstatus = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/trackingstatus.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.statusremarks = function (auditcreation_gid, status_remarks) {
            var modalInstance = $modal.open({
                templateUrl: '/statusremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetStatusRemarks';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtremarks = resp.data.status_remarks;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerTaggedAuditController', AtmTrnAuditorMakerTaggedAuditController);

    AtmTrnAuditorMakerTaggedAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnAuditorMakerTaggedAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerTaggedAuditController';

        activate();
        function activate() {
            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerSummary';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myauditormaker_list = resp.data.myauditormaker_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
            });

        }

        $scope.auditor_maker = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.auditor_checker = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.auditor_approver = function () {
            $state.go('app.AtmTrnAuditorApproverSummary');
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnAuditorMakerSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnAuditorMakerHoldAudit')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerClosedAudit')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnAuditorMakerTaggedAudit')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnAuditorMakerCompletedAudit')
        }

        $scope.taggedsamples = function () {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTaggedSampleTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });
        }

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditorRaiseQuery?auditcreation_gid=' + val1 + '&lspage=auditormakerTagged')
        }

        $scope.updateobservations = function (val1) {
            $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
        }
        $scope.viewtask = function (val) {
            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + val + '&lspage=auditormakerTagged')
        }
        $scope.approval = function (val2) {
            $location.url('app/AtmTrnApproval?auditcreation_gid=' + val2)
        }
        $scope.assignedquery = function (val) {
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
        }
        $scope.auditapproval = function (val3) {
            $location.url('app/AtmTrnAuditApproval?auditcreation_gid=' + val3)
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update

                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.getApprovalRequest = function (auditcreation_gid, checklistmaster_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/getApprovalRequest.html',
                controller: ModalInstanceCtrl,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    checklistmaster_gid: checklistmaster_gid
                }



                var url = 'api/AtmMstAuditMapping/GetAuditChecker';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditorchecker_list = resp.data.auditorchecker_list;



                });
                var url = 'api/AtmTrnAuditorMaker/TmpAllMembersDelete';
                SocketService.get(url).then(function (resp) {

                });
                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                    var params = {
                        tmpapprovalmember_gid: tmpapprovalmember_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersDelete';
                    SocketService.post(url, params).then(function (resp) {
                        $scope.approvalmember = resp.data.approvalmember;
                    });



                }

                $scope.Changed = function (cboapproval_membername) {
                    var params = {
                        approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                        approvalname: $scope.cboapproval_membername.employee_name,
                        auditcreation_gid: auditcreation_gid,
                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/TempApprovalMember";
                    SocketService.post(url, params).then(function (resp) {

                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000

                            });
                            unlockUI();
                            $scope.current = $state.current.name;
                            ScopeValueService.store("dataldCtrl", $scope);
                            //$state.go('app.pageredirect');
                            $scope.cboapproval_membername = "";
                            var params = {
                                auditcreation_gid: auditcreation_gid
                            }
                            var url = 'api/AtmTrnAuditorMaker/TmpApprovalMembersView';
                            SocketService.getparams(url, params).then(function (resp) {
                                $scope.approvalmember = resp.data.approvalmember;
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });


                }

                $scope.getapprovalclick = function () {
                    var params = {
                        approve_remarks: $scope.approve_remarks,
                        approve_type: $scope.approve_type,
                        auditcreation_gid: auditcreation_gid,

                    }

                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostApprovalGet";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            modalInstance.close('closed');
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                            activate();

                        }
                        else {
                            //modalInstance.close('closed');
                            alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();

                        }
                    });
                }
            }
        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerStatus';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnAuditorMaker/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSampleAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/Sampleexcelupload';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditorMakerViewController', AtmTrnAuditorMakerViewController);

    AtmTrnAuditorMakerViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','DownloaddocumentService','cmnfunctionService'];

    function AtmTrnAuditorMakerViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditorMakerViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;

        $scope.data = {};

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_update = resp.data.status_update,
                $scope.DBobservation_score = resp.data.observation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill;
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                //$scope.tagsamplebutton = true;
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;

                }
                else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


            //var params = {
            //    auditcreation_gid: auditcreation_gid,
            //    sampleimport_gid: sampleimport_gid
            //};

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    $scope.sample_list = resp.data.sample_list

            //});

            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid
            };

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;

                    }            

                });
            });


        }

        

        $scope.onselected = function (val, val1, val2,val3) {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Observation can't be filled, Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.checkpointgroupadd_gid = val3

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    checkpointgroupadd_gid: $scope.checkpointgroupadd_gid

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_score = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    } 

                });

            
        }



        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Observation can't be filled, Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) { 
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }         
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

        $scope.makerinitiateapproval = function () {
            //if ($scope.openquerycount != '0' && $scope.DBobservation_score != "") {
            //    Notify.alert("Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}

             if($scope.auditobservation_name =='Observation score for Audit & sample' && $scope.checklistverified_flag =='N')
            {
                Notify.alert("Atleast one sample observation score saved", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
             else if ($scope.auditobservation_name == 'Observation score for sample') {

                 var params = {
                     auditcreation_gid: auditcreation_gid,
                     auditorapproval_remark: $scope.auditorapproval_remark,

                 }

                 var url = "api/AtmTrnAuditorMaker/PostAuditorMakerInitiateSample";
                 lockUI();
                 SocketService.post(url, params).then(function (resp) {
                     unlockUI();
                     if (resp.data.status == true) {
                         Notify.alert(resp.data.message, {
                             status: 'success',
                             pos: 'top-center',
                             timeout: 3000
                         });
                         $state.go('app.AtmTrnAuditorMakerSummary');
                     }

                     else {
                         Notify.alert(resp.data.message, {
                             status: 'warning',
                             pos: 'top-center',
                             timeout: 3000
                         });
                         unlockUI();
                     }
                 });
             }
            else {

                var txt_percent = $scope.txt_percent;

                var params = {
                    auditcreation_gid: $scope.auditcreation_gid,
                    makerinitiate_approvalflag: 'Y',
                    observation_percentage: $scope.txt_percent

                }
                var url = 'api/AtmTrnAuditorMaker/PostMakerInitiateApproval';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnAuditorMakerSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }

                });
            }

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
      
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        frm.append('project_flag', "Default");

                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                        $modalInstance.close('closed');
                    }
                    //if ( $scope.SampleDynamicTabledata == undefined || $scope.SampleDynamicTabledata == null) {
                    //    Notify.alert('Kindly Enter the sample data', 'warning')
                    //}
                    

                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
                            $scope.tagsamplebutton = true;
                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }
                activate();

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        //$scope.description = function (checklistmasteradd_gid, checkpoint_description) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/checkpointdescription.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        'use strict';

        //        angular
        //            .module('angle')
        //        var params = {
        //            checklistmasteradd_gid: checklistmasteradd_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.txtcheckpointdescription = resp.data.checkpoint_description;

        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                        var params = {
                            employelist: $scope.cboemployee_name,
                            sample_name: $scope.txtsample_name,
                            sampleimport_gid: sampleimport_gid,
                            auditcreation_gid: auditcreation_gid,
                            description: $scope.txttaguser_desc
                        }



                        var url = 'api/AtmTrnSampling/GetTagUser';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                        });

                        $modalInstance.close('closed');

                    }

                }
            
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                

            }
        }

        $scope.observationquery = function () {
            
            $state.go('app.AtmTrnAuditObservationQuery' )
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid,auditcreation2checklist_gid,auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            value.tag_radio1 = true;
                        }                        
                       

                    });
                });
               
                $scope.checkpointobservation = function () {
                    
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert();
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                         }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }


                $scope.checkpointobservationupdate = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservationUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert();
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid:auditcreation_gid
            }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                

                $scope.onselected = function (val, val1) {
                    
                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                            auditcreation2checklist_gid: auditcreation2checklist_gid,
                            document_verified: $scope.document_verified,
                            checklist2checkpoint: $scope.checklist2checkpoint,
                            auditcreation_gid: auditcreation_gid


                        }
                        var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI(); 
                            if (resp.data.status == true) {                               
                                Notify.alert(resp.data.message,{
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                activate();

                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                            }

                        });                    
                }
                $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;
                        }
                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                            if (value.overall_detail == "Yes") {
                                value.document_radio = true;
                                value.document_radio1 = true;
                            }
                            else if (value.overall_detail == "No") {
                                value.tag_radio = true;
                               
                            }
                            else if (value.overall_detail == "Partial") {
                                value.partial_radio = true;
                              
                            }
                            else if (value.overall_detail == "NA") {
                                value.na_radio = true;
                                
                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.dynamicsamplequeryscore = function (val, val1, val2, val3) { 
            $location.url('app/AtmTrnSampleQueryAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' +val + '&checklistmaster_gid=' +val1 + '&sampleimport_gid=' +val2 + '&observationscoresample_gid=' +val3))

        }
        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            
                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }


        $scope.Back = function (val) {
            if (lspage == 'auditormakerOpen') {
                $location.url('app/AtmTrnAuditorMakerSummary');
            }
            else if (lspage == 'auditormakerHold') {
                $location.url('app/AtmTrnAuditorMakerHoldAudit');
            }
            else if (lspage == 'auditormakerClosed') {
                $location.url('app/AtmTrnAuditorMakerClosedAudit');
            }
            else if (lspage == 'auditormakerTagged') {
                $location.url('app/AtmTrnAuditorMakerTaggedAudit');
            }
            else if (lspage == 'auditormakerCompleted') {
                $location.url('app/AtmTrnAuditorMakerCompletedAudit');
            }

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditRaiseQueryController', AtmTrnAuditRaiseQueryController);

    AtmTrnAuditRaiseQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage','SweetAlert', '$route','$sce', '$anchorScroll'];

    function AtmTrnAuditRaiseQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert , $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditRaiseQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;

        activate();
        lockUI();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
            };

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.Querydetaillist = resp.data.Querydetaillist;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.audittaguser_list = resp.data.audittaguser_list;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.closequery_list = resp.data.closequery_list;
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetclosequeryAudit';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditraisequery_status = resp.data.auditraisequery_status;
                unlockUI();
            });
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }

        $scope.replytoquery = function () {
            var params = {
                auditcreation_gid: auditcreation_gid,
                remarks: $scope.txtqueries
            }
            lockUI();
            var url = "api/AtmTrnMyAuditTaskAuditee/PostQuerydetail";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    var url = "api/AtmTrnMyAuditTaskAuditee/GetQuerydetaillist";
                    var param = {
                        auditcreation_gid: auditcreation_gid
                    };
                    SocketService.getparams(url, param).then(function (resp) {
                        unlockUI();
                        $scope.Querydetaillist = resp.data.Querydetaillist;
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        unlockUI();
                    });                   
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                $scope.txtqueries = "";
            });
        }

        $scope.Back = function (val) {
            if (lspage == 'auditeemakeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeSummary');
            }
            else if (lspage == 'auditeemakerhold') {
                $location.url('app/AtmTrnHoldAuditeeSummary');
            }
            else if (lspage == 'auditeemakerclosed') {
                $location.url('app/AtmTrnClosedAuditeeSummary');
            }
            else if (lspage == 'auditeemakertagged') {
                $location.url('app/AtmTrnTaggedAuditeeSummary');
            }
            else if (lspage == 'auditeemakercompleted') {
                $location.url('app/AtmTrnCompletedAuditeeSummary');
            }
            else if (lspage == 'auditeecheckeropen') {
                $location.url('app/AtmTrnMyAuditeeCheckerSummary');
            }
            else if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnCheckerPendingApproval');
            }
            else if (lspage == 'auditeecheckerhold') {
                $location.url('app/AtmTrnCheckerHoldAuditee');
            }
            else if (lspage == 'auditeecheckerclosed') {
                $location.url('app/AtmTrnCheckerClosedAuditee');
            }
            else if (lspage == 'auditeecheckertagged') {
                $location.url('app/AtmTrnCheckerTaggedAuditee');
            }
            else if (lspage == 'auditeecheckercompleted') {
                $location.url('app/AtmTrnCheckerCompletedAuditee');
            }
        }
       
        $scope.tagemployee = function () {
            var modalInstance = $modal.open({
                templateUrl: '/tagemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuditee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid;
                    $scope.txtaudit_name = resp.data.audit_name;
                });

                $scope.ok = function () {
                    //$location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + auditcreation_gid)
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        tagemployelist: $scope.cboemployee_name,
                        audit_name: $scope.txtaudit_name,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostTagUserAudit';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var param = {
                //    auditcreation_gid: auditcreation_gid
                //}

                //var url = 'api/AtmTrnMyAuditTaskAuditee/GetTagUserAuditview';
                //lockUI();
                //SocketService.getparams(url, param).then(function (resp) {
                //    $scope.audittaguser_list = resp.data.audittaguser_list;
                //    unlockUI();
                //});

            }
        }



        $scope.close_query = function () {
 
            var params = {
                auditcreation_gid: auditcreation_gid,
                closing_description: $scope.txtdescription

            }

            var url = 'api/AtmTrnMyAuditTaskAuditee/closequery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditorMakerSummary');
                    activate();
                   
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }

        $scope.showPopover = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditReportSummaryController', AtmTrnAuditReportSummaryController);

    AtmTrnAuditReportSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnAuditReportSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditReportSummaryController';

        activate();

        function activate() {

                var url = 'api/AtmRptAuditReports/GetAuditReportSummary';
                //lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.audit_list = resp.data.auditreport_list;
                    //unlockUI();
                    console.log($scope.audit_list);
                });

            }

            $scope.view = function (val1) {
                $location.url('app/AtmRptAuditReportView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 ))
            }

            $scope.exporauditreport = function () {


                var url = 'api/AtmRptAuditReports/GetAuditReportExcelExport';
                SocketService.get(url).then(function (resp) {
                    if (resp.data.status == true) {
                        DownloaddocumentService.Downloaddocument(resp.data.lscloudpath,resp.data.lsname);


                        //var phyPath = resp.data.lspath;
                        //var relPath = phyPath.split("EMS");
                        //var relpath1 = relPath[1].replace("\\", "/");
                        //var hosts = window.location.host;
                        //var prefix = location.protocol + "//";
                        //var str = prefix.concat(hosts, relpath1);
                        //var link = document.createElement("a");
                        //var name = resp.data.lsname.split('.');
                        //link.download = name[0];
                        //var uri = str;
                        //link.href = uri;
                        //link.click();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        }); activate();
                    }

                });
            }

            $scope.query_report = function (auditcreation_gid) {

                var params = {
                    auditcreation_gid: auditcreation_gid,

                };

                var url = 'api/AtmRptAuditReports/GetAuditSampleQueryReportExcelExport';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);

                        //var phyPath = resp.data.lspath;
                        //var relPath = phyPath.split("EMS");
                        //var relpath1 = relPath[1].replace("\\", "/");
                        //var hosts = window.location.host;
                        //var prefix = location.protocol + "//";
                        //var str = prefix.concat(hosts, relpath1);
                        //var link = document.createElement("a");
                        //var name = resp.data.lsname.split('.');
                        //link.download = name[0];
                        //var uri = str;
                        //link.href = uri;
                        //link.click();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();
                    }

                });
            }


            $scope.observationreport = function (auditcreation_gid) {

                var params = {
                    auditcreation_gid: auditcreation_gid,

                };

                var url = 'api/AtmRptAuditReports/GetAuditObservationReportExcelExport';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                         DownloaddocumentService.Downloaddocument(resp.data.lscloudpath,resp.data.lsname);

                        //var phyPath = resp.data.lspath;
                        //var relPath = phyPath.split("EMS");
                        //var relpath1 = relPath[1].replace("\\", "/");
                        //var hosts = window.location.host;
                        //var prefix = location.protocol + "//";
                        //var str = prefix.concat(hosts, relpath1);
                        //var link = document.createElement("a");
                        //var name = resp.data.lsname.split('.');
                        //link.download = name[0];
                        //var uri = str;
                        //link.href = uri;
                        //link.click();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();
                    }

                });
            }


            $scope.sample_report = function (auditcreation_gid) {

                var params = {
                    auditcreation_gid: auditcreation_gid,

                };

                var url = 'api/AtmRptAuditReports/GetAuditSampleReportExcelExport';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                         DownloaddocumentService.Downloaddocument(resp.data.lscloudpath,resp.data.lsname);

                        //var phyPath = resp.data.lspath;
                        //var relPath = phyPath.split("EMS");
                        //var relpath1 = relPath[1].replace("\\", "/");
                        //var hosts = window.location.host;
                        //var prefix = location.protocol + "//";
                        //var str = prefix.concat(hosts, relpath1);
                        //var link = document.createElement("a");
                        //var name = resp.data.lsname.split('.');
                        //link.download = name[0];
                        //var uri = str;
                        //link.href = uri;
                        //link.click();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();
                    }

                });
        }

        $scope.sampleobservation_report = function (auditcreation_gid) {

            var params = {
                auditcreation_gid: auditcreation_gid,

            };

            var url = 'api/AtmRptAuditReports/GetAuditObservationSampleReportExcelExport';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    DownloaddocumentService.Downloaddocument(resp.data.lscloudpath, resp.data.lsname);

                    //var phyPath = resp.data.lspath;
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = resp.data.lsname.split('.');
                    //link.download = name[0];
                    //var uri = str;
                    //link.href = uri;
                    //link.click();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                }

            });
        }

        }
    })();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnAuditSummaryController', AtmTrnAuditSummaryController);

    AtmTrnAuditSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal'];

    function AtmTrnAuditSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditSummaryController';

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/GetAuditCreation';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

        }

        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }

    }
})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnAuditTaskSampleViewController', AtmTrnAuditTaskSampleViewController);

    AtmTrnAuditTaskSampleViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnAuditTaskSampleViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnAuditTaskSampleViewController';

        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;

        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid

            };


            var url = 'api/AtmTrnSampling/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });

            var url = 'api/AtmTrnSampling/GetEmployeeName';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.employee_name = resp.data.employee_name;
            });

            var url = 'api/AtmTrnSampling/GetSampleView';
            var params = {
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtsample_name = resp.data.sample_name,
                $scope.txtsamfin_code = resp.data.samfin_code,
                $scope.txtsamagro_code = resp.data.samagro_code,
                $scope.txtcodecreation_date = resp.data.codecreation_date,
                $scope.txtfield1 = resp.data.field1,
                $scope.txtfield2 = resp.data.field2,
                $scope.txtfield3 = resp.data.field3,
                $scope.txtfield4 = resp.data.field4,
                $scope.txtfield5 = resp.data.field5,
                $scope.txtfield6 = resp.data.field6,
                $scope.txtfield7 = resp.data.field7,
                $scope.txtfield8 = resp.data.field8,
                $scope.txtfield9 = resp.data.field9,
                $scope.txtfield10 = resp.data.field10,
                  unlockUI();
            });



        }

        $scope.back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            var sampleimport_gid = $scope.sampleimport_gid;

            $location.url('app/AtmTrnMyAuditTaskAuditeeView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid)

        }


        $scope.Back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnAuditorMaker?auditcreation_gid=' + auditcreation_gid)

        }

    }

})();


(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnCheckerCheckpointObservationController', AtmTrnCheckerCheckpointObservationController);

    AtmTrnCheckerCheckpointObservationController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnCheckerCheckpointObservationController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerCheckpointObservationController';
        //$scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation2checklist_gid = $location.search().auditcreation2checklist_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerCheckpointObservation';
            var params = {
                auditcreation_gid: auditcreation_gid,

            };
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                  $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });
            var url = 'api/AtmTrnAuditorMaker/AuditorMakerCheckpointObservationView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_totalscore: $scope.total_score,

            }


            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    unlockUI()
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorCheckerSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }



        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }


        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.btntaguser = function (auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnCheckerCheckpointObservation?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        employelist: $scope.cboemployee_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: auditcreation_gid,

                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.assignedquery = function (val, val1) {
            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + val + '&sampleimport_gid=' + val1);
        }


        $scope.view = function (val, val1) {
            var sampleimport_gid = $scope.sampleimport_gid;
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.back = function () {
            $state.go('app.AtmTrnAuditorCheckerSummary');
        }

        $scope.samplequery = function (val, val1) {
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }




        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                location.reload();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckerClosedAuditeeController', AtmTrnCheckerClosedAuditeeController);

    AtmTrnCheckerClosedAuditeeController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnCheckerClosedAuditeeController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerClosedAuditeeController';

        activate();
        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetCheckerClosedAuditee';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                    unlockUI();

                });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckerclosed'))

        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckerCompletedAuditeeController', AtmTrnCheckerCompletedAuditeeController);

    AtmTrnCheckerCompletedAuditeeController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnCheckerCompletedAuditeeController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerCompletedAuditeeController';

        activate();
        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetCheckerCompletedAuditee';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedaudit_count = resp.data.closedcheckeraudit_count;
                $scope.openaudit_count = resp.data.opencheckeraudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
                $scope.completed_count = resp.data.completedaudit_count;
            });


        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckercompleted'))

        }


        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckerHoldAuditeeController', AtmTrnCheckerHoldAuditeeController);

    AtmTrnCheckerHoldAuditeeController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnCheckerHoldAuditeeController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerHoldAuditeeController';


        activate();
        function activate() {

            //$scope.hold_audit = function () {

                var url = 'api/AtmTrnMyAuditTaskAuditee/GetCheckerHoldAuditee';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                    unlockUI();

                });
            //}

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckerhold'))

        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        frm.append('project_flag', "Default");

                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckerPendingApprovalController', AtmTrnCheckerPendingApprovalController);

    AtmTrnCheckerPendingApprovalController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnCheckerPendingApprovalController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerPendingApprovalController';


        activate();
        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeChecker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid; 

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditscheckeronhold_count;
                $scope.closed_count = resp.data.closedcheckeraudit_count;
                $scope.openaudit_count = resp.data.opencheckeraudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckerpending'))

        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckerTaggedAuditeeController', AtmTrnCheckerTaggedAuditeeController);

    AtmTrnCheckerTaggedAuditeeController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

    function AtmTrnCheckerTaggedAuditeeController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckerTaggedAuditeeController';

        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;


        activate();
        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;

            });


        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckertagged')

        }

        $scope.auditraisequery = function (val1) {
            $location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + val1 + '&lspage=auditeecheckertagged')
        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnCheckpointObservationController', AtmTrnCheckpointObservationController);

    AtmTrnCheckpointObservationController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnCheckpointObservationController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckpointObservationController';
        var auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation2checklist_gid = $location.search().auditcreation2checklist_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;

        activate();

        function activate() {
                            
            

            var url = 'api/AtmTrnMyAuditTask/EditCheckpointObservation';
            var params = {
                auditcreation_gid: auditcreation_gid,

            };
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                  $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });
            var url = 'api/AtmTrnMyAuditTask/CheckpointObservationView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointobservation_list = resp.data.checkpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.checkpointobservation_list.length; i++) {
                    $scope.checkpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.checkpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnSampling/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.onselected = function (val, val1,val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_totalscore: $scope.total_score,

            }


            var url = 'api/AtmTrnMyAuditTask/PostObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    unlockUI()
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.checkpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnMyAuditTask/PostCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnMyAuditTaskSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }



        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskSummary');
        }


        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTask/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTask/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnMyAuditTask/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.btntaguser = function (auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnCheckpointObservation?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.raisequery = function (sampleimport_gid,auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        employelist: $scope.cboemployee_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: auditcreation_gid,

                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.assignedquery = function (val, val1) {
            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + val + '&sampleimport_gid=' + val1);
        }


        $scope.view = function (val, val1) {
            //var sampleimport_gid = $scope.sampleimport_gid;

            //var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.back = function () {
            $state.go('app.AtmTrnMyAuditTaskSummary');
        }



    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckpointSummaryAssignController', AtmTrnCheckpointSummaryAssignController);

    AtmTrnCheckpointSummaryAssignController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnCheckpointSummaryAssignController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckpointSummaryAssignController';
        var auditcreation_gid = $location.search().auditcreation_gid;

        activate();

        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/ChecklistAssignView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistassignview_list = resp.data.checklistassignview_list;

            });


        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checklistassignview_list, function (val) {
                val.checked = selected;
            });
        }
       

        $scope.unassignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checklistassignview_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,

            }

            var url = 'api/AtmTrnAuditCreation/DeleteChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist UnAssigned Successfully!', 'success');
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditCreationSummary');
        }
        $scope.checkpointintent = function (auditcreation2checklist_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation2checklist_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation2checklist_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


    }





})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCheckpointSummaryController', AtmTrnCheckpointSummaryController);

    AtmTrnCheckpointSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnCheckpointSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCheckpointSummaryController';
        var checklistmaster_gid = $location.search().checklistmaster_gid;
        $scope.checklistmaster_gid = $location.search().checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        $scope.checklistmasteradd_gid = $location.search().checklistmasteradd_gid;

        activate();

        function activate() {

            //var params = {
            //    checklistmaster_gid: checklistmaster_gid
            //}
            //var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI();
            //    $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            //});
            var params = {
                checklistmaster_gid: checklistmaster_gid
            }
            var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

                //for (var i = 0; i < $scope.checkpointsummary_list.length; i++) {

                //    $scope.checkpointsummary_list[i].checked = true;

                //}
                    

                angular.forEach($scope.checkpointsummary_list, function (value,key) {
                                                      
                    if (value.checklist_flag == 'Y')
                    {
                        value.checked = true;
                    }
                    else 
                    {              
                    
                    };        

                });
                

            });

            //var params = {
            //    auditcreation_gid: auditcreation_gid
            //}
            //var url = 'api/AtmTrnAuditCreation/ChecklistAssignView';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI();
            //    $scope.checklistassignview_list = resp.data.checklistassignview_list;

            //});


        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
         
                        
        $scope.assignchecklist = function () {
            var assignList = [];        
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid : checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        //$scope.unassignchecklist = function () {
        //    var assignList = [];
        //    angular.forEach($scope.checklistassignview_list, function (val) {

        //        if (val.checked == true) {
        //            var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
        //            assignList.push(auditcreation2checklist_gid);

        //        }
        //    });
        //    if (assignList.length == 0) {
        //        Notify.alert('Select Atleast One Record!');
        //        return false;
        //        unlockUI();
        //    }
        //    var params = {
        //        auditcreation2checklist_gid: assignList,

        //    }

        //    var url = 'api/AtmTrnAuditCreation/DeleteChecklistAssign';
        //    SocketService.post(url, params).then(function (resp) {
        //        if (resp.data.status == true) {
        //            Notify.alert('Checklist UnAssigned Successfully!', 'success');
        //            $state.go('app.AtmTrnAuditCreationSummary');
        //        }
        //        else {
        //            Notify.alert('Select Atleast One..!!', 'warning')
        //        }

        //    });

        //}


        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditCreationSummary');
        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }



    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnClosedAuditeeSummaryController', AtmTrnClosedAuditeeSummaryController);

    AtmTrnClosedAuditeeSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnClosedAuditeeSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnClosedAuditeeSummaryController';

        //$scope.lspage = $location.search().lspage;
        //var lspage = $scope.lspage;

        activate();
        function activate() {

           

                var url = 'api/AtmTrnMyAuditTaskAuditee/GetClosedAuditee';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                    unlockUI();

                });
           
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.completed_count = resp.data.completedaudit_count;
            });

           
        }
        
        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnHoldAuditeeSummary')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnClosedAuditeeSummary')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnTaggedAuditeeSummary')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCompletedAuditeeSummary')
        }

        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeemakerclosed'))
        }

       
        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCompletedAuditeeSummaryController', AtmTrnCompletedAuditeeSummaryController);

    AtmTrnCompletedAuditeeSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnCompletedAuditeeSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCompletedAuditeeSummaryController';
        //var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        //$scope.lspage = searchObject.lspage;
        //var lspage = $scope.lspage;

        
        activate();
        function activate() {

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetCompletedAuditee';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

            
        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnHoldAuditeeSummary')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnClosedAuditeeSummary')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnTaggedAuditeeSummary')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCompletedAuditeeSummary')
        }

        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeemakercompleted'))
        }

      
        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnCreateAuditController', AtmTrnCreateAuditController);

    AtmTrnCreateAuditController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnCreateAuditController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnCreateAuditController';
        var checklistmasteradd_gid = $location.search().checklistmasteradd_gid;

        activate();

        function activate() {

            vm.calender1 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open1 = true;
            };
            // Calender Popup... //

            vm.calender2 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open2 = true;
            };

            // Calender Popup... //

            vm.calender3 = function ($event) {
                $event.preventDefault();
                $event.stopPropagation();

                vm.open3 = true;
            };


            // Calender Popup... //                   
            vm.formats = ['dd-MM-yyyy'];
            vm.format = vm.formats[0];
            vm.dateOptions = {
                formatYear: 'yy',
                startingDay: 1

            };

            var url = 'api/AtmMstChecklistMaster/GetChecklistMaster';
            lockUI();
            SocketService.get(url).then(function (resp) {
                 $scope.checklistmaster_list = resp.data.checklistmaster_list
                unlockUI();
            });
            var url = 'api/AtmTrnAuditCreation/TempDeleteAuditee';
            SocketService.get(url).then(function (resp) {
            });
            var url = 'api/AtmMstAuditPriority/GetAuditPriorityActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditpriority_data = resp.data.auditpriority_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditType/GetAuditTypeActive';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.audittype_list = resp.data.audittype_list;
                unlockUI();
            });
            var url = 'api/AtmMstAuditMapping/GetAuditMappingMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();

                $scope.auditmapping1_list = resp.data.auditmappingmaker_list;

            });

            var url = 'api/AtmMstAuditMapping/GetAuditMappingChecker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.auditmapping_list = resp.data.auditmappingchecker_list;

            });
            var url = 'api/AtmMstAuditMapping/GetAuditMappingApprover';
            lockUI();
            SocketService.get(url).then(function (resp) {
                unlockUI();
                $scope.auditmapping2_list = resp.data.auditmappingapprover_list;

            });
            var url = 'api/AtmMstAuditDepartment/GetMappingDepartment';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditdepartment_list = resp.data.auditmappingdepartment_list;
                unlockUI();
            });
            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee_list = resp.data.employeelist;
                unlockUI();
            });
            var url = 'api/SystemMaster/GetEmployeelist';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.employee1_list = resp.data.employeelist;
                unlockUI();
            });
           
            var d = new Date();
            var time = d.toLocaleString([], { hour: '2-digit', minute: '2-digit' });


            var today = new Date();
            var date = 0 + today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();
            var todaytime = date ;
            $scope.txttoday_date = today;
        }
        $scope.auditname_change = function (cboauditname) {
            var params = {
                checklistmaster_gid: $scope.cboauditname.checklistmaster_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetAuditNameDetail';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.checklistmaster_gid = resp.data.checklistmaster_gid;
                $scope.checkpointgroup_gid = resp.data.checkpointgroup_gid;
                $scope.txtentity_name = resp.data.entity_name;
                $scope.txtauditdescription_name = resp.data.audit_description;
                $scope.txtcheckpointgroup_name = resp.data.checkpointgroup_name;
            });
            $scope.txtentity_name = '';
        }
        $scope.auditdepartmentname_change = function (cboauditdepartment) {
            var params = {
                auditdepartment_gid: $scope.cboauditdepartment.auditdepartment_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetAuditName';           
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.auditname_list = resp.data.auditname_list;
            });

        }
        $scope.submitcreateaudit = function () {

            var lschecklistmaster_gid = '';
            var lsaudit_name = '';
            if ($scope.cboauditname != undefined || $scope.cboauditname != null) {
                lschecklistmaster_gid = $scope.cboauditname.checklistmaster_gid;
                lsaudit_name = $scope.cboauditname.audit_name;
            }

            var lsauditpriority_gid = '';
            var lsauditpriority_name = '';
            if ($scope.cboauditpriority != undefined || $scope.cboauditpriority != null) {
                lsauditpriority_gid = $scope.cboauditpriority.auditpriority_gid;
                lsauditpriority_name = $scope.cboauditpriority.auditpriority_name;
            }
            var lsaudittype_gid = '';
            var lsaudittype_name = '';
            if ($scope.cboaudittype != undefined || $scope.cboaudittype != null) {
                lsaudittype_gid = $scope.cboaudittype.audittype_gid;
                lsaudittype_name = $scope.cboaudittype.audittype_name;
            }

            var lsauditdepartment_gid = '';
            var lsauditdepartment_name = '';
            if ($scope.cboauditdepartment != undefined || $scope.cboauditdepartment != null) {
                lsauditdepartment_gid = $scope.cboauditdepartment.auditdepartment_gid;
                lsauditdepartment_name = $scope.cboauditdepartment.auditdepartment_name;
            }

            var lsauditmapping2employee_gid = '';
            var lsaudittype_approver = '';
            if ($scope.cboauditapprover != undefined || $scope.cboauditapprover != null) {
                lsauditmapping2employee_gid = $scope.cboauditapprover.auditmapping2employee_gid;
                lsaudittype_approver = $scope.cboauditapprover.approver_name;
            }
            var lsemployee_gid = '';
            var lsemployee_name = '';
            if ($scope.cboauditmaker != undefined || $scope.cboauditmaker != null) {
                lsemployee_gid = $scope.cboauditmaker.employee_gid;
                lsemployee_name = $scope.cboauditmaker.employee_name;
            }
            var lsauditmapping_gid = '';
            var lsaudit_checker = '';
            if ($scope.cboauditchecker != undefined || $scope.cboauditchecker != null) {
                lsauditmapping_gid = $scope.cboauditchecker.auditmapping_gid;
                lsaudit_checker = $scope.cboauditchecker.employee_name;
            }
            //if ($scope.txtperiod_to < $scope.txtperiod_from) {
            //    Notify.alert("Audit Period to date should be greater than Audit Period From date..!", 'warning');
            //}
            //else if ($scope.txtend_date < $scope.txttoday_date) {
            //    Notify.alert("Audit end date should be greater than Audit Start date..!", 'warning');
            //}
           

            var params = {
                checklistmasteradd_gid: checklistmasteradd_gid,
                audit_uniqueno: $scope.txtaudit_ref_no,
                auditdepartment_gid: lsauditdepartment_gid,
                auditdepartment_name: lsauditdepartment_name,
                audittype_gid: lsaudittype_gid,
                audittype_name: lsaudittype_name,
                auditobservation_name: $scope.auditobservation,
                checklistmaster_gid: lschecklistmaster_gid,
                audit_name: lsaudit_name,
                auditpriority_gid: lsauditpriority_gid,
                auditpriority_name: lsauditpriority_name,
                auditorapprover_gid: lsauditmapping2employee_gid,
                audit_approver: lsaudittype_approver,
                auditormaker_gid: lsemployee_gid,
                audit_maker: lsemployee_name,
                auditorchecker_gid: lsauditmapping_gid,
                audit_checker: lsaudit_checker,
                end_date: $scope.txtend_date,
                periodfrom_date: $scope.txtperiod_from,
                auditperiod_to: $scope.txtperiod_to,
                //auditeemaker_gid: lsauditeemaker_gid,
                //auditeemaker_name: lsauditeemaker_name,
                //auditeechecker_gid: lsauditeechecker_gid,
                //auditeechecker_name: lsauditeechecker_name,
                entity_name: $scope.txtentity_name,
                //audittype_name: $scope.txtaudittype_name,
                checkpointgroup_name: $scope.txtcheckpointgroup_name,
                checkpointgroup_gid: $scope.checkpointgroup_gid,
                audit_description: $scope.txtauditdescription_name,

            }

            var url = 'api/AtmTrnAuditCreation/PostAuditCreation';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $state.go('app.AtmTrnAuditCreationSummary');
                }

                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
            });
        }
        
        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditCreationSummary');
        }
        $scope.addauditee = function ()
        {
            var lsauditeemaker_gid = '';
            var lsauditeemaker_name = '';
            if ($scope.cboauditeemaker != undefined || $scope.cboauditeemaker != null) {
                lsauditeemaker_gid = $scope.cboauditeemaker.employee_gid;
                lsauditeemaker_name = $scope.cboauditeemaker.employee_name;
            }
            var lsauditeechecker_gid = '';
            var lsauditeechecker_name = '';
            if ($scope.cboauditeechecker != undefined || $scope.cboauditeechecker != null) {
                lsauditeechecker_gid = $scope.cboauditeechecker.employee_gid;
                lsauditeechecker_name = $scope.cboauditeechecker.employee_name;
            }

            if (($scope.cboauditeemaker == '' || $scope.cboauditeemaker == null) || ($scope.cboauditeechecker == '' || $scope.cboauditeechecker == null)) {
                Notify.alert('Kindly Fill Auditee Details', 'warning')
            }
            else {
                var params = {
                    auditeemaker_gid: lsauditeemaker_gid,
                    auditeemaker_name: lsauditeemaker_name,
                    auditeechecker_gid: lsauditeechecker_gid,
                    auditeechecker_name: lsauditeechecker_name,
                }
                var url = 'api/AtmTrnAuditCreation/PostMultipleAuditee';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        auditee_list();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    $scope.cboauditeemaker = '';
                    $scope.cboauditeechecker = '';
                });
            }
        }


        function auditee_list() {

            var url = 'api/AtmTrnAuditCreation/GetAuditeeList';
            SocketService.get(url).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
        $scope.delete_auditee = function (multipleauditee_gid) {
            var params =
                {
                    multipleauditee_gid: multipleauditee_gid
                }
            var url = 'api/AtmTrnAuditCreation/DeleteAuditeeList';

            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }
                checkpoint_list();
            });
        }
        function checkpoint_list() {
            var url = 'api/AtmTrnAuditCreation/GetAuditeeList';
            SocketService.get(url).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
            });
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnHoldAuditeeSummaryController', AtmTrnHoldAuditeeSummaryController);

    AtmTrnHoldAuditeeSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnHoldAuditeeSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnHoldAuditeeSummaryController';
        //$scope.lspage = $location.search().lspage;
        //var lspage = $scope.lspage;

        
        activate();
        function activate() {

           

                var url = 'api/AtmTrnMyAuditTaskAuditee/GetHoldAuditee';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                    unlockUI();

                });
            


            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnHoldAuditeeSummary')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnClosedAuditeeSummary')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnTaggedAuditeeSummary')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCompletedAuditeeSummary')
        }

        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeemakerhold'))
        }

       
        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();

// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnInitiateAuditApprovedController', AtmTrnInitiateAuditApprovedController);

    AtmTrnInitiateAuditApprovedController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnInitiateAuditApprovedController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnInitiateAuditApprovedController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditCreation/GetMyApprovedAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list; 
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }   


     $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 


$scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;
                    $scope.status_remarks = resp.data.status_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.status_remarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=auditapproved'))
        }

       
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&lspage=auditapproved'))
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();


// JavaScript source code
// JavaScript source code
// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnInitiateAuditClosedController', AtmTrnInitiateAuditClosedController);

    AtmTrnInitiateAuditClosedController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnInitiateAuditClosedController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnInitiateAuditClosedController';

        activate();

        function activate() {


         var url = 'api/AtmTrnAuditCreation/GetMyClosedAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list; 
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }   


     $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=auditclosed'))
        }

       
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1))
        }

      
 $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;
                    $scope.status_remarks = resp.data.status_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.status_remarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();

// JavaScript source code
// JavaScript source code
// JavaScript source code
// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnInitiateAuditCompletedController', AtmTrnInitiateAuditCompletedController);

    AtmTrnInitiateAuditCompletedController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnInitiateAuditCompletedController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnInitiateAuditCompletedController';

        activate();

        function activate() {


        var url = 'api/AtmTrnAuditCreation/GetCompletedAudit';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.completedaudit_list;
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }   


     $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=auditcompleted'))
        }
        

       
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1))
        }

       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();


// JavaScript source code
// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnInitiateAuditHoldController', AtmTrnInitiateAuditHoldController);

    AtmTrnInitiateAuditHoldController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnInitiateAuditHoldController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnInitiateAuditHoldController';

        activate();

        function activate() {


          var url = 'api/AtmTrnAuditCreation/GetMyOnholdAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list; 
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }   


     $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.statusupdate = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/statusupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/EditAuditorMaker';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                    $scope.txtaudit_name = resp.data.audit_name;
                    $scope.txtstatus_update = resp.data.status_update;
                    $scope.status_remarks = resp.data.status_remarks;

                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var params = {

                        auditcreation_gid: auditcreation_gid,
                        status_update: $scope.status_update,
                        status_remarks: $scope.status_remarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerStatus';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=audithold'))
        }

        
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1))
        }

        
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();

// JavaScript source code
// JavaScript source code
// JavaScript source code
// JavaScript source code
// JavaScript source code
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnInitiateAuditRejectedController', AtmTrnInitiateAuditRejectedController);

    AtmTrnInitiateAuditRejectedController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnInitiateAuditRejectedController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnInitiateAuditRejectedController';

        activate();

        function activate() {


       var url = 'api/AtmTrnAuditCreation/GetAuditCreationRejected';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
            });

            var url = 'api/AtmTrnAuditCreation/GetAuditCreationCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.Approvedaudit_count = resp.data.Approvedaudit_count;
                $scope.completedaudit_count = resp.data.completedaudit_count;
                $scope.rejectedaudit_count = resp.data.rejectedaudit_count;

            });
  
        }   


     $scope.openaudit = function () {
            $state.go('app.AtmTrnAuditCreationSummary');
        }

        $scope.approvedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditApproved');
        }

        $scope.auditsonhold = function () {
            $state.go('app.AtmTrnInitiateAuditHold');
        }   
      $scope.closedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditClosed');

        } 

       $scope.rejectedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditRejected');
        }
       $scope.completedaudit = function () {
            $state.go('app.AtmTrnInitiateAuditCompleted');
        } 
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;                
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                }); 
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.view = function (val1, val2, val3) {
            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=auditrejected'))
        }

     
        $scope.edit = function (val1) {
            $location.url('app/AtmTrnAuditCreationEdit?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1))
        }


        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.sample_list = resp.data.sample_list;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();

                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }


    }
})();


(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMakerCheckpointObservationController', AtmTrnMakerCheckpointObservationController);

    AtmTrnMakerCheckpointObservationController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnMakerCheckpointObservationController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMakerCheckpointObservationController';
        //$scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation2checklist_gid = $location.search().auditcreation2checklist_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditorMaker/EditAuditorMakerCheckpointObservation';
            var params = {
                auditcreation_gid: auditcreation_gid,

            };
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                  $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });
            var url = 'api/AtmTrnAuditorMaker/AuditorMakerCheckpointObservationView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });

            var url = 'api/AtmTrnAuditorMaker/GetMakerInitiateStatus';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.makerstatus_flag = resp.data.makerstatus_flag;
                $scope.makerapproval_flag = resp.data.makerapproval_flag;
                $scope.maker_initiated = resp.data.maker_initiated;
            });
            var url = 'api/AtmTrnSampling/GetSampleAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });
        }
        $scope.onselected = function (val, val1, val2) {
            $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;

            var params = {
                auditcreation_gid: auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_totalscore: $scope.total_score,

            }


            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.txttotal_score = resp.data.total_amount;

                    unlockUI()
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }

            });
        }
        $scope.submitobservation = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                    assignList.push(auditcreation2checklist_gid);

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                auditcreation2checklist_gid: assignList,
                auditcreation_gid: auditcreation_gid,
            }

            var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Check point  Successfully!', 'success');
                    $state.go('app.AtmTrnAuditorMakerSummary');
                }

                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

                $scope.txttotal_score = "";
            });

        }



        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }


        $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (auditcreation_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditorMaker/GetAuditCreationAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.btntaguser = function (auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }


        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        employelist: $scope.cboemployee_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: auditcreation_gid,

                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.assignedquery = function (val, val1) {
            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + val + '&sampleimport_gid=' + val1);
        }


        $scope.view = function (val, val1) {
            var sampleimport_gid = $scope.sampleimport_gid;
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }


        $scope.back = function () {
            $state.go('app.AtmTrnAuditorMakerSummary');
        }

        $scope.samplequery = function (val, val1) {
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }




        $scope.downloadtemplate_importexcel = function () {
            var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
            var filename = "\ImportExcelSample.xlsx";
            //var phyPath = resp.data.file_path;
            var phyPath = Templateurl + filename;
            var relPath = phyPath.split("EMS");
            var relpath1 = relPath[1].replace("\\", "/");
            var prefix = window.location.protocol + "//";
            var hosts = window.location.host;
            var str = prefix.concat(hosts, relpath1);
            var link = document.createElement("a");
            var name = filename.split('.');
            link.download = name[0];
            link.href = str;
            link.click();
        }

        $scope.excelupload = function (val, val1, name) {

            var fileInput = document.getElementById('fileimport');
            var filePath = fileInput.value;

            $scope.fileinputvalue = filePath;

            // Allowing file type
            var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

            if (!allowedExtensions.exec(filePath)) {
                Notify.alert('File Format Not Supported!', 'warning')
                $modalInstance.close('closed');
                //fileInput.value = '';
            }
            else if (filePath.includes("ImportExcelSample") == false) {
                Notify.alert('File Name / Template Not Supported!', 'warning')
                $modalInstance.close('closed');
            }
            else {
                var item = {
                    name: val[0].name,
                    file: val[0]
                };
                var frm = new FormData();
                frm.append('fileupload', item.file);
                frm.append('file_name', item.name);
                frm.append('auditcreation_gid', auditcreation_gid);
                $scope.uploadfrm = frm;
            }
        }

        $scope.uploadexcel = function () {

            if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                Notify.alert('Kindly Select the Excel file', 'warning')
            }
            else {
                var url = 'api/AtmTrnSampling/ImportExcelSample';
                lockUI();
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                    if (resp.data.status == true) {
                        activate();
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $location.url('app/AtmTrnMakerCheckpointObservation?auditcreation_gid=' + val1)
                        $modalInstance.close('closed');
                    }
                    else {
                        unlockUI();
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $modalInstance.close('closed');
                    }
                    $("#fileimport").val('');
                });
            }

        }

        $scope.uploadexcelcancel = function () {
            $("#fileimport").val('');
        };

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyApprovedAuditSummaryController', AtmTrnMyApprovedAuditSummaryController);

    AtmTrnMyApprovedAuditSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnMyApprovedAuditSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyApprovedAuditSummaryController';

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/GetMyApprovedAudit';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.approvedaudit_list = resp.data.auditcreationapproved_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetApprovedAuditCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pendingapprovalaudit_count = resp.data.pendingapproval_count;
                $scope.approvedaudit_count = resp.data.approved_count;
                $scope.rejectedaudit_count = resp.data.rejected_count;

            });

        }

        $scope.pendingapproval_audit = function () {
            $location.url('app/AtmTrnMyAuditApproverSummary')
        }

        $scope.approved_audit = function () {
            $location.url('app/AtmTrnMyApprovedAuditSummary')
        }
        $scope.rejected_audit = function () {
            $location.url('app/AtmTrnMyRejectedAuditSummary')
        }

        $scope.pendingaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetAuditCreation';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.closedaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyClosedAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.openaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOpenAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.auditsonhold = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOnholdAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

        }


        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.approverview = function (val1, val2, val3) {
            $location.url('app/AtmTrnMyAuditApprover360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=Myapprovedaudits'))
        }

       
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyAuditApprover360ViewController', AtmTrnMyAuditApprover360ViewController);

    AtmTrnMyAuditApprover360ViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnMyAuditApprover360ViewController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditApprover360ViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            $scope.lspage = searchObject.lspage;
            var lspage = $scope.lspage;

            if (lspage == 'Mypendingapproval') {
                $scope.pendingapproval_show = true;
                $scope.approvedaudit_show = false;
                $scope.impoerexcel_show = true;
                $scope.pendingdelete_show = true;
            }
            else if (lspage == 'Myapprovedaudits') {
                $scope.pendingapproval_show = false;
                $scope.approvedaudit_show = true;
                $scope.impoerexcel_show = false;
                $scope.pendingdelete_show = false;
            }

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by,
                $scope.created_date = resp.data.created_date,
                  $scope.txtentity_name = resp.data.entity_name,
              $scope.txtaudit_type = resp.data.audittype_name,
              $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
              $scope.txtaudit_desc = resp.data.audit_description,
              $scope.auditobservation_name = resp.data.auditobservation_name,
              $scope.openquerycount = resp.data.openquerycount;
                if (lspage == 'Mypendingapproval' && $scope.openquerycount == '0') {
                    $scope.approve = true;
                }
                else {
                    $scope.approve = false;
                }
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    $scope.sample_list = resp.data.sample_list

            //});

            if (lspage == 'Myapprovedaudits') {
                var params = { 
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list; 
                });
            }
            else {
                var params = {
                    checklistmaster_gid: checklistmaster_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/Checkpointcreation';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
                    angular.forEach($scope.checkpointsummary_list, function (value, key) {
                        if (value.checklist_flag != '0') {
                            value.Checked = true;
                            value.checklist_flag = 'Y';
                        }
                        else {
                            value.Checked = false;
                            value.checklist_flag = 'N';
                        }
                    });
                });
            }
           

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });
                    

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.assignrejectedchecklist = function () {
           
                var modalInstance = $modal.open({
                    templateUrl: '/rejectapproval.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'md'
                });
                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {

                    $scope.ok = function () {
                        modalInstance.close('closed');
                    };
                    $scope.rejectSubmit = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid,
                            rejected_remarks: $scope.txtreject_remarks,
                        }
                        var url = 'api/AtmTrnAuditCreation/InitiateAuditRejected';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                modalInstance.close('closed');
                                $state.go("app.AtmTrnMyAuditApproverSummary");
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                modalInstance.close('closed');
                            }
                        });
                        $state.go("app.AtmTrnMyAuditApproverSummary");
                    }
                }
            
        }



        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.Checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Approval can't be done, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.checkpointsummary_list, function (val) {
                    if (val.Checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;
                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!', 'warning');
                    unlockUI();
                    return false;
                }
                var params = {
                    auditcreationapproval: $scope.checkpointsummary_list,
                    checklistmaster_gid: checklistmaster_gid,
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/PostAuditApprovalChecklistAssign';
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmTrnMyAuditApproverSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'error',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }

        }
      
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });

                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3))
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }





        $scope.back = function (val) {
            if (lspage == 'Mypendingapproval') {
                $state.go('app.AtmTrnMyAuditApproverSummary');
            }
            else if (lspage == 'Myapprovedaudits') {
                $state.go('app.AtmTrnMyApprovedAuditSummary');
            }
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }

        //$scope.view = function (val1, val2, val3) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //    var checklistmaster_gid = $scope.checklistmaster_gid;
        //    var sampleimport_gid = $scope.sampleimport_gid;
        //    $location.url('app/AtmTrnAuditTaskSample?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
        //}
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyAuditApproverSummaryController', AtmTrnMyAuditApproverSummaryController);

    AtmTrnMyAuditApproverSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnMyAuditApproverSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditApproverSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditCreation/GetAuditCreationApprover';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetApprovedAuditCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pendingapprovalaudit_count = resp.data.pendingapproval_count;
                $scope.approvedaudit_count = resp.data.approved_count;
                $scope.rejectedaudit_count = resp.data.rejected_count;

            });

        }

        $scope.pendingapproval_audit = function () {
            $location.url('app/AtmTrnMyAuditApproverSummary')
        }

        $scope.approved_audit = function () {
            $location.url('app/AtmTrnMyApprovedAuditSummary')
        }

        $scope.rejected_audit = function () {
            $location.url('app/AtmTrnMyRejectedAuditSummary')
        }

        $scope.pendingaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetAuditCreation';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.closedaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyClosedAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.openaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOpenAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.auditsonhold = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOnholdAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

        }


        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.approverview = function (val1, val2, val3) {
            $location.url('app/AtmTrnMyAuditApprover360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3 + '&lspage=Mypendingapproval'))
        }

        //$scope.view = function (val1) {
        //    $location.url('app/AtmTrnAuditCreationView?auditcreation_gid=' + val1 )
        //}
      
       
        //$scope.edit = function (val1) {
        //    $location.url('app/AtmTrnAuditCreationEdit?auditcreation_gid=' + val1)
        //}

        //$scope.sampleview = function (val1) {
        //    $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
        //}

      

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyAuditeeCheckerSummaryController', AtmTrnMyAuditeeCheckerSummaryController);

    AtmTrnMyAuditeeCheckerSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnMyAuditeeCheckerSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditeeCheckerSummaryController';
        //var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        //$scope.lspage = searchObject.lspage;
        //var lspage = $scope.lspage;

        activate();
        function activate() {

                var url = 'api/AtmTrnMyAuditTaskAuditee/GetCheckerOpenAuditee';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                    unlockUI();

                });
            

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCheckerCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditscheckeronhold_count = resp.data.auditscheckeronhold_count;
                $scope.closedcheckeraudit_count = resp.data.closedcheckeraudit_count;
                $scope.opencheckeraudit_count = resp.data.opencheckeraudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

         

        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        //$scope.auditee_checker = function () {
        //    $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        //}
        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }
        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.pending_approval = function () {
            $location.url('app/AtmTrnCheckerPendingApproval')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnCheckerHoldAuditee')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnCheckerClosedAuditee')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnCheckerTaggedAuditee')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCheckerCompletedAuditee')
        }

        //$scope.auditee_checker = function () {

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeChecker';
        //    lockUI();
        //    SocketService.get(url).then(function (resp) {
        //        $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
        //        $scope.employee_gid = resp.data.employee_gid;
        //        unlockUI();

        //    });
        //}


        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditeeTaskCheckerAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeecheckeropensummary'))
        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditeeTaskCheckerAuditeeViewController', AtmTrnMyAuditeeTaskCheckerAuditeeViewController);

    AtmTrnMyAuditeeTaskCheckerAuditeeViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnMyAuditeeTaskCheckerAuditeeViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditeeTaskCheckerAuditeeViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                    $scope.txtaudit_desc = resp.data.audit_description,
                    $scope.txttotal_score = resp.data.observation_score,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.auditeechecker_approvalflag = resp.data.auditeechecker_approvalflag;
                $scope.openquerycount = resp.data.openquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                $scope.raisequeryoption_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted')) {
                    $scope.raisequeryoption_disabled = true;
                }
                    //if (lspage == 'auditeecheckerpending' && $scope.auditeechecker_approvalflag == "N") {
                    //    $scope.proceedtoapprover = true;
                    //}
                else {
                    $scope.raisequeryoption_disabled = false;
                }
                unlockUI();
            });

            //api 

            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditorMaker/GetMultipleAuditeecheckerApproval';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditee_flag = resp.data.auditee_flag;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });


            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            };


            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeCheckerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                //$scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });

            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    // auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();
                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

       

        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getapprovalclick = function (auditcreation_gid) {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
            var params = {
                //approval_name: $scope.cboapproval_member.employee_name,
                auditeechecker: 'Y',
                auditcreation_gid: auditcreation_gid,
                getapproval_remark: $scope.getapproval_remark,
                observation_percentage: $scope.txt_percent
            }
            lockUI();
            var url = "api/AtmTrnAuditorMaker/PostAuditeeGetApproval";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                    $state.go('app.AtmTrnCheckerPendingApproval');
                }
                else {
                    modalInstance.close('closed');
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    unlockUI();
                }
            });
            //}
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');
                }
            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }
        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }
                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            //$scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                //var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                //lockUI();
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.approval_status = resp.data.approval_status;
                //    if ($scope.approval_status == 'Completed') {
                //        $scope.hide = 1;
                //    }

                //    unlockUI();
                //});
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnAuditeeCheckerOpenObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.Back = function (val) {
            if (lspage == 'auditeemakeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeSummary');
            }
            if (lspage == 'auditeecheckeropensummary') {
                $location.url('app/AtmTrnMyAuditeeCheckerSummary');
            }
            else if (lspage == 'auditeemakerhold') {
                $location.url('app/AtmTrnHoldAuditeeSummary');
            }
            else if (lspage == 'auditeemakerclosed') {
                $location.url('app/AtmTrnClosedAuditeeSummary');
            }
            else if (lspage == 'auditeemakertagged') {
                $location.url('app/AtmTrnTaggedAuditeeSummary');
            }
            else if (lspage == 'auditeemakercompleted') {
                $location.url('app/AtmTrnCompletedAuditeeSummary');
            }
            else if (lspage == 'auditeecheckeropen') {
                $location.url('app/AtmTrnMyAuditeeCheckerSummary');
            }
            else if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnCheckerPendingApproval');
            }
            else if (lspage == 'auditeecheckerhold') {
                $location.url('app/AtmTrnCheckerHoldAuditee');
            }
            else if (lspage == 'auditeecheckerclosed') {
                $location.url('app/AtmTrnCheckerClosedAuditee');
            }
            else if (lspage == 'auditeecheckertagged') {
                $location.url('app/AtmTrnCheckerTaggedAuditee');
            }
            else if (lspage == 'auditeecheckercompleted') {
                $location.url('app/AtmTrnCheckerCompletedAuditee');
            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyAuditRejected360ViewController', AtmTrnMyAuditRejected360ViewController);

    AtmTrnMyAuditRejected360ViewController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnMyAuditRejected360ViewController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditRejected360ViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            $scope.lspage = searchObject.lspage;
            var lspage = $scope.lspage;

            if (lspage == 'Mypendingapproval') {
                $scope.pendingapproval_show = true;
                $scope.approvedaudit_show = false;
                $scope.impoerexcel_show = true;
                $scope.pendingdelete_show = true;
            }
            else if (lspage == 'Myapprovedaudits') {
                $scope.pendingapproval_show = false;
                $scope.approvedaudit_show = true;
                $scope.impoerexcel_show = false;
                $scope.pendingdelete_show = false;
            }

            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                $scope.created_by = resp.data.created_by,
                $scope.created_date = resp.data.created_date,
                  $scope.txtentity_name = resp.data.entity_name,
              $scope.txtaudit_type = resp.data.audittype_name,
              $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
              $scope.txtaudit_desc = resp.data.audit_description,
              $scope.auditobservation_name = resp.data.auditobservation_name,
              $scope.openquerycount = resp.data.openquerycount;
                if (lspage == 'Mypendingapproval' && $scope.openquerycount == '0') {
                    $scope.approve = true;
                }
                else {
                    $scope.approve = false;
                }
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
                unlockUI();
            });


            var url = 'api/AtmTrnSampling/GetSamplesummary';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });

            if (lspage == 'Myapprovedaudits') {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
                });
            }
            else {
                var params = {
                    checklistmaster_gid: checklistmaster_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/CheckpointCreation';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
                    angular.forEach($scope.checkpointsummary_list, function (value, key) {
                        if (value.checklist_flag != '0') {
                            value.Checked = true;
                            value.checklist_flag = 'Y';
                        }
                        else {
                            value.Checked = false;
                            value.checklist_flag = 'N';
                        }
                    });
                });
            }


        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.checksampleall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace(/_/g, ' ');
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        activate();
                    });


                    $modalInstance.close('closed');

                }

            }
        }


        $scope.assignrejectedchecklist = function () {

            var modalInstance = $modal.open({
                templateUrl: '/rejectapproval.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.ok = function () {
                    modalInstance.close('closed');
                };
                $scope.rejectSubmit = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        rejected_remarks: $scope.txtreject_remarks,
                    }
                    var url = 'api/AtmTrnAuditCreation/InitiateAuditRejected';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            modalInstance.close('closed');
                            $state.go("app.AtmTrnMyAuditApproverSummary");
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            modalInstance.close('closed');
                        }
                    });
                    $state.go("app.AtmTrnMyAuditApproverSummary");
                }
            }

        }



        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.Checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Approval can't be done, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.checkpointsummary_list, function (val) {
                    if (val.Checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;
                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!', 'warning');
                    unlockUI();
                    return false;
                }
                var params = {
                    auditcreationapproval: $scope.checkpointsummary_list,
                    checklistmaster_gid: checklistmaster_gid,
                    auditcreation_gid: auditcreation_gid
                }
                lockUI();
                var url = 'api/AtmTrnAuditCreation/PostAuditApprovalChecklistAssign';
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $state.go('app.AtmTrnMyAuditApproverSummary');
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'error',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }

        }
       
        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            $modalInstance.close('closed');
                            if (resp.data.status == true) {
                                defaultdynamic();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                //  $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)

                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });

                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3))
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }





        $scope.back = function (val) {
           
            $state.go('app.AtmTrnMyRejectedAuditSummary');
            
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }

        //$scope.view = function (val1, val2, val3) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //    var checklistmaster_gid = $scope.checklistmaster_gid;
        //    var sampleimport_gid = $scope.sampleimport_gid;
        //    $location.url('app/AtmTrnAuditTaskSample?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
        //}

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }
})();


(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskAuditeeCheckerViewController', AtmTrnMyAuditTaskAuditeeCheckerViewController);

    AtmTrnMyAuditTaskAuditeeCheckerViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnMyAuditTaskAuditeeCheckerViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskAuditeeCheckerViewController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        $scope.checklistmaster_gid = $location.search().checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = $location.search().checklistmasteradd_gid;
        var sampleimport_gid = $location.search().sampleimport_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                unlockUI();
            });

           

            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservationview_list = resp.data.makercheckpointobservationview_list;

            });

            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
                unlockUI();
            });


            var url = 'api/AtmTrnSampling/GetSamplesummary';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                auditcreation_gid = resp.data.auditcreation_gid
                $scope.sample_list = resp.data.sample_list

            });



        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    //for (i in $scope.SampleDynamicTabledata) {
                    //    delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                    //}
                }
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index) {
            var getsampleimport_gid = $scope.SampleDynamicdata[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                var sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
        }



        $scope.view = function (sampleimport_gid) {
            $location.url('app/AtmTrnSamplingView?sampleimport_gid=' + sampleimport_gid)
        }



        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterAuditor';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtnotetoauditor = resp.data.noteto_auditor;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: $scope.sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }


            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsample = function ($index, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtdescription,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid)
        }


        $scope.back = function (val) {
            $state.go('app.AtmTrnAuditeeCheckerSummary');
        }

    }

})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskAuditeeMakerObservationScoreViewController', AtmTrnMyAuditTaskAuditeeMakerObservationScoreViewController);

    AtmTrnMyAuditTaskAuditeeMakerObservationScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnMyAuditTaskAuditeeMakerObservationScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskAuditeeMakerObservationScoreViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = $scope.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeSampleMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditeemakeropen) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + 'null' + '&lspage=' + 'auditeemakeropen'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskAuditeeMakerViewController', AtmTrnMyAuditTaskAuditeeMakerViewController);

    AtmTrnMyAuditTaskAuditeeMakerViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnMyAuditTaskAuditeeMakerViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskAuditeeMakerViewController';

        
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        var checklistmasteradd_gid = $scope.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                    $scope.txtaudit_desc = resp.data.audit_description,
                    $scope.txttotal_score = resp.data.observation_score,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.auditeechecker_approvalflag = resp.data.auditeechecker_approvalflag;
                $scope.openquerycount = resp.data.openquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                $scope.raisequeryoption_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted')) {
                    $scope.raisequeryoption_disabled = true;
                }
                    //if (lspage == 'auditeecheckerpending' && $scope.auditeechecker_approvalflag == "N") {
                    //    $scope.proceedtoapprover = true;
                    //}
                else {
                    $scope.raisequeryoption_disabled = false;
                }
                unlockUI();
            });

            //api 

            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            
            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
            
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            };


            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                //$scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });


            defaultdynamic();


            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    // auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});

        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();
                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

       
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getapprovalclick = function (auditcreation_gid) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var params = {
                    //approval_name: $scope.cboapproval_member.employee_name,
                    auditeechecker: 'Y',
                    auditcreation_gid: auditcreation_gid,
                    getapproval_remark: $scope.getapproval_remark,
                    observation_percentage: $scope.txt_percent
                }
                lockUI();
                var url = "api/AtmTrnAuditorMaker/PostAuditeeGetApproval";
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnCheckerPendingApproval');
                    }
                    else {
                        modalInstance.close('closed');
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');
                }
            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }
        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }
                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            //$scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }

        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    //if ($scope.approval_status == 'Completed') {
                    //    $scope.hide = 1;
                    //}

                    unlockUI();
                });
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }


        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }
        $scope.Back = function (val) {
            if (lspage == 'auditeemakeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeSummary');
            }
            else if (lspage == 'auditeemakerhold') {
                $location.url('app/AtmTrnHoldAuditeeSummary');
            }
            else if (lspage == 'auditeemakerclosed') {
                $location.url('app/AtmTrnClosedAuditeeSummary');
            }
            else if (lspage == 'auditeemakertagged') {
                $location.url('app/AtmTrnTaggedAuditeeSummary');
            }
            else if (lspage == 'auditeemakercompleted') {
                $location.url('app/AtmTrnCompletedAuditeeSummary');
            }
            else if (lspage == 'auditeecheckeropen') {
                $location.url('app/AtmTrnMyAuditeeCheckerSummary');
            }
            else if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnCheckerPendingApproval');
            }
            else if (lspage == 'auditeecheckerhold') {
                $location.url('app/AtmTrnCheckerHoldAuditee');
            }
            else if (lspage == 'auditeecheckerclosed') {
                $location.url('app/AtmTrnCheckerClosedAuditee');
            }
            else if (lspage == 'auditeecheckertagged') {
                $location.url('app/AtmTrnCheckerTaggedAuditee');
            }
            else if (lspage == 'auditeecheckercompleted') {
                $location.url('app/AtmTrnCheckerCompletedAuditee');
            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskAuditeeSummaryController', AtmTrnMyAuditTaskAuditeeSummaryController);

    AtmTrnMyAuditTaskAuditeeSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnMyAuditTaskAuditeeSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskAuditeeSummaryController';
        //var searchObject = cmnfunctionService.decryptURL($location.search().hash);

        //$scope.lspage = searchObject.lspage;
        //var lspage = $scope.lspage;

       

        activate();
        function activate() {           

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetOpenAuditee';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                unlockUI();

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.completed_count = resp.data.completedaudit_count;

            });

          
        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        //$scope.auditee_checker = function () {
        //    $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        //}
        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }
        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnHoldAuditeeSummary')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnClosedAuditeeSummary')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnTaggedAuditeeSummary')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCompletedAuditeeSummary')
        }

        

        $scope.viewtask = function (val, val1) {
            $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&lspage=auditeemakeropen'))
        }

       
        $scope.auditeecheckerapproval = function (val3) {
            $location.url('app/AtmTrnAuditeeCheckerApproval?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val3))
        }

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }

    }
})();



(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskAuditeeViewController', AtmTrnMyAuditTaskAuditeeViewController);

    AtmTrnMyAuditTaskAuditeeViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnMyAuditTaskAuditeeViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskAuditeeViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txttotal_score = resp.data.observation_score,
                $scope.auditeechecker_approvalflag = resp.data.auditeechecker_approvalflag;
                $scope.openquerycount = resp.data.openquerycount;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;

                $scope.raisequeryoption_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted')) {
                    $scope.raisequeryoption_disabled = true;
                }
                //if (lspage == 'auditeecheckerpending' && $scope.auditeechecker_approvalflag == "N") {
                //    $scope.proceedtoapprover = true;
                //}
                else {
                    $scope.raisequeryoption_disabled = false;
                }
                unlockUI();
            });

            //api 

            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditorMaker/GetMultipleAuditeecheckerApproval';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditee_flag = resp.data.auditee_flag;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
           
            
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });
            var params = {
                auditcreation_gid: auditcreation_gid
            };


            var url = 'api/AtmTrnMyAuditTaskAuditee/AuditeeCheckerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                //$scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                    }
                });
            });
            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }
            });


            defaultdynamic();


            //var params = {
            //    sampleimport_gid: sampleimport_gid
            //};
            //var url = 'api/AtmTrnAuditorMaker/RaisedsampleQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI();
            //    $scope.samplequerydatalist = resp.data.samplequerydata;

            //    $scope.close_disabled = false;
            //    if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
            //        lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
            //        lspage == 'auditeecheckercompleted')) {
            //        $scope.close_disabled = true;
            //    }

            //});
            //var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
            //});
          
        }

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                        delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    }

                    for (i in $scope.raisedqueryarray) {
                        //delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }

        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();
                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }

        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.getapprovalclick = function (auditcreation_gid) {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
                var params = {
                    //approval_name: $scope.cboapproval_member.employee_name,
                    auditeechecker: 'Y',
                    auditcreation_gid: auditcreation_gid,
                    getapproval_remark: $scope.getapproval_remark,
                    observation_percentage: $scope.txt_percent
                }
                lockUI();
                var url = "api/AtmTrnAuditorMaker/PostAuditeeGetApproval";
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        $state.go('app.AtmTrnCheckerPendingApproval');
                    }
                    else {
                        modalInstance.close('closed');
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                });
            //}
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');
                }
            }
        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }
        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "Partial") {
                            value.partial_radio = true;
                            //value.tag_radio1 = true;
                        }
                        else if (value.overall_detail == "NA") {
                            value.na_radio = true;
                            //value.tag_radio1 = true;
                        }

                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            //$scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }
        $scope.auditraisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/auditraisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_description: $scope.txtquery_description,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostAuditRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //activate();
                            auditraise_list(auditcreation_gid);
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'info',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                    $modalInstance.close('closed');
                }

            }
        }


        function auditraise_list(auditcreation_gid) {
            var params = {
                auditcreation_gid: auditcreation_gid,

            }

            var url = 'api/AtmTrnAuditorMaker/AuditRaisedQuerySummary';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.auditquerydata = resp.data.auditquerydata;
            });
        }

        $scope.viewresponse_samplequery = function (auditraisequery_gid) {

            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    //if ($scope.approval_status == 'Completed') {
                    //    $scope.hide = 1;
                    //}

                    unlockUI();
                });
                var params = {
                    auditraisequery_gid: auditraisequery_gid,
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        remarks: $scope.txtqueries,
                        auditraisequery_gid: auditraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnAuditorMaker/PostAuditQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {


                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };
                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist";
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.auditraisequery_gid = auditraisequery_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditraisequery_gid: auditraisequery_gid,
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var auditraisequery_gid = $scope.auditraisequery_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('auditraisequery_gid', $scope.auditraisequery_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnAuditorMaker/AuditResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                auditraisequery_gid: auditraisequery_gid
                            };

                            var url = "api/AtmTrnAuditorMaker/GetAuditQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.auditQuerydetaillist = resp.data.auditQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        $scope.closesample_query = function (auditraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        auditraisequery_gid: auditraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostAuditCloseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }
        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnAuditeeCheckerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }

        $scope.fillobservation = function () {
            $location.url('app/AtmTrnRaiseQueryHistory?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid))

        }

        $scope.Back = function (val) {
            if (lspage == 'auditeemakeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeSummary');
            }
            else if (lspage == 'auditeemakerhold') {
                $location.url('app/AtmTrnHoldAuditeeSummary');
            }
            else if (lspage == 'auditeemakerclosed') {
                $location.url('app/AtmTrnClosedAuditeeSummary');
            }
            else if (lspage == 'auditeemakertagged') {
                $location.url('app/AtmTrnTaggedAuditeeSummary');
            }
            else if (lspage == 'auditeemakercompleted') {
                $location.url('app/AtmTrnCompletedAuditeeSummary');
            }
            else if (lspage == 'auditeecheckeropen') {
                $location.url('app/AtmTrnMyAuditeeCheckerSummary');
            }
            else if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnCheckerPendingApproval');
            }
            else if (lspage == 'auditeecheckerhold') {
                $location.url('app/AtmTrnCheckerHoldAuditee');
            }
            else if (lspage == 'auditeecheckerclosed') {
                $location.url('app/AtmTrnCheckerClosedAuditee');
            }
            else if (lspage == 'auditeecheckertagged') {
                $location.url('app/AtmTrnCheckerTaggedAuditee');
            }
            else if (lspage == 'auditeecheckercompleted') {
                $location.url('app/AtmTrnCheckerCompletedAuditee');
            }
        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnMyAuditTaskController', AtmTrnMyAuditTaskController);

    AtmTrnMyAuditTaskController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnMyAuditTaskController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyAuditTaskController';
        var auditcreation_gid = $location.search().auditcreation_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        activate();

        function activate() {
            var url = 'api/AtmTrnMyAuditTask/EditMyAuditTask';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditfrequency = resp.data.auditfrequency_gid,
                  $scope.cboauditfrequency = resp.data.auditfrequency_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.due_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditmaker_name = resp.data.auditmaker_name,
                $scope.cboauditchecker_name = resp.data.auditchecker_name,
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTask/MyAuditTaskView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.myaudittask_list = resp.data.checkpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;
            });
            var url = 'api/AtmTrnSampling/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list

            });

        }
        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskSummary');
        }
        $scope.view = function (val, val1) {
           
            $location.url('app/AtmTrnAuditTaskSample?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }
        $scope.samplequery = function (val, val1) {
            $location.url('app/AtmTrnSampleQuery?auditcreation_gid=' + val + '&sampleimport_gid=' + val1)
        }

    $scope.showPopover = function (sampleimport_gid, sample_name) {
        var modalInstance = $modal.open({
            templateUrl: '/showemployee.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            lockUI();
            var url = 'api/AtmTrnSampling/GetEmployeeName';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.employee_name = resp.data.employee_name;
                $scope.sample_name = resp.data.sample_name;
            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }

    $scope.checkpointintent = function (auditcreation_gid, checkpoint_intent) {
        var modalInstance = $modal.open({
            templateUrl: '/checkpointintent.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            var url = 'api/AtmTrnMyAuditTask/GetAuditCreationIntent';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtcheckpointintent = resp.data.checkpoint_intent;

            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }
    $scope.description = function (auditcreation_gid, checkpoint_description) {
        var modalInstance = $modal.open({
            templateUrl: '/checkpointdescription.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            'use strict';

            angular
                .module('angle')
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            var url = 'api/AtmTrnMyAuditTask/GetAuditCreationDescription';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtcheckpointdescription = resp.data.checkpoint_description;

            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }
    $scope.notetoauditor = function (auditcreation_gid, noteto_auditor) {
        var modalInstance = $modal.open({
            templateUrl: '/notetoauditor.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });
        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            var url = 'api/AtmTrnMyAuditTask/GetAuditCreationAuditor';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.txtnotetoauditor = resp.data.noteto_auditor;

            });
            $scope.ok = function () {
                $modalInstance.close('closed');
            };
        }
    }

    $scope.raisequery = function () {
        var modalInstance = $modal.open({
            templateUrl: '/raisequery.html',
            controller: ModalInstanceCtrl,
            backdrop: 'static',
            keyboard: false,
            size: 'md'
        });

        ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        function ModalInstanceCtrl($scope, $modalInstance) {


            $scope.ok = function () {
                $modalInstance.close('closed');
            };

            //var url = 'api/SystemMaster/GetEmployeelist';
            //lockUI();
            //SocketService.get(url).then(function (resp) {
            //    $scope.employee_list = resp.data.employeelist;
            //    unlockUI();
            //});



            $scope.submit = function () {

                var params = {

                        auditcreation_gid: auditcreation_gid,
                        sampleimport_gid: sampleimport_gid,
                        remarks: $scope.txtqueries
                    }
                    //employe: $scope.cboemployee_name,


                var url = "api/AtmTrnMyAuditTaskAuditee/PostRaiseQuerysample";
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {

                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        $modalInstance.close('closed');
                        activate();
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'warning',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                });

                $modalInstance.close('closed');

            }

        }
    }

}

    })();



(function () {
        'use strict';

        angular
            .module('angle')
            .controller('AtmTrnMyAuditTaskSummaryController', AtmTrnMyAuditTaskSummaryController);

        AtmTrnMyAuditTaskSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams'];

        function AtmTrnMyAuditTaskSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams) {
            /* jshint validthis:true */
            var vm = this;
            vm.title = 'AtmTrnMyAuditTaskSummaryController';
            
            activate();

            function activate() {
                var url = 'api/AtmTrnMyAuditTask/GetMyAuditTask';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittask_list = resp.data.myaudittask_list;
                    $scope.employee_gid = resp.data.employee_gid;
                    unlockUI();

                });

                var url = 'api/AtmTrnMyAuditTask/GetMyAuditTaskCounts';
                SocketService.get(url).then(function (resp) {
                    unlockUI()
                    $scope.auditsonhold_count = resp.data.auditsonhold_count;
                    $scope.closedaudit_count = resp.data.closedaudit_count;
                    $scope.openaudit_count = resp.data.openaudit_count;
                });

            }

            $scope.assignedaudit = function () {

                var url = 'api/AtmTrnMyAuditTask/GetMyAuditTask';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittask_list = resp.data.myaudittask_list;
                    $scope.employee_gid = resp.data.employee_gid;
                    unlockUI();

                });
            }

            $scope.closedaudit = function () {

                var url = 'api/AtmTrnMyAuditTask/GetMyClosedAuditTask';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittask_list = resp.data.myaudittask_list;
                    $scope.employee_gid = resp.data.employee_gid;
                    unlockUI();

                });
            }


            $scope.openaudit = function () {

                var url = 'api/AtmTrnMyAuditTask/GetMyOpenAuditTask';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittask_list = resp.data.myaudittask_list;
                    $scope.employee_gid = resp.data.employee_gid;
                    unlockUI();

                });
            }


            $scope.auditsonhold = function () {

                var url = 'api/AtmTrnMyAuditTask/GetMyOnholdAuditTask';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.myaudittask_list = resp.data.myaudittask_list;
                    $scope.employee_gid = resp.data.employee_gid;
                    unlockUI();

                });
            }


            //$scope.taggedsamples = function () {

            //    //var url = 'api/AtmTrnMyAuditTask/GettaggedsamplesSummary';
            //    lockUI();
            //    SocketService.get(url).then(function (resp) {
            //        $scope.taggedsamples_list = resp.data.taggedsamples_list;
            //        unlockUI();

            //    });
            //}

            $scope.updateobservations = function (val1) {
                $location.url('app/AtmTrnCheckpointObservation?auditcreation_gid=' + val1)
            }

            $scope.auditraisequery = function (val1) {
                $location.url('app/AtmTrnAuditRaiseQuery?auditcreation_gid=' + val1)
            }

            //$scope.observations = function (val1,val2)
            //{
            //    $location.url('app/AtmTrnCheckpointObservation?auditcreation_gid=' + val1 + '&checklistmasteradd_gid=' + val2)
            //}
            $scope.viewtask = function (val) {
                $location.url('app/AtmTrnMyAuditTask?auditcreation_gid=' + val)
            }
            $scope.approval = function (val2) {
                $location.url('app/AtmTrnApproval?auditcreation_gid=' + val2)
            }
            $scope.assignedquery = function (val) {
                $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + val);
            }
            $scope.auditapproval = function (val3) {
                $location.url('app/AtmTrnAuditApproval?auditcreation_gid=' + val3)
            }
            $scope.statusupdate = function (auditcreation_gid) {
                var modalInstance = $modal.open({
                    templateUrl: '/statusupdate.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'md'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {

                    var params = {
                        auditcreation_gid: auditcreation_gid
                    }
                    var url = 'api/AtmTrnMyAuditTask/EditMyAuditTask';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.auditcreation_gid = resp.data.auditcreation_gid
                        $scope.txtaudit_name = resp.data.audit_name;
                        $scope.txtstatus_update = resp.data.status_update;

                    });

                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    

                    $scope.submit = function () {

                        var params = {

                            auditcreation_gid: auditcreation_gid,
                            status_update: $scope.status_update

                        }

                        var url = 'api/AtmTrnMyAuditTask/GetMyAuditTaskStatus';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                                activate();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                        });

                        $modalInstance.close('closed');

                    }

                }
            }
    
            $scope.getApprovalRequest = function (auditcreation_gid) {
                var modalInstance = $modal.open({
                    templateUrl: '/getApprovalRequest.html',
                    controller: ModalInstanceCtrl,
                    size: 'md'
                });
                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    var params = {
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmMstAuditMapping/GetAuditMappingChecker';
                    lockUI();
                    SocketService.get(url).then(function (resp) {
                        unlockUI();
                        $scope.auditmapping_list = resp.data.auditmappingchecker_list;

                    });
                    var url = 'api/AtmTrnMyAuditTask/TmpAllMembersDelete';
                    SocketService.get(url).then(function (resp) {

                    });
                    $scope.ok = function () {
                        modalInstance.close('closed');
                    };
                    $scope.ApprovalMembercancel = function (tmpapprovalmember_gid) {
                        var params = {
                            tmpapprovalmember_gid: tmpapprovalmember_gid,
                            auditcreation_gid: auditcreation_gid,
                        }
                        var url = 'api/AtmTrnMyAuditTask/TmpApprovalMembersDelete';
                        SocketService.post(url, params).then(function (resp) {
                            $scope.approvalmember = resp.data.approvalmember;                          
                        });



                    }

                    $scope.Changed = function (cboapproval_membername) {
                        var params = {
                            approvalgid: $scope.cboapproval_membername.auditmapping_gid,
                            approvalname: $scope.cboapproval_membername.employee_name,
                            auditcreation_gid: auditcreation_gid,
                        }

                        lockUI();
                        var url = "api/AtmTrnMyAuditTask/TempApprovalMember";
                        SocketService.post(url, params).then(function (resp) {

                            if (resp.data.status == true) {
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000

                                });
                                unlockUI();
                                $scope.current = $state.current.name;
                                ScopeValueService.store("dataldCtrl", $scope);
                                //$state.go('app.pageredirect');
                                $scope.cboapproval_membername = "";
                                var params = {
                                    auditcreation_gid: auditcreation_gid
                                }
                                var url = 'api/AtmTrnMyAuditTask/TmpApprovalMembersView';
                                SocketService.getparams(url, params).then(function (resp) {
                                    $scope.approvalmember = resp.data.approvalmember;
                                });                               
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();

                            }
                        });


                    }

                    $scope.getapprovalclick = function () {
                        var params = {
                            approve_remarks: $scope.approve_remarks,
                            approve_type: $scope.approve_type,
                            auditcreation_gid: auditcreation_gid,                     
                           
                        }

                        lockUI();
                        var url = "api/AtmTrnMyAuditTask/PostApprovalGet";
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {
                                modalInstance.close('closed');
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();
                                activate();

                            }
                            else {
                                //modalInstance.close('closed');
                                alert(resp.data.message, {
                                    status: 'danger',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                unlockUI();

                            }
                        });
                    }
                }
            }

          
            $scope.raisequery = function (auditcreation_gid) {
                var modalInstance = $modal.open({
                    templateUrl: '/raisequery.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'md'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {

                    var params = {
                        auditcreation_gid: auditcreation_gid
                    }
                    var url = 'api/AtmTrnMyAuditTask/EditMyAuditTask';
                    SocketService.getparams(url, params).then(function (resp) {
                        $scope.auditcreation_gid = resp.data.auditcreation_gid

                    });


                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    var url = 'api/SystemMaster/GetEmployeelist';
                    lockUI();
                    SocketService.get(url).then(function (resp) {
                        $scope.employee_list = resp.data.employeelist;
                        unlockUI();
                    });

                    

                    $scope.submit = function () {

                        var params = {
                            auditcreation_gid: $scope.auditcreation_gid,
                            employe: $scope.cboemployee_name,
                            description: $scope.txtdescription,
                           
                        }

                        var url = 'api/AtmTrnMyAuditTask/PostRaiseQuery';
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                                activate();
                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });

                            }
                        });

                        $modalInstance.close('closed');

                    }

                }
            }
        }
    })();



(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnMyRejectedAuditSummaryController', AtmTrnMyRejectedAuditSummaryController);

    AtmTrnMyRejectedAuditSummaryController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$modal', 'cmnfunctionService'];

    function AtmTrnMyRejectedAuditSummaryController($rootScope, $scope, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $modal, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnMyRejectedAuditSummaryController';

        activate();

        function activate() {


            var url = 'api/AtmTrnAuditCreation/GetAuditCreationRejected';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditCreation/GetApprovedAuditCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.pendingapprovalaudit_count = resp.data.pendingapproval_count;
                $scope.approvedaudit_count = resp.data.approved_count;
                $scope.rejectedaudit_count = resp.data.rejected_count;

            });

        }

        $scope.pendingapproval_audit = function () {
            $location.url('app/AtmTrnMyAuditApproverSummary')
        }

        $scope.approved_audit = function () {
            $location.url('app/AtmTrnMyApprovedAuditSummary')
        }

        $scope.rejected_audit = function () {
            $location.url('app/AtmTrnMyRejectedAuditSummary')
        }

        $scope.pendingaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetAuditCreation';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.closedaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyClosedAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.openaudit = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOpenAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });
        }


        $scope.auditsonhold = function () {

            var url = 'api/AtmTrnAuditCreation/GetMyOnholdAuditTask';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

        }


        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.createaudit = function () {
            $state.go('app.AtmTrnCreateAudit');
        }
        $scope.approverview = function (val1, val2, val3) {
            $location.url('app/AtmTrnMyAuditRejected360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3))
        }

        //$scope.view = function (val1) {
        //    $location.url('app/AtmTrnAuditCreationView?auditcreation_gid=' + val1 )
        //}
       

        //$scope.edit = function (val1) {
        //    $location.url('app/AtmTrnAuditCreationEdit?auditcreation_gid=' + val1)
        //}

        //$scope.sampleview = function (val1) {
        //    $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
        //}



    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnRaiseQueryHistoryController', AtmTrnRaiseQueryHistoryController);

    AtmTrnRaiseQueryHistoryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnRaiseQueryHistoryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnRaiseQueryHistoryController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.lsobservationfill_flag = searchObject.lsobservationfill_flag;


        activate();

        function activate() {
            lockUI();
            var params = {
                auditcreation_gid: auditcreation_gid,
            };   
            
            var url = 'api/AtmTrnAuditorMaker/RaiseQueryHistorySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.raisequeryhistory = resp.data.raisequeryhistory;
                unlockUI();
            });                     
                     
        }       
               
        $scope.tagsample = function (sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                };
                var url = 'api/AtmTrnAuditorMaker/AssignedTagUser';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleAssignedTag = resp.data.SampleAssignedTag;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }


        $scope.btnulpoad = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/documentupload.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.auditcreation_gid = auditcreation_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.downloadall = function (val1, val2) {

                    for (var i = 0; i < val2.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(val1, val2[i]);
                    }

                }

                $scope.upload = function (val, val1, name) {

                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('project_flag', "Default");

                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnSampling/QueryDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var url = "api/AtmTrnSampling/GetDocUploadlist"
                            var param = {
                                auditcreation_gid: auditcreation_gid
                            };
                            SocketService.getparams(url, param).then(function (resp) {
                                $scope.lsfilename = resp.data.filename;
                                $scope.lsfilepath = resp.data.filepath;
                                $scope.DocUploadlogdtl = resp.data.DocUploadlogdtl;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });

                            $modalInstance.close('closed');

                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }

                    });

                }

                var param = {
                    auditcreation_gid: auditcreation_gid
                };

                var url = "api/AtmTrnSampling/GetDocUploadlist"

                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lsfilename = resp.data.filename;
                    $scope.lsfilepath = resp.data.filepath;
                    $scope.DocUploadlogdtl = resp.data.DocUploadlogdtl;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }

            }
        }


        $scope.viewresponse_samplequery = function (sampleraisequery_gid) {
            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleraisequery_gid: sampleraisequery_gid,
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        sampleimport_gid: sampleimport_gid,
                        remarks: $scope.txtqueries,
                        sampleraisequery_gid: sampleraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnMyAuditTaskAuditee/PostSampleQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            var url = "api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist";
                            var param = {
                                sampleraisequery_gid: sampleraisequery_gid
                            };
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.sampleraisequery_gid = sampleraisequery_gid;
                $scope.sampleimport_gid = sampleimport_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleraisequery_gid: sampleraisequery_gid,
                    sampleimport_gid: sampleimport_gid
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    if (IsValidExtension == false) {
                        Notify.alert("File format is not supported..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        return false;
                    }

                    var auditcreation_gid = $scope.auditcreation_gid;
                    var sampleraisequery_gid = $scope.sampleraisequery_gid;
                    var sampleimport_gid = $scope.sampleimport_gid;

                    var item = {
                        name: val[0].name,
                        file: val[0]
                    };

                    var frm = new FormData();
                    frm.append('fileupload', item.file);
                    frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('sampleraisequery_gid', $scope.sampleraisequery_gid);
                    frm.append('sampleimport_gid', $scope.sampleimport_gid);


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnMyAuditTaskAuditee/ResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                sampleraisequery_gid: sampleraisequery_gid
                            };

                            var url = "api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        //$scope.Back = function (val, val1) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //    var sampleimport_gid = $scope.sampleimport_gid;
        //    $location.url('app/AtmTrnMyAuditTaskAuditeeView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid)
        //}


        $scope.Back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            var sampleimport_gid = $scope.sampleimport_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage));
            }          
        }
        $scope.back = function () {          
          
            $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=auditeecheckerpending'));
            
        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnReplyToQueryController', AtmTrnReplyToQueryController);

    AtmTrnReplyToQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce'];

    function AtmTrnReplyToQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnReplyToQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,

            };

            var url = 'api/AtmTrnMyAuditTask/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.AssignedQueryList = resp.data.AssignedQueryList;
                unlockUI();
            });

            var url = 'api/AtmTrnMyAuditTask/GetRepliedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.ReplyToQueryList = resp.data.ReplyToQueryList;
                unlockUI();
            });

            
            //var url = "api//";
            //SocketService.get(url).then(function (resp) {
            //    $scope.assigned_count = resp.data.assigned_count;
            //    $scope.reply_count = resp.data.reply_count;
            //    $scope.close_count = resp.data.close_count;
            //    unlockUI();
            //});


        }     
        $scope.Assigned = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnAssignedQuery?auditcreation_gid=' + auditcreation_gid)

        }

  
        $scope.Reply = function () {
            $state.go('app.AtmTrnReplyToQuery');
        }

        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskSummary');
        }

    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstApproverObservationScoreController', AtmTrnSampleAgainstApproverObservationScoreController);

    AtmTrnSampleAgainstApproverObservationScoreController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleAgainstApproverObservationScoreController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstApproverObservationScoreController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.overall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;
                }
                else if (resp.data.observation_fill == 'Y') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        //value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        //value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        //value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        //value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3,val4) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if ($scope.samplechecklistverified_flag == 'Y')
                {

                 $scope.total_score = val;
            $scope.auditcreation2checklist_gid = val1;
            $scope.checklistmasteradd_gid = val2;
            $scope.observationscoresample_gid = val3;
            $scope.sampleimport_gid = val4;

            var params = {
                auditcreation_gid: auditcreation_gid,
                auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                capture_score: $scope.total_score,
                observationscoresample_gid: $scope.observationscoresample_gid,
                sampleimport_gid: $scope.sampleimport_gid
            }
            var url = 'api/AtmTrnAuditorMaker/PostAuditorUpdateSampleObservationTotalAmount';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    //$scope.txttotal_samplescore = resp.data.total_amount;
                    if (resp.data.allobservationfilled == true) {
                        $scope.allobservationfilled = true;
                        $scope.makersaveapprove = true;
                    }
                    else {
                        $scope.allobservationfilled = false;
                    }
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });

        
            }

            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;
                $scope.sampleimport_gid = val4;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,
                    sampleimport_gid: $scope.sampleimport_gid
                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //$scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }
                  $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;

                        }

                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                            if (value.checklist_verified == "Yes") {
                                value.document_verifiedradio = true;
                                value.document_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "No") {
                                value.tag_verifiedradio = true;
                                value.tag_verifiedradio1 = true;
                            }


                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverPending'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            //var assignList = [];
            //angular.forEach($scope.makercheckpointobservation_list, function (val) {

            //    if (val.checked == true) {
            //        var checklistmasteradd_gid = val.checklistmasteradd_gid;
            //        assignList.push(checklistmasteradd_gid);
            //        var checklistmaster_gid = val.checklistmaster_gid;

            //    }
            //});
            //if (assignList.length == 0) {
            //    Notify.alert('Select Atleast One Record!');
            //    return false;
            //    unlockUI();
            //}
            var params = {
                //checklistmasteradd_gid: assignList,
                //checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverPending'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                //$scope.checkall = function (selected) {

                //    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                //        val.checked = selected;
                //    });
                //}
                $scope.samplecheckpointassign = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;

                        }

                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                            if (value.checklist_verified == "Yes") {
                                value.document_verifiedradio = true;
                                value.document_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "No") {
                                value.tag_verifiedradio = true;
                                value.tag_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "Partial") {
                                value.partial_verifiedradio = true;

                            }
                            else if (value.checklist_verified == "NA") {
                                value.na_verifiedradio = true;

                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditorcheckerPending) {
            $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverPending'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstApproverObservationScoreViewController', AtmTrnSampleAgainstApproverObservationScoreViewController);

    AtmTrnSampleAgainstApproverObservationScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleAgainstApproverObservationScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstApproverObservationScoreViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = $location.search().lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                $scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            //$scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditorcheckerPending) {
            $location.url('app/AtmTrnAuditorApproverObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorapproverCompleted'))

        }


    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstCheckerObservationScoreController', AtmTrnSampleAgainstCheckerObservationScoreController);

    AtmTrnSampleAgainstCheckerObservationScoreController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams','cmnfunctionService'];

    function AtmTrnSampleAgainstCheckerObservationScoreController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstCheckerObservationScoreController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.overall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;
                }
                else if (resp.data.observation_fill == 'Y') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        //value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        //value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        //value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        //value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }

            else if($scope.samplechecklistverified_flag == 'Y')
            {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;
                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorUpdateSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //$scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
            
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //$scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }

        
        function checklist() {
            var params =
            {
                checkpointgroupadd_gid: checkpointgroupadd_gid,
                sampleimport_gid: sampleimport_gid
            }
            //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
            //lockUI();
            //SocketService.getparams(url,params).then(function (resp) {
            //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
            //    unlockUI();
            //});
            var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                    $scope.checklistcheckpoint_list[i].checked = true;

                }

                angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                    if (value.checklist_verified == "Yes") {
                        value.document_verifiedradio = true;
                        value.document_verifiedradio1 = true;
                    }
                    else if (value.checklist_verified == "No") {
                        value.tag_verifiedradio = true;
                        value.tag_verifiedradio1 = true;
                    }
                    else if (value.checklist_verified == "Partial") {
                        value.partial_verifiedradio = true;
                    }
                    else if (value.checklist_verified == "NA") {
                        value.na_verifiedradio = true;
                    }


                });
            });
        }
        
       
        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            //var assignList = [];
            //angular.forEach($scope.makercheckpointobservation_list, function (val) {

            //    if (val.checked == true) {
            //        var checklistmasteradd_gid = val.checklistmasteradd_gid;
            //        assignList.push(checklistmasteradd_gid);
            //        var checklistmaster_gid = val.checklistmaster_gid;

            //    }
            //});
            //if (assignList.length == 0) {
            //    Notify.alert('Select Atleast One Record!');
            //    return false;
            //    unlockUI();
            //}
            var params = {
                //checklistmasteradd_gid: assignList,
                //checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;

                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;

                        }

                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                           Notify. alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;

                        }

                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                            if (value.checklist_verified == "Yes") {
                                value.document_verifiedradio = true;
                                value.document_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "No") {
                                value.tag_verifiedradio = true;
                                value.tag_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "Partial") {
                                value.partial_verifiedradio = true;

                            }
                            else if (value.checklist_verified == "NA") {
                                value.na_verifiedradio = true;

                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                //$scope.checkall = function (selected) {

                //    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                //        val.checked = selected;
                //    });
                //}
                $scope.samplecheckpointassign = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditorcheckerPending) {
            $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstCheckerObservationScoreViewController', AtmTrnSampleAgainstCheckerObservationScoreViewController);

    AtmTrnSampleAgainstCheckerObservationScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleAgainstCheckerObservationScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstCheckerObservationScoreViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3))
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditorcheckerPending) {
            $location.url('app/AtmTrnAuditorCheckerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditorcheckerPending'))

        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstMakerObservationScoreViewController', AtmTrnSampleAgainstMakerObservationScoreViewController);

    AtmTrnSampleAgainstMakerObservationScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleAgainstMakerObservationScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstMakerObservationScoreViewController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}
               
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false
                

                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid,auditcreation_gid,sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
       
        $scope.back = function (auditormakerOpen) {
            $location.url('app/AtmTrnAuditorMakerObservationView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

    }

})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleAgainstObservationScoreController', AtmTrnSampleAgainstObservationScoreController);

    AtmTrnSampleAgainstObservationScoreController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleAgainstObservationScoreController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAgainstObservationScoreController';

       

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        var checklistmasteradd_gid = $scope.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();
        $scope.IsDisabled = true;
        function activate() {
            
            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                //$scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;
                }
                else if (resp.data.observation_fill == 'Y')
                {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });
           
            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });
                 
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;
        $scope.EnableDisable = function () {
            //If Button is disabled it will be enabled and vice versa.
            $scope.IsDisabled = !$scope.sample2checkpoint;
              }

        $scope.onselected = function (val, val1, val2, val3,val4) {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Observation can't be filled, Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
            if ($scope.samplechecklistverified_flag == 'Y') {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;
                $scope.checkpointgroupadd_gid = val4;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,
                    checkpointgroupadd_gid: $scope.checkpointgroupadd_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorUpdateSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //$scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
            else {


                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;
                $scope.checkpointgroupadd_gid = val4


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,
                    sampleimport_gid: sampleimport_gid,
                    checkpointgroupadd_gid: $scope.checkpointgroupadd_gid
                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        //$scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Observation can't be filled, Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            //$scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }

      
        $scope.makerinitiateapproval = function () {
           
           if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {           
                //var assignList = [];
                //angular.forEach($scope.makercheckpointobservation_list, function (val) {

                //    if (val.checked == true) {
                //        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                //        assignList.push(checklistmasteradd_gid);
                //        var checklistmaster_gid = val.checklistmaster_gid;

                //    }
                //});
                //if (assignList.length == 0) {
                //    Notify.alert('Select Atleast One Record!');
                //    return false;
                //    unlockUI();
                //}
                var params = {
                    //checklistmasteradd_gid: assignList,
                    //checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            
        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
       
      
        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
       
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        //$scope.observationquery = function () {

        //    $state.go('app.AtmTrnAuditObservationQuery')
        //}

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid,auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                           
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                           
                        }
                       else if (value.checklist_verified == "Partial") {
                            value.partial_verifiedradio = true;

                        }
                        else if (value.checklist_verified == "NA") {
                            value.na_verifiedradio = true;

                        }

                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });
                   
               
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,
                        

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                          Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                function checklist() {
                    var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                    //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                    //lockUI();
                    //SocketService.getparams(url,params).then(function (resp) {
                    //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    //    unlockUI();
                    //});
                    var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                    lockUI();
                    SocketService.getparams(url, params).then(function (resp) {
                        unlockUI();
                        $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                        for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                            $scope.checklistcheckpoint_list[i].checked = true;

                        }

                        angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                            if (value.checklist_verified == "Yes") {
                                value.document_verifiedradio = true;
                                value.document_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "No") {
                                value.tag_verifiedradio = true;
                                value.tag_verifiedradio1 = true;
                            }
                            else if (value.checklist_verified == "Partial") {
                                value.partial_verifiedradio = true;
                               
                            }
                            else if (value.checklist_verified == "NA") {
                                value.na_verifiedradio = true;
                               
                            }
                        });
                    });
                }
                $scope.overallonselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallpartialselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                $scope.overallnaselected = function (val) {

                    $scope.document_verified = val;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,
                        sampleimport_gid: sampleimport_gid,
                        checkpointgroupadd_gid: checkpointgroupadd_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                            checklist();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }
                //$scope.checkall = function (selected) {

                //    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                //        val.checked = selected;
                //    });
                //}
                $scope.samplecheckpointassign = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);

                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        //if (resp.data.status == true) {
                        //    unlockUI();
                        //    Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        //}
                        if (resp.data.status == true) {
                                unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });
                                     
                }
                $scope.samplecheckpointassignupdate = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);

                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        //if (resp.data.status == true) {
                        //    unlockUI();
                        //    Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        //}
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditormakerOpen) {
            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))

        }
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnSampleAssignedQueryController', AtmTrnSampleAssignedQueryController);

    AtmTrnSampleAssignedQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce'];

    function AtmTrnSampleAssignedQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleAssignedQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };

            var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
                unlockUI();
            });


            var url = 'api/AtmTrnSampling/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                auditcreation_gid = resp.data.auditcreation_gid
                $scope.sample_list = resp.data.sample_list

            });


            //var url = "api//";
            //SocketService.get(url).then(function (resp) {
            //    $scope.assigned_count = resp.data.assigned_count;
            //    $scope.reply_count = resp.data.reply_count;
            //    $scope.close_count = resp.data.close_count;
            //    unlockUI();
            //});


        }


        //$scope.Reply = function (val1) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //     $location.url('app.AtmTrnReplyToQuery?auditcreation_gid=' + auditcreation_gid + '&raisequery_gid=' + val1);
        //}

        $scope.Reply = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            var sampleimport_gid = $scope.sampleimport_gid;

            $location.url('app/AtmTrnSampleReplyQuery?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid);
        }

        $scope.replytoquery = function (sampleraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/replytoquery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    
                    sampleraisequery_gid: sampleraisequery_gid
                }
                var url = 'api/AtmTrnSampling/EditAssignedQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleraisequery_gid = resp.data.sampleraisequery_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        sampleimport_gid: sampleimport_gid,
                        sampleraisequery_gid: $scope.sampleraisequery_gid,
                        reply_query: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnSampling/PostReplyToQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + auditcreation_gid)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }


        //$scope.showPopover = function (raisequery_gid) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/showemployee.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        var params = {
        //            raisequery_gid: raisequery_gid
        //        }
        //        lockUI();
        //        var url = 'api/AtmTrnMyAuditTask/GetEmployeeName';
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.employee_name = resp.data.employee_name;
        //        });
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //    }
        //}


        $scope.back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnCheckpointObservation?auditcreation_gid=' + auditcreation_gid)
        }

    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSampleQueryAgainstObservationScoreController', AtmTrnSampleQueryAgainstObservationScoreController);

    AtmTrnSampleQueryAgainstObservationScoreController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnSampleQueryAgainstObservationScoreController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleQueryAgainstObservationScoreController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                //$scope.txt_overallscore = resp.data.sampleoverall_score;
                $scope.txt_percent = resp.data.sampleobservation_percentage
                if (resp.data.observation_fill == 'N') {
                    $scope.observationfillenable = false;
                    $scope.makersaveapprove = false;

                }
                else if (resp.data.observation_fill == 'Y' && lspage == "auditormakerOpen" && $scope.auditormaker_approvalflag == 'N') {
                    $scope.observationfillenable = true;
                    $scope.makersaveapprove = true;
                }
                else {
                    $scope.observationfillenable = "Disable";
                    $scope.makersaveapprove = false;
                }

                unlockUI();
            });


            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed')
                    $scope.hide = 1;
                unlockUI();
            });

            var url = 'api/AtmTrnAuditCreation/GetAudit360View';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.auditcreation_list = resp.data.auditcreation_list;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleName';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.sample_name = resp.data.sample_name;
                unlockUI();

            });
            var params = {
                auditcreation_gid: auditcreation_gid,
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;

            });
            $scope.allobservationfilled = true;
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }

        $scope.onselected = function (val, val1, val2, val3) {
            //if ($scope.openquerycount != '0') {
            //    Notify.alert("Observation can't be filled, Query is not closed", {
            //        status: 'warning',
            //        pos: 'top-center',
            //        timeout: 3000
            //    });
            //}
            //else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            
        }

        $scope.overallselected = function (val) {

            $scope.document_verified = val;
            var params = {
                auditcreation2checklist_gid: auditcreation2checklist_gid,
                document_verified: $scope.document_verified,
                checklist2checkpoint: $scope.checklist2checkpoint,
                sampleimport_gid: sampleimport_gid,
                checkpointgroupadd_gid: checkpointgroupadd_gid,


            }
            var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    checklist();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        function checklist() {
            var params =
            {
                checkpointgroupadd_gid: checkpointgroupadd_gid,
                sampleimport_gid: sampleimport_gid
            }
            //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
            //lockUI();
            //SocketService.getparams(url,params).then(function (resp) {
            //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
            //    unlockUI();
            //});
            var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                    $scope.checklistcheckpoint_list[i].checked = true;

                }

                angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                    if (value.checklist_verified == "Yes") {
                        value.document_verifiedradio = true;
                        value.document_verifiedradio1 = true;
                    }
                    else if (value.checklist_verified == "No") {
                        value.tag_verifiedradio = true;
                        value.tag_verifiedradio1 = true;
                    }

                    else if (value.checklist_verified == "Partial") {
                        value.partial_verifiedradio = true;
                       
                    }

                    else if (value.checklist_verified == "NA") {
                        value.na_verifiedradio = true;
                       
                    }


                });
            });
        }
        $scope.overallonselected = function (val) {

            $scope.document_verified = val;
            var params = {
                auditcreation2checklist_gid: auditcreation2checklist_gid,
                document_verified: $scope.document_verified,
                checklist2checkpoint: $scope.checklist2checkpoint,
                sampleimport_gid: sampleimport_gid,
                checkpointgroupadd_gid: checkpointgroupadd_gid,


            }
            var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    checklist();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        $scope.overallpartialselected = function (val) {

            $scope.document_verified = val;
            var params = {
                auditcreation2checklist_gid: auditcreation2checklist_gid,
                document_verified: $scope.document_verified,
                checklist2checkpoint: $scope.checklist2checkpoint,
                sampleimport_gid: sampleimport_gid,
                checkpointgroupadd_gid: checkpointgroupadd_gid,


            }
            var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    checklist();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        $scope.overallnaselected = function (val) {

            $scope.document_verified = val;
            var params = {
                auditcreation2checklist_gid: auditcreation2checklist_gid,
                document_verified: $scope.document_verified,
                checklist2checkpoint: $scope.checklist2checkpoint,
                sampleimport_gid: sampleimport_gid,
                checkpointgroupadd_gid: checkpointgroupadd_gid,


            }
            var url = 'api/AtmTrnAuditorMaker/PostOverallCheckpointAgainstSample';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    activate();
                    checklist();

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });
                }

            });
        }
        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }
        $scope.makersampleupdateapproval = function () {
            //var assignList = [];
            //angular.forEach($scope.makercheckpointobservation_list, function (val) {

            //    if (val.checked == true) {
            //        var checklistmasteradd_gid = val.checklistmasteradd_gid;
            //        assignList.push(checklistmasteradd_gid);
            //        var checklistmaster_gid = val.checklistmaster_gid;

            //    }
            //});
            //if (assignList.length == 0) {
            //    Notify.alert('Select Atleast One Record!');
            //    return false;
            //    unlockUI();
            //}
            var params = {
                //checklistmasteradd_gid: assignList,
                //checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.makerinitiateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill))
        }
        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        //if (resp.data.status == true) {
                        //    unlockUI();
                        //    Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                        //    $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))
                        //}
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });



                }
                $scope.samplecheckpointassignupdate = function () {
                    //var assignList = [];
                    //angular.forEach($scope.checklistcheckpoint_list, function (val) {

                    //    if (val.checked == true) {
                    //        var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                    //        assignList.push(checkpointgroupadd_gid);
                    //    }
                    //});
                    //if (assignList.length == 0) {
                    //    Notify.alert('Select Atleast One Record!');
                    //    return false;
                    //    unlockUI();
                    //}
                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');
                    });

                
            }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))

        }
        $scope.back = function (auditormakerOpen) {
            $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen'))

        }

        //$scope.sampleobservationscoreview = function (checkpointgroupadd_gid, auditcreation2checklist_gid, sampleimport_gid, auditcreation_gid) {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/sampleobservationscoreview.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'lg'
        //    });
        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {
        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };
        //        var params =
        //            {
        //                checkpointgroupadd_gid: checkpointgroupadd_gid,
        //                sampleimport_gid: sampleimport_gid
        //            }
        //        //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
        //        //lockUI();
        //        //SocketService.getparams(url,params).then(function (resp) {
        //        //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
        //        //    unlockUI();
        //        //});
        //        var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
        //        lockUI();
        //        SocketService.getparams(url, params).then(function (resp) {
        //            unlockUI();
        //            $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
        //            for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
        //                $scope.checklistcheckpoint_list[i].checked = true;

        //            }

        //            angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


        //                if (value.checklist_verified == "Yes") {
        //                    value.document_verifiedradio = true;
        //                    value.document_verifiedradio1 = true;
        //                }
        //                else if (value.checklist_verified == "No") {
        //                    value.tag_verifiedradio = true;
        //                    value.tag_verifiedradio1 = true;
        //                }


        //            });
        //        });

        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };

        //        $scope.onselected = function (val, val1) {

        //            $scope.document_verified = val;
        //            $scope.sample2checkpoint = val1;
        //            var params = {
        //                auditcreation2checklist_gid: auditcreation2checklist_gid,
        //                document_verified: $scope.document_verified,
        //                sample2checkpoint: $scope.sample2checkpoint,


        //            }
        //            var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
        //            lockUI();
        //            SocketService.post(url, params).then(function (resp) {
        //                unlockUI();
        //                if (resp.data.status == true) {
        //                    $scope.txttotal_score = resp.data.total_amount;

        //                    Notify.alert(resp.data.message, {
        //                        status: 'success',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    activate();

        //                }
        //                else {
        //                    Notify.alert(resp.data.message, {
        //                        status: 'danger',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                }

        //            });
        //        }

        //        $scope.checkall = function (selected) {

        //            angular.forEach($scope.checklistcheckpoint_list, function (val) {
        //                val.checked = selected;
        //            });
        //        }
        //        $scope.samplecheckpointassign = function () {
        //            var assignList = [];
        //            angular.forEach($scope.checklistcheckpoint_list, function (val) {

        //                if (val.checked == true) {
        //                    var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
        //                    assignList.push(checkpointgroupadd_gid);
        //                    //var checklistmaster_gid = val.checklistmaster_gid;

        //                }
        //            });
        //            if (assignList.length == 0) {
        //                Notify.alert('Select Atleast One Record!');
        //                return false;
        //                unlockUI();
        //            }
        //            var params = {
        //                checkpointgroupadd_gid: assignList,
        //                sampleimport_gid: sampleimport_gid,
        //                auditcreation_gid: auditcreation_gid

        //            }

        //            var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
        //            SocketService.post(url, params).then(function (resp) {
        //                lockUI();
        //                if (resp.data.status == true) {
        //                    unlockUI();
        //                    Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
        //                    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
        //                }
        //                else {
        //                    Notify.alert('Select Atleast One..!!', 'warning')
        //                }
        //                $modalInstance.close('closed');
        //            });



        //        }
        //    }
        //}

        //$scope.back = function (auditormakerOpen) {
        //    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')

        //}
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnSampleQueryController', AtmTrnSampleQueryController);

    AtmTrnSampleQueryController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', 'SweetAlert', '$route', '$sce', '$anchorScroll', 'DownloaddocumentService', 'cmnfunctionService'];

    function AtmTrnSampleQueryController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, SweetAlert, $route, $sce, $anchorScroll, DownloaddocumentService, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleQueryController';
        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.lsobservationfill_flag = searchObject.lsobservationfill_flag;


        activate();

        function activate() {
            $scope.hide = 0;
            lockUI();
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };



            //var url = 'api/AtmTrnMyAuditTaskAuditee/closesamplequerysummary';
            //lockUI();
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.closequerysample_list = resp.data.closequerysample_list;
            //    unlockUI();
            //});
            var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.approval_status = resp.data.approval_status;
                if ($scope.approval_status == 'Completed') {
                    $scope.hide = 1;
                }

                unlockUI();
            });

            $scope.showdiv = true;

            var url = 'api/SystemMaster/GetEmployeelist';
            SocketService.get(url).then(function (resp) {
                $scope.cboemployee_list = resp.data.employeelist;
            });

            var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            });

            var params = {
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnSampling/GetSampleName';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.sampleimport_gid = resp.data.sampleimport_gid;
                $scope.txtsample_name = resp.data.sample_name;
            });
            $scope.lspage = $location.search().lspage;
            var lspage = $scope.lspage;

            var url = 'api/AtmTrnAuditorMaker/RaisedsampleQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.samplequerydatalist = resp.data.samplequerydata;

                $scope.close_disabled = false;
                if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' ||
                    lspage == 'auditeecheckeropen' || lspage == 'auditeecheckerpending' || lspage == 'auditeecheckerhold' || lspage == 'auditeecheckerclosed' || lspage == 'auditeecheckertagged' ||
                    lspage == 'auditeecheckercompleted')) {
                    $scope.close_disabled = true;
                }

            });

            if (lspage != "auditormakerOpen" && $scope.lsobservationfill_flag != "Y") {
                $scope.lsobservationfill_flag = "N";
            }
            if ((lspage == 'auditeemakeropen' || lspage == 'auditeemakerhold' || lspage == 'auditeemakerclosed' || lspage == 'auditeemakertagged' || lspage == 'auditeemakercompleted' || lspage == 'auditeemakertagged')) {
                $scope.lsobservationfill_flag = "Y";
            }
        }

        $scope.refresh = function () {
            lockUI();
            activate();
        }



        $scope.btnraisequery = function () {
            $scope.showraisequery = true;
            $scope.showdiv = false;
        }
        $scope.Cancel = function () {
            $scope.txtquery_title = "";
            $scope.txtquery_desc = "";
            $scope.cboqueryto = "";
            $scope.showraisequery = false;
            $scope.showdiv = true;
        }
        $scope.submit = function () {
            var query_toemployeegid = "";
            var query_toname = "";
            if ($scope.cboqueryto) {
                query_toemployeegid = $scope.cboqueryto.employee_gid;
                query_toname = $scope.cboqueryto.employee_name;
            }

            var params = {
                sampleimport_gid: sampleimport_gid,
                description: $scope.txtquery_desc,
                auditcreation_gid: auditcreation_gid,
                query_title: $scope.txtquery_title,
                query_to: query_toemployeegid,
                query_toname: query_toname,
            }

            var url = 'api/AtmTrnSampling/PostRaiseQuery';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    $scope.txtquery_title = "";
                    $scope.txtquery_desc = "";
                    $scope.cboqueryto = "";

                    activate();
                    $scope.showdiv = false;
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });

            $modalInstance.close('closed');

        }

        $scope.closesample_query = function (sampleraisequery_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/closeremarks.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.closesample_submit = function () {

                    var params = {
                        sampleraisequery_gid: sampleraisequery_gid,
                        close_remarks: $scope.txtclosequeries
                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostcloseSamplequery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }


        $scope.btnulpoad = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/documentupload.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.auditcreation_gid = auditcreation_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.downloadall = function (val1, val2) {

                    for (var i = 0; i < val2.length; i++) {
                        //  console.log(array[i]);
                        DownloaddocumentService.Downloaddocument(val1, val2[i]);
                    }

                }

                $scope.upload = function (val, val1, name) {


                    var frm = new FormData(); //docchecklist

                    for (var i = 0; i < val.length; i++) {
                        var item = {
                            name: val[i].name,
                            file: val[i]
                        };
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[i].name, "documentformatonly");

                        if (IsValidExtension == false) {
                            Notify.alert("File format is not supported..!", {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            return false;
                        }
                    }

                    // var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "");

                    // if (IsValidExtension == false) {
                    //     Notify.alert("File format is not supported..!", {
                    //         status: 'danger',
                    //         pos: 'top-center',
                    //         timeout: 3000
                    //     });
                    //     return false;
                    // }

                    // var auditcreation_gid = $scope.auditcreation_gid;

                    // var item = {
                    //     name: val[0].name,
                    //     file: val[0]
                    // };

                    // var frm = new FormData();
                    // frm.append('fileupload', item.file);
                    // frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('project_flag', "Default");

                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnSampling/QueryDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var url = "api/AtmTrnSampling/GetDocUploadlist"
                            var param = {
                                auditcreation_gid: auditcreation_gid
                            };
                            SocketService.getparams(url, param).then(function (resp) {
                                $scope.lsfilename = resp.data.filename;
                                $scope.lsfilepath = resp.data.filepath;
                                $scope.DocUploadlogdtl = resp.data.DocUploadlogdtl;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                    activate();
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });

                            $modalInstance.close('closed');

                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }

                    });

                }

                var param = {
                    auditcreation_gid: auditcreation_gid
                };

                var url = "api/AtmTrnSampling/GetDocUploadlist"

                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lsfilename = resp.data.filename;
                    $scope.lsfilepath = resp.data.filepath;
                    $scope.DocUploadlogdtl = resp.data.DocUploadlogdtl;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }
                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

            }
        }

        //$scope.closesample_query = function (sampleraisequery_gid) {

        //    var params = {
        //        sampleraisequery_gid: sampleraisequery_gid, 
        //        closing_description: $scope.txtdescription

        //    }

        //    var url = 'api/AtmTrnMyAuditTaskAuditee/closequerysample';
        //    lockUI();
        //    SocketService.post(url, params).then(function (resp) {
        //        unlockUI();
        //        if (resp.data.status == true) {
        //            Notify.alert(resp.data.message, {
        //                status: 'success',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid)
        //        }

        //        else {
        //            Notify.alert(resp.data.message, {
        //                status: 'warning',
        //                pos: 'top-center',
        //                timeout: 3000
        //            });
        //        }
        //    });
        //}


        $scope.viewresponse_samplequery = function (sampleraisequery_gid) {
            var lsreplied_by = "";
            if (lspage == "auditormakerOpen") {
                lsreplied_by = 'Auditor Maker';
            }
            else if (lspage == "auditorapproveropen") {
                lsreplied_by = 'Auditor Approver';
            }
            else if (lspage == "auditorcheckerOpen") {
                lsreplied_by = 'Auditor Checker';
            }
            else if (lspage == "auditeemakeropen") {
                lsreplied_by = 'Auditee Maker';
            }
            else if (lspage == "auditeecheckeropen") {
                lsreplied_by = 'Auditee Checker';
            }
            else if (lspage == "auditeemakertagged") {
                lsreplied_by = 'Tagged User';
            }
            var modalInstance = $modal.open({
                templateUrl: '/response_view.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', 'DownloaddocumentService'];
            function ModalInstanceCtrl($scope, $modalInstance, DownloaddocumentService) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleraisequery_gid: sampleraisequery_gid,
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                    unlockUI();
                });

                $scope.replytoquery = function () {
                    var params = {
                        auditcreation_gid: auditcreation_gid,
                        sampleimport_gid: sampleimport_gid,
                        remarks: $scope.txtqueries,
                        sampleraisequery_gid: sampleraisequery_gid,
                        replied_by: lsreplied_by
                    }
                    lockUI();
                    var url = "api/AtmTrnMyAuditTaskAuditee/PostSampleQuerydetail";
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            var url = "api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist";
                            var param = {
                                sampleraisequery_gid: sampleraisequery_gid
                            };
                            SocketService.getparams(url, param).then(function (resp) {
                                unlockUI();
                                $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                unlockUI();
                            });
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                        $scope.txtqueries = "";
                    });
                }

                $scope.auditcreation_gid = auditcreation_gid;
                $scope.sampleraisequery_gid = sampleraisequery_gid;
                $scope.sampleimport_gid = sampleimport_gid;

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleraisequery_gid: sampleraisequery_gid,
                    sampleimport_gid: sampleimport_gid
                }

                $scope.uploaddocument = function (val, val1, name) {
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[0].name, "Default");


                    var frm = new FormData(); //docchecklist



                    for (var i = 0; i < val.length; i++) {
                        var item = {
                            name: val[i].name,
                            file: val[i]
                        };
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val[i].name, "documentformatonly");



                        if (IsValidExtension == false) {
                            Notify.alert("File format is not supported..!", {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            return false;
                        }
                    }

                    // if (IsValidExtension == false) {
                    //     Notify.alert("File format is not supported..!", {
                    //         status: 'danger',
                    //         pos: 'top-center',
                    //         timeout: 3000
                    //     });
                    //     return false;
                    // }

                    // var auditcreation_gid = $scope.auditcreation_gid;
                    // var sampleraisequery_gid = $scope.sampleraisequery_gid;
                    // var sampleimport_gid = $scope.sampleimport_gid;

                    // var item = {
                    //     name: val[0].name,
                    //     file: val[0]
                    // };

                    // var frm = new FormData();
                    // frm.append('fileupload', item.file);
                    // frm.append('file_name', item.name);
                    frm.append('document_name', $scope.documentname);
                    frm.append('document_title', $scope.txtdocument_title);
                    frm.append('auditcreation_gid', $scope.auditcreation_gid);
                    frm.append('sampleraisequery_gid', $scope.sampleraisequery_gid);
                    frm.append('sampleimport_gid', $scope.sampleimport_gid);
                    frm.append('project_flag', "Default");


                    $scope.uploadfrm = frm;
                    var url = 'api/AtmTrnMyAuditTaskAuditee/ResponseDocUpload';
                    lockUI();
                    SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                        $("#addupload").val('');
                        $scope.txtdocument_title = '';
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Document Uploaded Successfully..!!', 'success')

                            var param = {
                                sampleraisequery_gid: sampleraisequery_gid
                            };

                            var url = "api/AtmTrnMyAuditTaskAuditee/GetSampleQuerydetaillist"

                            SocketService.getparams(url, param).then(function (resp) {

                                $scope.SampleQuerydetaillist = resp.data.SampleQuerydetaillist;
                                if (resp.data.status == true) {
                                    Notify.alert(resp.data.message, {
                                        status: 'success',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }
                                else {
                                    Notify.alert(resp.data.message, {
                                        status: 'danger',
                                        pos: 'top-center',
                                        timeout: 3000
                                    });
                                }

                                unlockUI();

                            });


                        }
                        else {
                            unlockUI();
                            Notify.alert('File Format Not Supported!')

                        }
                        //alert('Document Uploaded Successfully..!!', 'success')


                    });

                }


                $scope.downloadsdocument = function (val1, val2) {
                    DownloaddocumentService.Downloaddocument(val1, val2);
                    //var phyPath = val1;
                    //console.log(val1)
                    //var relPath = phyPath.split("EMS");
                    //var relpath1 = relPath[1].replace("\\", "/");
                    //var hosts = window.location.host;
                    //var prefix = location.protocol + "//";
                    //var str = prefix.concat(hosts, relpath1);
                    //var link = document.createElement("a");
                    //var name = val2.split(".")
                    //link.download = val2;
                    //var uri = str;
                    //link.href = uri;
                    //link.click();
                }

                $scope.documentviewer = function (val1, val2) {
                    lockUI();
                    var IsValidExtension = cmnfunctionService.fnCheckValidDocType(val2, "DocumentViewerFormat");
                    if (IsValidExtension == false) {
                        Notify.alert("View is not supported for this format..!", {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                        return false;
                    }
                    DownloaddocumentService.DocumentViewer(val1, val2);
                }

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

            }
        }

        //$scope.Back = function (val, val1) {
        //    var auditcreation_gid = $scope.auditcreation_gid;
        //    var sampleimport_gid = $scope.sampleimport_gid;
        //    $location.url('app/AtmTrnMyAuditTaskAuditeeView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid)
        //}


        $scope.Back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            var sampleimport_gid = $scope.sampleimport_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            if (lspage == 'auditormakerOpen') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditormakerHold') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditormakerClosed') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditormakerTagged') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditormakerCompleted') {
                $location.url('app/AtmTrnAuditorMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerOpen') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerPending') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerClosed') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerTagged') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerHold') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorcheckerCompleted') {
                $location.url('app/AtmTrnAuditorCheckerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproveropen') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproverPending') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproverHold') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproverClosed') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproverTagged') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditorapproverCompleted') {
                $location.url('app/AtmTrnAuditorApproverView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeemakeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeemakerhold') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeemakerclosed') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeemakertagged') {
                $location.url('app/AtmTrnTaggedAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeemakercompleted') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeMakerView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckeropensummary') {
                $location.url('app/AtmTrnMyAuditeeTaskCheckerAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckeropen') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckerpending') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckerhold') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckerclosed') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckertagged') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else if (lspage == 'auditeecheckercompleted') {
                $location.url('app/AtmTrnMyAuditTaskAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            //else if (lspage == 'audit360view') {
            //    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
            //    $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            //}
            else if (lspage == 'auditclosed') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'auditcompleted') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'initiateaudit') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'auditapproved') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'audithold') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'auditrejected') {
                //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
                $location.url('app/AtmTrnAudit360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

            }
            else if (lspage == 'Mypendingapproval') {
                $location.url('app/AtmTrnMyAuditApprover360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))

                //$location.url('app/AtmTrnMyAuditApprover360View?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage);
            }
            else if (lspage == 'Myapprovedaudits') {
                $location.url('app/AtmTrnMyAuditApprover360View?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + + '&checklistmaster_gid=' + checklistmaster_gid + '&lspage=' + lspage));
            }
            else {

            }

        }
    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnSampleReplyQueryController', AtmTrnSampleReplyQueryController);

    AtmTrnSampleReplyQueryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', '$route', 'ngTableParams', '$sce'];

    function AtmTrnSampleReplyQueryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, $route, ngTableParams, $sce) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSampleReplyQueryController';
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.sampleimport_gid = $location.search().sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            }

            var url = 'api/AtmTrnSampling/GetRepliedQuerySummary';
            SocketService.getparams(url, params).then(function (resp) {
                $scope.SampleReplyQueryList = resp.data.SampleReplyQueryList;
                unlockUI();
            });

            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});




            //var url = "api//";
            //SocketService.get(url).then(function (resp) {
            //    $scope.assigned_count = resp.data.assigned_count;
            //    $scope.reply_count = resp.data.reply_count;
            //    $scope.close_count = resp.data.close_count;
            //    unlockUI();
            //});


        }
        $scope.Assigned = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            var sampleimport_gid = $scope.sampleimport_gid;
            $location.url('app/AtmTrnSampleAssignedQuery?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid);
        }


        $scope.back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;

            $location.url('app/AtmTrnCheckpointObservation?auditcreation_gid=' + auditcreation_gid)

        }



    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSamplingController', AtmTrnSamplingController);

    AtmTrnSamplingController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnSamplingController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSamplingController';
        
        var auditcreation_gid = $location.search().auditcreation_gid;
        //$scope.auditcreation_gid = $location.search().auditcreation_gid;
        activate();
        function activate() {

            var params = {
                auditcreation_gid: auditcreation_gid,
                
            };


            var url = 'api/AtmTrnAuditCreation/GetSample';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI()
                $scope.sample_list = resp.data.sample_list
                
            });
                 
        }
               
        $scope.btntaguser = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: $scope.sampleimport_gid,
                        auditcreation_gid: auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

                //var params = {
                //    auditcreation_gid: auditcreation_gid,

                //};

                //$location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)

                //var url = 'api/AtmTrnSampling/GetSample';
                //SocketService.getparams(url, params).then(function (resp) {
                //    unlockUI()
                //    auditcreation_gid = resp.data.auditcreation_gid
                //    $scope.sample_list = resp.data.sample_list

                //});

            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        //$scope.raisequery = function () {
        //    var modalInstance = $modal.open({
        //        templateUrl: '/raisequery.html',
        //        controller: ModalInstanceCtrl,
        //        backdrop: 'static',
        //        keyboard: false,
        //        size: 'md'
        //    });

        //    ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
        //    function ModalInstanceCtrl($scope, $modalInstance) {

        //        $scope.ok = function () {
        //            $modalInstance.close('closed');
        //        };

        //        var url = 'api/SystemMaster/GetEmployeelist';
        //        lockUI();
        //        SocketService.get(url).then(function (resp) {
        //            $scope.employee_list = resp.data.employeelist;
        //            unlockUI();
        //        });

        //        var url = 'api/vertical/vertical';
        //        lockUI();
        //        SocketService.get(url).then(function (resp) {
        //            $scope.vertical = resp.data.vertical_list;
        //            unlockUI();
        //        });

        //        $scope.submit = function () {

        //            var params = {
        //                employee_gid: $scope.cboemployee.employee_gid,
        //                employee_name: $scope.cboemployee.employee_name,
        //                vertical_gid: $scope.cbovertical.vertical_gid,
        //                vertical_name: $scope.cbovertical.vertical_name
        //            }

        //            //var url = 'api//';
        //            lockUI();
        //            SocketService.post(url, params).then(function (resp) {
        //                unlockUI();
        //                if (resp.data.status == true) {

        //                    Notify.alert(resp.data.message, {
        //                        status: 'success',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });
        //                    $modalInstance.close('closed');
        //                    activate();
        //                }
        //                else {
        //                    Notify.alert(resp.data.message, {
        //                        status: 'warning',
        //                        pos: 'top-center',
        //                        timeout: 3000
        //                    });

        //                }
        //            });

        //            $modalInstance.close('closed');

        //        }

        //    }
        //}


        $scope.raisequery = function (sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        employelist: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnSampling?auditcreation_gid=' + val1)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        
        $scope.view = function ( val1) {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnSamplingView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + val1)
        }


        $scope.back = function (val) {
            $state.go('app.AtmTrnMyAuditTaskAuditeeSummary');
        }

    }

})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnSamplingViewController', AtmTrnSamplingViewController);

    AtmTrnSamplingViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams'];

    function AtmTrnSamplingViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnSamplingViewController';

        var sampleimport_gid = $location.search().sampleimport_gid;
        $scope.auditcreation_gid = $location.search().auditcreation_gid;
        var auditcreation_gid = $location.search().auditcreation_gid;
        activate();
        function activate() {
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            //var url = 'api/AtmTrnSampling/GetSampleAuditor';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    $scope.sample_list = resp.data.sample_list

            //});


            //var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    if (resp.data.status == true) {
            //        $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
            //        $scope.getsampledata = $scope.SampleDynamicdata.filter(a => a.sampleimport_gid === sampleimport_gid);
            //        var test = [];
            //        var res = [];
            //        $scope.getsampledata.forEach(element => {
            //            element.forEach(el => {
            //                res.push(el);
            //            });
            //        }); 
            //        console.log( $scope.getsampledata,simplifyArray);
            //    }  
            //});

            var url = 'api/AtmTrnSampling/GetEmployeeName';
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.employee_name = resp.data.employee_name;
            });

            var url = 'api/AtmTrnSampling/GetSampleView';
            var params = {
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txtsample_name = resp.data.sample_name,
                $scope.txtsamfin_code = resp.data.samfin_code,
                $scope.txtsamagro_code = resp.data.samagro_code,
                $scope.txtcodecreation_date = resp.data.codecreation_date,
                $scope.txtfield1 = resp.data.field1,
                $scope.txtfield2 = resp.data.field2,
                $scope.txtfield3 = resp.data.field3,
                $scope.txtfield4 = resp.data.field4,
                $scope.txtfield5 = resp.data.field5,
                $scope.txtfield6 = resp.data.field6,
                $scope.txtfield7 = resp.data.field7,
                $scope.txtfield8 = resp.data.field8,
                $scope.txtfield9 = resp.data.field9,
                $scope.txtfield10 = resp.data.field10,
                  unlockUI();
            });



        }

        $scope.back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnAuditorMakerSummary?auditcreation_gid=' + auditcreation_gid)

        }

        $scope.Back = function () {
            var auditcreation_gid = $scope.auditcreation_gid;
            $location.url('app/AtmTrnAuditCreationView?auditcreation_gid=' + auditcreation_gid)

        }

    }

})();
(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnTaggedAuditeeObservationScoreViewController', AtmTrnTaggedAuditeeObservationScoreViewController);

    AtmTrnTaggedAuditeeObservationScoreViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnTaggedAuditeeObservationScoreViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnTaggedAuditeeObservationScoreViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = $scope.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.observationscoresample_gid = searchObject.observationscoresample_gid;
        var observationscoresample_gid = $scope.observationscoresample_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        $scope.data = {};

        activate();

        function activate() {

            var url = 'api/AtmTrnAuditCreation/SampleObservationScore';
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid,
                observationscoresample_gid: observationscoresample_gid

            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.openquerycount = resp.data.openquerycount,
                $scope.status_flag = resp.data.status_flag,
                $scope.DBobservation_score = resp.data.sampleobservation_score,
                $scope.txttotal_score = $scope.DBobservation_score,
                $scope.observationfill = resp.data.observation_fill,
                $scope.auditormaker_approvalflag = resp.data.auditormaker_approvalflag,
               $scope.samplechecklistverified_flag = resp.data.samplechecklistverified_flag,
                $scope.samplecapture_field = resp.data.samplecapture_field,
                $scope.txt_percent = resp.data.sampleobservation_percentage,
                //if (resp.data.observation_fill == 'N') {
                //    $scope.observationfillenable = false;
                //    $scope.makersaveapprove = false;
                //}
                //else if (resp.data.observation_fill == 'Y') {
                //    $scope.observationfillenable = true;
                //    $scope.makersaveapprove = true;
                //}

                    $scope.observationfillenable = "Disable";
                $scope.makersaveapprove = false


                unlockUI();
            });

            var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };
            var url = 'api/AtmTrnAuditorMaker/AuditorSampleView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {


                    if (value.capture_field == "Yes") {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_field == "No") {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_field == "Partial") {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_field == "NA") {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_field == "") {
                        $scope.allobservationfilled = false;
                    }
                });
            });
        }
        $scope.allobservationfilled = true;

        $scope.onselected = function (val, val1, val2, val3) {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                $scope.total_score = val;
                $scope.auditcreation2checklist_gid = val1;
                $scope.checklistmasteradd_gid = val2;
                $scope.observationscoresample_gid = val3;


                var params = {
                    auditcreation_gid: auditcreation_gid,
                    auditcreation2checklist_gid: $scope.auditcreation2checklist_gid,
                    checklistmasteradd_gid: $scope.checklistmasteradd_gid,
                    capture_score: $scope.total_score,
                    observationscoresample_gid: $scope.observationscoresample_gid,

                }
                var url = 'api/AtmTrnAuditorMaker/PostAuditorSampleObservationTotalAmount';
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    if (resp.data.status == true) {
                        $scope.txttotal_samplescore = resp.data.total_amount;
                        if (resp.data.allobservationfilled == true) {
                            $scope.allobservationfilled = true;
                            $scope.makersaveapprove = true;
                        }
                        else {
                            $scope.allobservationfilled = false;
                        }
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        activate();

                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }

                });

            }
        }


        $scope.submitobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                lockUI();
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var auditcreation2checklist_gid = val.auditcreation2checklist_gid;
                        assignList.push(auditcreation2checklist_gid);

                    }
                });

                var params = {
                    auditcreation2checklist_gid: assignList,
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnAuditorMaker/PostAuditorMakerCheckpointObservation';
                SocketService.post(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });

                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };

                        var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                            $scope.txttotal_score = resp.data.total_score;

                            for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                                $scope.makercheckpointobservation_list[i].checked = true;

                            }
                            $scope.allobservationfilled = true;
                            angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                                if (value.capture_score == value.yes_score) {
                                    value.yes_radio = true;
                                    value.yes_radio1 = true;
                                }
                                else if (value.capture_score == value.no_score) {
                                    value.no_radio = true;
                                    value.no_radio1 = true;
                                }
                                else if (value.capture_score == value.partial_score) {
                                    value.partialscore_radio = true;
                                    value.partialscore_radio1 = true;
                                }
                                else if (value.capture_score == value.na_score) {
                                    value.nascore_radio = true;
                                    value.nascore_radio1 = true;
                                }
                                else if (value.capture_score == "") {
                                    $scope.allobservationfilled = false;

                                }

                            });
                            unlockUI();
                        });
                    }
                    else {
                        Notify.alert(resp.data.message, {
                            status: 'danger',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        unlockUI();
                    }
                    $scope.txttotal_score = "";
                });
            }


        }

        $scope.fillobservation = function () {
            if ($scope.openquerycount != '0') {
                Notify.alert("Observation can't be filled, Query is not closed", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var modalInstance = $modal.open({
                    templateUrl: '/warningObservation.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'lg'
                });

                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };

                    $scope.btnproceed = function () {
                        var params = {
                            auditcreation_gid: auditcreation_gid
                        };
                        var url = 'api/AtmTrnAuditCreation/observationfill';
                        SocketService.getparams(url, params).then(function (resp) {
                            if (resp.data.status == true) {
                                showobservationoption();
                            }
                        });
                        $modalInstance.close('closed');
                    }
                }
            }
        }

        function showobservationoption() {
            $scope.observationfillenable = true;
        }


        $scope.makerinitiateapproval = function () {

            if ($scope.samplecapture_field != '0') {
                Notify.alert("Sample Observation score can't be filled", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });
            }
            else {
                var assignList = [];
                angular.forEach($scope.makercheckpointobservation_list, function (val) {

                    if (val.checked == true) {
                        var checklistmasteradd_gid = val.checklistmasteradd_gid;
                        assignList.push(checklistmasteradd_gid);
                        var checklistmaster_gid = val.checklistmaster_gid;

                    }
                });
                if (assignList.length == 0) {
                    Notify.alert('Select Atleast One Record!');
                    return false;
                    unlockUI();
                }
                var params = {
                    checklistmasteradd_gid: assignList,
                    checklistmaster_gid: checklistmaster_gid,
                    sampleimport_gid: sampleimport_gid,
                    auditcreation_gid: auditcreation_gid

                }

                var url = 'api/AtmTrnAuditCreation/PostSampleAssign';
                SocketService.post(url, params).then(function (resp) {
                    lockUI();
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Sample Observation score Saved Successfully!', 'success');
                        $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                    }
                    else {
                        Notify.alert('Select Atleast One..!!', 'warning')
                    }

                });
            }
        }

        $scope.makersampleupdateapproval = function () {
            var assignList = [];
            angular.forEach($scope.makercheckpointobservation_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid,
                sampleimport_gid: sampleimport_gid,
                auditcreation_gid: auditcreation_gid

            }

            var url = 'api/AtmTrnAuditCreation/PostSampleAssignUpdate';
            SocketService.post(url, params).then(function (resp) {
                lockUI();
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert('Sample Observation score Saved Successfully!', 'success');
                    $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }
        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }
        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }


        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.lblcheckpoint_description = checkpoint_description;
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.hide = 0;
                var params = {
                    auditcreation_gid: auditcreation_gid
                };
                var url = 'api/AtmTrnAuditorMaker/GetSampleResponseQuery';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.approval_status = resp.data.approval_status;
                    if ($scope.approval_status == 'Completed') {
                        $scope.hide = 1;
                    }

                    unlockUI();
                });
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {



                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }



                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }

        }

        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            location.reload();
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnAudit360View?auditcreation_gid=' + val1 + '&checklistmaster_gid=' + val2 + '&sampleimport_gid=' + val3)
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }

        $scope.observationremarks = function (auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/observationremarksupdate.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid,
                    auditcreation_gid: auditcreation_gid

                }

                $scope.remark_submit = function () {

                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        auditcreation_gid: auditcreation_gid,
                        observation_remarks: $scope.txtremarks
                    }

                    var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarks';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }
                    });
                }

                var param = {
                    auditcreation2checklist_gid: auditcreation2checklist_gid
                }

                var url = 'api/AtmTrnAuditorMaker/AuditObservatioRemarksview';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.observationremarkslog_data = resp.data.myauditormaker_list;
                    unlockUI();
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.observationquery = function () {

            $state.go('app.AtmTrnAuditObservationQuery')
        }

        $scope.samplequery = function (index) {
            // var auditcreation_gid = $scope.auditcreation_gid; 
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage + '&lsobservationfill_flag=' + $scope.observationfill)
        }
        $scope.observationcheckpointsample = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid, sampleimport_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        sampleimport_gid: sampleimport_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmTrnAuditorMaker/GetSampleToCheckpoint';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;

                    }

                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {


                        if (value.checklist_verified == "Yes") {
                            value.document_verifiedradio = true;
                            //value.document_verifiedradio1 = true;
                        }
                        else if (value.checklist_verified == "No") {
                            value.tag_verifiedradio = true;
                            //value.tag_verifiedradio1 = true;
                        }


                    });
                });

                var url = 'api/AtmTrnAuditorMaker/GetAuditorSampleFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_flag = resp.data.sample_flag;
                    unlockUI();

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.sample2checkpoint = val1;


                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        sample2checkpoint: $scope.sample2checkpoint,
                        auditcreation_gid: auditcreation_gid,


                    }
                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

                $scope.checkall = function (selected) {

                    angular.forEach($scope.checklistcheckpoint_list, function (val) {
                        val.checked = selected;
                    });
                }
                $scope.samplecheckpointassign = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssign';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
                $scope.samplecheckpointassignupdate = function () {
                    var assignList = [];
                    angular.forEach($scope.checklistcheckpoint_list, function (val) {

                        if (val.checked == true) {
                            var checkpointgroupadd_gid = val.checkpointgroupadd_gid;
                            assignList.push(checkpointgroupadd_gid);
                            //var checklistmaster_gid = val.checklistmaster_gid;

                        }
                    });
                    if (assignList.length == 0) {
                        Notify.alert('Select Atleast One Record!');
                        return false;
                        unlockUI();
                    }
                    var params = {
                        checkpointgroupadd_gid: assignList,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                    }

                    var url = 'api/AtmTrnAuditorMaker/PostSampleCheckpointAssignUpdate';
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Sample Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert('Select Atleast One..!!', 'warning')
                        }
                        $modalInstance.close('closed');
                    });

                }
            }
        }
        $scope.dynamicsamplescore = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnSampleAgainstObservationScore?auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3)

        }
        $scope.back = function (auditeemakeropen) {
            $location.url('app/AtmTrnTaggedAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + sampleimport_gid + '&taggeduser_gid=' + 'undefined' + '&lspage=' + 'auditeemakertagged'))

        }

        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('AtmTrnTaggedAuditeeSummaryController', AtmTrnTaggedAuditeeSummaryController);

    AtmTrnTaggedAuditeeSummaryController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$filter', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnTaggedAuditeeSummaryController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $filter, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnTaggedAuditeeSummaryController';

        //$scope.lspage = $location.search().lspage;
        //var lspage = $scope.lspage;
        
        activate();
        function activate() {

           
            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskAuditeeMaker';
            lockUI();
            SocketService.get(url).then(function (resp) {
                $scope.myaudittaskauditee_list = resp.data.myaudittaskauditee_list;
                $scope.employee_gid = resp.data.employee_gid;
                unlockUI();

            });

            var url = 'api/AtmTrnMyAuditTaskAuditee/GetMyAuditTaskCounts';
            SocketService.get(url).then(function (resp) {
                unlockUI()
                $scope.auditsonhold_count = resp.data.auditsonhold_count;
                $scope.closedaudit_count = resp.data.closedaudit_count;
                $scope.openaudit_count = resp.data.openaudit_count;
                $scope.taggedsample_count = resp.data.taggedsample_count;
                $scope.completed_count = resp.data.completedaudit_count;
                $scope.pendingapproval_count = resp.data.pendingapproval_count;
            });

            
        }

        $scope.auditee_maker = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.auditee_checker = function () {
            $location.url('app/AtmTrnMyAuditeeCheckerSummary')
        }

        $scope.open_audit = function () {
            $location.url('app/AtmTrnMyAuditTaskAuditeeSummary')
        }

        $scope.hold_audit = function () {
            $location.url('app/AtmTrnHoldAuditeeSummary')
        }

        $scope.closed_audit = function () {
            $location.url('app/AtmTrnClosedAuditeeSummary')
        }

        $scope.tagged_items = function () {
            $location.url('app/AtmTrnTaggedAuditeeSummary')
        }

        $scope.completed_audit = function () {
            $location.url('app/AtmTrnCompletedAuditeeSummary')
        }

        $scope.viewtask = function (val, val1,val2) {
            $location.url('app/AtmTrnTaggedAuditeeView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&sampleimport_gid=' + val1  + '&taggeduser_gid=' + val2 + '&lspage=auditeemakertagged'))
        }

       

        $scope.raisequery = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnMyAuditTaskAuditee/EditMyAuditTaskAuidtee';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.auditcreation_gid = resp.data.auditcreation_gid

                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });



                $scope.submit = function () {

                    var params = {
                        auditcreation_gid: $scope.auditcreation_gid,
                        employe: $scope.cboemployee_name,
                        description: $scope.txtdescription,

                    }

                    var url = 'api/AtmTrnMyAuditTaskAuditee/PostAuditeeRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });

                    $modalInstance.close('closed');

                }

            }
        }
        $scope.approvalinformation = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.lblaudit_maker = resp.data.audit_maker;
                    $scope.lblaudit_checker = resp.data.audit_checker;
                    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.importexcel = function (auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/importexcel.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {


                var params = {
                    auditcreation_gid: auditcreation_gid,
                }

                var url = 'api/AtmTrnSampling/GetSample';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sample_list = resp.data.sample_list;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.downloadtemplate_importexcel = function () {
                    var Templateurl = apiManage.GetCommonData['TemplatePath'].Path;
                    var filename = "\ImportExcelSample.xlsx";
                    //var phyPath = resp.data.file_path;
                    var phyPath = Templateurl + filename;
                    var relPath = phyPath.split("EMS");
                    var relpath1 = relPath[1].replace("\\", "/");
                    var prefix = window.location.protocol + "//";
                    var hosts = window.location.host;
                    var str = prefix.concat(hosts, relpath1);
                    var link = document.createElement("a");
                    var name = filename.split('.');
                    link.download = name[0];
                    link.href = str;
                    link.click();
                }

                $scope.excelupload = function (val, val1, name) {

                    var fileInput = document.getElementById('fileimport');
                    var filePath = fileInput.value;

                    $scope.fileinputvalue = filePath;

                    // Allowing file type
                    var allowedExtensions = /(\.xls|\.xlsx|\.csv)$/i;

                    if (!allowedExtensions.exec(filePath)) {
                        Notify.alert('File Format Not Supported!', 'warning')
                        $modalInstance.close('closed');
                        //fileInput.value = '';
                    }
                    else if (filePath.includes("ImportExcelSample") == false) {
                        Notify.alert('File Name / Template Not Supported!', 'warning')
                        $modalInstance.close('closed');
                    }
                    else {
                        var item = {
                            name: val[0].name,
                            file: val[0]
                        };
                        var frm = new FormData();
                        frm.append('fileupload', item.file);
                        frm.append('file_name', item.name);
                        frm.append('auditcreation_gid', auditcreation_gid);
                        $scope.uploadfrm = frm;
                    }
                }

                $scope.uploadexcel = function () {

                    if ($scope.fileinputvalue == '' || $scope.fileinputvalue == undefined || $scope.fileinputvalue == null) {
                        Notify.alert('Kindly Select the Excel file', 'warning')
                    }
                    else {
                        var url = 'api/AtmTrnSampling/ImportExcelSample';
                        lockUI();
                        SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {

                            if (resp.data.status == true) {
                                activate();
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            else {
                                unlockUI();
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                            }
                            $("#fileimport").val('');
                        });
                    }

                }

                $scope.uploadexcelcancel = function () {
                    $("#fileimport").val('');
                };
            }
        }
    }
})();

(function () {
    'use strict';
    angular
        .module('angle')
        .controller('AtmTrnTaggedAuditeeViewController', AtmTrnTaggedAuditeeViewController);

    AtmTrnTaggedAuditeeViewController.$inject = ['$rootScope', '$scope', '$modal', '$state', 'AuthenticationService', 'SweetAlert', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', 'ngTableParams', 'cmnfunctionService'];

    function AtmTrnTaggedAuditeeViewController($rootScope, $scope, $modal, $state, AuthenticationService, SweetAlert, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, ngTableParams, cmnfunctionService) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'AtmTrnTaggedAuditeeViewController';

        var searchObject = cmnfunctionService.decryptURL($location.search().hash);
        $scope.auditcreation_gid = searchObject.auditcreation_gid;
        var auditcreation_gid = searchObject.auditcreation_gid;
        $scope.checklistmaster_gid = searchObject.checklistmaster_gid;
        var checklistmaster_gid = $scope.checklistmaster_gid;
        $scope.checklistmasteradd_gid = searchObject.checklistmasteradd_gid;
        $scope.sampleimport_gid = searchObject.sampleimport_gid;       
        var sampleimport_gid = $scope.sampleimport_gid;
        $scope.lspage = searchObject.lspage;
        var lspage = $scope.lspage;
        activate();

        function activate() {
            var url = 'api/AtmTrnAuditCreation/EditAuditCreation';
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.cboauditdepartment = resp.data.auditdepartment_gid,
                  $scope.cboauditdepartment = resp.data.auditdepartment_name,
                 $scope.cboauditname = resp.data.checklistmaster_gid,
                  $scope.cboauditname = resp.data.audit_name,
                  $scope.cboauditmaker = resp.data.employee_gid,
                  $scope.cboauditmaker = resp.data.audit_maker,
                 $scope.cboauditchecker = resp.data.auditmapping_gid,
                  $scope.cboauditchecker = resp.data.audit_checker,
                  $scope.cboauditapprover = resp.data.employee_gid,
                  $scope.cboauditapprover = resp.data.audit_approver,
                 $scope.cboauditpriority = resp.data.auditpriority_gid,
                  $scope.cboauditpriority = resp.data.auditpriority_name,
                $scope.txtdue_date = resp.data.end_date,
                $scope.txtreport_date = resp.data.report_date,
                $scope.txtperiod_from = resp.data.periodfrom_date,
                 $scope.created_by = resp.data.created_by;
                $scope.created_date = resp.data.created_date;
                $scope.txtperiod_to = resp.data.auditperiod_to,
                $scope.txtaudit_ref_no = resp.data.audit_uniqueno,
                $scope.cboauditeemaker = resp.data.auditeemaker_name,
                $scope.cboauditeechecker = resp.data.auditeechecker_name,
                 $scope.txtentity_name = resp.data.entity_name,
                $scope.txtaudit_type = resp.data.audittype_name,
                $scope.txtcheckpoint_group = resp.data.checkpointgroup_name,
                $scope.txtaudit_desc = resp.data.audit_description,
                $scope.auditeechecker_approvalflag = resp.data.auditeechecker_approvalflag;
                $scope.txt_percent = resp.data.observation_percentage;
                $scope.auditobservation_name = resp.data.auditobservation_name;
                $scope.samplestatus_flag = resp.data.samplestatus_flag;
                $scope.checklistverified_flag = resp.data.checklistverified_flag;
                if (lspage == 'auditeecheckerpending' && $scope.auditeechecker_approvalflag == "N") {
                    $scope.proceedtoapprover = true;
                }
                else {
                    $scope.proceedtoapprover = false;
                }
                unlockUI();
            });

            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnAuditCreation/TrnCheckpointCreation';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.checkpointsummary_list = resp.data.auditcheckpointsummary_list;
            });
            var url = 'api/AtmTrnAuditCreation/GetAuditeeSummaryList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.multipleauditee_list = resp.data.multipleauditee_list;
                unlockUI();

            });
            var url = 'api/AtmTrnAuditorMaker/GetAuditorMakerViewOverallscore';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.txt_overallscore = resp.data.overall_score;
                unlockUI();

            });

            var params = {
                auditcreation_gid: auditcreation_gid
            };


            var url = 'api/AtmTrnAuditorMaker/AuditorMakerView';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                $scope.makercheckpointobservation_list = resp.data.makercheckpointobservationview_list;
                $scope.txttotal_score = resp.data.total_score;

                for (var i = 0; i < $scope.makercheckpointobservation_list.length; i++) {
                    $scope.makercheckpointobservation_list[i].checked = true;

                }

                angular.forEach($scope.makercheckpointobservation_list, function (value, key) {

                    if (value.capture_score == value.yes_score) {
                        value.yes_radio = true;
                        value.yes_radio1 = true;
                    }
                    else if (value.capture_score == value.no_score) {
                        value.no_radio = true;
                        value.no_radio1 = true;
                    }
                    else if (value.capture_score == value.partial_score) {
                        value.partialscore_radio = true;
                        value.partialscore_radio1 = true;
                    }
                    else if (value.capture_score == value.na_score) {
                        value.nascore_radio = true;
                        value.nascore_radio1 = true;
                    }
                    else if (value.capture_score == "") {
                        $scope.allobservationfilled = false;

                    }

                });
            });

            defaultdynamic();
            var params = {
                auditcreation_gid: auditcreation_gid,
                sampleimport_gid: sampleimport_gid
            };


            //var url = 'api/AtmTrnSampling/GetTaggedSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});
            //var url = 'api/AtmTrnSampling/GetSampleAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});


            //var url = 'api/AtmTrnSampling/GetSamplesummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    unlockUI()
            //    //auditcreation_gid = resp.data.auditcreation_gid
            //    $scope.sample_list = resp.data.sample_list

            //});
            //var url = 'api/AtmTrnSampling/GetAssignedQuerySummary';
            //SocketService.getparams(url, params).then(function (resp) {
            //    $scope.SampleAssignedQueryList = resp.data.SampleAssignedQueryList;
            //    unlockUI();
            //});
        }
        

        function defaultdynamic() {
            var params = {
                auditcreation_gid: auditcreation_gid
            }
            var url = 'api/AtmTrnSampling/GetSampleRaiseQueryDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    $scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    $scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    for (i in $scope.SampleDynamicTabledata) {
                        //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                        delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                        delete $scope.SampleDynamicTabledata[i].taguser_flag;
                    }

                    for (i in $scope.raisedqueryarray) {
                        delete $scope.raisedqueryarray[i].sampleimport_gid;
                        delete $scope.raisedqueryarray[i].raisedquery_flag;
                        //delete $scope.raisedqueryarray[i].taguser_flag;
                    }
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    if ($scope.raisedqueryarray.length == 0) {
                        $scope.raisedquerytable = false;
                    }

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    $scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });

            //function defaultdynamic() {
            //    var params = {
            //        auditcreation_gid: auditcreation_gid
            //    }
            var url = 'api/AtmTrnSampling/GetSampleDynamicdata';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.SampleDynamicdata = JSON.parse(resp.data.JSONdata);
                    $scope.SampleDynamicTabledata = angular.copy($scope.SampleDynamicdata);
                    $scope.SampleDynamicRaisedTabledata = angular.copy($scope.SampleDynamicdata);

                    $scope.SampleDynamicTabledata = $scope.SampleDynamicTabledata.filter(function (el) { return el.raisedquery_flag === 'N' });
                    $scope.SampleDynamicTable = angular.copy($scope.SampleDynamicTabledata);
                    //$scope.raisedqueryarray = $scope.SampleDynamicRaisedTabledata.filter(function (el) { return el.raisedquery_flag === 'Y' });
                    //$scope.SampleraisedqueryTable = angular.copy($scope.raisedqueryarray);
                    //for (i in $scope.SampleDynamicTabledata) {
                    //delete $scope.SampleDynamicTabledata[i].sampleimport_gid;
                    //delete $scope.SampleDynamicTabledata[i].raisedquery_flag;
                    //delete $scope.SampleDynamicTabledata[i].taguser_flag;
                    //delete $scope.SampleDynamicTabledata[i].tagged_employee;
                    //}

                    //for (i in $scope.raisedqueryarray) {
                    //delete $scope.raisedqueryarray[i].sampleimport_gid;
                    //    delete $scope.raisedqueryarray[i].raisedquery_flag;
                    //}
                    $scope.raisedquerytable = true;
                    $scope.showtablediv = true;
                    if ($scope.SampleDynamicTabledata.length == 0) {
                        $scope.showtablediv = false;
                    }
                    //if ($scope.raisedqueryarray.length == 0) {
                    //    $scope.raisedquerytable = false;
                    //}

                }
                else {
                    $scope.SampleDynamicTabledata = "";
                    //$scope.raisedqueryarray = "";
                    $scope.showtablediv = false;
                    $scope.raisedquerytable = false;
                }
            });
        }
        $scope.stripAddr = function (value) {
            return value.replace("_", " ");
        }

        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }

        $scope.checkall = function (selected) {

            angular.forEach($scope.checkpointsummary_list, function (val) {
                val.checked = selected;
            });
        }


        $scope.assignchecklist = function () {
            var assignList = [];
            angular.forEach($scope.checkpointsummary_list, function (val) {

                if (val.checked == true) {
                    var checklistmasteradd_gid = val.checklistmasteradd_gid;
                    assignList.push(checklistmasteradd_gid);
                    var checklistmaster_gid = val.checklistmaster_gid;

                }
            });
            if (assignList.length == 0) {
                Notify.alert('Select Atleast One Record!');
                return false;
                unlockUI();
            }
            var params = {
                checklistmasteradd_gid: assignList,
                checklistmaster_gid: checklistmaster_gid
            }

            var url = 'api/AtmTrnAuditCreation/PostChecklistAssign';
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    Notify.alert('Checklist Assigned Successfully!', 'success');
                    //$location.url('app/AtmTrnAudit360View?auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid)
                    $state.go('app.AtmTrnAuditCreationSummary');
                }
                else {
                    Notify.alert('Select Atleast One..!!', 'warning')
                }

            });

        }

        $scope.checkpointintent = function (checklistmasteradd_gid, checkpoint_intent) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointintent.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterIntent';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointintent = resp.data.checkpoint_intent;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.description = function (checklistmasteradd_gid, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/checkpointdescription.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                'use strict';

                angular
                    .module('angle')
                var params = {
                    checklistmasteradd_gid: checklistmasteradd_gid
                }
                lockUI();
                var url = 'api/AtmMstChecklistMaster/GetChecklistMasterDescription';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.txtcheckpointdescription = resp.data.checkpoint_description;

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.notetoauditor = function (checklistmasteradd_gid, noteto_auditor, checkpoint_description) {
            var modalInstance = $modal.open({
                templateUrl: '/notetoauditor.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.txtnotetoauditor = noteto_auditor;
                $scope.txtcheckpointdescription = checkpoint_description;
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
        $scope.showPopover = function (sampleimport_gid, sample_name) {
            var modalInstance = $modal.open({
                templateUrl: '/showemployee.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }
                lockUI();
                var url = 'api/AtmTrnSampling/GetEmployeeName';
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.employee_name = resp.data.employee_name;
                    $scope.sample_name = resp.data.sample_name;
                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }

        $scope.btntaguser = function (index, auditcreation_gid, raisedquery) {
            var sampleimport_gid = "";

            if (raisedquery == 'Y') {
                var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }
            else {
                var getsampleimport_gid = $scope.SampleDynamicTable[index];
                if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                    sampleimport_gid = getsampleimport_gid.sampleimport_gid;
                }
            }

            var modalInstance = $modal.open({
                templateUrl: '/taguser.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    sampleimport_gid: sampleimport_gid
                }

                var url = 'api/AtmTrnSampling/AssignedTagUserSummary';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.SampleTagUserList = resp.data.SampleAssignedQueryList;
                });

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.txtsample_name = resp.data.sample_name;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                var url = 'api/SystemMaster/GetEmployeelist';
                lockUI();
                SocketService.get(url).then(function (resp) {
                    $scope.employee_list = resp.data.employeelist;
                    unlockUI();
                });

                $scope.btnconfirm = function () {

                    var params = {
                        employelist: $scope.cboemployee_name,
                        sample_name: $scope.txtsample_name,
                        sampleimport_gid: sampleimport_gid,
                        auditcreation_gid: auditcreation_gid,
                        description: $scope.txttaguser_desc
                    }

                    var url = 'api/AtmTrnSampling/GetTagUser';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();

                    $modalInstance.close('closed');

                }


            }
        }



        $scope.raisequery = function (sampleimport_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }

                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var params = {
                    auditcreation_gid: auditcreation_gid,
                    sampleimport_gid: sampleimport_gid
                }
                var url = 'api/AtmTrnSampling/EditSampleQuery';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid
                    $scope.auditcreation_gid = resp.data.auditcreation_gid
                });


                $scope.ok = function () {
                    $modalInstance.close('closed');
                };



                $scope.submit = function () {

                    var params = {
                        sampleimport_gid: $scope.sampleimport_gid,
                        sample_name: $scope.txtsample_name,
                        description: $scope.txtdescription,
                        auditcreation_gid: $scope.auditcreation_gid
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $location.url('app/AtmTrnTaggedAuditeeView?auditcreation_gid=' + val + '&sampleimport_gid=' + val1 + '&taggeduser_gid=' + val2 + '&lspage=auditeemakertagged')
                            $modalInstance.close('closed');
                            activate();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsample = function (index, auditcreation_gid) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var modalInstance = $modal.open({
                templateUrl: '/raisequery.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });

            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                var params = {
                    sampleimport_gid: sampleimport_gid

                }
                var url = 'api/AtmTrnSampling/GetSampleName';
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.sampleimport_gid = resp.data.sampleimport_gid;
                    $scope.txtsample_name = resp.data.sample_name;
                });

                var url = 'api/SystemMaster/GetEmployeelist';
                SocketService.get(url).then(function (resp) {
                    $scope.cboemployee_list = resp.data.employeelist;
                });

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.submit = function () {

                    var query_toemployeegid = "";
                    var query_toname = "";
                    if ($scope.cboqueryto) {
                        query_toemployeegid = $scope.cboqueryto.employee_gid;
                        query_toname = $scope.cboqueryto.employee_name;
                    }

                    var params = {
                        sampleimport_gid: sampleimport_gid,
                        description: $scope.txtquery_desc,
                        auditcreation_gid: auditcreation_gid,
                        query_title: $scope.txtquery_title,
                        query_to: query_toemployeegid,
                        query_toname: query_toname,
                    }

                    var url = 'api/AtmTrnSampling/PostRaiseQuery';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            defaultdynamic();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                    });
                    activate();

                    $modalInstance.close('closed');

                }

            }
        }


        $scope.dynamicsampledelete = function (index) {
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleDynamicTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            var params = {
                sampleimport_gid: sampleimport_gid
            }
            var url = 'api/AtmTrnAuditCreation/GetDeleteSampleImport';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });
                    defaultdynamic();
                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
            });
        }
        $scope.samplequery = function (index) {
            var auditcreation_gid = $scope.auditcreation_gid;
            var checklistmaster_gid = $scope.checklistmaster_gid;
            var sampleimport_gid = "";
            var getsampleimport_gid = $scope.SampleraisedqueryTable[index];
            if (getsampleimport_gid && getsampleimport_gid.sampleimport_gid) {
                sampleimport_gid = getsampleimport_gid.sampleimport_gid;
            }
            $location.url('app/AtmTrnSampleQueryAuditor?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + auditcreation_gid + '&checklistmaster_gid=' + checklistmaster_gid + '&sampleimport_gid=' + sampleimport_gid + '&lspage=' + lspage))
        }

        $scope.Back = function (val) {
            $state.go('app.AtmTrnTaggedAuditeeSummary');
        }


        $scope.observationquery = function (checkpointgroupadd_gid, auditcreation2checklist_gid, auditcreation_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/TagToDefferalEdit.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                var params =
                    {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid
                    }
                //var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                //lockUI();
                //SocketService.getparams(url,params).then(function (resp) {
                //    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                //    unlockUI();
                //});
                var url = 'api/AtmMstCheckpointGroup/GetChecklistToCheckpointcreate';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    unlockUI();
                    $scope.checklistcheckpoint_list = resp.data.checklistcheckpoint_list;
                    for (var i = 0; i < $scope.checklistcheckpoint_list.length; i++) {
                        $scope.checklistcheckpoint_list[i].checked = true;
                    }
                    angular.forEach($scope.checklistcheckpoint_list, function (value, key) {

                        if (value.overall_detail == "Yes") {
                            value.document_radio = true;
                            //value.document_radio1 = true;
                        }
                        else if (value.overall_detail == "No") {
                            value.tag_radio = true;
                            //value.tag_radio1 = true;
                        }


                    });
                });

                $scope.checkpointobservation = function () {

                    var params = {
                        checkpointgroupadd_gid: checkpointgroupadd_gid,
                        auditcreation_gid: auditcreation_gid,
                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        lockUI();
                        if (resp.data.status == true) {
                            unlockUI();
                            Notify.alert('Observation Checkpoint Saved Successfully!', 'success');
                            $location.url('app/AtmTrnAuditorMakerView?auditcreation_gid=' + auditcreation_gid + '&lspage=' + 'auditormakerOpen')
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            unlockUI();
                        }
                        $modalInstance.close('closed');

                    });
                }
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid,
                    auditcreation_gid: auditcreation_gid
                }
                var url = 'api/AtmTrnAuditorMaker/GetAuditorCheckpointFlag';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.checklistcheckpoint_flag = resp.data.checklistcheckpoint_flag;
                    unlockUI();

                });
                $scope.ok = function () {
                    $modalInstance.close('closed');
                };

                $scope.onselected = function (val, val1) {

                    $scope.document_verified = val;
                    $scope.checklist2checkpoint = val1;
                    var params = {
                        auditcreation2checklist_gid: auditcreation2checklist_gid,
                        document_verified: $scope.document_verified,
                        checklist2checkpoint: $scope.checklist2checkpoint,

                    }
                    var url = 'api/AtmTrnAuditorMaker/PostCheckpointAgainstObservation';
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {
                            $scope.txttotal_score = resp.data.total_amount;

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            activate();

                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'danger',
                                pos: 'top-center',
                                timeout: 3000
                            });
                        }

                    });
                }

            }
        }

        $scope.samplecheckerobservationscoreview = function (val, val1, val2, val3) {
            $location.url('app/AtmTrnTaggedAuditeeObservationScoreView?hash=' + cmnfunctionService.encryptURL('auditcreation_gid=' + val + '&checklistmaster_gid=' + val1 + '&sampleimport_gid=' + val2 + '&observationscoresample_gid=' + val3))
        }

        $scope.back = function (AtmTrnTaggedAuditeeView) {
            $location.url('app/AtmTrnTaggedAuditeeView?auditcreation_gid=' + auditcreation_gid + '&sampleimport_gid=' + 'null' + '&lspage=' + 'auditeemakeropen')

        }

        //$scope.Back = function (val) {
        //    if (lspage == 'auditeemakeropen') {
        //        $location.url('app/AtmTrnMyAuditTaskAuditeeSummary');
        //    }
        //    else if (lspage == 'auditeemakerhold') {
        //        $location.url('app/AtmTrnHoldAuditeeSummary');
        //    }
        //    else if (lspage == 'auditeemakerclosed') {
        //        $location.url('app/AtmTrnClosedAuditeeSummary');
        //    }
        //    else if (lspage == 'auditeemakertagged') {
        //        $location.url('app/AtmTrnTaggedAuditeeSummary');
        //    }
        //    else if (lspage == 'auditeemakercompleted') {
        //        $location.url('app/AtmTrnCompletedAuditeeSummary');
        //    }
        //    else if (lspage == 'auditeecheckeropen') {
        //        $location.url('app/AtmTrnMyAuditeeCheckerSummary');
        //    }
        //    else if (lspage == 'auditeecheckerpending') {
        //        $location.url('app/AtmTrnCheckerPendingApproval');
        //    }
        //    else if (lspage == 'auditeecheckerhold') {
        //        $location.url('app/AtmTrnCheckerHoldAuditee');
        //    }
        //    else if (lspage == 'auditeecheckerclosed') {
        //        $location.url('app/AtmTrnCheckerClosedAuditee');
        //    }
        //    else if (lspage == 'auditeecheckertagged') {
        //        $location.url('app/AtmTrnCheckerTaggedAuditee');
        //    }
        //    else if (lspage == 'auditeecheckercompleted') {
        //        $location.url('app/AtmTrnCheckerCompletedAuditee');
        //    }
        //}
        $scope.approvalinformation = function (checkpointgroupadd_gid) {
            var modalInstance = $modal.open({
                templateUrl: '/Approvalinformation.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'lg'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {
                var params = {
                    checkpointgroupadd_gid: checkpointgroupadd_gid
                }
                var url = 'api/AtmMstCheckpointGroup/GetAuditeeCheckpointSummaryList';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    $scope.multipleauditee_list = resp.data.multipleauditee_list;
                    unlockUI();

                });
                //var url = 'api/AtmTrnAuditCreation/GetAssignedInformation';
                //SocketService.getparams(url, params).then(function (resp) {
                //    $scope.lblaudit_maker = resp.data.audit_maker;
                //    $scope.lblaudit_checker = resp.data.audit_checker;
                //    $scope.lblauditapprover_name = resp.data.auditapprover_name;
                //    $scope.lblauditperiod_fromdate = resp.data.auditperiod_fromdate;
                //    $scope.lblauditperiod_todate = resp.data.auditperiod_todate;
                //});

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
            }
        }
    }

})();