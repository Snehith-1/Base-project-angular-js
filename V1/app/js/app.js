/*!
 * 
 * Angle - Bootstrap Admin App + AngularJS Material
 * 
 * Version: 3.1.0
 * Author: @themicon_co
 * Website: http://themicon.co
 * License: https://wrapbootstrap.com/help/licenses
 * 
 */

// APP START
// ----------------------------------- 

(function() {
    'use strict';

    angular
        .module('angle', [
            'app.core',
            'app.routes',
            'app.sidebar',
            'app.navsearch',
            'app.preloader',
            'app.loadingbar',
            'app.translate',
            'app.settings',
            'app.dashboard',
            'app.icons',
            'app.flatdoc',
            'app.notify',
            'app.bootstrapui',
            'app.elements',
            'app.panels',
            'app.charts',
            'app.forms',
            'app.locale',
            'app.maps',
            'app.pages',
            'app.tables',
            'app.extras',
            'app.mailbox',
            'app.utils',
            'app.material',
            'froala'
        ]).value('froalaConfig', {
            toolbarInline: false,
            documentReady: true,
            toolbarButtons: ['fullscreen', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', 'fontFamily', 'fontSize', '|', 'color', 'emoticons', 'inlineStyle', 'paragraphStyle', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', '-', 'insertLink', 'insertImage', 'insertVideo', 'insertFile', 'insertTable', '|', 'quote', 'insertHR', 'undo', 'redo', 'clearFormatting', 'selectAll', 'html'],

            imageAllowedTypes: ["jpeg", "jpeg;base64", "jpg", "jpg;base64", "png", "png;base64", "gif", "gif;base64", "webp", "webp;base64"],
            events: {
                'image.beforePasteUpload': function (files) {

                    // Do something here.
                    // this is files editor instance.
                    console.log(files);
                },
                'image.error': function (error, response) {
                    // Do something here.
                    // this is the editor instance.
                    console.log(error);
                }
            },
            //pastedImagesUploadURL: 'http://localhost/WebApplication1/home/Pasteimage',
            imageUploadURL: 'http://localhost/WebApplication1/home/UploadImage',
            //            imageUploadToS3: {
            //    bucket: 'mailimageuploads',
            //    // Your bucket region.
            //    region: 'us-east-1',
            //    keyStart: 'uploads/test.jpg',
            //    params: {
            //      acl: 'Public-Read', // ACL according to Amazon Documentation.
            //      AWSAccessKeyId: 'AKIATLKVFRS7KDZXJHRN', // Access Key from Amazon.
            //      AWSSecretAccessKey:'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',
            //      policy: '', // Policy string computed in the backend.
            //      signature: '', // Signature computed in the backend.

            //      // If you are using Amazon Signature V4, the followings should be used instead.
            //      // "X-Amz-Credential": "...",
            //      // "X-Amz-Algorithm": "AWS4-HMAC-SHA256",
            //      // "X-Amz-Date": "...",
            //      // Policy: "...", //
            //      // "X-Amz-Signature": "", // computed in backend
            //    }
            //  }
        });

    angular.module('angle').config(['$httpProvider', function ($httpProvider) {
        $httpProvider.interceptors.push(["$location", function ($location) {
            return {
                responseError: function (req) {
                    console.log(req);
                    if (req.status == "401")
                    {
                        $location.url('page/401?errno=401');
                        location.reload();
                    }
                    else if (req.status == "500")
                    {
                        unlockUI();
                        $location.url('page/500?errno=500');
                    }
                    else {
                        unlockUI();
                        $location.url('page/404?errno=404');
                    }
                    return req;
               }
            };
        }]);
    }]);
})();


(function() {
    'use strict';

    angular
        .module('app.bootstrapui', []);
})();
(function() {
    'use strict';

    angular
        .module('app.core', [
            'ngRoute',
            'ngAnimate',
            'ngStorage',
            'ngCookies',
            'pascalprecht.translate',
            'ui.bootstrap',
            'ui.router',
            'oc.lazyLoad',
            'cfp.loadingBar',
            'ngSanitize',
            'ngResource',
            'tmh.dynamicLocale',
            'ui.utils',
            'ngAria',
            'ngMessages'
        ]);
})();
(function() {
    'use strict';

    angular
        .module('app.colors', []);
})();
(function() {
    'use strict';

    angular
        .module('app.dashboard', []);
})();
(function() {
    'use strict';

    angular
        .module('app.flatdoc', []);
})();
(function() {
    'use strict';

    angular
        .module('app.extras', []);
})();
(function() {
    'use strict';

    angular
        .module('app.loadingbar', []);
})();
(function() {
    'use strict';

    angular
        .module('app.icons', []);
})();
(function() {
    'use strict';

    angular
        .module('app.charts', []);
})();
(function() {
    'use strict';

    angular
        .module('app.locale', []);
})();
(function() {
    'use strict';

    angular
        .module('app.mailbox', []);
})();
(function() {
    'use strict';

    angular
        .module('app.maps', []);
})();
(function() {
    'use strict';

    angular
        .module('app.material', [
            'ngMaterial'
          ]);
})();
(function() {
    'use strict';

    angular
        .module('app.navsearch', []);
})();
(function() {
    'use strict';

    angular
        .module('app.notify', []);
})();
(function() {
    'use strict';

    angular
        .module('app.pages', []);
})();
(function() {
    'use strict';

    angular
        .module('app.preloader', []);
})();


(function() {
    'use strict';

    angular
        .module('app.panels', []);
})();
(function() {
    'use strict';

    angular
        .module('app.routes', [
            'app.lazyload'
        ]);
})();
(function() {
    'use strict';

    angular
        .module('app.sidebar', []);
})();
(function() {
    'use strict';

    angular
        .module('app.settings', []);
})();
(function() {
    'use strict';

    angular
        .module('app.translate', []);
})();
(function() {
    'use strict';

    angular
        .module('app.tables', []);
})();
(function() {
    'use strict';

    angular
        .module('app.utils', [
          'app.colors'
          ]);
})();

(function() {
    'use strict';

    angular
        .module('app.forms', []);
})();
(function() {
    'use strict';

    angular
        .module('app.lazyload', []);
})();
(function() {
    'use strict';

    angular
        .module('app.elements', []);
})();
/**=========================================================
 * Module: demo-alerts.js
 * Provides a simple demo for pagination
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('AlertDemoCtrl', AlertDemoCtrl);

    function AlertDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.alerts = [
            { type: 'danger', msg: 'Oh snap! Change a few things up and try submitting again.' },
            { type: 'warning', msg: 'Well done! You successfully read this important alert message.' }
          ];

          vm.addAlert = function() {
            vm.alerts.push({msg: 'Another alert!'});
          };

          vm.closeAlert = function(index) {
            vm.alerts.splice(index, 1);
          };
        }
    }
})();

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .config(bootstrapuiConfig);

    bootstrapuiConfig.$inject = ['$tooltipProvider'];
    function bootstrapuiConfig($tooltipProvider){
      $tooltipProvider.options({appendToBody: true});
    }
})();
/**=========================================================
 * Module: demo-buttons.js
 * Provides a simple demo for buttons actions
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('ButtonsCtrl', ButtonsCtrl);

    function ButtonsCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.singleModel = 1;

          vm.radioModel = 'Middle';

          vm.checkModel = {
            left: false,
            middle: true,
            right: false
          };
        }
    }
})();

/**=========================================================
 * Module: demo-carousel.js
 * Provides a simple demo for bootstrap ui carousel
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('CarouselDemoCtrl', CarouselDemoCtrl);

    function CarouselDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.myInterval = 5000;
          
          var slides = vm.slides = [];
          vm.addSlide = function() {
            var newWidth = 800 + slides.length;
            slides.push({
              image: '//placekitten.com/' + newWidth + '/300',
              text: ['More','Extra','Lots of','Surplus'][slides.length % 2] + ' ' +
                ['Cats', 'Kittys', 'Felines', 'Cutes'][slides.length % 2]
            });
          };
          
          for (var i=0; i<2; i++) {
            vm.addSlide();
          }

        }
    }
})();

/**=========================================================
 * Module: demo-datepicker.js
 * Provides a simple demo for bootstrap datepicker
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('DatepickerDemoCtrl', DatepickerDemoCtrl);

    function DatepickerDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.today = function() {
            vm.dt = new Date();
          };
          vm.today();

          vm.clear = function () {
            vm.dt = null;
          };

          // Disable weekend selection
          vm.disabled = function(date, mode) {
            return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );
          };

          vm.toggleMin = function() {
            vm.minDate = vm.minDate ? null : new Date();
          };
          vm.toggleMin();

          vm.open = function($event) {
            $event.preventDefault();
            $event.stopPropagation();

            vm.opened = true;
          };

          vm.dateOptions = {
            formatYear: 'yy',
            startingDay: 1
          };

          vm.initDate = new Date('2019-10-20');
          vm.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
          vm.format = vm.formats[0];
        }
    }
})();


/**=========================================================
 * Module: modals.js
 * Provides a simple way to implement bootstrap modals from templates
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('ModalController', ModalController);

    ModalController.$inject = ['$modal'];
    function ModalController($modal) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.open = function (size) {

            var modalInstance = $modal.open({
              templateUrl: '/myModalContent.html',
              controller: ModalInstanceCtrl,
              size: size
            });

            var state = $('#modal-state');
            modalInstance.result.then(function () {
              state.text('Modal dismissed with OK status');
            }, function () {
              state.text('Modal dismissed with Cancel status');
            });
          };

          // Please note that $modalInstance represents a modal window (instance) dependency.
          // It is not the same as the $modal service used above.

          ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
          function ModalInstanceCtrl($scope, $modalInstance) {

            $scope.ok = function () {
              $modalInstance.close('closed');
            };

            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        }
    }

})();

/**=========================================================
 * Module: demo-pagination.js
 * Provides a simple demo for pagination
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('PaginationDemoCtrl', PaginationDemoCtrl);

    function PaginationDemoCtrl() {
        var vm = this;


        activate();

        ////////////////

        function activate() {
          vm.totalItems = 64;
          vm.currentPage = 4;

          vm.setPage = function (pageNo) {
            vm.currentPage = pageNo;
          };

          vm.pageChanged = function() {
            console.log('Page changed to: ' + vm.currentPage);
          };

          vm.maxSize = 5;
          vm.bigTotalItems = 175;
          vm.bigCurrentPage = 1;
        }
    }
})();

/**=========================================================
 * Module: demo-popover.js
 * Provides a simple demo for popovers
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('PopoverDemoCtrl', PopoverDemoCtrl);

    function PopoverDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.dynamicPopover = 'Hello, World!';
          vm.dynamicPopoverTitle = 'Title';
        }
    }
})();

/**=========================================================
 * Module: demo-progress.js
 * Provides a simple demo to animate progress bar
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('ProgressDemoCtrl', ProgressDemoCtrl);

    function ProgressDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.max = 200;

          vm.random = function() {
            var value = Math.floor((Math.random() * 100) + 1);
            var type;

            if (value < 25) {
              type = 'success';
            } else if (value < 50) {
              type = 'info';
            } else if (value < 75) {
              type = 'warning';
            } else {
              type = 'danger';
            }

            vm.showWarning = (type === 'danger' || type === 'warning');

            vm.dynamic = value;
            vm.type = type;
          };
          vm.random();

          vm.randomStacked = function() {
            vm.stacked = [];
            var types = ['success', 'info', 'warning', 'danger'];

            for (var i = 0, n = Math.floor((Math.random() * 4) + 1); i < n; i++) {
                var index = Math.floor((Math.random() * 4));
                vm.stacked.push({
                  value: Math.floor((Math.random() * 30) + 1),
                  type: types[index]
                });
            }
          };
          vm.randomStacked();
        }
    }
})();

/**=========================================================
 * Module: demo-rating.js
 * Provides a demo for ratings UI
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('RatingDemoCtrl', RatingDemoCtrl);

    function RatingDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.rate = 7;
          vm.max = 10;
          vm.isReadonly = false;

          vm.hoveringOver = function(value) {
            vm.overStar = value;
            vm.percent = 100 * (value / vm.max);
          };

          vm.ratingStates = [
            {stateOn: 'fa fa-check', stateOff: 'fa fa-check-circle'},
            {stateOn: 'fa fa-star', stateOff: 'fa fa-star-o'},
            {stateOn: 'fa fa-heart', stateOff: 'fa fa-ban'},
            {stateOn: 'fa fa-heart'},
            {stateOff: 'fa fa-power-off'}
          ];
        }
    }
})();

/**=========================================================
 * Module: demo-timepicker.js
 * Provides a simple demo for bootstrap ui timepicker
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('TimepickerDemoCtrl', TimepickerDemoCtrl);

    function TimepickerDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.mytime = new Date();

          vm.hstep = 1;
          vm.mstep = 15;

          vm.options = {
            hstep: [1, 2, 3],
            mstep: [1, 5, 10, 15, 25, 30]
          };

          vm.ismeridian = true;
          vm.toggleMode = function() {
            vm.ismeridian = ! vm.ismeridian;
          };

          vm.update = function() {
            var d = new Date();
            d.setHours( 14 );
            d.setMinutes( 0 );
            vm.mytime = d;
          };

          vm.changed = function () {
            console.log('Time changed to: ' + vm.mytime);
          };

          vm.clear = function() {
            vm.mytime = null;
          };
        }
    }
})();

/**=========================================================
 * Module: demo-tooltip.js
 * Provides a simple demo for tooltip
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('TooltipDemoCtrl', TooltipDemoCtrl);

    function TooltipDemoCtrl() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.dynamicTooltip = 'Hello, World!';
          vm.dynamicTooltipText = 'dynamic';
          vm.htmlTooltip = 'I\'ve been made <b>bold</b>!';

          vm.autoplace = function (context, source) {
            //return (predictTooltipTop(source) < 0) ?  "bottom": "top";
            var pos = 'top';
            if(predictTooltipTop(source) < 0)
              pos = 'bottom';
            if(predictTooltipLeft(source) < 0)
              pos = 'right';
            return pos;
          };

            // Predicts tooltip top position 
            // based on the trigger element
            function predictTooltipTop(el) {
              var top = el.offsetTop;
              var height = 40; // asumes ~40px tooltip height

              while(el.offsetParent) {
                el = el.offsetParent;
                top += el.offsetTop;
              }
              return (top - height) - (window.pageYOffset);
            }

            // Predicts tooltip top position 
            // based on the trigger element
            function predictTooltipLeft(el) {
              var left = el.offsetLeft;
              var width = el.offsetWidth;

              while(el.offsetParent) {
                el = el.offsetParent;
                left += el.offsetLeft;
              }
              return (left - width) - (window.pageXOffset);
            }
        }
    }
})();

/**=========================================================
 * Module: demo-typeahead.js
 * Provides a simple demo for typeahead
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.bootstrapui')
        .controller('TypeaheadCtrl', TypeaheadCtrl);

    TypeaheadCtrl.$inject = ['$http'];
    function TypeaheadCtrl($http) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.selected = undefined;
          vm.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];

          // Any function returning a promise object can be used to load values asynchronously
          vm.getLocation = function(val) {
            return $http.get('//maps.googleapis.com/maps/api/geocode/json', {
              params: {
                address: val,
                sensor: false
              }
            }).then(function(res){
              var addresses = [];
              angular.forEach(res.data.results, function(item){
                /*jshint -W106*/
                addresses.push(item.formatted_address);
              });
              return addresses;
            });
          };

          vm.statesWithFlags = [{'name':'Alabama','flag':'5/5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png'},{'name':'Alaska','flag':'e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png'},{'name':'Arizona','flag':'9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png'},{'name':'Arkansas','flag':'9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png'},{'name':'California','flag':'0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png'},{'name':'Colorado','flag':'4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png'},{'name':'Connecticut','flag':'9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png'},{'name':'Delaware','flag':'c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png'},{'name':'Florida','flag':'f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png'},{'name':'Georgia','flag':'5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png'},{'name':'Hawaii','flag':'e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png'},{'name':'Idaho','flag':'a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png'},{'name':'Illinois','flag':'0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png'},{'name':'Indiana','flag':'a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png'},{'name':'Iowa','flag':'a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png'},{'name':'Kansas','flag':'d/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png'},{'name':'Kentucky','flag':'8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png'},{'name':'Louisiana','flag':'e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png'},{'name':'Maine','flag':'3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png'},{'name':'Maryland','flag':'a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png'},{'name':'Massachusetts','flag':'f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png'},{'name':'Michigan','flag':'b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png'},{'name':'Minnesota','flag':'b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png'},{'name':'Mississippi','flag':'4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png'},{'name':'Missouri','flag':'5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png'},{'name':'Montana','flag':'c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png'},{'name':'Nebraska','flag':'4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png'},{'name':'Nevada','flag':'f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png'},{'name':'New Hampshire','flag':'2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png'},{'name':'New Jersey','flag':'9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png'},{'name':'New Mexico','flag':'c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png'},{'name':'New York','flag':'1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png'},{'name':'North Carolina','flag':'b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png'},{'name':'North Dakota','flag':'e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png'},{'name':'Ohio','flag':'4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png'},{'name':'Oklahoma','flag':'6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png'},{'name':'Oregon','flag':'b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png'},{'name':'Pennsylvania','flag':'f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png'},{'name':'Rhode Island','flag':'f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png'},{'name':'South Carolina','flag':'6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png'},{'name':'South Dakota','flag':'1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png'},{'name':'Tennessee','flag':'9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png'},{'name':'Texas','flag':'f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png'},{'name':'Utah','flag':'f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png'},{'name':'Vermont','flag':'4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png'},{'name':'Virginia','flag':'4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png'},{'name':'Washington','flag':'5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png'},{'name':'West Virginia','flag':'2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png'},{'name':'Wisconsin','flag':'2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png'},{'name':'Wyoming','flag':'b/bc/Flag_of_Wyoming.svg/43px-Flag_of_Wyoming.svg.png'}];

        }
    }
})();

(function() {
    'use strict';

    angular
        .module('app.core')
        .config(coreConfig);

    coreConfig.$inject = ['$controllerProvider', '$compileProvider', '$filterProvider', '$provide'];
    function coreConfig($controllerProvider, $compileProvider, $filterProvider, $provide){
      
      var core = angular.module('app.core');
      // registering components after bootstrap
      core.controller = $controllerProvider.register;
      core.directive  = $compileProvider.directive;
      core.filter     = $filterProvider.register;
      core.factory    = $provide.factory;
      core.service    = $provide.service;
      core.constant   = $provide.constant;
      core.value      = $provide.value;

    }

})();
/**=========================================================
 * Module: constants.js
 * Define constants to inject across the application
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.core')
        .constant('APP_MEDIAQUERY', {
          'desktopLG':             1200,
          'desktop':                992,
          'tablet':                 768,
          'mobile':                 480
        })
      ;

})();
(function() {
    'use strict';

    angular
        .module('app.core')
        .run(appRun);

    appRun.$inject = ['$rootScope', '$state', '$stateParams',  '$window', '$templateCache', 'Colors'];
    
    function appRun($rootScope, $state, $stateParams, $window, $templateCache, Colors) {
      
      // Set reference to access them from any scope
      $rootScope.$state = $state;
      $rootScope.$stateParams = $stateParams;
      $rootScope.$storage = $window.localStorage;

      // Uncomment this to disable template cache
      /*$rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {
          if (typeof(toState) !== 'undefined'){
            $templateCache.remove(toState.templateUrl);
          }
      });*/

      // Allows to use branding color with interpolation
      // {{ colorByName('primary') }}
      $rootScope.colorByName = Colors.byName;

      // cancel click event easily
      $rootScope.cancel = function($event) {
        $event.stopPropagation();
      };

      // Hooks Example
      // ----------------------------------- 

      // Hook not found
      $rootScope.$on('$stateNotFound',
        function(event, unfoundState/*, fromState, fromParams*/) {
            console.log(unfoundState.to); // "lazy.state"
            console.log(unfoundState.toParams); // {a:1, b:2}
            console.log(unfoundState.options); // {inherit:false} + default options
        });
      // Hook error
      $rootScope.$on('$stateChangeError',
        function(event, toState, toParams, fromState, fromParams, error){
          console.log(error);
        });
      // Hook success
      $rootScope.$on('$stateChangeSuccess',
        function(/*event, toState, toParams, fromState, fromParams*/) {
          // display new view from top
          $window.scrollTo(0, 0);
          // Save the route title
          $rootScope.currTitle = $state.current.title;
        });

      // Load a title dynamically
      $rootScope.currTitle = $state.current.title;
      $rootScope.pageTitle = function() {
        var title = $rootScope.app.name + ' - ' + ($rootScope.currTitle || $rootScope.app.description);
        document.title = title;
        return title;
      };      

    }

})();


(function() {
    'use strict';

    angular
        .module('app.colors')
        .constant('APP_COLORS', {
          'primary':                '#3F51B5',
          'success':                '#4CAF50',
          'info':                   '#2196F3',
          'warning':                '#FF9800',
          'danger':                 '#F44336',
          'inverse':                '#607D8B',
          'green':                  '#009688',
          'pink':                   '#E91E63',
          'purple':                 '#673AB7',
          'dark':                   '#263238',
          'yellow':                 '#FFEB3B',
          'gray-darker':            '#232735',
          'gray-dark':              '#3a3f51',
          'gray':                   '#dde6e9',
          'gray-light':             '#e4eaec',
          'gray-lighter':           '#edf1f2'
        })
        ;
})();
/**=========================================================
 * Module: colors.js
 * Services to retrieve global colors
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.colors')
        .service('Colors', Colors);

    Colors.$inject = ['APP_COLORS'];
    function Colors(APP_COLORS) {
        this.byName = byName;

        ////////////////

        function byName(name) {
          return (APP_COLORS[name] || '#fff');
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('app.dashboard')
        .controller('DashboardController', DashboardController);

    DashboardController.$inject = ['$scope', 'ChartData', '$timeout'];
    function DashboardController($scope, ChartData, $timeout) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // SPLINE
          // ----------------------------------- 
          vm.splineData = ChartData.load('server/chart/spline.json');
          vm.splineOptions = {
              series: {
                  lines: {
                      show: false
                  },
                  points: {
                      show: true,
                      radius: 4
                  },
                  splines: {
                      show: true,
                      tension: 0.4,
                      lineWidth: 1,
                      fill: 0.5
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 150, // optional: use it for a clear represetation
                  tickColor: '#eee',
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickFormatter: function (v) {
                      return v/* + ' visitors'*/;
                  }
              },
              shadowSize: 0
          };


          // PANEL REFRESH EVENTS
          // ----------------------------------- 

          $scope.$on('panel-refresh', function(event, id) {
            
            console.log('Simulating chart refresh during 3s on #'+id);

            // Instead of timeout you can request a chart data
            $timeout(function(){
              
              // directive listen for to remove the spinner 
              // after we end up to perform own operations
              $scope.$broadcast('removeSpinner', id);
              
              console.log('Refreshed #' + id);

            }, 3000);

          });


          // PANEL DISMISS EVENTS
          // ----------------------------------- 

          // Before remove panel
          $scope.$on('panel-remove', function(event, id, deferred){
            
            console.log('Panel #' + id + ' removing');
            
            // Here is obligatory to call the resolve() if we pretend to remove the panel finally
            // Not calling resolve() will NOT remove the panel
            // It's up to your app to decide if panel should be removed or not
            deferred.resolve();
          
          });

          // Panel removed ( only if above was resolved() )
          $scope.$on('panel-removed', function(event, id){

            console.log('Panel #' + id + ' removed');

          });

        }
    }
})();
(function() {
    'use strict';

    angular
        .module('app.dashboard')
        .controller('DashboardV2Controller', DashboardV2Controller);

    DashboardV2Controller.$inject = ['$rootScope', '$scope', '$state'];
    function DashboardV2Controller($rootScope, $scope, $state) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          
          // Change layout mode
          if( $state.includes('app-h') ) {
            // Setup layout horizontal for demo
            $rootScope.app.layout.horizontal = true;
            $scope.$on('$destroy', function(){
                $rootScope.app.layout.horizontal = false;
            });            
          }
          else {
            $rootScope.app.layout.isCollapsed = true;
          }

          // BAR STACKED
          // ----------------------------------- 
          vm.barStackedOptions = {
              series: {
                  stack: true,
                  bars: {
                      align: 'center',
                      lineWidth: 0,
                      show: true,
                      barWidth: 0.6,
                      fill: 0.9
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 200, // optional: use it for a clear represetation
                  position: ($rootScope.app.layout.isRTL ? 'right' : 'left'),
                  tickColor: '#eee'
              },
              shadowSize: 0
          };

          // SPLINE
          // ----------------------------------- 

          vm.splineOptions = {
              series: {
                  lines: {
                      show: false
                  },
                  points: {
                      show: true,
                      radius: 4
                  },
                  splines: {
                      show: true,
                      tension: 0.4,
                      lineWidth: 1,
                      fill: 0.5
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 150, // optional: use it for a clear represetation
                  tickColor: '#eee',
                  position: ($rootScope.app.layout.isRTL ? 'right' : 'left'),
                  tickFormatter: function (v) {
                      return v/* + ' visitors'*/;
                  }
              },
              shadowSize: 0
          };
        }
    }
})();
(function() {
    'use strict';

    angular
        .module('app.dashboard')
        .controller('DashboardV3Controller', DashboardV3Controller);

    DashboardV3Controller.$inject = ['$rootScope'];
    function DashboardV3Controller($rootScope) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // SPLINE
          // ----------------------------------- 

          vm.splineOptions = {
              series: {
                  lines: {
                      show: false
                  },
                  points: {
                      show: true,
                      radius: 4
                  },
                  splines: {
                      show: true,
                      tension: 0.4,
                      lineWidth: 1,
                      fill: 0.5
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 150, // optional: use it for a clear represetation
                  tickColor: '#eee',
                  position: ($rootScope.app.layout.isRTL ? 'right' : 'left'),
                  tickFormatter: function (v) {
                      return v/* + ' visitors'*/;
                  }
              },
              shadowSize: 0
          };


          vm.seriesData = {
            'CA': 11100,   // Canada
            'DE': 2510,    // Germany
            'FR': 3710,    // France
            'AU': 5710,    // Australia
            'GB': 8310,    // Great Britain
            'RU': 9310,    // Russia
            'BR': 6610,    // Brazil
            'IN': 7810,    // India
            'CN': 4310,    // China
            'US': 839,     // USA
            'SA': 410      // Saudi Arabia
          };
          
          vm.markersData = [
            { latLng:[41.90, 12.45],  name:'Vatican City'          },
            { latLng:[43.73, 7.41],   name:'Monaco'                },
            { latLng:[-0.52, 166.93], name:'Nauru'                 },
            { latLng:[-8.51, 179.21], name:'Tuvalu'                },
            { latLng:[7.11,171.06],   name:'Marshall Islands'      },
            { latLng:[17.3,-62.73],   name:'Saint Kitts and Nevis' },
            { latLng:[3.2,73.22],     name:'Maldives'              },
            { latLng:[35.88,14.5],    name:'Malta'                 },
            { latLng:[41.0,-71.06],   name:'New England'           },
            { latLng:[12.05,-61.75],  name:'Grenada'               },
            { latLng:[13.16,-59.55],  name:'Barbados'              },
            { latLng:[17.11,-61.85],  name:'Antigua and Barbuda'   },
            { latLng:[-4.61,55.45],   name:'Seychelles'            },
            { latLng:[7.35,134.46],   name:'Palau'                 },
            { latLng:[42.5,1.51],     name:'Andorra'               }
          ];
        }
    }
})();
/**=========================================================
 * Module: flatdoc.js
 * Creates the flatdoc markup and initializes the plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.flatdoc')
        .directive('flatdoc', flatdoc);

    function flatdoc () {

        var directive = {
            template: '<div role="flatdoc"><div role="flatdoc-menu"></div><div role="flatdoc-content"></div></div>',
            link: link,
            restrict: 'EA'
        };
        return directive;

        function link(scope, element, attrs) {
          Flatdoc.run({
            fetcher: Flatdoc.file(attrs.src)
          });
          
          var $root = $('html, body');
          $(document).on('flatdoc:ready', function() {
            var docMenu = $('[role="flatdoc-menu"]');
            docMenu.find('a').on('click', function(e) {
              e.preventDefault(); e.stopPropagation();
              
              var $this = $(this);
              
              docMenu.find('a.active').removeClass('active');
              $this.addClass('active');

              $root.animate({
                    scrollTop: $(this.getAttribute('href')).offset().top - ($('.topnavbar').height() + 10)
                }, 800);
            });

          });
        }
    }


})();

/**=========================================================
 * Module: article.js
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.extras')
        .controller('ArticleController', ArticleController);

    function ArticleController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.htmlContent = 'Article content...';

          vm.postDemo = {};
          vm.postDemo.tags = ['coding', 'less'];
          vm.availableTags = ['coding', 'less', 'sass', 'angularjs', 'node', 'expressJS'];
          vm.postDemo.categories = ['JAVASCRIPT','WEB'];
          vm.availableCategories = ['JAVASCRIPT','WEB', 'BOOTSTRAP', 'SERVER', 'HTML5', 'CSS'];

          vm.reviewers = [
            { name: 'Adam',      email: 'adam@email.com',      age: 10 },
            { name: 'Amalie',    email: 'amalie@email.com',    age: 12 },
            { name: 'Wladimir',  email: 'wladimir@email.com',  age: 30 },
            { name: 'Samantha',  email: 'samantha@email.com',  age: 31 },
            { name: 'Estefanía', email: 'estefanía@email.com', age: 16 },
            { name: 'Natasha',   email: 'natasha@email.com',   age: 54 },
            { name: 'Nicole',    email: 'nicole@email.com',    age: 43 },
            { name: 'Adrian',    email: 'adrian@email.com',    age: 21 }
          ];


          vm.alerts = [
            { type: 'info', msg: 'There is an autosaved version of this article that is more recent than the version below. <a href="#" class="text-white">Restore</a>' }
          ];

          vm.closeAlert = function(index) {
            vm.alerts.splice(index, 1);
          };
        }
    }
})();

/**=========================================================
 * Module: calendar-ui.js
 * This script handle the calendar demo with draggable 
 * events and events creations
 =========================================================*/

(function () {
    'use strict';

    angular
        .module('app.extras')
        .directive('calendar', calendar);

    calendar.$inject = ['$rootScope', 'SocketService'];
    function calendar($rootScope, SocketService) {
        var directive = {
            link: link,
            restrict: 'EA'
        };
        return directive;

        function link(scope, element) {

            if (!$.fn.fullCalendar) return;

            // The element that will display the calendar
            var calendar = element;
            if (localStorage.getItem('RSK_RM') == 'Y')
            {
                var url = "api/visitReport/GetRMCalenderDtl";
            }
            else if (localStorage.getItem('RSK_RM') == 'N') {
                var url = "api/zonalAllocation/GetZRMCalenderDtl";
            }
            else if (localStorage.getItem('CC') == 'Y') {
                var url = "api/MstCC/GetCCCalenderDtl";
            }
            else if (localStorage.getItem('AgrCC') == 'Y') {
                var url = "api/AgrTrnCC/GetCCCalenderDtl";
            }
            else {
                var url = "api/holidayCalender/event";
            }
          
            SocketService.get(url).then(function (resp) {

                var eventarray = resp.data.createevent;
                 
                if (eventarray == null) {

                    initExternalEvents(calendar);

                    initCalendar(calendar, demoEvents, $rootScope.app.layout.isRTL);
                }
                else
                {
                    var demoEvents = createDemoEvents(eventarray);

                    initExternalEvents(calendar);

                    initCalendar(calendar, demoEvents, $rootScope.app.layout.isRTL);
                }
                
            });
        }
    }


    // global shared var to know what we are dragging
    var draggingEvent = null;


    /**
     * ExternalEvent object
     * @param jQuery Object elements Set of element as jQuery objects
     */
    function ExternalEvent(elements) {

        if (!elements) return;

        elements.each(function () {
            var $this = $(this);
            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var calendarEventObject = {
                title: $.trim($this.text()) // use the element's text as the event title
            };

            // store the Event Object in the DOM element so we can get to it later
            $this.data('calendarEventObject', calendarEventObject);

            // make the event draggable using jQuery UI
            $this.draggable({
                zIndex: 1070,
                revert: true, // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });

        });
    }

    /**
     * Invoke full calendar plugin and attach behavior
     * @param  jQuery [calElement] The calendar dom element wrapped into jQuery
     * @param  EventObject [events] An object with the event list to load when the calendar displays
     */
    function initCalendar(calElement, events, isRTL) {

        // check to remove elements from the list
        var removeAfterDrop = $('#remove-after-drop');

        calElement.fullCalendar({
            isRTL: isRTL,
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            buttonIcons: { // note the space at the beginning
                prev: ' fa fa-caret-left',
                next: ' fa fa-caret-right'
            },
            buttonText: {
                today: 'today',
                month: 'month',
                week: 'week',
                day: 'day'
            },
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar 
            drop: function (date, allDay) { // this function is called when something is dropped

                var $this = $(this),
                    // retrieve the dropped element's stored Event Object
                    originalEventObject = $this.data('calendarEventObject');

                // if something went wrong, abort
                if (!originalEventObject) return;

                // clone the object to avoid multiple events with reference to the same object
                var clonedEventObject = $.extend({}, originalEventObject);

                // assign the reported date
                clonedEventObject.start = date;
                clonedEventObject.allDay = allDay;
                clonedEventObject.backgroundColor = $this.css('background-color');
                clonedEventObject.borderColor = $this.css('border-color');

                // render the event on the calendar
                // the last `true` argument determines if the event "sticks" 
                // (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
                calElement.fullCalendar('renderEvent', clonedEventObject, true);

                // if necessary remove the element from the list
                if (removeAfterDrop.is(':checked')) {
                    $this.remove();
                }
            },
            eventDragStart: function (event/*, js, ui*/) {
                draggingEvent = event;
            },
            // This array is the events sources
            events: events
        });
    }

    /**
     * Inits the external events panel
     * @param  jQuery [calElement] The calendar dom element wrapped into jQuery
     */
    function initExternalEvents(calElement) {
        // Panel with the external events list
        var externalEvents = $('.external-events');

        // init the external events in the panel
        new ExternalEvent(externalEvents.children('div'));

        // External event color is danger-red by default
        var currColor = '#f6504d';
        // Color selector button
        var eventAddBtn = $('.external-event-add-btn');
        // New external event name input
        var eventNameInput = $('.external-event-name');
        // Color switchers
        var eventColorSelector = $('.external-event-color-selector .circle');

        // Trash events Droparea 
        $('.external-events-trash').droppable({
            accept: '.fc-event',
            activeClass: 'active',
            hoverClass: 'hovered',
            tolerance: 'touch',
            drop: function (event, ui) {

                // You can use this function to send an ajax request
                // to remove the event from the repository

                if (draggingEvent) {
                    var eid = draggingEvent.id || draggingEvent._id;
                    // Remove the event
                    calElement.fullCalendar('removeEvents', eid);
                    // Remove the dom element
                    ui.draggable.remove();
                    // clear
                    draggingEvent = null;
                }
            }
        });

        eventColorSelector.click(function (e) {
            e.preventDefault();
            var $this = $(this);

            // Save color
            currColor = $this.css('background-color');
            // De-select all and select the current one
            eventColorSelector.removeClass('selected');
            $this.addClass('selected');
        });

        eventAddBtn.click(function (e) {
            e.preventDefault();

            // Get event name from input
            var val = eventNameInput.val();
            // Dont allow empty values
            if ($.trim(val) === '') return;

            // Create new event element
            var newEvent = $('<div/>').css({
                'background-color': currColor,
                'border-color': currColor,
                'color': '#fff'
            })
                            .html(val);

            // Prepends to the external events list
            externalEvents.prepend(newEvent);
            // Initialize the new event element
            new ExternalEvent(newEvent);
            // Clear input
            eventNameInput.val('');
        });
    }

    /**
     * Creates an array of events to display in the first load of the calendar
     * Wrap into this function a request to a source to get via ajax the stored events
     * @return Array The array with the events
     */
    function createDemoEvents(eventarray) {
        var i = 0, totalcount = eventarray.length;
        var items = [];
        for (i = 0; i < totalcount; i++) {
            var eventarraylist = eventarray[i];
            
            let date = new Date(eventarraylist.event_date);
            
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear();
           
            let time =new Date(eventarraylist.event_time)
            var HH = time.getHours(),
                mm = time.getMinutes();
            
            eventarraylist = {
              
                title: eventarraylist.event_title,
                time : time,
                start: new Date(y, m, d, HH, mm,'0','0'),
                             backgroundColor: '#f56954', //red 
                             borderColor: '#f56954' //red
                
            }
          
            items.push(eventarraylist);
           
        }
        return items;
    }

})();

(function() {
    'use strict';

    angular
        .module('app.extras')
        .service('LoadTreeService', LoadTreeService);

    LoadTreeService.$inject = ['$resource'];
    function LoadTreeService($resource) {
        // Loads the list of files to populate the treeview
        return $resource('server/editor/filetree.json');
    }

})();
/**=========================================================
 * Module: code-editor.js
 * Codemirror code editor controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.extras')
        .controller('CodeEditorController', CodeEditorController);

    CodeEditorController.$inject = ['$rootScope', '$scope', '$http', '$ocLazyLoad', 'filetree'];
    function CodeEditorController($rootScope, $scope, $http, $ocLazyLoad, filetree) {
        var vm = this;

        layout();
        activate();

        ////////////////
        /*jshint -W106*/
        function layout() {
          // Setup the layout mode 
          $rootScope.app.useFullLayout = true;
          $rootScope.app.hiddenFooter = true;
          $rootScope.app.layout.isCollapsed = true;
          
          // Restore layout for demo
          $scope.$on('$destroy', function(){
              $rootScope.app.useFullLayout = false;
              $rootScope.app.hiddenFooter = false;
          });

        }

        function activate() {

          // Set the tree data into the scope
          vm.filetree_data = filetree;

          // Available themes
          vm.editorThemes = ['3024-day','3024-night','ambiance-mobile','ambiance','base16-dark','base16-light','blackboard','cobalt','eclipse','elegant','erlang-dark','lesser-dark','mbo','mdn-like','midnight','monokai','neat','neo','night','paraiso-dark','paraiso-light','pastel-on-dark','rubyblue','solarized','the-matrix','tomorrow-night-eighties','twilight','vibrant-ink','xq-dark','xq-light'];

          vm.editorOpts = {
            mode: 'javascript',
            lineNumbers: true,
            matchBrackets: true,
            theme: 'mbo',
            viewportMargin: Infinity
          };

          vm.refreshEditor = 0;

          // Load dinamically the stylesheet for the selected theme
          // You can use ozLazyLoad to load also the mode js based 
          // on the file extension that is loaded (see handle_filetree)
          vm.loadTheme = function() {
            var BASE = 'vendor/codemirror/theme/';
            $ocLazyLoad.load(BASE + vm.editorOpts.theme + '.css');
            vm.refreshEditor = !vm.refreshEditor;
          };
          // load default theme
          vm.loadTheme(vm.editorOpts.theme);
          // Add some initial text
          vm.code = '// Open a file from the left menu \n' +
                        '// It will be requested to the server and loaded into the editor\n' +
                        '// Also try adding a New File from the toolbar\n';


          // Tree

          var selectedBranch;
          vm.handle_filetree = function(branch) {
            
            selectedBranch = branch;

            var basePath = 'server/editor/';
            var isFolder = !!branch.children.length;

            console.log('You selected: ' + branch.label + ' - isFolder? ' + isFolder);

            if ( ! isFolder ) {

              $http
                .get( basePath + branch.path )
                .success(function(response){
                  
                  console.log('Loaded.. ' + branch.path);
                  // set the new code into the editor
                  vm.code = response;
                  
                  vm.editorOpts.mode = detectMode(branch.path);
                  console.log( 'Mode is: ' + vm.editorOpts.mode);

                });
            }
          };

          function detectMode(file) {
            var ext = file.split('.');
            ext = ext ? ext[ext.length - 1] : '';
            switch (ext) {
              case 'html':  return 'htmlmixed';
              case 'css':   return 'css';
              default:      return 'javascript';
            }
          }

          var tree;
          tree = vm.filetree = {};

          // Adds a new branch to the tree
          vm.new_filetree = function() {
            var b;
            b = tree.get_selected_branch();

            // if we select a leaf -> select the parent folder
            if ( b && b.children.length === 0 ) {
              b = tree.get_parent_branch(b);
            }
            
            return tree.add_branch(b, {
              'label': 'another.html',
              'path': 'source/another.html'
            });
          };
        }
    }
})();


(function() {
    'use strict';

    angular
        .module('app.extras')
        .controller('TodoController', TodoController);

    TodoController.$inject = ['$filter'];
    function TodoController($filter) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
           vm.items = [
            {
              todo: {title: 'Meeting with Mark at 7am.', description: 'Pellentesque convallis mauris eu elit imperdiet quis eleifend quam aliquet. '},
              complete: true
            },
            {
              todo: {title: 'Call Sonya. Talk about the new project.', description: ''},
              complete: false
            },
            {
              todo: {title: 'Find a new place for vacations', description: ''},
              complete: false
            }
            ];
          
          vm.editingTodo = false;
          vm.todo = {};

          vm.addTodo = function() {
            
            if( vm.todo.title === '' ) return;
            if( !vm.todo.description ) vm.todo.description = '';
            
            if( vm.editingTodo ) {
              vm.todo = {};
              vm.editingTodo = false;
            }
            else {
              vm.items.push({todo: angular.copy(vm.todo), complete: false});
              vm.todo.title = '';
              vm.todo.description = '';
            }
          };
          
          vm.editTodo = function(index, $event) {
            $event.preventDefault();
            $event.stopPropagation();
            vm.todo = vm.items[index].todo;
            vm.editingTodo = true;
          };

          vm.removeTodo = function(index/*, $event*/) {
            vm.items.splice(index, 1);
          };
          
          vm.clearAll = function() {
            vm.items = [];
          };

          vm.totalCompleted = function() {
            return $filter('filter')(vm.items, function(item){
              return item.complete;
            }).length;
          };

          vm.totalPending = function() {
            return $filter('filter')(vm.items, function(item){
              return !item.complete;
            }).length;
          };

        }
    }
})();

/**=========================================================
 * Module: word-cloud.js
 * Controller for jqCloud
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.extras')
        .controller('WordCloudController', WordCloudController);

    function WordCloudController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.words = [
              {
                text: 'Lorem',
                weight: 13
                //link: 'http://themicon.co'
              }, {
                text: 'Ipsum',
                weight: 10.5
              }, {
                text: 'Dolor',
                weight: 9.4
              }, {
                text: 'Sit',
                weight: 8
              }, {
                text: 'Amet',
                weight: 6.2
              }, {
                text: 'Consectetur',
                weight: 5
              }, {
                text: 'Adipiscing',
                weight: 5
              }, {
                text: 'Sit',
                weight: 8
              }, {
                text: 'Amet',
                weight: 6.2
              }, {
                text: 'Consectetur',
                weight: 5
              }, {
                text: 'Adipiscing',
                weight: 5
              }
          ];
        }
    }
})();

(function() {
    'use strict';

    angular
        .module('app.loadingbar')
        .config(loadingbarConfig)
        ;
    loadingbarConfig.$inject = ['cfpLoadingBarProvider'];
    function loadingbarConfig(cfpLoadingBarProvider){
      cfpLoadingBarProvider.includeBar = true;
      cfpLoadingBarProvider.includeSpinner = false;
      cfpLoadingBarProvider.latencyThreshold = 500;
      cfpLoadingBarProvider.parentSelector = '.wrapper > section';
    }
})();
(function() {
    'use strict';

    angular
        .module('app.loadingbar')
        .run(loadingbarRun)
        ;
    loadingbarRun.$inject = ['$rootScope', '$timeout', 'cfpLoadingBar'];
    function loadingbarRun($rootScope, $timeout, cfpLoadingBar){

      // Loading bar transition
      // ----------------------------------- 
      var thBar;
      $rootScope.$on('$stateChangeStart', function() {
          if($('.wrapper > section').length) // check if bar container exists
            thBar = $timeout(function() {
              cfpLoadingBar.start();
            }, 0); // sets a latency Threshold
      });
      $rootScope.$on('$stateChangeSuccess', function(event) {
          event.targetScope.$watch('$viewContentLoaded', function () {
            $timeout.cancel(thBar);
            cfpLoadingBar.complete();
          });
      });

    }

})();
/**=========================================================
 * Module: skycons.js
 * Include any animated weather icon from Skycons
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.icons')
        .directive('skycon', skycon);

    function skycon () {

        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element, attrs) {
          var skycons = new Skycons({'color': (attrs.color || 'white')});

          element.html('<canvas width="' + attrs.width + '" height="' + attrs.height + '"></canvas>');

          skycons.add(element.children()[0], attrs.skycon);

          skycons.play();
        }
    }

})();

/**=========================================================
 * Module: chartist.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('ChartistController', ChartistController);

    function ChartistController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // Line chart
          // ----------------------------------- 

          vm.lineData = {
            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
            series: [
              [12, 9, 7, 8, 5],
              [2, 1, 3.5, 7, 3],
              [1, 3, 4, 5, 6]
            ]
          };

          vm.lineOptions = {
            fullWidth: true,
            height: 220,
            chartPadding: {
              right: 40
            }
          };

          // Bar bipolar
          // ----------------------------------- 

          vm.barBipolarOptions = {
            high: 10,
            low: -10,
            height: 220,
            axisX: {
              labelInterpolationFnc: function(value, index) {
                return index % 2 === 0 ? value : null;
              }
            }
          };

          vm.barBipolarData = {
            labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],
            series: [
              [1, 2, 4, 8, 6, -2, -1, -4, -6, -2]
            ]
          };


          // Bar horizontal
          // ----------------------------------- 

          vm.barHorizontalData = {
            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
            series: [
              [5, 4, 3, 7, 5, 10, 3],
              [3, 2, 9, 5, 4, 6, 4]
            ]
          };

          vm.barHorizontalOptions = {
            seriesBarDistance: 10,
            reverseData: true,
            horizontalBars: true,
            height: 220,
            axisY: {
              offset: 70
            }
          };

          // Smil Animations
          // ----------------------------------- 

          // Let's put a sequence number aside so we can use it in the event callbacks
          var seq = 0,
            delays = 80,
            durations = 500;

          vm.smilData = {
            labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
            series: [
              [12, 9, 7, 8, 5, 4, 6, 2, 3, 3, 4, 6],
              [4,  5, 3, 7, 3, 5, 5, 3, 4, 4, 5, 5],
              [5,  3, 4, 5, 6, 3, 3, 4, 5, 6, 3, 4],
              [3,  4, 5, 6, 7, 6, 4, 5, 6, 7, 6, 3]
            ]
          };

          vm.smilOptions = {
            low: 0,
            height: 260
          };

          vm.smilEvents = {
            created: function() {
              seq = 0;
            },
            draw: function(data) {
              seq++;

              if(data.type === 'line') {
                // If the drawn element is a line we do a simple opacity fade in. This could also be achieved using CSS3 animations.
                data.element.animate({
                  opacity: {
                    // The delay when we like to start the animation
                    begin: seq * delays + 1000,
                    // Duration of the animation
                    dur: durations,
                    // The value where the animation should start
                    from: 0,
                    // The value where it should end
                    to: 1
                  }
                });
              } else if(data.type === 'label' && data.axis === 'x') {
                data.element.animate({
                  y: {
                    begin: seq * delays,
                    dur: durations,
                    from: data.y + 100,
                    to: data.y,
                    // We can specify an easing function from Chartist.Svg.Easing
                    easing: 'easeOutQuart'
                  }
                });
              } else if(data.type === 'label' && data.axis === 'y') {
                data.element.animate({
                  x: {
                    begin: seq * delays,
                    dur: durations,
                    from: data.x - 100,
                    to: data.x,
                    easing: 'easeOutQuart'
                  }
                });
              } else if(data.type === 'point') {
                data.element.animate({
                  x1: {
                    begin: seq * delays,
                    dur: durations,
                    from: data.x - 10,
                    to: data.x,
                    easing: 'easeOutQuart'
                  },
                  x2: {
                    begin: seq * delays,
                    dur: durations,
                    from: data.x - 10,
                    to: data.x,
                    easing: 'easeOutQuart'
                  },
                  opacity: {
                    begin: seq * delays,
                    dur: durations,
                    from: 0,
                    to: 1,
                    easing: 'easeOutQuart'
                  }
                });
              } 
            }
          };


          // SVG PATH animation
          // ----------------------------------- 

          vm.pathData = {
            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            series: [
              [1, 5, 2, 5, 4, 3],
              [2, 3, 4, 8, 1, 2],
              [5, 4, 3, 2, 1, 0.5]
            ]
          };

          vm.pathOptions = {
            low: 0,
            showArea: true,
            showPoint: false,
            fullWidth: true,
            height: 260
          };

          vm.pathEvents = {
            draw: function(data) {
              if(data.type === 'line' || data.type === 'area') {
                data.element.animate({
                  d: {
                    begin: 2000 * data.index,
                    dur: 2000,
                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
                    to: data.path.clone().stringify(),
                    easing: Chartist.Svg.Easing.easeOutQuint
                  }
                });
              }
            }
          };

        }
    }
})();


/**=========================================================
 * Module: chart.controller.js
 * Controller for ChartJs
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('ChartJSController', ChartJSController);

    ChartJSController.$inject = ['Colors'];
    function ChartJSController(Colors) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // random values for demo
          var rFactor = function(){ return Math.round(Math.random()*100); };

          // Line chart
          // ----------------------------------- 

          vm.lineData = {
              labels : ['January','February','March','April','May','June','July'],
              datasets : [
                {
                  label: 'My First dataset',
                  fillColor : 'rgba(114,102,186,0.2)',
                  strokeColor : 'rgba(114,102,186,1)',
                  pointColor : 'rgba(114,102,186,1)',
                  pointStrokeColor : '#fff',
                  pointHighlightFill : '#fff',
                  pointHighlightStroke : 'rgba(114,102,186,1)',
                  data : [rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor()]
                },
                {
                  label: 'My Second dataset',
                  fillColor : 'rgba(35,183,229,0.2)',
                  strokeColor : 'rgba(35,183,229,1)',
                  pointColor : 'rgba(35,183,229,1)',
                  pointStrokeColor : '#fff',
                  pointHighlightFill : '#fff',
                  pointHighlightStroke : 'rgba(35,183,229,1)',
                  data : [rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor()]
                }
              ]
            };


          vm.lineOptions = {
            scaleShowGridLines : true,
            scaleGridLineColor : 'rgba(0,0,0,.05)',
            scaleGridLineWidth : 1,
            bezierCurve : true,
            bezierCurveTension : 0.4,
            pointDot : true,
            pointDotRadius : 4,
            pointDotStrokeWidth : 1,
            pointHitDetectionRadius : 20,
            datasetStroke : true,
            datasetStrokeWidth : 2,
            datasetFill : true,
          };


          // Bar chart
          // ----------------------------------- 

          vm.barData = {
              labels : ['January','February','March','April','May','June','July'],
              datasets : [
                {
                  fillColor : Colors.byName('info'),
                  strokeColor : Colors.byName('info'),
                  highlightFill: Colors.byName('info'),
                  highlightStroke: Colors.byName('info'),
                  data : [rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor()]
                },
                {
                  fillColor : Colors.byName('primary'),
                  strokeColor : Colors.byName('primary'),
                  highlightFill : Colors.byName('primary'),
                  highlightStroke : Colors.byName('primary'),
                  data : [rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor(),rFactor()]
                }
              ]
          };
          
          vm.barOptions = {
            scaleBeginAtZero : true,
            scaleShowGridLines : true,
            scaleGridLineColor : 'rgba(0,0,0,.05)',
            scaleGridLineWidth : 1,
            barShowStroke : true,
            barStrokeWidth : 2,
            barValueSpacing : 5,
            barDatasetSpacing : 1,
          };


          //  Doughnut chart
          // ----------------------------------- 
          
          vm.doughnutData = [
                {
                  value: 300,
                  color: Colors.byName('purple'),
                  highlight: Colors.byName('purple'),
                  label: 'Purple'
                },
                {
                  value: 50,
                  color: Colors.byName('info'),
                  highlight: Colors.byName('info'),
                  label: 'Info'
                },
                {
                  value: 100,
                  color: Colors.byName('yellow'),
                  highlight: Colors.byName('yellow'),
                  label: 'Yellow'
                }
              ];

          vm.doughnutOptions = {
            segmentShowStroke : true,
            segmentStrokeColor : '#fff',
            segmentStrokeWidth : 2,
            percentageInnerCutout : 85,
            animationSteps : 100,
            animationEasing : 'easeOutBounce',
            animateRotate : true,
            animateScale : false
          };

          // Pie chart
          // ----------------------------------- 

          vm.pieData =[
                {
                  value: 300,
                  color: Colors.byName('purple'),
                  highlight: Colors.byName('purple'),
                  label: 'Purple'
                },
                {
                  value: 40,
                  color: Colors.byName('yellow'),
                  highlight: Colors.byName('yellow'),
                  label: 'Yellow'
                },
                {
                  value: 120,
                  color: Colors.byName('info'),
                  highlight: Colors.byName('info'),
                  label: 'Info'
                }
              ];

          vm.pieOptions = {
            segmentShowStroke : true,
            segmentStrokeColor : '#fff',
            segmentStrokeWidth : 2,
            percentageInnerCutout : 0, // Setting this to zero convert a doughnut into a Pie
            animationSteps : 100,
            animationEasing : 'easeOutBounce',
            animateRotate : true,
            animateScale : false
          };

          // Polar chart
          // ----------------------------------- 
          
          vm.polarData = [
                {
                  value: 300,
                  color: Colors.byName('pink'),
                  highlight: Colors.byName('pink'),
                  label: 'Red'
                },
                {
                  value: 50,
                  color: Colors.byName('purple'),
                  highlight: Colors.byName('purple'),
                  label: 'Green'
                },
                {
                  value: 100,
                  color: Colors.byName('pink'),
                  highlight: Colors.byName('pink'),
                  label: 'Yellow'
                },
                {
                  value: 140,
                  color: Colors.byName('purple'),
                  highlight: Colors.byName('purple'),
                  label: 'Grey'
                },
              ];

          vm.polarOptions = {
            scaleShowLabelBackdrop : true,
            scaleBackdropColor : 'rgba(255,255,255,0.75)',
            scaleBeginAtZero : true,
            scaleBackdropPaddingY : 1,
            scaleBackdropPaddingX : 1,
            scaleShowLine : true,
            segmentShowStroke : true,
            segmentStrokeColor : '#fff',
            segmentStrokeWidth : 2,
            animationSteps : 100,
            animationEasing : 'easeOutBounce',
            animateRotate : true,
            animateScale : false
          };


          // Radar chart
          // ----------------------------------- 

          vm.radarData = {
            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],
            datasets: [
              {
                label: 'My First dataset',
                fillColor: 'rgba(114,102,186,0.2)',
                strokeColor: 'rgba(114,102,186,1)',
                pointColor: 'rgba(114,102,186,1)',
                pointStrokeColor: '#fff',
                pointHighlightFill: '#fff',
                pointHighlightStroke: 'rgba(114,102,186,1)',
                data: [65,59,90,81,56,55,40]
              },
              {
                label: 'My Second dataset',
                fillColor: 'rgba(151,187,205,0.2)',
                strokeColor: 'rgba(151,187,205,1)',
                pointColor: 'rgba(151,187,205,1)',
                pointStrokeColor: '#fff',
                pointHighlightFill: '#fff',
                pointHighlightStroke: 'rgba(151,187,205,1)',
                data: [28,48,40,19,96,27,100]
              }
            ]
          };

          vm.radarOptions = {
            scaleShowLine : true,
            angleShowLineOut : true,
            scaleShowLabels : false,
            scaleBeginAtZero : true,
            angleLineColor : 'rgba(0,0,0,.1)',
            angleLineWidth : 1,
            /*jshint -W109*/
            pointLabelFontFamily : "'Arial'",
            pointLabelFontStyle : 'bold',
            pointLabelFontSize : 10,
            pointLabelFontColor : '#565656',
            pointDot : true,
            pointDotRadius : 3,
            pointDotStrokeWidth : 1,
            pointHitDetectionRadius : 20,
            datasetStroke : true,
            datasetStrokeWidth : 2,
            datasetFill : true
          };
        }
    }
})();

/**=========================================================
 * Module: chart.js
 * Wrapper directive for chartJS. 
 * Based on https://gist.github.com/AndreasHeiberg/9837868
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        /* Aliases for various chart types */
        .directive('linechart',     chartJS('Line')      )
        .directive('barchart',      chartJS('Bar')       )
        .directive('radarchart',    chartJS('Radar')     )
        .directive('polarchart',    chartJS('PolarArea') )
        .directive('piechart',      chartJS('Pie')       )
        .directive('doughnutchart', chartJS('Doughnut')  )
        .directive('donutchart',    chartJS('Doughnut')  )
        ;

    function chartJS(type) {
        return function() {
            return {
                restrict: 'A',
                scope: {
                    data: '=',
                    options: '=',
                    id: '@',
                    width: '=',
                    height: '=',
                    resize: '=',
                    chart: '@',
                    segments: '@',
                    responsive: '=',
                    tooltip: '=',
                    legend: '='
                },
                link: function ($scope, $elem) {
                    var ctx = $elem[0].getContext('2d');
                    var autosize = false;

                    $scope.size = function () {
                        if ($scope.width <= 0) {
                            $elem.width($elem.parent().width());
                            ctx.canvas.width = $elem.width();
                        } else {
                            ctx.canvas.width = $scope.width || ctx.canvas.width;
                            autosize = true;
                        }

                        if($scope.height <= 0){
                            $elem.height($elem.parent().height());
                            ctx.canvas.height = ctx.canvas.width / 2;
                        } else {
                            ctx.canvas.height = $scope.height || ctx.canvas.height;
                            autosize = true;
                        }
                    };

                    $scope.$watch('data', function (newVal) {
                        if(chartCreated)
                            chartCreated.destroy();

                        // if data not defined, exit
                        if (!newVal) {
                            return;
                        }
                        if ($scope.chart) { type = $scope.chart; }

                        if(autosize){
                            $scope.size();
                            chart = new Chart(ctx);
                        }

                        if($scope.responsive || $scope.resize)
                            $scope.options.responsive = true;

                        if($scope.responsive !== undefined)
                            $scope.options.responsive = $scope.responsive;

                        chartCreated = chart[type]($scope.data, $scope.options);
                        chartCreated.update();
                        if($scope.legend)
                            angular.element($elem[0]).parent().after( chartCreated.generateLegend() );
                    }, true);

                    $scope.$watch('tooltip', function (newVal) {
                        if (chartCreated)
                            chartCreated.draw();
                        if(newVal===undefined || !chartCreated.segments)
                            return;
                        if(!isFinite(newVal) || newVal >= chartCreated.segments.length || newVal < 0)
                            return;
                        var activeSegment = chartCreated.segments[newVal];
                        activeSegment.save();
                        activeSegment.fillColor = activeSegment.highlightColor;
                        chartCreated.showTooltip([activeSegment]);
                        activeSegment.restore();
                    }, true);

                    $scope.size();
                    var chart = new Chart(ctx);
                    var chartCreated;
                }
            };
        };
    }
})();





/**=========================================================
 * Module: classy-loader.js
 * Enable use of classyloader directly from data attributes
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .directive('classyloader', classyloader);

    classyloader.$inject = ['$timeout', 'Utils', '$window'];
    function classyloader ($timeout, Utils, $window) {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          var $scroller       = $($window),
              inViewFlagClass = 'js-is-in-view'; // a classname to detect when a chart has been triggered after scroll

          // run after interpolation  
          $timeout(function(){
      
            var $element = $(element),
                options  = $element.data();
            
            // At lease we need a data-percentage attribute
            if(options) {
              if( options.triggerInView ) {

                $scroller.scroll(function() {
                  checkLoaderInVIew($element, options);
                });
                // if the element starts already in view
                checkLoaderInVIew($element, options);
              }
              else
                startLoader($element, options);
            }

          }, 0);

          function checkLoaderInVIew(element, options) {
            var offset = -20;
            if( ! element.hasClass(inViewFlagClass) &&
                Utils.isInView(element, {topoffset: offset}) ) {
              startLoader(element, options);
            }
          }
          function startLoader(element, options) {
            element.ClassyLoader(options).addClass(inViewFlagClass);
          }
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('app.charts')
        .service('ChartData', ChartData);

    ChartData.$inject = ['$resource'];
    function ChartData($resource) {
        this.load = load;

        ////////////////
      
        var opts = {
            get: { method: 'GET', isArray: true }
          };
        function load(source) {
          return $resource(source, {}, opts).get();
        }
    }
})();

/**=========================================================
 * Module: flot-chart.js
 * Setup options and data for flot chart directive
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('FlotChartController', FlotChartController);

    FlotChartController.$inject = ['$scope', 'ChartData', '$timeout'];
    function FlotChartController($scope, ChartData, $timeout) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // BAR
          // ----------------------------------- 
          vm.barData = ChartData.load('server/chart/bar.json');
          vm.barOptions = {
              series: {
                  bars: {
                      align: 'center',
                      lineWidth: 0,
                      show: true,
                      barWidth: 0.6,
                      fill: 0.9
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickColor: '#eee'
              },
              shadowSize: 0
          };

          // BAR STACKED
          // ----------------------------------- 
          vm.barStackeData = ChartData.load('server/chart/barstacked.json');
          vm.barStackedOptions = {
              series: {
                  stack: true,
                  bars: {
                      align: 'center',
                      lineWidth: 0,
                      show: true,
                      barWidth: 0.6,
                      fill: 0.9
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 200, // optional: use it for a clear represetation
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickColor: '#eee'
              },
              shadowSize: 0
          };

          // SPLINE
          // ----------------------------------- 
          vm.splineData = ChartData.load('server/chart/spline.json');
          vm.splineOptions = {
              series: {
                  lines: {
                      show: false
                  },
                  points: {
                      show: true,
                      radius: 4
                  },
                  splines: {
                      show: true,
                      tension: 0.4,
                      lineWidth: 1,
                      fill: 0.5
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  max: 150, // optional: use it for a clear represetation
                  tickColor: '#eee',
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickFormatter: function (v) {
                      return v/* + ' visitors'*/;
                  }
              },
              shadowSize: 0
          };

          // AREA
          // ----------------------------------- 
          vm.areaData = ChartData.load('server/chart/area.json');
          vm.areaOptions = {
              series: {
                  lines: {
                      show: true,
                      fill: 0.8
                  },
                  points: {
                      show: true,
                      radius: 4
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#fcfcfc',
                  mode: 'categories'
              },
              yaxis: {
                  min: 0,
                  tickColor: '#eee',
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickFormatter: function (v) {
                      return v + ' visitors';
                  }
              },
              shadowSize: 0
          };

          // LINE
          // ----------------------------------- 
          vm.lineData = ChartData.load('server/chart/line.json');
          vm.lineOptions = {
              series: {
                  lines: {
                      show: true,
                      fill: 0.01
                  },
                  points: {
                      show: true,
                      radius: 4
                  }
              },
              grid: {
                  borderColor: '#eee',
                  borderWidth: 1,
                  hoverable: true,
                  backgroundColor: '#fcfcfc'
              },
              tooltip: true,
              tooltipOpts: {
                  content: function (label, x, y) { return x + ' : ' + y; }
              },
              xaxis: {
                  tickColor: '#eee',
                  mode: 'categories'
              },
              yaxis: {
                  position: ($scope.app.layout.isRTL ? 'right' : 'left'),
                  tickColor: '#eee'
              },
              shadowSize: 0
          };

          // PIE
          // ----------------------------------- 
          vm.pieData = ChartData.load('server/chart/pie.json');
          vm.pieOptions = {
              series: {
                  pie: {
                      show: true,
                      innerRadius: 0,
                      label: {
                          show: true,
                          radius: 0.8,
                          formatter: function (label, series) {
                              return '<div class="flot-pie-label">' +
                              //label + ' : ' +
                              Math.round(series.percent) +
                              '%</div>';
                          },
                          background: {
                              opacity: 0.8,
                              color: '#222'
                          }
                      }
                  }
              }
          };

          // DONUT
          // ----------------------------------- 
          vm.donutData = ChartData.load('server/chart/donut.json');
          vm.donutOptions = {
              series: {
                  pie: {
                      show: true,
                      innerRadius: 0.5 // This makes the donut shape
                  }
              }
          };

          // REALTIME
          // ----------------------------------- 
          vm.realTimeOptions = {
              series: {
                lines: { show: true, fill: true, fillColor:  { colors: ['#a0e0f3', '#23b7e5'] } },
                shadowSize: 0 // Drawing is faster without shadows
              },
              grid: {
                  show:false,
                  borderWidth: 0,
                  minBorderMargin: 20,
                  labelMargin: 10
              },
              xaxis: {
                tickFormatter: function() {
                    return '';
                }
              },
              yaxis: {
                  min: 0,
                  max: 110
              },
              legend: {
                  show: true
              },
              colors: ['#23b7e5']
          };

          // Generate random data for realtime demo
          var data = [], totalPoints = 300;
            
          update();

          function getRandomData() {
            if (data.length > 0)
              data = data.slice(1);
            // Do a random walk
            while (data.length < totalPoints) {
              var prev = data.length > 0 ? data[data.length - 1] : 50,
                y = prev + Math.random() * 10 - 5;
              if (y < 0) {
                y = 0;
              } else if (y > 100) {
                y = 100;
              }
              data.push(y);
            }
            // Zip the generated y values with the x values
            var res = [];
            for (var i = 0; i < data.length; ++i) {
              res.push([i, data[i]]);
            }
            return [res];
          }
          function update() {
            vm.realTimeData = getRandomData();
            $timeout(update, 30);
          }
          // end random data generation


          // PANEL REFRESH EVENTS
          // ----------------------------------- 

          $scope.$on('panel-refresh', function(event, id) {
            
            console.log('Simulating chart refresh during 3s on #'+id);

            // Instead of timeout you can request a chart data
            $timeout(function(){
              
              // directive listen for to remove the spinner 
              // after we end up to perform own operations
              $scope.$broadcast('removeSpinner', id);
              
              console.log('Refreshed #' + id);

            }, 3000);

          });


          // PANEL DISMISS EVENTS
          // ----------------------------------- 

          // Before remove panel
          $scope.$on('panel-remove', function(event, id, deferred){
            
            console.log('Panel #' + id + ' removing');
            
            // Here is obligatory to call the resolve() if we pretend to remove the panel finally
            // Not calling resolve() will NOT remove the panel
            // It's up to your app to decide if panel should be removed or not
            deferred.resolve();
          
          });

          // Panel removed ( only if above was resolved() )
          $scope.$on('panel-removed', function(event, id){

            console.log('Panel #' + id + ' removed');

          });

        }
    }
})();

/**=========================================================
 * Module: flot.js
 * Initializes the Flot chart plugin and handles data refresh
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .directive('flot', flot);

    flot.$inject = ['$http', '$timeout'];
    function flot ($http, $timeout) {

        var directive = {
          restrict: 'EA',
          template: '<div></div>',
          scope: {
            dataset: '=?',
            options: '=',
            series: '=',
            callback: '=',
            src: '='
          },
          link: link
        };
        return directive;

        function link(scope, element, attrs) {
          var height, plot, plotArea, width;
          var heightDefault = 220;

          plot = null;

          width = attrs.width || '100%';
          height = attrs.height || heightDefault;

          plotArea = $(element.children()[0]);
          plotArea.css({
            width: width,
            height: height
          });

          function init() {
            var plotObj;
            if(!scope.dataset || !scope.options) return;
            plotObj = $.plot(plotArea, scope.dataset, scope.options);
            scope.$emit('plotReady', plotObj);
            if (scope.callback) {
              scope.callback(plotObj, scope);
            }

            return plotObj;
          }

          function onDatasetChanged(dataset) {
            if (plot) {
              plot.setData(dataset);
              plot.setupGrid();
              return plot.draw();
            } else {
              plot = init();
              onSerieToggled(scope.series);
              return plot;
            }
          }
          scope.$watchCollection('dataset', onDatasetChanged, true);

          function onSerieToggled (series) {
            if( !plot || !series ) return;
            var someData = plot.getData();
            for(var sName in series) {
              angular.forEach(series[sName], toggleFor(sName));
            }
            
            plot.setData(someData);
            plot.draw();
            
            function toggleFor(sName) {
              return function (s, i){
                if(someData[i] && someData[i][sName])
                  someData[i][sName].show = s;
              };
            }
          }
          scope.$watch('series', onSerieToggled, true);
          
          function onSrcChanged(src) {

            if( src ) {

              $http.get(src)
                .success(function (data) {

                  $timeout(function(){
                    scope.dataset = data;
                  });

              }).error(function(){
                $.error('Flot chart: Bad request.');
              });
              
            }
          }
          scope.$watch('src', onSrcChanged);

        }
    }


})();

/**=========================================================
 * Module: morris.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('ChartMorrisController', ChartMorrisController);

    ChartMorrisController.$inject = ['$timeout', 'Colors'];
    function ChartMorrisController($timeout, Colors) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
         vm.chartdata = [
              { y: '2006', a: 100, b: 90 },
              { y: '2007', a: 75,  b: 65 },
              { y: '2008', a: 50,  b: 40 },
              { y: '2009', a: 75,  b: 65 },
              { y: '2010', a: 50,  b: 40 },
              { y: '2011', a: 75,  b: 65 },
              { y: '2012', a: 100, b: 90 }
          ];

          /* test data update
          $timeout(function(){
            vm.chartdata[0].a = 50;
            vm.chartdata[0].b = 50;
          }, 3000); */

          vm.donutdata = [
            {label: 'Download Sales', value: 12},
            {label: 'In-Store Sales',value: 30},
            {label: 'Mail-Order Sales', value: 20}
          ];

          vm.donutOptions = {
            Colors: [ Colors.byName('danger'), Colors.byName('yellow'), Colors.byName('warning') ],
            resize: true
          };

          vm.barOptions = {
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Series A', 'Series B'],
            xLabelMargin: 2,
            barColors: [ Colors.byName('info'), Colors.byName('danger') ],
            resize: true
          };

          vm.lineOptions = {
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Serie A', 'Serie B'],
            lineColors: ['#31C0BE', '#7a92a3'],
            resize: true
          };

          vm.areaOptions = {
            xkey: 'y',
            ykeys: ['a', 'b'],
            labels: ['Serie A', 'Serie B'],
            lineColors: [ Colors.byName('purple'), Colors.byName('info') ],
            resize: true
          };

        }
    }
})();

/**=========================================================
 * Module: morris.js
 * AngularJS Directives for Morris Charts
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .directive('morrisBar',   morrisChart('Bar')   )
        .directive('morrisDonut', morrisChart('Donut') )
        .directive('morrisLine',  morrisChart('Line')  )
        .directive('morrisArea',  morrisChart('Area')  );

    function morrisChart(type) {
      return function () {
        return {
          restrict: 'EA',
          scope: {
            morrisData: '=',
            morrisOptions: '='
          },
          link: function($scope, element) {
            // start ready to watch for changes in data
            $scope.$watch('morrisData', function(newVal) {
              if (newVal) {
                $scope.morrisInstance.setData(newVal);
                $scope.morrisInstance.redraw();
              }
            }, true);
            // the element that contains the chart
            $scope.morrisOptions.element = element;
            // If data defined copy to options
            if($scope.morrisData)
              $scope.morrisOptions.data = $scope.morrisData;
            // Init chart
            $scope.morrisInstance = new Morris[type]($scope.morrisOptions);

          }
        };
      };
    }

})();

/**=========================================================
 * Module: PieChartsController.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('PieChartsController', PieChartsController);

    /*jshint -W069*/
    PieChartsController.$inject = ['Colors'];

    function PieChartsController(Colors) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // KNOB Charts

          vm.knobLoaderData1 = 80;
          vm.knobLoaderOptions1 = {
              width: '50%', // responsive
              displayInput: true,
              fgColor: Colors.byName('info')
            };

          vm.knobLoaderData2 = 45;
          vm.knobLoaderOptions2 = {
              width: '50%', // responsive
              displayInput: true,
              fgColor: Colors.byName('purple'),
              readOnly : true
            };

          vm.knobLoaderData3 = 30;
          vm.knobLoaderOptions3 = {
              width: '50%', // responsive
              displayInput: true,
              fgColor: Colors.byName('pink'),
              displayPrevious : true,
              thickness : 0.1,
              lineCap : 'round'
            };

          vm.knobLoaderData4 = 20;
          vm.knobLoaderOptions4 = {
              width: '50%', // responsive
              displayInput: true,
              fgColor: Colors.byName('info'),
              bgColor: Colors.byName('gray'),
              angleOffset: -125,
              angleArc: 250
            };

          // Easy Pie Charts

          vm.piePercent1 = 85;
          vm.piePercent2 = 45;
          vm.piePercent3 = 25;
          vm.piePercent4 = 60;

          vm.pieOptions1 = {
              animate:{
                  duration: 800,
                  enabled: true
              },
              barColor: Colors.byName('success'),
              trackColor: false,
              scaleColor: false,
              lineWidth: 10,
              lineCap: 'circle'
          };

          vm.pieOptions2= {
              animate:{
                  duration: 800,
                  enabled: true
              },
              barColor: Colors.byName('warning'),
              trackColor: false,
              scaleColor: false,
              lineWidth: 4,
              lineCap: 'circle'
          };

          vm.pieOptions3 = {
              animate:{
                  duration: 800,
                  enabled: true
              },
              barColor: Colors.byName('danger'),
              trackColor: false,
              scaleColor: Colors.byName('gray'),
              lineWidth: 15,
              lineCap: 'circle'
          };

          vm.pieOptions4 = {
              animate:{
                  duration: 800,
                  enabled: true
              },
              barColor: Colors.byName('danger'),
              trackColor: Colors.byName('yellow'),
              scaleColor: Colors.byName('gray-dark'),
              lineWidth: 15,
              lineCap: 'circle'
          };

          vm.randomize = function(type) {
            if ( type === 'easy') {
              vm.piePercent1 = random();
              vm.piePercent2 = random();
              vm.piePercent3 = random();
              vm.piePercent4 = random();
            }
            if ( type === 'knob') {
              vm.knobLoaderData1 = random();
              vm.knobLoaderData2 = random();
              vm.knobLoaderData3 = random();
              vm.knobLoaderData4 = random();
            }
          }

          function random() { return Math.floor((Math.random() * 100) + 1); }

        }
    }
})();

/**=========================================================
 * Module: rickshaw.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.charts')
        .controller('ChartRickshawController', ChartRickshawController);

    function ChartRickshawController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.renderers = [{
                  id: 'area',
                  name: 'Area'
              }, {
                  id: 'line',
                  name: 'Line'
              }, {
                  id: 'bar',
                  name: 'Bar'
              }, {
                  id: 'scatterplot',
                  name: 'Scatterplot'
              }];

          vm.palettes = [
              'spectrum14',
              'spectrum2000',
              'spectrum2001',
              'colorwheel',
              'cool',
              'classic9',
              'munin'
          ];

          vm.rendererChanged = function(id) {
              vm['options' + id] = {
                  renderer: vm['renderer' + id].id
              };
          };

          vm.paletteChanged = function(id) {
              vm['features' + id] = {
                  palette: vm['palette' + id]
              };
          };

          vm.changeSeriesData = function(id) {
              var seriesList = [];
              for (var i = 0; i < 3; i++) {
                  var series = {
                      name: 'Series ' + (i + 1),
                      data: []
                  };
                  for (var j = 0; j < 10; j++) {
                      series.data.push({x: j, y: Math.random() * 20});
                  }
                  seriesList.push(series);
                  vm['series' + id][i] = series;
              }
              //vm['series' + id] = seriesList;
          };

          vm.series0 = [];

          vm.options0 = {
            renderer: 'area'
          };

          vm.renderer0 = vm.renderers[0];
          vm.palette0 = vm.palettes[0];

          vm.rendererChanged(0);
          vm.paletteChanged(0);
          vm.changeSeriesData(0);  

          // Graph 2

          var seriesData = [ [], [], [] ];
          var random = new Rickshaw.Fixtures.RandomData(150);

          for (var i = 0; i < 150; i++) {
            random.addData(seriesData);
          }

          vm.series2 = [
            {
              color: '#c05020',
              data: seriesData[0],
              name: 'New York'
            }, {
              color: '#30c020',
              data: seriesData[1],
              name: 'London'
            }, {
              color: '#6060c0',
              data: seriesData[2],
              name: 'Tokyo'
            }
          ];

          vm.options2 = {
            renderer: 'area'
          };

        }
    }
})();

/**=========================================================
 * Module: sparkline.js
 * SparkLines Mini Charts
 =========================================================*/
 
(function() {
    'use strict';

    angular
        .module('app.charts')
        .directive('sparkline', sparkline);

    function sparkline () {
        var directive = {
            restrict: 'EA',
            scope: {
              'sparkline': '='
            },
            controller: Controller
        };
        return directive;

    }
    Controller.$inject = ['$scope', '$element', '$timeout', '$window'];
    function Controller($scope, $element, $timeout, $window) {
      var runSL = function(){
        initSparLine();
      };

      $timeout(runSL);
  
      function initSparLine() {
        var options = $scope.sparkline,
            data = $element.data();
        
        if(!options) // if no scope options, try with data attributes
          options = data;
        else
          if(data) // data attributes overrides scope options
            options = angular.extend({}, options, data);

        options.type = options.type || 'bar'; // default chart is bar
        options.disableHiddenCheck = true;

        $element.sparkline('html', options);

        if(options.resize) {
          $($window).resize(function(){
            $element.sparkline('html', options);
          });
        }
      }

    }
    

})();

(function() {
    'use strict';

    angular
        .module('app.locale')
        .config(localeConfig)
        ;
    localeConfig.$inject = ['tmhDynamicLocaleProvider'];
    function localeConfig(tmhDynamicLocaleProvider){
  
      tmhDynamicLocaleProvider.localeLocationPattern('vendor/angular-i18n/angular-locale_{{locale}}.js');
      // tmhDynamicLocaleProvider.useStorage('$cookieStore');

    }
})();
/**=========================================================
 * Module: locale.js
 * Demo for locale settings
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.locale')
        .controller('LocalizationController', LocalizationController);

    LocalizationController.$inject = ['$rootScope', 'tmhDynamicLocale', '$locale'];
    function LocalizationController($rootScope, tmhDynamicLocale, $locale) {

        activate();

        ////////////////

        function activate() {
          $rootScope.availableLocales = {
            'en': 'English',
            'es': 'Spanish',
            'de': 'German',
            'fr': 'French',
            'ar': 'Arabic',
            'ja': 'Japanese',
            'ko': 'Korean',
            'zh': 'Chinese'};
          
          $rootScope.model = {selectedLocale: 'en'};
          
          $rootScope.$locale = $locale;
          
          $rootScope.changeLocale = tmhDynamicLocale.set;
        }
    }
})();

/**=========================================================
 * Module: demo-pagination.js
 * Provides a simple demo for pagination
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.mailbox')
        .controller('MailboxController', MailboxController);

    function MailboxController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.folders = [
            {name: 'Inbox',   folder: 'inbox',   alert: 42, icon: 'fa-inbox' },
            {name: 'Starred', folder: 'starred', alert: 10, icon: 'fa-star' },
            {name: 'Sent',    folder: 'sent',    alert: 0,  icon: 'fa-paper-plane-o' },
            {name: 'Draft',   folder: 'draft',   alert: 5,  icon: 'fa-edit' },
            {name: 'Trash',   folder: 'trash',   alert: 0,  icon: 'fa-trash'}
          ];

          vm.labels = [
            {name: 'Red',     color: 'danger'},
            {name: 'Pink',    color: 'pink'},
            {name: 'Blue',    color: 'info'},
            {name: 'Yellow',  color: 'warning'}
          ];

          vm.mail = {
            cc: false,
            bcc: false
          };
          // Mailbox editr initial content
          vm.content = '<p>Type something..</p>';
        }
    }
})();

(function() {
    'use strict';

    angular
        .module('app.mailbox')
        .controller('MailFolderController', MailFolderController);

    MailFolderController.$inject = ['mails', '$stateParams'];
    function MailFolderController(mails, $stateParams) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          
          vm.folder = {};
          // no filter for inbox
          vm.folder.folder = $stateParams.folder === 'inbox' ? '' : $stateParams.folder;

          mails.all().then(function(mails){
            vm.mails = mails;
          });
        }
    }
})();

// A RESTful factory for retrieving mails from json file

(function() {
    'use strict';

    angular
        .module('app.mailbox')
        .factory('mails', mails);

    mails.$inject = ['$http'];
    function mails($http) {
        var service = {
            all: all,
            get: get
        };
        return service;

        ////////////////
        
        function readMails() {
          var path = 'server/mails.json';
          return $http.get(path).then(function (resp) {
            return resp.data.mails;
          });
        }

        function all() {
          return readMails();
        }

        function get(id) {
          return readMails().then(function(mails){
            for (var i = 0; i < mails.length; i++) {
              if (+mails[i].id === +id) return mails[i];
            }
            return null;
          });
        }
    }
})();


(function() {
    'use strict';

    angular
        .module('app.mailbox')
        .controller('MailViewController', MailViewController);

    MailViewController.$inject = ['mails', '$stateParams'];
    function MailViewController(mails, $stateParams) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          mails.get($stateParams.mid).then(function(mail){
            vm.mail = mail;
          });
        }
    }
})();

/**=========================================================
 * Module: modals.js
 * Provides a simple way to implement bootstrap modals from templates
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.maps')
        .controller('ModalGmapController', ModalGmapController);

    ModalGmapController.$inject = ['$modal'];
    function ModalGmapController($modal) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.open = function (size) {

            //var modalInstance = 
            $modal.open({
              templateUrl: '/myModalContent.html',
              controller: ModalInstanceCtrl,
              size: size
            });
          };

          // Please note that $modalInstance represents a modal window (instance) dependency.
          // It is not the same as the $modal service used above.
          
          ModalInstanceCtrl.$inject = ['$scope', '$modalInstance', '$timeout'];
          function ModalInstanceCtrl($scope, $modalInstance, $timeout) {

            $modalInstance.opened.then(function () {
              //var position = new google.maps.LatLng(33.790807, -117.835734);

              $scope.mapOptionsModal = {
                zoom: 14,
                //center: position,
                //mapTypeId: google.maps.MapTypeId.ROADMAP
              };

              // we use timeout to wait maps to be ready before add a markers
              //$timeout(function(){
              //  // 1. Add a marker at the position it was initialized
              //  new google.maps.Marker({
              //    map: $scope.myMapModal,
              //    position: position
              //  });
              //  // 2. Trigger a resize so the map is redrawed 
              //  google.maps.event.trigger($scope.myMapModal, 'resize');
              //  // 3. Move to the center if it is misaligned
              //  $scope.myMapModal.panTo(position);
              //});

            });

            $scope.ok = function () {
              $modalInstance.close('closed');
            };

            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };

          }
          
        }
    }

})();


(function() {
    'use strict';

    angular
        .module('app.maps')
        .controller('GMapController', GMapController);

    GMapController.$inject = ['$timeout'];
    function GMapController($timeout) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          var position = [
              new google.maps.LatLng(33.790807, -117.835734),
              new google.maps.LatLng(33.790807, -117.835734),
              new google.maps.LatLng(33.790807, -117.835734),
              new google.maps.LatLng(33.790807, -117.835734),
              new google.maps.LatLng(33.787453, -117.835858)
            ];
          
          vm.addMarker = addMarker;
          // we use timeout to wait maps to be ready before add a markers
          $timeout(function(){
            addMarker(vm.myMap1, position[0]);
            addMarker(vm.myMap2, position[1]);
            addMarker(vm.myMap3, position[2]);
            addMarker(vm.myMap5, position[3]);
          });

          vm.mapOptions1 = {
            zoom: 14,
            center: position[0],
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            scrollwheel: false
          };

          vm.mapOptions2 = {
            zoom: 19,
            center: position[1],
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };

          vm.mapOptions3 = {
            zoom: 14,
            center: position[2],
            mapTypeId: google.maps.MapTypeId.SATELLITE
          };

          vm.mapOptions4 = {
            zoom: 14,
            center: position[3],
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };

          // for multiple markers
          $timeout(function(){
            addMarker(vm.myMap4, position[3]);
            addMarker(vm.myMap4, position[4]);
          });

          // custom map style
          var MapStyles = [{'featureType':'water','stylers':[{'visibility':'on'},{'color':'#bdd1f9'}]},{'featureType':'all','elementType':'labels.text.fill','stylers':[{'color':'#334165'}]},{featureType:'landscape',stylers:[{color:'#e9ebf1'}]},{featureType:'road.highway',elementType:'geometry',stylers:[{color:'#c5c6c6'}]},{featureType:'road.arterial',elementType:'geometry',stylers:[{color:'#fff'}]},{featureType:'road.local',elementType:'geometry',stylers:[{color:'#fff'}]},{featureType:'transit',elementType:'geometry',stylers:[{color:'#d8dbe0'}]},{featureType:'poi',elementType:'geometry',stylers:[{color:'#cfd5e0'}]},{featureType:'administrative',stylers:[{visibility:'on'},{lightness:33}]},{featureType:'poi.park',elementType:'labels',stylers:[{visibility:'on'},{lightness:20}]},{featureType:'road',stylers:[{color:'#d8dbe0',lightness:20}]}];
          vm.mapOptions5 = {
            zoom: 14,
            center: position[3],
            styles: MapStyles,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            scrollwheel: false
          };

          ///////////////
          
          function addMarker(map, position) {
            return new google.maps.Marker({
              map: map,
              position: position
            });
          }

        }
    }
})();

/**=========================================================
 * Module: vector-map.js.js
 * Init jQuery Vector Map plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.maps')
        .directive('vectorMap', vectorMap);

    vectorMap.$inject = ['VectorMap'];
    function vectorMap (VectorMap) {
        var directive = {
            link: link,
            restrict: 'EA',
            scope: {
              seriesData: '=',
              markersData: '='
            }
        };
        return directive;

        function link(scope, element, attrs) {
          
          var defaultColors = {
              markerColor:  '#23b7e5',      // the marker points
              bgColor:      'transparent',      // the background
              scaleColors:  ['#878c9a'],    // the color of the region in the serie
              regionFill:   '#bbbec6'       // the base region color
          };

          var mapHeight   = attrs.height || '300',
              options     = {
                markerColor:  attrs.markerColor  || defaultColors.markerColor,
                bgColor:      attrs.bgColor      || defaultColors.bgColor,
                scale:        attrs.scale        || 1,
                scaleColors:  attrs.scaleColors  || defaultColors.scaleColors,
                regionFill:   attrs.regionFill   || defaultColors.regionFill,
                mapName:      attrs.mapName      || 'world_mill_en'
              };
          
          element.css('height', mapHeight);
          
          VectorMap.init( element , options, scope.seriesData, scope.markersData);
        }
    }

})();

/**=========================================================
 * Module: vector-map.js
 * Services to initialize vector map plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.maps')
        .service('VectorMap', VectorMap);

    function VectorMap() {
        this.init = init;

        ////////////////

        function init($element, opts, series, markers) {
          $element.vectorMap({
            map:             opts.mapName,
            backgroundColor: opts.bgColor,
            zoomMin:         1,
            zoomMax:         8,
            zoomOnScroll:    false,
            regionStyle: {
              initial: {
                'fill':           opts.regionFill,
                'fill-opacity':   1,
                'stroke':         'none',
                'stroke-width':   1.5,
                'stroke-opacity': 1
              },
              hover: {
                'fill-opacity': 0.8
              },
              selected: {
                fill: 'blue'
              },
              selectedHover: {
              }
            },
            focusOn:{ x:0.4, y:0.6, scale: opts.scale},
            markerStyle: {
              initial: {
                fill: opts.markerColor,
                stroke: opts.markerColor
              }
            },
            onRegionLabelShow: function(e, el, code) {
              if ( series && series[code] )
                el.html(el.html() + ': ' + series[code] + ' visitors');
            },
            markers: markers,
            series: {
                regions: [{
                    values: series,
                    scale: opts.scaleColors,
                    normalizeFunction: 'polynomial'
                }]
            },
          });
        }
    }
})();

/**=========================================================
 * Module: vmaps,js
 * jVector Maps support
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.maps')
        .controller('VectorMapController', VectorMapController);

    function VectorMapController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.seriesData = {
            'CA': 11100,   // Canada
            'DE': 2510,    // Germany
            'FR': 3710,    // France
            'AU': 5710,    // Australia
            'GB': 8310,    // Great Britain
            'RU': 9310,    // Russia
            'BR': 6610,    // Brazil
            'IN': 7810,    // India
            'CN': 4310,    // China
            'US': 839,     // USA
            'SA': 410      // Saudi Arabia
          };
          
          vm.markersData = [
            { latLng:[41.90, 12.45],  name:'Vatican City'          },
            { latLng:[43.73, 7.41],   name:'Monaco'                },
            { latLng:[-0.52, 166.93], name:'Nauru'                 },
            { latLng:[-8.51, 179.21], name:'Tuvalu'                },
            { latLng:[7.11,171.06],   name:'Marshall Islands'      },
            { latLng:[17.3,-62.73],   name:'Saint Kitts and Nevis' },
            { latLng:[3.2,73.22],     name:'Maldives'              },
            { latLng:[35.88,14.5],    name:'Malta'                 },
            { latLng:[41.0,-71.06],   name:'New England'           },
            { latLng:[12.05,-61.75],  name:'Grenada'               },
            { latLng:[13.16,-59.55],  name:'Barbados'              },
            { latLng:[17.11,-61.85],  name:'Antigua and Barbuda'   },
            { latLng:[-4.61,55.45],   name:'Seychelles'            },
            { latLng:[7.35,134.46],   name:'Palau'                 },
            { latLng:[42.5,1.51],     name:'Andorra'               }
          ];
        }
    }
})();


(function() {
    'use strict';
    // Used only for the BottomSheetExample
    angular
        .module('app.material')
        .config(materialConfig)
        ;
    materialConfig.$inject = ['$mdIconProvider'];
    function materialConfig($mdIconProvider){
      $mdIconProvider
        .icon('share-arrow', 'app/img/icons/share-arrow.svg', 24)
        .icon('upload', 'app/img/icons/upload.svg', 24)
        .icon('copy', 'app/img/icons/copy.svg', 24)
        .icon('print', 'app/img/icons/print.svg', 24)
        .icon('hangout', 'app/img/icons/hangout.svg', 24)
        .icon('mail', 'app/img/icons/mail.svg', 24)
        .icon('message', 'app/img/icons/message.svg', 24)
        .icon('copy2', 'app/img/icons/copy2.svg', 24)
        .icon('facebook', 'app/img/icons/facebook.svg', 24)
        .icon('twitter', 'app/img/icons/twitter.svg', 24);
    }
})();


(function() {
    'use strict';

    angular
        .module('app.material')
        .controller('MDAutocompleteCtrl', MDAutocompleteCtrl)
        .controller('MDBottomSheetCtrl', MDBottomSheetCtrl)
        .controller('MDListBottomSheetCtrl', MDListBottomSheetCtrl)
        .controller('MDGridBottomSheetCtrl', MDGridBottomSheetCtrl)
        .controller('MDCheckboxCtrl', MDCheckboxCtrl)
        .controller('MDRadioCtrl', MDRadioCtrl)
        .controller('MDSwitchCtrl', MDSwitchCtrl)
        .controller('MDDialogCtrl', MDDialogCtrl)
        .controller('MDSliderCtrl', MDSliderCtrl)
        .controller('MDSelectCtrl', MDSelectCtrl)
        .controller('MDInputCtrl', MDInputCtrl)
        .controller('MDProgressCtrl', MDProgressCtrl)
        .controller('MDSidenavCtrl', MDSidenavCtrl)
        .controller('MDSubheaderCtrl', MDSubheaderCtrl)
        .controller('MDToastCtrl', MDToastCtrl)
          .controller('ToastCtrl', ToastCtrl)
        .controller('MDTooltipCtrl', MDTooltipCtrl)
        .controller('BottomSheetExample', BottomSheetExample)
          .controller('ListBottomSheetCtrl', ListBottomSheetCtrl)
          .controller('GridBottomSheetCtrl', GridBottomSheetCtrl)
        ;

    /*
      MDAutocompleteCtrl
     */
    MDAutocompleteCtrl.$inject = ['$scope', '$timeout', '$q'];
    function MDAutocompleteCtrl($scope, $timeout, $q) {
      var self = this;

      self.states        = loadAll();
      self.selectedItem  = null;
      self.searchText    = null;
      self.querySearch   = querySearch;
      self.simulateQuery = false;
      self.isDisabled    = false;

      // use $timeout to simulate remote dataservice call
      function querySearch (query) {
        var results = query ? self.states.filter( createFilterFor(query) ) : [],
            deferred;
        if (self.simulateQuery) {
          deferred = $q.defer();
          $timeout(function () { deferred.resolve( results ); }, Math.random() * 1000, false);
          return deferred.promise;
        } else {
          return results;
        }
      }

      function loadAll() {
        var allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana, Maine, Maryland, Massachusetts, Michigan, Minnesota, Mississippi, Missouri, Montana, Nebraska, Nevada, New Hampshire, New Jersey, New Mexico, New York, North Carolina, North Dakota, Ohio, Oklahoma, Oregon, Pennsylvania, Rhode Island, South Carolina, South Dakota, Tennessee, Texas, Utah, Vermont, Virginia, Washington, West Virginia, Wisconsin, Wyoming';

        return allStates.split(/, +/g).map( function (state) {
          return {
            value: state.toLowerCase(),
            display: state
          };
        });
      }

          /**
           * Create filter function for a query string
           */
          function createFilterFor(query) {
            var lowercaseQuery = angular.lowercase(query);

            return function filterFn(state) {
              return (state.value.indexOf(lowercaseQuery) === 0);
            };

          }
        }

    /*
    MDBottomSheetCtrl
     */
    MDBottomSheetCtrl.$inject = ['$scope', '$timeout', '$mdBottomSheet'];
    function MDBottomSheetCtrl($scope, $timeout, $mdBottomSheet) {
      $scope.alert = '';

      $scope.showListBottomSheet = function($event) {
        $scope.alert = '';
        $mdBottomSheet.show({
          templateUrl: 'bottom-sheet-list-template.html',
          controller: 'ListBottomSheetCtrl',
          targetEvent: $event
        }).then(function(clickedItem) {
          $scope.alert = clickedItem.name + ' clicked!';
        });
      };

      $scope.showGridBottomSheet = function($event) {
        $scope.alert = '';
        $mdBottomSheet.show({
          templateUrl: 'bottom-sheet-grid-template.html',
          controller: 'GridBottomSheetCtrl',
          targetEvent: $event
        }).then(function(clickedItem) {
          $scope.alert = clickedItem.name + ' clicked!';
        });
      };
    }
    /*
    MDListBottomSheetCtrl
     */
    MDListBottomSheetCtrl.$inject = ['$scope', '$mdBottomSheet'];
    function MDListBottomSheetCtrl($scope, $mdBottomSheet) {

      $scope.items = [
        { name: 'Share', icon: 'share' },
        { name: 'Upload', icon: 'upload' },
        { name: 'Copy', icon: 'copy' },
        { name: 'Print this page', icon: 'print' },
      ];

      $scope.listItemClick = function($index) {
        var clickedItem = $scope.items[$index];
        $mdBottomSheet.hide(clickedItem);
      };
    }
    /*
    MDGridBottomSheetCtrl
     */
    MDGridBottomSheetCtrl.$inject = ['$scope', '$mdBottomSheet'];
    function MDGridBottomSheetCtrl($scope, $mdBottomSheet) {

      $scope.items = [
        { name: 'Hangout', icon: 'hangout' },
        { name: 'Mail', icon: 'mail' },
        { name: 'Message', icon: 'message' },
        { name: 'Copy', icon: 'copy' },
        { name: 'Facebook', icon: 'facebook' },
        { name: 'Twitter', icon: 'twitter' },
      ];

      $scope.listItemClick = function($index) {
        var clickedItem = $scope.items[$index];
        $mdBottomSheet.hide(clickedItem);
      };
    }
    /*
    MDCheckboxCtrl
     */
    MDCheckboxCtrl.$inject = ['$scope'];
    function MDCheckboxCtrl($scope) {

      $scope.data = {};
      $scope.data.cb1 = true;
      $scope.data.cb2 = false;
      $scope.data.cb3 = false;
      $scope.data.cb4 = false;
      $scope.data.cb5 = false;
    }
    /*
    MDRadioCtrl
     */
    MDRadioCtrl.$inject = ['$scope'];
    function MDRadioCtrl($scope) {

        $scope.data = {
          group1 : 'Banana',
          group2 : '2',
          group3 : 'avatar-1'
        };

        $scope.avatarData = [{
            id: 'svg-1',
            title: 'avatar 1',
            value: 'avatar-1'
          },{
            id: 'svg-2',
            title: 'avatar 2',
            value: 'avatar-2'
          },{
            id: 'svg-3',
            title: 'avatar 3',
            value: 'avatar-3'
        }];

        $scope.radioData = [
          { label: 'Apple', value: 1 },
          { label: 'Banana', value: 2 },
          { label: 'Mango', value: '3', isDisabled: true }
        ];


        $scope.submit = function() {
          alert('submit');
        };

        var vals = ['Apple', 'Banana', 'Mango', 'Grape', 'Melon', 'Strawberry', 'Kiwi'];
        $scope.addItem = function() {
          var rval = vals[Math.floor(Math.random() * vals.length)];
          $scope.radioData.push({ label: rval, value: rval });
        };

        $scope.removeItem = function() {
          $scope.radioData.pop();
        };
    }
    /*
    MDSwitchCtrl
     */
    MDSwitchCtrl.$inject = ['$scope'];
    function MDSwitchCtrl($scope) {
      $scope.data = {
        cb1: true,
        cb4: true
      };
      
      $scope.onChange = function(cbState){
         $scope.message = 'The switch is now: ' + cbState;
      };
    }
    /*
    MDDialogCtrl
     */
    MDDialogCtrl.$inject = ['$scope', '$mdDialog'];
    function MDDialogCtrl($scope, $mdDialog) {
      $scope.alert = '';

      $scope.showAlert = function(ev) {
        $mdDialog.show(
          $mdDialog.alert()
            .title('This is an alert title')
            .content('You can specify some description text in here.')
            .ariaLabel('Password notification')
            .ok('Got it!')
            .targetEvent(ev)
        );
      };

      $scope.showConfirm = function(ev) {
        var confirm = $mdDialog.confirm()
          .title('Would you like to delete your debt?')
          .content('All of the banks have agreed to forgive you your debts.')
          .ariaLabel('Lucky day')
          .ok('Please do it!')
          .cancel('Sounds like a scam')
          .targetEvent(ev);

        $mdDialog.show(confirm).then(function() {
          $scope.alert = 'You decided to get rid of your debt.';
        }, function() {
          $scope.alert = 'You decided to keep your debt.';
        });
      };

      $scope.showAdvanced = function(ev) {
        $mdDialog.show({
          controller: DialogController,
          templateUrl: 'dialog1.tmpl.html',
          targetEvent: ev,
        })
        .then(function(answer) {
          $scope.alert = 'You said the information was \'' + answer + '\'.';
        }, function() {
          $scope.alert = 'You cancelled the dialog.';
        });
      };
      DialogController.$inject = ['$scope', '$mdDialog'];
      function DialogController($scope, $mdDialog) {
        $scope.hide = function() {
          $mdDialog.hide();
        };

        $scope.cancel = function() {
          $mdDialog.cancel();
        };

        $scope.answer = function(answer) {
          $mdDialog.hide(answer);
        };
      }
    }
    /*
    MDSliderCtrl
     */
    MDSliderCtrl.$inject = ['$scope'];
    function MDSliderCtrl($scope) {

      $scope.color = {
        red: Math.floor(Math.random() * 255),
        green: Math.floor(Math.random() * 255),
        blue: Math.floor(Math.random() * 255)
      };

      $scope.rating1 = 3;
      $scope.rating2 = 2;
      $scope.rating3 = 4;

      $scope.disabled1 = 0;
      $scope.disabled2 = 70;
    }
    /*
    MDSelectCtrl
     */
    function MDSelectCtrl() {
      
      var vm = this;
      
      vm.userState = '';
      vm.states = ('AL AK AZ AR CA CO CT DE FL GA HI ID IL IN IA KS KY LA ME MD MA MI MN MS ' +
          'MO MT NE NV NH NJ NM NY NC ND OH OK OR PA RI SC SD TN TX UT VT VA WA WV WI ' +
          'WY').split(' ').map(function (state) { return { abbrev: state }; });

      vm.sizes = [
          'small (12-inch)',
          'medium (14-inch)',
          'large (16-inch)',
          'insane (42-inch)'
      ];
      vm.toppings = [
        { category: 'meat', name: 'Pepperoni' },
        { category: 'meat', name: 'Sausage' },
        { category: 'meat', name: 'Ground Beef' },
        { category: 'meat', name: 'Bacon' },
        { category: 'veg', name: 'Mushrooms' },
        { category: 'veg', name: 'Onion' },
        { category: 'veg', name: 'Green Pepper' },
        { category: 'veg', name: 'Green Olives' }
      ];
    }
    /*
    MDInputCtrl
     */
    MDInputCtrl.$inject = ['$scope'];
    function MDInputCtrl($scope) {
      $scope.user = {
        title: 'Developer',
        email: 'ipsum@lorem.com',
        firstName: '',
        lastName: '' ,
        company: 'Google' ,
        address: '1600 Amphitheatre Pkwy' ,
        city: 'Mountain View' ,
        state: 'CA' ,
        biography: 'Loves kittens, snowboarding, and can type at 130 WPM.\n\nAnd rumor has it she bouldered up Castle Craig!',
        postalCode : '94043'
      };
      $scope.project = {
        description: 'Nuclear Missile Defense System',
        clientName: 'Bill Clinton',
        rate: 500
      };
    }
    /*
    MDProgressCtrl
     */
    MDProgressCtrl.$inject = ['$scope', '$interval'];
    function MDProgressCtrl($scope, $interval) {
        $scope.mode = 'query';
        $scope.determinateValue = 30;
        $scope.determinateValue2 = 30;

        $interval(function() {
          $scope.determinateValue += 1;
          $scope.determinateValue2 += 1.5;
          if ($scope.determinateValue > 100) {
            $scope.determinateValue = 30;
            $scope.determinateValue2 = 30;
          }
        }, 100, 0, true);

        $interval(function() {
          $scope.mode = ($scope.mode === 'query' ? 'determinate' : 'query');
        }, 7200, 0, true);
    }
    /*
    MDSidenavCtrl
     */
    MDSidenavCtrl.$inject = ['$scope', '$timeout', '$mdSidenav', '$log'];
    function MDSidenavCtrl($scope, $timeout, $mdSidenav, $log) {
      $scope.toggleLeft = function() {
        $mdSidenav('left').toggle()
                          .then(function(){
                              $log.debug('toggle left is done');
                          });
      };
      $scope.toggleRight = function() {
        $mdSidenav('right').toggle()
                            .then(function(){
                              $log.debug('toggle RIGHT is done');
                            });
      };
      $scope.closeLeft = function() {
        $mdSidenav('left').close()
                          .then(function(){
                            $log.debug('close LEFT is done');
                          });

      };
      $scope.closeRight = function() {
        $mdSidenav('right').close()
                            .then(function(){
                              $log.debug('close RIGHT is done');
                            });
      };
    }
    /*
    MDSubheaderCtrl
     */
    MDSubheaderCtrl.$inject = ['$scope'];
    function MDSubheaderCtrl($scope) {
        $scope.messages = [
          {
            face : 'app/img/user/10.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/01.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/02.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/03.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/04.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/05.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/06.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/07.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/08.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/09.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
          {
            face : 'app/img/user/11.jpg',
            what: 'Brunch this weekend?',
            who: 'Min Li Chan',
            when: '3:08PM',
            notes: 'I\'ll be in your neighborhood doing errands'
          },
        ];
    }
    /*
    MDToastCtrl
     */
    MDToastCtrl.$inject = ['$scope', '$mdToast'];
    function MDToastCtrl($scope, $mdToast) {

      $scope.toastPosition = {
        bottom: false,
        top: true,
        left: false,
        right: true
      };

      $scope.getToastPosition = function() {
        return Object.keys($scope.toastPosition)
          .filter(function(pos) { return $scope.toastPosition[pos]; })
          .join(' ');
      };

      $scope.showCustomToast = function() {
        $mdToast.show({
          controller: 'ToastCtrl',
          templateUrl: 'toast-template.html',
          hideDelay: 60000,
          parent:'#toastcontainer',
          position: $scope.getToastPosition()
        });
      };

      $scope.showSimpleToast = function() {
        $mdToast.show(
          $mdToast.simple()
            .content('Simple Toast!')
            .position($scope.getToastPosition())
            .hideDelay(30000)
        );
      };

      $scope.showActionToast = function() {
        var toast = $mdToast.simple()
              .content('Action Toast!')
              .action('OK')
              .highlightAction(false)
              .position($scope.getToastPosition());

        $mdToast.show(toast).then(function() {
          alert('You clicked \'OK\'.');
        });
      };
    }
    /*
    ToastCtrl
     */
    ToastCtrl.$inject = ['$scope', '$mdToast'];
    function ToastCtrl($scope, $mdToast) {
      $scope.closeToast = function() {
        $mdToast.hide();
      };
    }
    /*
    MDTooltipCtrl
     */
    MDTooltipCtrl.$inject = ['$scope'];
    function MDTooltipCtrl($scope) {
      $scope.demo = {};
    }
    /*
    BottomSheetExample
     */
    BottomSheetExample.$inject = ['$scope', '$timeout', '$mdBottomSheet'];
    function BottomSheetExample($scope, $timeout, $mdBottomSheet) {
      $scope.alert = '';

      $scope.showListBottomSheet = function($event) {
        $scope.alert = '';
        $mdBottomSheet.show({
          templateUrl: 'bottom-sheet-list-template.html',
          controller: 'ListBottomSheetCtrl',
          targetEvent: $event,
          parent: '#bottomsheetcontainer'
        }).then(function(clickedItem) {
          $scope.alert = clickedItem.name + ' clicked!';
        });
      };

      $scope.showGridBottomSheet = function($event) {
        $scope.alert = '';
        $mdBottomSheet.show({
          templateUrl: 'bottom-sheet-grid-template.html',
          controller: 'GridBottomSheetCtrl',
          targetEvent: $event,
          parent: '#bottomsheetcontainer'
        }).then(function(clickedItem) {
          $scope.alert = clickedItem.name + ' clicked!';
        });
      };
    }
    /*
    ListBottomSheetCtrl
     */
    ListBottomSheetCtrl.$inject = ['$scope', '$mdBottomSheet'];
    function ListBottomSheetCtrl($scope, $mdBottomSheet) {

      $scope.items = [
        { name: 'Share', icon: 'share-arrow' },
        { name: 'Upload', icon: 'upload' },
        { name: 'Copy', icon: 'copy' },
        { name: 'Print this page', icon: 'print' },
      ];

      $scope.listItemClick = function($index) {
        var clickedItem = $scope.items[$index];
        $mdBottomSheet.hide(clickedItem);
      };
    }
    /*
    GridBottomSheetCtrl
     */
    GridBottomSheetCtrl.$inject = ['$scope', '$mdBottomSheet'];
    function GridBottomSheetCtrl($scope, $mdBottomSheet) {
      $scope.items = [
        { name: 'Hangout', icon: 'hangout' },
        { name: 'Mail', icon: 'mail' },
        { name: 'Message', icon: 'message' },
        { name: 'Copy', icon: 'copy2' },
        { name: 'Facebook', icon: 'facebook' },
        { name: 'Twitter', icon: 'twitter' },
      ];

      $scope.listItemClick = function($index) {
        var clickedItem = $scope.items[$index];
        $mdBottomSheet.hide(clickedItem);
      };
    }


})();

(function() {
    'use strict';
    // Used only for the BottomSheetExample
    angular
        .module('app.material')
        .run(materialRun)
        ;
    materialRun.$inject = ['$http', '$templateCache'];
    function materialRun($http, $templateCache){
      var urls = [
        'app/img/icons/share-arrow.svg',
        'app/img/icons/upload.svg',
        'app/img/icons/copy.svg',
        'app/img/icons/print.svg',
        'app/img/icons/hangout.svg',
        'app/img/icons/mail.svg',
        'app/img/icons/message.svg',
        'app/img/icons/copy2.svg',
        'app/img/icons/facebook.svg',
        'app/img/icons/twitter.svg'
      ];

      angular.forEach(urls, function(url) {
        $http.get(url, {cache: $templateCache});
      });

    }

})();

(function() {
    'use strict';

    angular
        .module('app.material')
        .controller('MaterialWidgetsController', MaterialWidgetsController);

    MaterialWidgetsController.$inject = ['Colors'];
    function MaterialWidgetsController(Colors) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.sparkOption1 = {
            type : 'line',
            width : '100%',
            height : '140px',
            tooltipOffsetX : -20,
            tooltipOffsetY : 20,
            lineColor : Colors.byName('success'),
            fillColor : Colors.byName('success'),
            spotColor : 'rgba(0,0,0,.26)',
            minSpotColor : 'rgba(0,0,0,.26)',
            maxSpotColor : 'rgba(0,0,0,.26)',
            highlightSpotColor : 'rgba(0,0,0,.26)',
            highlightLineColor : 'rgba(0,0,0,.26)',
            spotRadius : 2,
            tooltipPrefix : '',
            tooltipSuffix : ' Visits',
            tooltipFormat : '{{prefix}}{{y}}{{suffix}}',
            chartRangeMin: 0,
            resize: true
          };

          vm.sparkOptionPie = {
            type: 'pie',
            width : '2em',
            height : '2em',
            sliceColors: [ Colors.byName('success'), Colors.byName('gray-light')]
          };
        
        }
    }
})();
/**=========================================================
 * Module: navbar-search.js
 * Navbar search toggler * Auto dismiss on ESC key
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.navsearch')
        .directive('searchOpen', searchOpen)
        .directive('searchDismiss', searchDismiss);

    //
    // directives definition
    // 
    
    function searchOpen () {
        var directive = {
            controller: searchOpenController,
            restrict: 'A'
        };
        return directive;

    }

    function searchDismiss () {
        var directive = {
            controller: searchDismissController,
            restrict: 'A'
        };
        return directive;
        
    }

    //
    // Contrller definition
    // 
    
    searchOpenController.$inject = ['$scope', '$element', 'NavSearch'];
    function searchOpenController ($scope, $element, NavSearch) {
      $element
        .on('click', function (e) { e.stopPropagation(); })
        .on('click', NavSearch.toggle);
    }

    searchDismissController.$inject = ['$scope', '$element', 'NavSearch'];
    function searchDismissController ($scope, $element, NavSearch) {
      
      var inputSelector = '.navbar-form input[type="text"]';

      $(inputSelector)
        .on('click', function (e) { e.stopPropagation(); })
        .on('keyup', function(e) {
          if (e.keyCode === 27) // ESC
            NavSearch.dismiss();
        });
        
      // click anywhere closes the search
      $(document).on('click', NavSearch.dismiss);
      // dismissable options
      $element
        .on('click', function (e) { e.stopPropagation(); })
        .on('click', NavSearch.dismiss);
    }

})();


/**=========================================================
 * Module: nav-search.js
 * Services to share navbar search functions
 =========================================================*/
 
(function() {
    'use strict';

    angular
        .module('app.navsearch')
        .service('NavSearch', NavSearch);

    function NavSearch() {
        this.toggle = toggle;
        this.dismiss = dismiss;

        ////////////////

        var navbarFormSelector = 'form.navbar-form';

        function toggle() {
          var navbarForm = $(navbarFormSelector);

          navbarForm.toggleClass('open');
          
          var isOpen = navbarForm.hasClass('open');
          
          navbarForm.find('input')[isOpen ? 'focus' : 'blur']();
        }

        function dismiss() {
          $(navbarFormSelector)
            .removeClass('open') // Close control
            .find('input[type="text"]').blur() // remove focus
            .val('') // Empty input
            ;
        }        
    }
})();

/**=========================================================
 * Module: demo-notify.js
 * Provides a simple demo for notify
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.notify')
        .controller('NotifyDemoCtrl', NotifyDemoCtrl);

    NotifyDemoCtrl.$inject = ['Notify', '$timeout'];
    function NotifyDemoCtrl(Notify, $timeout) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.msgHtml = '<em class="fa fa-check"></em> Message with icon..';

          vm.notifyMsg = 'Some messages here..';
          vm.notifyOpts = {
            status: 'danger',
            pos: 'bottom-center'
          };

          // Service usage example
          $timeout(function(){
            
            Notify.alert( 
                'This is a custom message from notify..', 
                {status: 'success'}
            );
          
          }, 500);
        }
    }
})();

/**=========================================================
 * Module: notify.js
 * Directive for notify plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.notify')
        .directive('notify', notify);

    notify.$inject = ['$window', 'Notify'];
    function notify ($window, Notify) {

        var directive = {
            link: link,
            restrict: 'A',
            scope: {
              options: '=',
              message: '='
            }
        };
        return directive;

        function link(scope, element) {

          element.on('click', function (e) {
            e.preventDefault();
            Notify.alert(scope.message, scope.options);
          });
        }

    }

})();


/**=========================================================
 * Module: notify.js
 * Create a notifications that fade out automatically.
 * Based on Notify addon from UIKit (http://getuikit.com/docs/addons_notify.html)
 =========================================================*/

(function() {
    'use strict';
    angular
        .module('app.notify')
        .service('Notify', Notify);

    Notify.$inject = ['$timeout'];
    function Notify($timeout) {

        this.alert = notifyAlert;

        ////////////////

        function notifyAlert(msg, opts) {
            if ( msg ) {
                $timeout(function(){
                    $.notify(msg, opts || {});
                });
            }
        }
    }

})();

/**
 * Notify Addon definition as jQuery plugin
 * Adapted version to work with Bootstrap classes
 * More information http://getuikit.com/docs/addons_notify.html
 */
(function($){
    'use strict';
    var containers = {},
        messages   = {},
        notify     =  function(options){
            if ($.type(options) === 'string') {
                options = { message: options };
            }
            if (arguments[1]) {
                options = $.extend(options, $.type(arguments[1]) === 'string' ? {status:arguments[1]} : arguments[1]);
            }
            return (new Message(options)).show();
        },
        closeAll  = function(group, instantly){
            var id;
            if(group) {
                for(id in messages) { if(group===messages[id].group) messages[id].close(instantly); }
            } else {
                for(id in messages) { messages[id].close(instantly); }
            }
        };
    var Message = function(options){
        // var $this = this;
        this.options = $.extend({}, Message.defaults, options);
        this.uuid    = 'ID'+(new Date().getTime())+'RAND'+(Math.ceil(Math.random() * 100000));
        this.element = $([
            // @geedmo: alert-dismissable enables bs close icon
            '<div class="uk-notify-message alert-dismissable">',
                '<a class="close">&times;</a>',
                '<div>'+this.options.message+'</div>',
            '</div>'
        ].join('')).data('notifyMessage', this);
        // status
        if (this.options.status) {
            this.element.addClass('alert alert-'+this.options.status);
            this.currentstatus = this.options.status;
        }
        this.group = this.options.group;
        messages[this.uuid] = this;
        if(!containers[this.options.pos]) {
            containers[this.options.pos] = $('<div class="uk-notify uk-notify-'+this.options.pos+'"></div>').appendTo('body').on('click', '.uk-notify-message', function(){
                $(this).data('notifyMessage').close();
            });
        }
    };
    $.extend(Message.prototype, {
        uuid: false,
        element: false,
        timout: false,
        currentstatus: '',
        group: false,
        show: function() {
            if (this.element.is(':visible')) return;
            var $this = this;
            containers[this.options.pos].show().prepend(this.element);
            var marginbottom = parseInt(this.element.css('margin-bottom'), 10);
            this.element.css({'opacity':0, 'margin-top': -1*this.element.outerHeight(), 'margin-bottom':0}).animate({'opacity':1, 'margin-top': 0, 'margin-bottom':marginbottom}, function(){
                if ($this.options.timeout) {
                    var closefn = function(){ $this.close(); };
                    $this.timeout = setTimeout(closefn, $this.options.timeout);
                    $this.element.hover(
                        function() { clearTimeout($this.timeout); },
                        function() { $this.timeout = setTimeout(closefn, $this.options.timeout);  }
                    );
                }
            });
            return this;
        },
        close: function(instantly) {
            var $this    = this,
                finalize = function(){
                    $this.element.remove();
                    if(!containers[$this.options.pos].children().length) {
                        containers[$this.options.pos].hide();
                    }
                    delete messages[$this.uuid];
                };
            if(this.timeout) clearTimeout(this.timeout);
            if(instantly) {
                finalize();
            } else {
                this.element.animate({'opacity':0, 'margin-top': -1* this.element.outerHeight(), 'margin-bottom':0}, function(){
                    finalize();
                });
            }
        },
        content: function(html){
            var container = this.element.find('>div');
            if(!html) {
                return container.html();
            }
            container.html(html);
            return this;
        },
        status: function(status) {
            if(!status) {
                return this.currentstatus;
            }
            this.element.removeClass('alert alert-'+this.currentstatus).addClass('alert alert-'+status);
            this.currentstatus = status;
            return this;
        }
    });
    Message.defaults = {
        message: '',
        status: 'normal',
        timeout: 5000,
        group: null,
        pos: 'top-center'
    };
    
    $.notify          = notify;
    $.notify.message  = Message;
    $.notify.closeAll = closeAll;
    
    return notify;
}(jQuery));

/**=========================================================
 * Module: access-login.js
 * Demo for login api
 =========================================================*/

(function () {
    'use strict';

    angular
        .module('app.pages')
        .controller('LoginFormController', LoginFormController);

    LoginFormController.$inject = ['$rootScope', '$scope', '$state', '$cookies', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];
    function LoginFormController($rootScope, $scope, $state, $cookies, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
            localStorage.clear();
            $cookies.remove('token');
            $scope.isemailexist = false;
            var urlapi = 'api/Login/GetOTPFlag';
            lockUI();
            SocketService.get(urlapi).then(function (resp) {
                unlockUI();
                if (resp.data.otp_flag == "Y" || resp.data.otp_flag == "y") {
                    $scope.showotp = true;
                }
                else if (resp.data.otp_flag == "N" || resp.data.otp_flag == "n") {
                    $scope.showotp = false;
                }
            })

            if ($scope.otpswitch = true) {
                if (window.location.hostname == "localhost") {
                    $scope.bg_image = "url('app/img/vc4.jpg')";
                    $scope.company_logo = "app/img/storyboarderp logo.png";
                }
                else if (window.location.hostname == "erp.vcidex.com") {
                    $scope.bg_image = "url('app/img/vc4.jpg')";
                    $scope.company_logo = "app/img/storyboarderp logo.png";
                }
                else if (window.location.hostname == "tools.samunnati.com") {
                    $scope.bg_image = "url('app/img/bg-23.jpg')";
                }
                else if (window.location.hostname == "mentis.storyboarderp.com") {
                    $scope.bg_image = "url('app/img/vc4.jpg')";
                    $scope.company_logo = "app/img/storyboarderp logo.png";
                }
                else if (window.location.hostname == "vcm.storyboarderp.com") {
                    $scope.bg_image = "url('app/img/vc4.jpg')";
                    $scope.company_logo = "app/img/storyboarderp logo.png";
                }
                else if (window.location.hostname == "bethany.storyboarderp.com") {
                    $scope.bg_image = "url('app/img/vc4.jpg')";
                }
                else {
                    $scope.bg_image = "url('app/img/bg-23.jpg')";
                    $scope.company_logo = "app/img/storyboarderp logo.png";
                }


                // bind here all data from the form
                vm.account = {};
                // place the message if something goes wrong
                vm.authMsg = '';

                vm.login = function () {
                    vm.authMsg = '';


                    if (vm.loginForm.$valid) {

                        //$http
                        //  .post('api/Login/login', {email: vm.account.email, password: vm.account.password})
                        //  .then(function(response) {
                        //    // assumes if ok, response is an object with some data, if not, a string with error
                        //    // customize according to your api
                        //    if ( !response.account ) {
                        //      vm.authMsg = 'Incorrect credentials.';
                        //    }else{
                        //      $state.go('app.dashboard');
                        //    }
                        //  }, function() {
                        //    vm.authMsg = 'Server Request Error';
                        //  });

                        var params = {
                            user_code: $scope.login.account.name,
                            user_password: $scope.login.account.password
                        }
                        var url = apiManage.apiList['login'].api;
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            if (resp.data.user_gid != "") {
                                $cookies.putObject('token', resp.data.token);
                                localStorage.setItem('user_gid', resp.data.user_gid);
                                if (window.location.hostname == "erp.vcidex.com") {
                                    $state.go('app.hrmDashboard');
                                }
                                else if (window.location.hostname == "mentis.storyboarderp.com") {
                                    $state.go('app.hrmDashboard');
                                }
                                else if (window.location.hostname == "test.mentis.storyboarderp.com") {
                                    $state.go('app.hrmDashboard');
                                }

                                else if (window.location.hostname == "test.vcidex.storyboarderp.com") {
                                    $state.go('app.hrmDashboard');
                                }
                                else if (window.location.hostname == "test.samunnati.storyboarderp.com") {
                                    $state.go('app.assetDashboard');
                                }
                                else if (window.location.hostname == "uat.vcidex.storyboarderp.com") {
                                    $state.go('app.hrmDashboard');
                                }
                                else if (window.location.hostname == "uat.mentis.storyboarderp.com") {
                                    $state.go('app.hrmDashboard');
                                }
                                else if (window.location.hostname == "test.mentis.com") {
                                    $state.go('app.hrmDashboard');
                                }

                                else {
                                    $state.go('app.CommonMstDashboard');
                                }
                                unlockUI();
                            }
                            else if (resp.data.message == "Deactivate") {
                                unlockUI();
                                vm.authMsg = 'User Deactivated. kindly contact your Admin.';
                            }
                            else if (((resp.data.user_gid == "") || (resp.data.user_gid == null)) && ((resp.data.employee_status == "") || (resp.data.employee_status == null))) {
                                unlockUI();
                                vm.authMsg = 'Invalid Credentials';
                            }
                            else if ((resp.data.user_gid == "") || (resp.data.user_gid == null) || (resp.data.employee_status == "P")) {
                                unlockUI();
                                vm.authMsg = 'The Employee is in Pending Status. Kindly Activate the Employee.';
                            }
                            else {
                                unlockUI();
                                vm.authMsg = 'Error Occured';
                            }
                        });

                    }
                    else {
                        // set as dirty if the user click directly to login so we show the validation messages
                        /*jshint -W106*/
                        vm.loginForm.user_name.$dirty = true;
                        vm.loginForm.account_password.$dirty = true;
                    }
                };



                var urlapi = 'api/Login/GetOTPFlag';

                lockUI();
                SocketService.get(urlapi).then(function (resp) {
                    unlockUI();
                    $scope.otpFlag = resp.data.otp_flag;

                });

            }



        }

        $scope.adclick = function () {

            var url = '';

            if ($scope.otpFlag == 'N') {
                url = "https://login.microsoftonline.com/655a0e0e-4a74-4a0c-86d8-370a992e90a6/oauth2/v2.0/authorize?client_id=76209ddc-b037-4ee2-865b-639b13765f71&response_type=code&redirect_uri=http://localhost/v1/response.html&response_mode=query&scope=https://graph.microsoft.com/User.Read&state=12345"

            }
            else if ($scope.otpFlag == 'Y') {
                url = "http://smstest.vcidex.com/v1/#/page/otplogin"
            }
            else {
                url = "https://login.microsoftonline.com/655a0e0e-4a74-4a0c-86d8-370a992e90a6/oauth2/v2.0/authorize?client_id=76209ddc-b037-4ee2-865b-639b13765f71&response_type=code&redirect_uri=http://localhost/v1/response.html&response_mode=query&scope=https://graph.microsoft.com/User.Read&state=12345"

            }

            window.location = url;
        }

        function startTimer(duration, display) {
            var timer = duration, minutes, seconds;
            setInterval(function () {
                minutes = parseInt(timer / 60, 10)
                seconds = parseInt(timer % 60, 10);

                // minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                display.textContent = seconds;

                if (--timer < 0) {
                    timer = duration;
                }
            }, 1000);
            setTimeout(function () { document.getElementById("resend_otp").disabled = false; }, 60000);

        }

        function resend_otp_timer() {
            var fiveMinutes = 60 * 1,
                display = document.querySelector('#time');
            startTimer(fiveMinutes, display);
        };

        function otptimeout() {
            window.setTimeout(function () {
                document.getElementById("resend_otp").disabled = false;
            }, 5000);
        }

        $scope.otplogin = function () {
            var url = apiManage.apiList['otplogin'].api;
            var params = {
                employee_emailid: $scope.mailid
            }
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.message == 'Invalid email id') {
                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 3000

                    });
                    $scope.mailid = '';
                    return;
                }
                $scope.isemailexist = true;
                $scope.isemailmessage = resp.data.message;


                $scope.otpswitch = false;
                document.getElementById("resend_otp").disabled = true;
                setTimeout(function () { document.getElementById("resend_otp").disabled = false; }, 60000);
                resend_otp_timer();
                //otptimeout();
            });

        }

        $scope.verify_otp = function () {
            if ($scope.password != null && $scope.password != "" && $scope.password != undefined) {
                var url = 'api/Login/otpverify';
                var params = {
                    otpvalue: $scope.password
                }
                lockUI();
                SocketService.post(url, params).then(function (resp) {
                    unlockUI();
                    $cookies.putObject('token', resp.data.token);
                    localStorage.setItem('user_gid', resp.data.user_gid);
                    $state.go('app.welcome');
                });
                //$scope.otpswitch=true;
            }
            else {
                Notify.alert("Kindly enter the OTP!", {
                    status: 'warning',
                    pos: 'top-center',
                    timeout: 3000
                });

            }
        }

        $scope.adclick2 = function () {
            var modalInstance = $modal.open({
                templateUrl: '/OtpLogin.html',
                controller: ModalInstanceCtrl,
                backdrop: 'static',
                keyboard: false,
                size: 'md'
            });
            ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
            function ModalInstanceCtrl($scope, $modalInstance) {

                $scope.otpflag = false;

                $scope.ok = function () {
                    $modalInstance.close('closed');
                };
                $scope.Otplogin = function () {

                    var params = {
                        employee_emailid: $scope.login.account.employee_emailid

                    }
                    var url = apiManage.apiList['otplogin'].api;
                    lockUI();
                    SocketService.post(url, params).then(function (resp) {
                        unlockUI();
                        if (resp.data.status == true) {

                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            $state.templateUrl("/Otpverify.html");
                            otpverify();
                        }
                        else {
                            Notify.alert(resp.data.message, {
                                status: 'warning',
                                pos: 'top-center',
                                timeout: 3000
                            });
                            $modalInstance.close('closed');
                            activate();
                        }
                    });
                    //otpverify();


                }
            }

            // $scope.otplogin = function(){
            //     $scope.otpswitch=false;
            //     var params = {
            //         employee_emailid: $scope.mailid
            //     }
            //     var url = apiManage.apiList['OTPlogin'].api;
            //     lockUI();
            //     SocketService.post(url, params).then(function (resp) {

            //         unlockUI();
            //         Notify.alert(resp.data.message, {
            //             status: 'success',
            //             pos: 'top-center',
            //             timeout: 3000
            //         });
            //     });
            // }
            function startTimer() {
                var presentTime = document.getElementById('timer').innerHTML;
                var timeArray = presentTime.split(/[:]+/);
                var m = timeArray[0];
                var s = checkSecond((timeArray[1] - 1));
                if (s == 59) { m = m - 1 }
                if (m < 0) {
                    return
                }

                document.getElementById('timer').innerHTML =
                  m + ":" + s;
                console.log(m)
                setTimeout(startTimer, 1000);

            }

            function checkSecond(sec) {
                if (sec < 10 && sec >= 0) { sec = "0" + sec }; // add zero in front of numbers < 10
                if (sec < 0) { sec = "59" };
                return sec;
            }
            myApp.service('modalProvider', ['$modal', function ($modal) {

                this.openPopupModal = function () {
                    var modalInstance = $modal.open({
                        templateUrl: '/orderCancellationBox.html',
                        controller: 'ModalInstanceCtrl'
                    });
                };
            }]);

            $scope.otpverify = function () {
                var modalInstance = $modal.open({
                    templateUrl: '/OtpLogin.html',
                    controller: ModalInstanceCtrl,
                    backdrop: 'static',
                    keyboard: false,
                    size: 'md'
                });
                ModalInstanceCtrl.$inject = ['$scope', '$modalInstance'];
                function ModalInstanceCtrl($scope, $modalInstance) {
                    $scope.otpflag = true;

                    $scope.ok = function () {
                        $modalInstance.close('closed');
                    };
                    $scope.otpverify = function () {

                        var params = {
                            employee_emailid: $scope.login.account.employee_emailid

                        }
                        var url = apiManage.apiList['otpverify'].api;
                        lockUI();
                        SocketService.post(url, params).then(function (resp) {
                            unlockUI();
                            if (resp.data.status == true) {

                                Notify.alert(resp.data.message, {
                                    status: 'success',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                                activate();

                            }
                            else {
                                Notify.alert(resp.data.message, {
                                    status: 'warning',
                                    pos: 'top-center',
                                    timeout: 3000
                                });
                                $modalInstance.close('closed');
                                activate();
                            }
                        });

                    }


                }

            }
        }

    }
})();

/**=========================================================
 * Module: access-register.js
 * Demo for register account api
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.pages')
        .controller('RegisterFormController', RegisterFormController);

    RegisterFormController.$inject = ['$http', '$state'];
    function RegisterFormController($http, $state) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          // bind here all data from the form
          vm.account = {};
          // place the message if something goes wrong
          vm.authMsg = '';
            
          vm.register = function() {
            vm.authMsg = '';

            if(vm.registerForm.$valid) {

              $http
                .post('api/account/register', {email: vm.account.email, password: vm.account.password})
                .then(function(response) {
                  // assumes if ok, response is an object with some data, if not, a string with error
                  // customize according to your api
                  if ( !response.account ) {
                    vm.authMsg = response;
                  }else{
                    $state.go('app.dashboard');
                  }
                }, function() {
                  vm.authMsg = 'Server Request Error';
                });
            }
            else {
              // set as dirty if the user click directly to login so we show the validation messages
              /*jshint -W106*/
              vm.registerForm.account_email.$dirty = true;
              vm.registerForm.account_password.$dirty = true;
              vm.registerForm.account_agreed.$dirty = true;
              
            }
          };
        }
    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('CCMeetingApprovalController', CCMeetingApprovalController);
    
    CCMeetingApprovalController.$inject = ['$rootScope', '$scope', '$state', '$modal', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$sce', '$anchorScroll'];

    function CCMeetingApprovalController($rootScope, $scope, $state, $modal, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $sce, $anchorScroll) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'CCMeetingApprovalController';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var relpath1 = relPath[1];

        activate();
        function activate() {

            $scope.trustAsHtml = function (string) { return $sce.trustAsHtml(string); };

            $scope.showapproval = true;
            $scope.hideapproval = true;

            var params = {
                approval_token: relpath1
            };

            var url = 'api/MstCCMailApproval/GetApprovalMailList';
            lockUI();
            SocketService.getparams(url, params).then(function (resp) {
                $scope.application_no = resp.data.application_no;
                $scope.ccadmin_name = resp.data.ccadmin_name;
                $scope.customer_name = resp.data.customer_name;
                $scope.loanfacility_amount = resp.data.loanfacility_amount;
                $scope.ccmeeting_date = resp.data.ccmeeting_date;
                $scope.rm_name = resp.data.rm_name;
                $scope.application_gid = resp.data.application_gid;               
                $scope.mom_description = resp.data.mom_description;

                unlockUI();
                if (resp.data.status == true) {

                    $scope.hideapproval = true;
                    $scope.showapproval = true;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });
                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
            });
        }

        $scope.approve_submit = function () {


            var params = {
                approval_token: relpath1,
                application_gid: $scope.application_gid,
                approval_status: 'Approved',
                approval_remarks: $scope.txtremarks
            }
            lockUI();
            var url = "api/MstCCMailApproval/PostCCMailApproved";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });


                }
            });
        }

        $scope.reject_submit = function () {


            var params = {

                approval_token: relpath1,
                application_gid: $scope.application_gid,
                approval_status: 'Rejected',
                approval_remarks: $scope.txtremarks
            }
            lockUI();
            var url = "api/MstCCMailApproval/PostCCMailApproved";
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true) {

                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                    $scope.showapproval = false;
                    $scope.hideapproval = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'danger',
                        pos: 'top-center',
                        timeout: 3000
                    });


                }
            });
        }

    }
})();
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('composeMail', composeMail);

        composeMail.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies','$timeout','$window'];

    function composeMail($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies,$timeout,$window) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'composeMail';
        var lsdecision;
       $scope.lsShowBCC=true;
       $scope.lsShowCC=true;
        activate();

        function activate() {
         $scope.email_gid=localStorage.getItem('email_gid');
         $scope.toMail=localStorage.getItem('toMail');
         $scope.ccMail=localStorage.getItem('ccMail');
         $scope.bccMail=localStorage.getItem('bccMail');
         $scope.email_subject=localStorage.getItem('email_subject');
         $scope.message_id=localStorage.getItem('message_id');
         $scope.reference_id=localStorage.getItem('reference_id');
         $scope.rmemployee_gid=localStorage.getItem('rmemployee_gid');
         $scope.rmemployee_name=localStorage.getItem('rmemployee_name');
         $scope.decision=localStorage.getItem('decision');
         $scope.lspage=localStorage.getItem('lspage');
         lsdecision =localStorage.getItem('decision');
         $scope.send = true;
         $scope.close = true;
        
         console.log($scope.message_id);

         var url = 'api/IasnTrnEmailSignature/GetEmailSignature';
                SocketService.get(url).then(function (resp) {
                    
                    $scope.pushbackcontent=resp.data.emailsignature;   
                       
                });
            

             }
             $scope.uploadattachment = function (val,val1,name) {
                var item = {
                    name: val[0].name,
                    file: val[0]
                };
                var frm = new FormData();
                frm.append('fileupload', item.file);
                frm.append('file_name', item.name);
               
                
            
                $scope.uploadfrm = frm;
                var url = 'api/IasnTrnWorkItem/MailAttchment';
                lockUI();
                SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
            
                    $("#addupload").val('');
                    $scope.txtdocument_title = '';
                    console.log(resp.data);
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Document Uploaded Successfully..!!', 'success')
                       
                        var url = 'api/IasnTrnWorkItem/MailAttchment';
            
                        SocketService.get(url).then(function (resp) {
                           
                            $scope.uploaddocument = resp.data.MdlDocDetails;
                          
                        });
                    }
                    else {
                        unlockUI();
                        Notify.alert('File Format Not Supported!')
            
                    }
            
                });
            
            }
            $scope.closeDesicion = function(){
                $window.close();
            }

            $scope.updateDesicion=function(){
            
                if($scope.pushbackcontent==undefined){
                    Notify.alert('Write the body of the content','success');
                    return;
                }
              
                var params={
                    email_gid:$scope.email_gid,
                    decision:$scope.decision,
                    employee_gid:$scope.rmemployee_gid,
                    employee_name:$scope.rmemployee_name,
                    remarks:'',
                    mailcontent:$scope.pushbackcontent,
                    subject:$scope.email_subject,
                    tomail_id:$scope.toMail,
                    ccmail_id:$scope.ccMail,
                    bccmail_id:$scope.bcc_mail,
                    message_id:$scope.message_id,
                    reference_id:$scope.reference_id
                }
              
                var url='api/IasnTrnWorkItem/PostDecision';
                lockUI();
                SocketService.post(url,params).then(function (resp) {
                    unlockUI();
                    if(resp.data.status==true){
                       
                        Notify.alert(resp.data.message,'success')
                          $scope.close = false;
                          $scope.send = false;             
                        if($scope.page == WokItem)
                        {
                           
                            $state.go('app.iasnWomWorkOrderSummary')
                        }
                        else
                        {
                           
                            $state.go("app.iasnTrnMyWorkItemSummary");
                        }
                     
                    }
                    else{
                        $scope.close = false;
                        $scope.send = false;               
                        Notify.alert(resp.data.message,'warning')                       
                     
                        if($scope.page == WokItem)
                        {                           
                            $state.go('app.iasnWomWorkOrderSummary')
                        }
                        else
                        {                          
                            $state.go("app.iasnTrnMyWorkItemSummary");
                        }
                    }
                });
    
    
            }
           

            $scope.UploadDocCancel = function (id) {
                var params = {
                    mailattachment_gid: id
                }
                var url = 'api/IasnTrnWorkItem/DeleteAttchment';
                lockUI();
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        unlockUI();
                        Notify.alert('Document deleted Successfully..!!', 'success')
    
                        var url = 'api/IasnTrnWorkItem/MailAttchment';
    
                        SocketService.get(url).then(function (resp) {
    
                            $scope.uploaddocument = resp.data.MdlDocDetails;
    
                        });
                    }
                    else {
                        unlockUI();
                        Notify.alert('Error Occurred')
    
                    }
    
                });
            }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('CourierMgmtAckForm', CourierMgmtAckForm);

        CourierMgmtAckForm.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies','$timeout'];

    function CourierMgmtAckForm($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies,$timeout) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'CourierMgmtAckForm';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var id = relPath[1];
        var relPath = id.split("&emp_gid=");
        var courierMgmt_gid = relPath[0];
        var employee_gid = relPath[1];


        activate();

        function activate() {
            $scope.showack = true;
            $scope.hideack = true;
            $scope.hideexitack = true;

           
            var params = {
                courierMgmt_gid: courierMgmt_gid,
               
            };

            
            var url = 'api/DaIdasTrnCourierAck/GetCourierDtl';

            SocketService.getparams(url, params).then(function (resp) {
                console.log(resp.data);
                if (resp.data.status == true) {
                    unlockUI();
                    $scope.courier_details = resp.data;
                    if(resp.data.ack_status=="Pending"){
                        $scope.hideack = true;
                        $scope.showack = true;
                        $scope.hideexitack = true;
                    }
                    else{
                        $scope.hideack = true;
                        $scope.showack = false;
                        $scope.hideexitack = false;

                    }
                   
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });
                    $scope.hideexitack = false;
                    $scope.showack = false;
                    $scope.hideack = true;
                }
            });
        }
       


        /* Feedback Add */


        $scope.feedback_submit = function () {
          
          
            var params={
                courierMgmt_gid: courierMgmt_gid,
                employee_gid:employee_gid
            }
            var url = 'api/DaIdasTrnCourierAck/PostAckStatus';
            lockUI();
            SocketService.post(url, params).then(function (resp) {

                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.hideack = false;
                    $scope.hideexitack = true;
                    $scope.showack = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.hideack = true;
                    $scope.hideexitack = true;
                    $scope.showack = true;
                }
            });

        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('feedbackController', feedbackController);

    feedbackController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies','$timeout'];

    function feedbackController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies,$timeout) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'feedbackController';
        var lblRatingText = document.getElementById('lblRatingText');
        var url = window.location.href;
        var relPath = url.split("?id=");
        var relpath1 = relPath[1];


        activate();

        function activate() {
            $scope.showfeedback = true;
            $scope.hidefeedback = true;
            $scope.hideexitfeedback = true;


            var params = {
                token: relpath1
            };
            var url = 'api/FeedBack/GetFeedbackDtl';

            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    $scope.ticket_details = resp.data;
                    $scope.hidefeedback = true;
                    $scope.showfeedback = true;
                    $scope.hideexitfeedback = true;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });
                    $scope.hideexitfeedback = false;
                    $scope.showfeedback = false;
                    $scope.hidefeedback = true;
                }
            });
        }
        const stars = document.querySelector(".ratings").children;
        var ratingValue = document.querySelector("#rating-count")
        //ratingValue.value = 5;
        //lblRatingText.innerHTML = "Very Good";
        //lblRatingText.style.color = 'Green';
        //for (let i = 0; i < 5; i++) {
        //    stars[i].classList.remove("fa-star-o");
        //    stars[i].classList.add("fa-star");
        //}
        let index;
        for (let i = 0; i < stars.length; i++) {
            stars[i].addEventListener("mouseover", function () {
                for (let j = 0; j < stars.length; j++) {
                    stars[j].classList.remove("fa-star");
                }
                for (let j = 0; j <= i; j++) {
                    stars[j].classList.remove("fa-star-o");
                    stars[j].classList.add("fa-star");
                }
            })
            stars[i].addEventListener("click", function () {
                ratingValue.value = i + 1;
                index = i;
                var val = i + 1;           
                if (val == 5) {
                    lblRatingText.innerHTML = "Very Good";
                    lblRatingText.style.color = 'Green';
                }
                else if (val == 4) {
                    lblRatingText.innerHTML = "Good";
                    lblRatingText.style.color = 'Green';
                }
                else if (val == 3) {
                    lblRatingText.innerHTML = "Ok";
                    lblRatingText.style.color = 'Orange';
                }
                else if (val == 2) {
                    lblRatingText.innerHTML = "Poor";
                    lblRatingText.style.color = 'red';
                }
                else {
                    lblRatingText.innerHTML = "Very Poor";
                    lblRatingText.style.color = 'red';
                }
               
            })
            stars[i].addEventListener("mouseout", function () {
                for (let j = 0; j < stars.length; j++) {
                    stars[j].classList.remove("fa-star");
                    stars[j].classList.add("fa-star-o");
                }
                for (let j = 0; j <= index; j++) {
                    stars[j].classList.remove("fa-star-o");
                    stars[j].classList.add("fa-star");
                }
            })


        }


        /* Feedback Add */


        $scope.feedback_submit = function () {
          
            if (ratingValue.value == undefined) {
                $scope.req_star = true;
                $timeout(function () {
                    $scope.req_star = false;
                }, 4000);
                return false;
            }

            var params = {
                rating_count: ratingValue.value,
                feedback_remarks: $scope.txtremarks,
                rating_text: lblRatingText.innerHTML,
                token: relpath1
            }

         
          

            console.log(params);
            var url = 'api/FeedBack/PostFeedbackdtl';
            lockUI();
            SocketService.post(url, params).then(function (resp) {

                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.hidefeedback = false;
                    $scope.showfeedback = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.showfeedback = true;
                    $scope.hidefeedback = true;
                }
            });

        }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('helpdashboardController', helpdashboardController);

    helpdashboardController.$inject = ['$rootScope', '$scope', '$sce', '$state', 'SweetAlert', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];

    function helpdashboardController($rootScope, $scope, $sce, $state,SweetAlert, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'helpdashboardController';

        activate();

        function activate() {
           
            lockUI();

            var url = 'api/HlpMstHelp/screenshottempdelete';
            SocketService.get(url).then(function (resp) {

            });

            var url = 'api/HlpMstHelp/Getcompanylogo';

            SocketService.get(url).then(function (resp) {
                $scope.company_code = resp.data.company_code;
                $scope.company_logo = resp.data.company_uilogo_path;
            });


            var url = 'api/HlpMstHelp/Getsinglemodule';

            SocketService.get(url).then(function (resp) {

                $scope.module_gid = resp.data.module_gid;
                $scope.moduleName = resp.data.module_name;
                modulename($scope.module_gid);
            });
            var url = 'api/HlpMstHelp/Getmodule';

            SocketService.get(url).then(function (resp) {

                $scope.moduleList = resp.data.modulesummary;
               
            });
            unlockUI();
        }

        $scope.uploadphoto = function (val, val1, name) {
            lockUI();
            var item = {
                name: val[0].name,
                file: val[0]
            };
            var frm = new FormData();
            frm.append('fileupload', item.file);
            frm.append('file_name', item.name);
            frm.append('document_name', $scope.documentname);
            $scope.uploadfrm = frm;
            var url = 'api/HlpMstHelp/attachmentUpload';

            SocketService.postFile(url, $scope.uploadfrm).then(function (resp) {
             
                
                var url = "api/HlpMstHelp/getattachPhoto";
                SocketService.get(url).then(function (resp) {
                    $scope.attachphoto = resp.data.attachphoto;
                });
                if (resp.data.status == true) {
                   
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                else {
                    Notify.alert(resp.data.message, {
                        status: 'info',
                        pos: 'top-center',
                        timeout: 3000
                    });

                }
                unlockUI();
            });
        }

        function modulename(module_gid) {

            lockUI();
            
            var params = {
                module_gid: module_gid
            };
            var url = 'api/HlpMstHelp/Getfaq';

            SocketService.getparams(url, params).then(function (resp) {

                $scope.FaqList = resp.data.faqsummary;

            });
            var url = 'api/HlpMstHelp/Getreplyofqueries';

            SocketService.getparams(url, params).then(function (resp) {

                $scope.replyqueryList = resp.data.replyquerysummary;

            });

            var url = 'api/HlpMstHelp/Getqueries';

            SocketService.getparams(url, params).then(function (resp) {

                $scope.queryList = resp.data.querysummary;

            });

            var url = 'api/HlpMstHelp/getpage';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.pagename_list = resp.data.pagename_list;
            });
            
            unlockUI();
        }

        $scope.module = function (module_gid)
        {
           
            lockUI();
            var url = 'api/HlpMstHelp/Getsinglemodulename';
            var params = {
                module_gid: module_gid
            };

            SocketService.getparams(url, params).then(function (resp) {
              
                $scope.moduleName = resp.data.module_name;
              
            });
            
            var params = {
                module_gid: module_gid
            };
            var url = 'api/HlpMstHelp/Getfaq';
            SocketService.getparams(url, params).then(function (resp) {
                
                $scope.FaqList = resp.data.faqsummary;
               
            });

            var url = 'api/HlpMstHelp/Getqueries';

            SocketService.getparams(url, params).then(function (resp) {

                $scope.queryList = resp.data.querysummary;

            });

            var url = 'api/HlpMstHelp/Getreplyofqueries';

            SocketService.getparams(url, params).then(function (resp) {

                $scope.replyqueryList = resp.data.replyquerysummary;

            });
            
            var url = 'api/HlpMstHelp/getpage';

            SocketService.getparams(url, params).then(function (resp) {
                $scope.pagename_list = resp.data.pagename_list;
            });
            
            unlockUI();
        }

        $scope.trustAsHtml = function (string) {
            return $sce.trustAsHtml(string);
        };

        $scope.querySubmit = function ()
        {
            if (($scope.query_title == '') || ($scope.query_title == undefined)) {
                Notify.alert('Kindly Enter Query Title', 'warning')
            }
            else {
                var params = {

                    page_name: $scope.pagename.page_name,
                    page_gid: $scope.pagename.page_gid,
                    txt_querytitle: $scope.query_title,
                    txtquerydescription: $scope.query_description,

                }
                
                var url = 'api/HlpMstHelp/queryCreate';
                lockUI()
                SocketService.post(url, params).then(function (resp) {

                    if (resp.data.status == true) {
                        var url = "api/HlpMstHelp/getattachPhoto";
                        SocketService.get(url).then(function (resp) {
                            $scope.attachphoto = resp.data.attachphoto;
                        });
                        var params = {
                            module_gid: resp.data.moduleparent_name
                        }
                        var url = 'api/HlpMstHelp/Getqueries';

                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.queryList = resp.data.querysummary;

                        });
                        unlockUI();
                        $scope.query_title = "";
                        $scope.query_description = "";
                        $scope.pagename = "";                        
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                    }
                    else {
                        unlockUI();
                        Notify.alert('Error While Raising the Query')
                    }
                });
                }
        }

        $scope.photodelete = function (val) {
            var params = { id: val };
            SweetAlert.swal({
                title: 'Are you sure?',
                text: 'Do You Want To Delete the Screenshot ?',
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, delete it!',
                closeOnConfirm: false
            }, function (isConfirm) {
                if (isConfirm) {
                    var url = 'api/HlpMstHelp/attachphotoUploadcancel';
                    SocketService.getparams(url, params).then(function (resp) {
                        if (resp.data.status == true) {
                            var url = "api/HlpMstHelp/getattachPhoto";
                            SocketService.get(url).then(function (resp) {
                                $scope.attachphoto = resp.data.attachphoto;
                            });
                            Notify.alert(resp.data.message, {
                                status: 'success',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        else {
                            Notify.alert('Internal Error Occurred!', {
                                status: 'Warning',
                                pos: 'top-center',
                                timeout: 3000
                            });

                        }
                        SweetAlert.swal('Deleted Successfully!');
                    });

                }

            });
           
        }


    $scope.deletequery = function(val1,val2)
    {
        var params = { raisequery_gid: val1 };
        $scope.module_gid = val2;
        SweetAlert.swal({
            title: 'Are you sure?',
            text: 'Do You Want To Delete the Query ?',
            showCancelButton: true,
            confirmButtonColor: '#DD6B55',
            confirmButtonText: 'Yes, delete it!',
            closeOnConfirm: false
        }, function (isConfirm) {
            if (isConfirm) {
                var url = 'api/HlpMstHelp/querycancel';
                SocketService.getparams(url, params).then(function (resp) {
                    if (resp.data.status == true) {
                        var params = {
                            module_gid: $scope.module_gid
                        }
                        var url = 'api/HlpMstHelp/Getqueries';

                        SocketService.getparams(url, params).then(function (resp) {

                            $scope.queryList = resp.data.querysummary;

                        });
                        Notify.alert(resp.data.message, {
                            status: 'success',
                            pos: 'top-center',
                            timeout: 3000
                        });
                        SweetAlert.swal('Deleted Successfully!');
                    }
                    else {
                        Notify.alert('Internal Error Occurred!', {
                            status: 'Warning',
                            pos: 'top-center',
                            timeout: 3000
                        });

                    }
                });

            }

        });

       
    }

    }
})();

(function () {
    'use strict';

    angular
        .module('angle')
        .controller('MstCourierMgmtAckFormController', MstCourierMgmtAckFormController);

    MstCourierMgmtAckFormController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route', '$cookies', '$timeout'];

    function MstCourierMgmtAckFormController($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route, $cookies, $timeout) {
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'MstCourierMgmtAckFormController';
        var url = window.location.href;
        var relPath = url.split("?id=");
        var id = relPath[1];
        var relPath = id.split("&emp_gid=");
        var courierMgmt_gid = relPath[0];
        var employee_gid = relPath[1];


        activate();
        lockUI();
        function activate() {
            $scope.showack = true;
            $scope.hideack = true;
            $scope.hideexitack = true;


            var params = {
                courierMgmt_gid: courierMgmt_gid
            };
            var url = 'api/MstCourierAck/GetAcknowledgeForm';
            SocketService.getparams(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    $scope.courier_details = resp.data;
                    if (resp.data.ack_status == "Pending") {
                        $scope.hideack = true;
                        $scope.showack = true;
                        $scope.hideexitack = true;
                    }
                    else {
                        $scope.hideack = true;
                        $scope.showack = false;
                        $scope.hideexitack = false;
                    }
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });
                    $scope.hideexitack = false;
                    $scope.showack = false;
                    $scope.hideack = true;
                }
            });
        }

        /* Feedback Add */

        $scope.feedback_submit = function () {
            var params = {
                courierMgmt_gid: courierMgmt_gid,
                employee_gid: employee_gid
            }
            var url = 'api/MstCourierAck/PostAckStatus';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    unlockUI();
                    Notify.alert(resp.data.message, {
                        status: 'success',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.hideack = false;
                    $scope.hideexitack = true;
                    $scope.showack = false;
                }
                else {

                    Notify.alert(resp.data.message, {
                        status: 'warning',
                        pos: 'top-center',
                        timeout: 4000
                    });

                    $scope.hideack = true;
                    $scope.hideexitack = true;
                    $scope.showack = true;
                }
            });

        }

    }
})();

(function () {
    'use strict';

    angular
        .module('app.pages')
        .controller('responseController', responseController);
    responseController.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService','$cookies', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route','$routeParams'];
    function responseController($rootScope, $scope, $state, AuthenticationService,$cookies, $http, SocketService, Notify, $location, apiManage, $route,$routeParams) {
        var param1 = $location.search();       
        lockUI();
        var url = 'api/Login/LoginReturn';
        SocketService.post(url, param1).then(function (resp) {
            if (resp.data.user_gid != null)
            {
                $cookies.putObject('token', resp.data.token);
                localStorage.setItem('user_gid', resp.data.user_gid);
                $state.go('app.welcome');
                unlockUI();
            }
            else if ((resp.data.user_gid ==null) || (resp.data.user_gid ==""))
            {
                unlockUI();
                Notify.alert('Error Occured.Try Again..!!', {
                    status: 'danger',
                    pos: 'top-center',
                    timeout: 3000
                });
                $state.go('page.login');
            }
        });
    }
    function load()
    {
        $state.go('app.welcome');
    }
}
)();
(function () {
    'use strict';

    angular
        .module('app.pages')
        .controller('ssoLogin', ssoLogin);

    ssoLogin.$inject = ['$rootScope', '$scope', '$state', '$cookies', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];
    function ssoLogin($rootScope, $scope, $state, $cookies, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {
        var vm = this;

        activate();
        function activate() {

        };
        $scope.login = function () {
            $scope.authMs = false;

            var params = {
                user_code: $scope.user_code,
                user_password: $scope.user_password
            };
            var url = apiManage.apiList['login'].api;
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                if (resp.data.status == true) {
                    $cookies.putObject('token', resp.data.token);
                    localStorage.setItem('user_gid', resp.data.user_gid);
                    $state.go('app.welcome');
                    unlockUI();
                }
                else {
                    unlockUI();               
                   alert('Invalid Credentials');
                }
            });
        };

        $scope.sso = function () {
            var url = "https://login.microsoftonline.com/d71b0d7f-10d7-46cf-80f6-b8dc3924a66a/oauth2/v2.0/authorize?client_id=62a06863-baa5-4adf-b13b-2efb32aac417&response_type=code&redirect_uri=http://localhost/v1/response.html&response_mode=query&scope=https://graph.microsoft.com/User.Read&state=12345"
            window.location = url;
        }

    }
})();
(function() {
    'use strict';

    angular
        .module('app.preloader')
        .directive('preloader', preloader);

    preloader.$inject = ['$animate', '$timeout', '$q'];
    function preloader ($animate, $timeout, $q) {

        var directive = {
            restrict: 'EAC',
            template: 
              '<div class="preloader-progress">' +
                  '<div class="preloader-progress-bar" ' +
                       'ng-style="{width: loadCounter + \'%\'}"></div>' +
              '</div>'
            ,
            link: link
        };
        return directive;

        ///////

        function link(scope, el) {

          scope.loadCounter = 0;

          var counter  = 0,
              timeout;

          // disables scrollbar
          angular.element('body').css('overflow', 'hidden');
          // ensure class is present for styling
          el.addClass('preloader');

          appReady().then(endCounter);

          timeout = $timeout(startCounter);

          ///////

          function startCounter() {

            var remaining = 100 - counter;
            counter = counter + (0.015 * Math.pow(1 - Math.sqrt(remaining), 2));

            scope.loadCounter = parseInt(counter, 10);

            timeout = $timeout(startCounter, 20);
          }

          function endCounter() {

            $timeout.cancel(timeout);

            scope.loadCounter = 100;

            $timeout(function(){
              // animate preloader hiding
              $animate.addClass(el, 'preloader-hidden');
              // retore scrollbar
              angular.element('body').css('overflow', '');
            }, 300);
          }

          function appReady() {
            var deferred = $q.defer();
            var viewsLoaded = 0;
            // if this doesn't sync with the real app ready
            // a custom event must be used instead
            var off = scope.$on('$viewContentLoaded', function () {
              viewsLoaded ++;
              // we know there are at least two views to be loaded 
              // before the app is ready (1-index.html 2-app*.html)
              if ( viewsLoaded === 2) {
                // with resolve this fires only once
                $timeout(function(){
                  deferred.resolve();
                }, 3000);

                off();
              }

            });

            return deferred.promise;
          }

        } //link
    }

})();
/**=========================================================
 * Collapse panels * [panel-collapse]
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.panels')
        .directive('panelCollapse', panelCollapse);

    function panelCollapse () {
        var directive = {
            controller: Controller,
            restrict: 'A',
            scope: false
        };
        return directive;
    }

    Controller.$inject = ['$scope', '$element', '$timeout', '$localStorage'];
    function Controller ($scope, $element, $timeout, $localStorage) {
      var storageKeyName = 'panelState';

      // Prepare the panel to be collapsible
      var $elem   = $($element),
          parent  = $elem.closest('.panel'), // find the first parent panel
          panelId = parent.attr('id');

      // Load the saved state if exists
      var currentState = loadPanelState( panelId );
      if ( typeof currentState !== 'undefined') {
        $timeout(function(){
            $scope[panelId] = currentState; },
          10);
      }

      // bind events to switch icons
      $element.bind('click', function(e) {
        e.preventDefault();
        savePanelState( panelId, !$scope[panelId] );

      });
  
      // Controller helpers
      function savePanelState(id, state) {
        if(!id) return false;
        var data = angular.fromJson($localStorage[storageKeyName]);
        if(!data) { data = {}; }
        data[id] = state;
        $localStorage[storageKeyName] = angular.toJson(data);
      }
      function loadPanelState(id) {
        if(!id) return false;
        var data = angular.fromJson($localStorage[storageKeyName]);
        if(data) {
          return data[id];
        }
      }
    }

})();

/**=========================================================
 * Dismiss panels * [panel-dismiss]
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.panels')
        .directive('panelDismiss', panelDismiss);

    function panelDismiss () {

        var directive = {
            controller: Controller,
            restrict: 'A'
        };
        return directive;

    }

    Controller.$inject = ['$scope', '$element', '$q', 'Utils'];
    function Controller ($scope, $element, $q, Utils) {
      var removeEvent   = 'panel-remove',
          removedEvent  = 'panel-removed';

      $element.on('click', function (e) {
        e.preventDefault();

        // find the first parent panel
        var parent = $(this).closest('.panel');

        removeElement();

        function removeElement() {
          var deferred = $q.defer();
          var promise = deferred.promise;
          
          // Communicate event destroying panel
          $scope.$emit(removeEvent, parent.attr('id'), deferred);
          promise.then(destroyMiddleware);
        }

        // Run the animation before destroy the panel
        function destroyMiddleware() {
          if(Utils.support.animation) {
            parent.animo({animation: 'bounceOut'}, destroyPanel);
          }
          else destroyPanel();
        }

        function destroyPanel() {

          var col = parent.parent();
          parent.remove();
          // remove the parent if it is a row and is empty and not a sortable (portlet)
          col
            .filter(function() {
            var el = $(this);
            return (el.is('[class*="col-"]:not(.sortable)') && el.children('*').length === 0);
          }).remove();

          // Communicate event destroyed panel
          $scope.$emit(removedEvent, parent.attr('id'));

        }

      });
    }
})();



/**=========================================================
 * Refresh panels
 * [panel-refresh] * [data-spinner="standard"]
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.panels')
        .directive('panelRefresh', panelRefresh);

    function panelRefresh () {
        var directive = {
            controller: Controller,
            restrict: 'A',
            scope: false
        };
        return directive;

    }

    Controller.$inject = ['$scope', '$element'];
    function Controller ($scope, $element) {
      var refreshEvent   = 'panel-refresh',
          whirlClass     = 'whirl',
          defaultSpinner = 'standard';

      // catch clicks to toggle panel refresh
      $element.on('click', function (e) {
        e.preventDefault();

        var $this   = $(this),
            panel   = $this.parents('.panel').eq(0),
            spinner = $this.data('spinner') || defaultSpinner
            ;

        // start showing the spinner
        panel.addClass(whirlClass + ' ' + spinner);

        // Emit event when refresh clicked
        $scope.$emit(refreshEvent, panel.attr('id'));

      });

      // listen to remove spinner
      $scope.$on('removeSpinner', removeSpinner);

      // method to clear the spinner when done
      function removeSpinner (ev, id) {
        if (!id) return;
        var newid = id.charAt(0) === '#' ? id : ('#'+id);
        angular
          .element(newid)
          .removeClass(whirlClass);
      }
    }
})();



/**=========================================================
 * Module panel-tools.js
 * Directive tools to control panels. 
 * Allows collapse, refresh and dismiss (remove)
 * Saves panel state in browser storage
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.panels')
        .directive('paneltool', paneltool);

    paneltool.$inject = ['$compile', '$timeout'];
    function paneltool ($compile, $timeout) {
        var directive = {
            link: link,
            restrict: 'E',
            scope: false
        };
        return directive;

        function link(scope, element, attrs) {

          var templates = {
            /* jshint multistr: true */
            collapse:'<a href="#" panel-collapse="" tooltip="Collapse Panel" ng-click="{{panelId}} = !{{panelId}}"> \
                        <em ng-show="{{panelId}}" class="fa fa-plus"></em> \
                        <em ng-show="!{{panelId}}" class="fa fa-minus"></em> \
                      </a>',
            dismiss: '<a href="#" panel-dismiss="" tooltip="Close Panel">\
                       <em class="fa fa-times"></em>\
                     </a>',
            refresh: '<a href="#" panel-refresh="" data-spinner="{{spinner}}" tooltip="Refresh Panel">\
                       <em class="fa fa-refresh"></em>\
                     </a>'
          };

          var tools = scope.panelTools || attrs;
      
          $timeout(function() {
            element.html(getTemplate(element, tools )).show();
            $compile(element.contents())(scope);
            
            element.addClass('pull-right');
          });
  
          function getTemplate( elem, attrs ){
            var temp = '';
            attrs = attrs || {};
            if(attrs.toolCollapse)
              temp += templates.collapse.replace(/{{panelId}}/g, (elem.parent().parent().attr('id')) );
            if(attrs.toolDismiss)
              temp += templates.dismiss;
            if(attrs.toolRefresh)
              temp += templates.refresh.replace(/{{spinner}}/g, attrs.toolRefresh);
            return temp;
          }
        }// link
    } 

})();

/**=========================================================
 * Module: demo-panels.js
 * Provides a simple demo for panel actions
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.panels')
        .controller('PanelsCtrl', PanelsCtrl);

    PanelsCtrl.$inject = ['$scope', '$timeout'];
    function PanelsCtrl($scope, $timeout) {

        activate();

        ////////////////

        function activate() {

          // PANEL COLLAPSE EVENTS
          // ----------------------------------- 

          // We can use panel id name for the boolean flag to [un]collapse the panel
          $scope.$watch('panelDemo1',function(newVal){
              
              console.log('panelDemo1 collapsed: ' + newVal);

          });


          // PANEL DISMISS EVENTS
          // ----------------------------------- 

          // Before remove panel
          $scope.$on('panel-remove', function(event, id, deferred){
            
            console.log('Panel #' + id + ' removing');
            
            // Here is obligatory to call the resolve() if we pretend to remove the panel finally
            // Not calling resolve() will NOT remove the panel
            // It's up to your app to decide if panel should be removed or not
            deferred.resolve();
          
          });

          // Panel removed ( only if above was resolved() )
          $scope.$on('panel-removed', function(event, id){

            console.log('Panel #' + id + ' removed');

          });


          // PANEL REFRESH EVENTS
          // ----------------------------------- 

          $scope.$on('panel-refresh', function(event, id) {
            var secs = 3;
            
            console.log('Refreshing during ' + secs +'s #'+id);

            $timeout(function(){
              // directive listen for to remove the spinner 
              // after we end up to perform own operations
              $scope.$broadcast('removeSpinner', id);
              
              console.log('Refreshed #' + id);

            }, 3000);

          });

          // PANELS VIA NG-REPEAT
          // ----------------------------------- 

          $scope.panels = [
            {
              id: 'panelRepeat1',
              title: 'Panel Title 1',
              body: 'Nulla eget lorem leo, sit amet elementum lorem. '
            },
            {
              id: 'panelRepeat2',
              title: 'Panel Title 2',
              body: 'Nulla eget lorem leo, sit amet elementum lorem. '
            },
            {
              id: 'panelRepeat3',
              title: 'Panel Title 3',
              body: 'Nulla eget lorem leo, sit amet elementum lorem. '
            }
          ];
        }

    } //PanelsCtrl

})();


/**=========================================================
 * Drag and drop any panel based on jQueryUI portlets
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.panels')
        .directive('portlet', portlet);

    portlet.$inject = ['$timeout', '$localStorage'];
    function portlet ($timeout, $localStorage) {
      var storageKeyName = 'portletState';

      return {
        restrict: 'A',
        link: link
      };

      /////////////

      function link(scope, element) {
          
        // not compatible with jquery sortable
        if(!$.fn.sortable) return;

        element.sortable({
          connectWith:          '[portlet]', // same like directive 
          items:                'div.panel',
          handle:               '.portlet-handler',
          opacity:              0.7,
          placeholder:          'portlet box-placeholder',
          cancel:               '.portlet-cancel',
          forcePlaceholderSize: true,
          iframeFix:            false,
          tolerance:            'pointer',
          helper:               'original',
          revert:               200,
          forceHelperSize:      true,
          update:               savePortletOrder,
          create:               loadPortletOrder
        });

      }


      function savePortletOrder(event/*, ui*/) {
        var self = event.target;
        var data = angular.fromJson($localStorage[storageKeyName]);
        
        if(!data) { data = {}; }

        data[self.id] = $(self).sortable('toArray');

        if(data) {
          $timeout(function() {
            $localStorage[storageKeyName] = angular.toJson(data);
          });
        }
      }

      function loadPortletOrder(event) {
        var self = event.target;
        var data = angular.fromJson($localStorage[storageKeyName]);

        if(data) {
          
          var porletId = self.id,
              panels   = data[porletId];

          if(panels) {
            var portlet = $('#'+porletId);
            
            $.each(panels, function(index, value) {
               $('#'+value).appendTo(portlet);
            });
          }

        }
      }

    }

})();
 
/**=========================================================
 * Module: helpers.js
 * Provides helper functions for routes definition
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.routes')
        .provider('RouteHelpers', RouteHelpersProvider)
        ;

    RouteHelpersProvider.$inject = ['APP_REQUIRES'];
    function RouteHelpersProvider(APP_REQUIRES) {

      /* jshint validthis:true */
      return {
        // provider access level
        basepath: basepath,
        resolveFor: resolveFor,
        // controller access level
        $get: function() {
          return {
            basepath: basepath,
            resolveFor: resolveFor
          };
        }
      };

      // Set here the base of the relative path
      // for all app views
      function basepath(uri) {
        return 'app/views/' + uri;
      }

      // Generates a resolve object by passing script names
      // previously configured in constant.APP_REQUIRES
      function resolveFor() {
        var _args = arguments;
        return {
          deps: ['$ocLazyLoad','$q', function ($ocLL, $q) {
            // Creates a promise chain for each argument
            var promise = $q.when(1); // empty promise
            for(var i=0, len=_args.length; i < len; i ++){
              promise = andThen(_args[i]);
            }
            return promise;

            // creates promise to chain dynamically
            function andThen(_arg) {
              // also support a function that returns a promise
              if(typeof _arg === 'function')
                  return promise.then(_arg);
              else
                  return promise.then(function() {
                    // if is a module, pass the name. If not, pass the array
                    var whatToLoad = getRequired(_arg);
                    // simple error check
                    if(!whatToLoad) return $.error('Route resolve: Bad resource name [' + _arg + ']');
                    // finally, return a promise
                    return $ocLL.load( whatToLoad );
                  });
            }
            // check and returns required data
            // analyze module items with the form [name: '', files: []]
            // and also simple array of script files (for not angular js)
            function getRequired(name) {
              if (APP_REQUIRES.modules)
                  for(var m in APP_REQUIRES.modules)
                      if(APP_REQUIRES.modules[m].name && APP_REQUIRES.modules[m].name === name)
                          return APP_REQUIRES.modules[m];
              return APP_REQUIRES.scripts && APP_REQUIRES.scripts[name];
            }

          }]};
      } // resolveFor

    }


})();


/**=========================================================
 * Module: config.js
 * App routes and resources configuration
 =========================================================*/


(function () {
    'use strict';

    angular
        .module('app.routes')
        .config(routesConfig);

    routesConfig.$inject = ['$stateProvider', '$locationProvider', '$urlRouterProvider', 'RouteHelpersProvider'];
    function routesConfig($stateProvider, $locationProvider, $urlRouterProvider, helper) {

        // Set the following to true to enable the HTML5 Mode
        // You may have to set <base> tag in index and a routing configuration in your server
        $locationProvider.html5Mode(false);

        // defaults to dashboard
        $urlRouterProvider.otherwise('/page/user_login');

        // version update
        var version = '1.0';

        // 
        // Application Routes
        // -----------------------------------   
        $stateProvider
          .state('app', {
              url: '/app',
              abstract: true,
              templateUrl: helper.basepath('app.html?ver=' + version + '"'),
              resolve: helper.resolveFor('fastclick', 'modernizr', 'icons', 'screenfull', 'animo', 'sparklines', 'slimscroll', 'classyloader', 'toaster', 'whirl')
          })
          .state('app.welcome', {
              url: '/welcome',
              title: 'Welcome',
              templateUrl: helper.basepath('welcome.html?ver=' + version + '"')
          })

          .state('page.helpdashboard', {
              url: '/helpdashboard',
              title: 'helpdashboard',
              templateUrl: 'app/pages/helpdashboard.html?ver=' + version + '"',
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'filestyle', 'localytics.directives')
          })

              .state('page.ServiceRequestApproval', {
                  url: '/ServiceRequestApproval',
                  title: 'ServiceRequestApproval',
                  templateUrl: 'app/pages/ServiceRequestApproval.html?ver=' + version + '"',
              })

          .state('app.deploymentadd', {
              url: '/deploymentadd',
              title: 'Deployment',
              templateUrl: helper.basepath('deploymentAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert')
          })
            .state('app.deploymentsummary', {
                url: '/deploymentsummary',
                title: 'Deployment Summary',
                templateUrl: helper.basepath('deploymentSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
            })


          //
          // Single Page Routes
          // -----------------------------------
          .state('page', {
              url: '/page',
              templateUrl: 'app/pages/page.html?ver=' + version + '"',
              resolve: helper.resolveFor('modernizr', 'icons'),
              controller: ['$rootScope', function ($rootScope) {
                  $rootScope.app.layout.isBoxed = false;
              }]
          })

                  .state('app.defapp',
        {
            url: '/defapp',
            title: 'defapp',
            templateUrl: helper.basepath('ems.ecms/defapp.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })


          .state('page.login', {
              url: '/login',
              title: 'Login',
              templateUrl: 'app/pages/login.html?ver=' + version + '"',
          })

             .state('page.user_login', {
                 url: '/user_login',
                 title: 'user_login',
                 templateUrl: 'app/pages/user_login.html?ver=' + version + '"',
             })

          .state('page.lock', {
              url: '/lock',
              title: 'Lock',
              templateUrl: 'app/pages/lock.html?ver=' + version + '"'
          })
           .state('page.404', {
               url: '/404',
               title: 'Not Found',
               templateUrl: 'app/pages/404.html?ver=' + version + '"'
           })
            .state('page.401', {
                url: '/401',
                title: 'Session Expired',
                templateUrl: 'app/pages/401.html?ver=' + version + '"'
            })
             .state('page.500', {
                 url: '/500',
                 title: 'Internal Error',
                 templateUrl: 'app/pages/500.html?ver=' + version + '"'
             })
              .state('page.ssologin', {
                  url: '/sso',
                  title: 'SSO',
                  templateUrl: 'app/pages/ssoLogin.html?ver=' + version + '"',
              })
            .state('page.ssoresponse', {
                url: '/ssoresponse',
                title: 'SSO_response',
                templateUrl: 'app/pages/ssoresponse.html?ver=' + version + '"',
            })
            .state('page.feedback', {
                url: '/feedback',
                title: 'feedback',
                templateUrl: 'app/pages/feedback.html?ver=' + version + '"',
            })
              .state('app.deploymentAdd', {
                  url: '/deploymentAdd',
                  title: 'Add Deployment',
                  templateUrl: helper.basepath('ems.its/deploymentAdd.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'localytics.directives')
              })
            .state('app.deploymentSummary', {
                url: '/deploymentSummary',
                title: 'Deployment Summary',
                templateUrl: helper.basepath('ems.its/deploymentSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'datatables', 'chartjs')
            })
            .state('app.deploymentEdit', {
                url: '/deploymentEdit',
                title: 'Edit Deployment',
                templateUrl: helper.basepath('ems.its/deploymentEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'localytics.directives')
            })

             .state('app.myApproval',
        {
            url: '/myApproval',
            title: 'myApproval',
            templateUrl: helper.basepath('ems.its/myApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid', 'ngTableExport')

        })

        .state('app.iasnMstTeamManagement', {
            url: '/iasnMstTeamManagement',
            title: 'iasnMstTeamManagement',
            templateUrl: helper.basepath('ems.iasn/iasnMstTeamManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        // iasnWomMergeWorkItem


        .state('app.iasnWomMergeWorkItem', {
            url: '/iasnWomMergeWorkItem',
            title: 'iasnWomMergeWorkItem',
            templateUrl: helper.basepath('ems.iasn/iasnWomMergeWorkItem.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.iasnMstTeamAdd', {
            url: '/iasnMstTeamAdd',
            title: 'iasnMstTeamAdd',
            templateUrl: helper.basepath('ems.iasn/iasnMstTeamAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.iasnMstTeamEdit', {
            url: '/iasnMstTeamEdit',
            title: 'iasnMstTeamEdit',
            templateUrl: helper.basepath('ems.iasn/iasnMstTeamEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives')
        })

        .state('app.iasnWomWorkOrderSummary', {
            url: '/iasnWomWorkOrderSummary',
            title: 'iasnWomWorkOrderSummary',
            templateUrl: helper.basepath('ems.iasn/iasnWomWorkOrderSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.iasnTrnMyWorkItemSummary', {
            url: '/iasnTrnMyWorkItemSummary',
            title: 'iasnTrnMyWorkItemSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnMyWorkItemSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })


        .state('app.iasnTrnWorkItem360', {
            url: '/iasnTrnWorkItem360',
            title: 'iasnTrnWorkItem360',
            templateUrl: helper.basepath('ems.iasn/iasnTrnWorkItem360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig')
        })
        .state('app.iasnTrnArchivalSummary', {
            url: '/iasnTrnArchivalSummary',
            title: 'iasnTrnArchivalSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnArchivalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })

        .state('app.iasnMstZonalMapping', {
            url: '/iasnMstZonalMapping',
            title: 'iasnMstZonalMapping',
            templateUrl: helper.basepath('ems.iasn/iasnMstZonalMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })

        .state('app.iasnTrnMyWorkItem360', {
            url: '/iasnTrnMyWorkItem360',
            title: 'iasnTrnMyWorkItem360',
            templateUrl: helper.basepath('ems.iasn/iasnTrnMyWorkItem360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

              .state('app.iasnTrnCustomerWrkSummary', {
                  url: '/iasnTrnCustomerWrkSummary',
                  title: 'iasnTrnCustomerWrkSummary',
                  templateUrl: helper.basepath('ems.iasn/iasnTrnCustomerWrkSummary.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
              })

             .state('app.iasnTrnWorkItemAllotted360', {
                 url: '/iasnTrnWorkItemAllotted360',
                 title: 'iasnTrnWorkItemAllotted360',
                 templateUrl: helper.basepath('ems.iasn/iasnTrnWorkItemAllotted360.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig')
             })

              .state('app.composeMail', {
                  url: '/composeMail',
                  title: 'composeMail',
                  templateUrl: helper.basepath('ems.iasn/composeMail.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
              })



          .state('app.serviceApprovalView',
        {
            url: '/serviceApprovalView',
            title: 'serviceApprovalView',
            templateUrl: helper.basepath('ems.its/serviceApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.departmentApprovalView',
        {
            url: '/departmentApprovalView',
            title: 'departmentApprovalView',
            templateUrl: helper.basepath('ems.its/departmentApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
              .state('app.collateralsummary',
        {
            url: '/collateralsummary',
            title: 'collateralsummary',
            templateUrl: helper.basepath('ems.ecms/collateralsummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

                   .state('app.collateral',
        {
            url: '/collateral',
            title: 'collateral',
            templateUrl: helper.basepath('ems.ecms/createcollateral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
        .state('app.reportpagedetails',
        {
            url: '/reportpagedetails',
            title: 'reportpagedetails',
            templateUrl: helper.basepath('ems.ecms/reportpagedetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
              .state('app.editCollateral',
        {
            url: '/editCollateral',
            title: 'editCollateral',
            templateUrl: helper.basepath('ems.ecms/editCollateral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

.state('app.itDashboard',
        {
            url: '/itDashboard',
            title: 'itDashboard',
            templateUrl: helper.basepath('ems.its/itDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
             .state('app.securitytype',
        {
            url: '/securitytype',
            title: 'securitytype',
            templateUrl: helper.basepath('ems.ecms/addSecurityType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.managementApprovalView',
        {
            url: '/managementApprovalView',
            title: 'managementApprovalView',
            templateUrl: helper.basepath('ems.its/managementApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            .state('app.customerAlertHistory',

        {

            url: '/customerAlertHistory',

            title: 'customerAlertHistory',

            templateUrl: helper.basepath('ems.ecms/customerAlertHistory.html?ver=' + version + '"'),

            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')



        })

         .state('app.historyApprovalView',
        {
            url: '/historyApprovalView',
            title: 'historyApprovalView',
            templateUrl: helper.basepath('ems.its/historyApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.dependencyApprovalView',
        {
            url: '/dependencyApprovalView',
            title: 'dependencyApprovalView',
            templateUrl: helper.basepath('ems.its/dependencyApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.cacApproval',
        {
            url: '/cacApproval',
            title: 'cacApproval',
            templateUrl: helper.basepath('ems.its/cacApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

                 .state('app.newServiceTicket',
        {
            url: '/newServiceTicket',
            title: 'newServiceTicket',
            templateUrl: helper.basepath('ems.its/newServiceTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.viewTicketDetails',
        {
            url: '/viewTicketDetails',
            title: 'viewTicketDetails',
            templateUrl: helper.basepath('ems.its/viewTicketDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

      .state('app.viewServiceTicket',
        {
            url: '/viewServiceTicket',
            title: 'viewServiceTicket',
            templateUrl: helper.basepath('ems.its/viewServiceTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

                .state('app.viewMyAsset',
        {
            url: '/viewMyAsset',
            title: 'viewMyAsset',
            templateUrl: helper.basepath('ems.asset/viewMyAsset.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngDialog', 'datatables')

        })

         .state('app.acknowledgeMyAsset',
        {
            url: '/acknowledgeMyAsset',
            title: 'acknowledgeMyAsset',
            templateUrl: helper.basepath('ems.asset/acknowledgeMyAsset.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.assetSurrender',
        {
            url: '/assetSurrender',
            title: 'assetSurrender',
            templateUrl: helper.basepath('ems.asset/assetSurrender.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngDialog', 'datatables')

        })

        .state('app.temporaryHandover',
        {
            url: '/temporaryHandover',
            title: 'temporaryHandover',
            templateUrl: helper.basepath('ems.asset/temporaryHandover.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.dropdown',
        {
            url: '/dropdown',
            title: 'dropdown',
            templateUrl: helper.basepath('ems.asset/dropdown.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            .state('app.testslide',
        {
            url: '/testslide',
            title: 'testslide',
            templateUrl: helper.basepath('ems.asset/testslide.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.adminlogin',
        {
            url: '/adminlogin',
            title: 'adminlogin',
            templateUrl: helper.basepath('ems.asset/adminlogin.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

       .state('app.assetDashboard',
        {
            url: '/assetDashboard',
            title: 'assetDashboard',
            templateUrl: helper.basepath('ems.asset/assetDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.loanManagement',
        {
            url: '/loanManagement',
            title: 'loanManagement',
            templateUrl: helper.basepath('ems.ecms/loanManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'flot-chart', 'flot-chart-plugins', 'weather-icons')

        })
            .state('app.viewloan2deferralDetails', {
                url: '/viewloan2deferralDetails',
                title: 'viewloan2deferralDetails',
                templateUrl: helper.basepath('ems.ecms/viewloan2deferralDetails.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
            })

             .state('app.DeferralManagement',
        {
            url: '/DeferralManagement',
            title: 'DeferralManagement',
            templateUrl: helper.basepath('ems.ecms/deferralManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

              .state('app.ecmsDashboard',
        {
            url: '/ecmsDashboard',
            title: 'ecmsDashboard',
            templateUrl: helper.basepath('ems.ecms/ecmsDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

              .state('app.createLoan',
        {
            url: '/createLoan',
            title: 'createLoan',
            templateUrl: helper.basepath('ems.ecms/createLoan.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

            .state('app.createDeferral',
        {
            url: '/createDeferral',
            title: 'createDeferral',
            templateUrl: helper.basepath('ems.ecms/createDeferral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

            .state('app.rmManagement',
        {
            url: '/rmManagement',
            title: 'rmManagement',
            templateUrl: helper.basepath('ems.ecms/rmManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

               .state('app.rmManagementRequest',
        {
            url: '/rmManagementRequest',
            title: 'rmManagementRequest',
            templateUrl: helper.basepath('ems.ecms/rmManagementRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

              .state('app.vertical',
        {
            url: '/vertical',
            title: 'vertical',
            templateUrl: helper.basepath('ems.ecms/vertical.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

              .state('app.loanMaster',
        {
            url: '/loanMaster',
            title: 'loanMaster',
            templateUrl: helper.basepath('ems.ecms/loanMaster.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })


             .state('app.covenantType',
        {
            url: '/covenantType',
            title: 'covenantType',
            templateUrl: helper.basepath('ems.ecms/covenentType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
              .state('app.transferRM',
        {
            url: '/transferRM',
            title: 'transferRM',
            templateUrl: helper.basepath('ems.ecms/transferRM.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
            .state('app.deferral',
        {
            url: '/deferral',
            title: 'deferral',
            templateUrl: helper.basepath('ems.ecms/deferral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.editDeferral',
        {
            url: '/editDeferral',
            title: 'editDeferral',
            templateUrl: helper.basepath('ems.ecms/editDeferral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

                   .state('app.registercustomerEdit',
        {
            url: '/registercustomerEdit',
            title: 'registercustomerEdit',
            templateUrl: helper.basepath('ems.ecms/registercustomerEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.customerMaster', {
                 url: '/customerMaster',
                 title: 'customerMaster',
                 templateUrl: helper.basepath('ems.ecms/customerMaster.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })

            .state('app.taggedCustomerList', {
                url: '/taggedCustomerList',
                title: 'taggedCustomerList',
                templateUrl: helper.basepath('ems.ecms/taggedCustomerList.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
            })

              .state('app.taggedNPACustomerList', {
                  url: '/taggedNPACustomerList',
                  title: 'taggedNPACustomerList',
                  templateUrl: helper.basepath('ems.ecms/taggedNPACustomerList.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
              })

                        .state('app.checkerApprovalSummary',
        {
            url: '/checkerApprovalSummary',
            title: 'checkerApprovalSummary',
            templateUrl: helper.basepath('ems.ecms/checkerApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

                       .state('app.checkerApprovalView',
        {
            url: '/checkerApprovalView',
            title: 'checkerApprovalView',
            templateUrl: helper.basepath('ems.ecms/checkerApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


              .state('app.customerAlert',
        {
            url: '/customerAlert',
            title: 'customerAlert',
            templateUrl: helper.basepath('ems.ecms/customerAlert.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

                  .state('app.customerAlertGenerate',
        {
            url: '/customerAlertGenerate',
            title: 'customerAlertGenerate',
            templateUrl: helper.basepath('ems.ecms/customerAlertGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })
              .state('app.mailManagement',
        {
            url: '/mailManagement',
            title: 'mailManagement',
            templateUrl: helper.basepath('ems.ecms/mailManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

        .state('app.sendMailalert',
        {
            url: '/sendMailalert',
            title: 'sendMailalert',
            templateUrl: helper.basepath('ems.ecms/sendMailalert.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })
        .state('app.mailHistoryView',
        {
            url: '/mailHistoryView',
            title: 'mailHistoryView',
            templateUrl: helper.basepath('ems.ecms/mailHistoryView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })

        .state('app.manageDeferral',
        {
            url: '/manageDeferral',
            title: 'manageDeferral',
            templateUrl: helper.basepath('ems.ecms/manageDeferral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

         .state('app.manageDeferraladd',
        {
            url: '/manageDeferraladd',
            title: 'manageDeferraladd',
            templateUrl: helper.basepath('ems.ecms/manageDeferraladd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

             .state('app.manageDeferraledit', {
                 url: '/manageDeferraledit',
                 title: 'manageDeferraledit',
                 templateUrl: helper.basepath('ems.ecms/manageDeferraledit.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })

              .state('app.manageDeferralview', {
                  url: '/manageDeferralview',
                  title: 'manageDeferralview',
                  templateUrl: helper.basepath('ems.ecms/manageDeferralview.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
              })



            .state('app.editLoan', {
                url: '/editLoan',
                title: 'editLoan',
                templateUrl: helper.basepath('ems.ecms/editLoan.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
            })

              .state('app.RMDetails', {
                  url: '/RMDetails',
                  title: 'RMDetails',
                  templateUrl: helper.basepath('ems.ecms/RMDetails.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
              })

             .state('app.cadApproval', {
                 url: '/cadApproval',
                 title: 'cadApproval',
                 templateUrl: helper.basepath('ems.ecms/cadApproval.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })

              .state('app.reopen', {
                  url: '/reopen',
                  title: 'reopen',
                  templateUrl: helper.basepath('ems.ecms/reopen.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
              })

             .state('app.reopenclosed', {
                 url: '/reopenclosed',
                 title: 'reopenclosed',
                 templateUrl: helper.basepath('ems.ecms/reopenclosed.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })
                 .state('app.extensionApproval', {
                     url: '/extensionApproval',
                     title: 'extensionApproval',
                     templateUrl: helper.basepath('ems.ecms/extensionApproval.html?ver=' + version + '"'),
                     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
                 })

            .state('app.viewDeferral', {
                url: '/viewDeferral',
                title: 'viewDeferral',
                templateUrl: helper.basepath('ems.ecms/viewDeferral.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
            })

             .state('app.ReportDetails', {
                 url: '/ReportDetails',
                 title: 'ReportDetails',
                 templateUrl: helper.basepath('ems.ecms/ReportDetails.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })

              .state('app.reportView', {
                  url: '/reportView',
                  title: 'reportView',
                  templateUrl: helper.basepath('ems.ecms/reportView.html?ver=' + version + '"'),
                  resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
              })

             .state('app.reportViewdetails', {
                 url: '/reportViewdetails',
                 title: 'reportViewdetails',
                 templateUrl: helper.basepath('ems.ecms/reportViewdetails.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
             })


               .state('app.deferralReport', {
                   url: '/deferralReport',
                   title: 'deferralReport',
                   templateUrl: helper.basepath('ems.ecms/deferralReport.html?ver=' + version + '"'),
                   resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
               })

            .state('app.loan2deferral',
        {
            url: '/loan2deferral',
            title: 'loan2deferral',
            templateUrl: helper.basepath('ems.ecms/loan2deferral.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

          .state('app.addCustomer', {
              url: '/addCustomer',
              title: 'addCustomer',
              templateUrl: helper.basepath('ems.ecms/addCustomer.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
          })

         .state('app.editCustomer', {
             url: '/editCustomer',
             title: 'editCustomer',
             templateUrl: helper.basepath('ems.ecms/editCustomer.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
         })

        .state('app.registerCustomersummary', {
            url: '/registerCustomersummary',
            title: 'registerCustomersummary',
            templateUrl: helper.basepath('ems.ecms/registerCustomersummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

        .state('app.registerCustomer', {
            url: '/registerCustomer',
            title: 'registerCustomer',
            templateUrl: helper.basepath('ems.ecms/registerCustomer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
                 .state('app.hrmDashboard',
        {
            url: '/hrmDashboard',
            title: 'hrmDashboard',
            templateUrl: helper.basepath('ems.hrm/hrmDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'chartjs')

        })

         .state('app.myProfile',
        {
            url: '/myProfile',
            title: 'myProfile',
            templateUrl: helper.basepath('ems.hrm/myProfile.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.applyLeave',
        {
            url: '/applyLeave',
            title: 'applyLeave',
            templateUrl: helper.basepath('ems.hrm/applyLeave.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

           .state('app.approveLeave',
        {
            url: '/approveLeave',
            title: 'approveLeave',
            templateUrl: helper.basepath('ems.hrm/approveLeave.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'chartjs')

        })

           .state('app.companyPolicies',
        {
            url: '/companyPolicies',
            title: 'companyPolicies',
            templateUrl: helper.basepath('ems.hrm/companyPolicies.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.holidayCalender',
        {
            url: '/holidayCalender',
            title: 'holidayCalender',
            templateUrl: helper.basepath('ems.hrm/holidayCalender.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')

        })

        .state('app.monthlyAttendance',
        {
            url: '/monthlyAttendance',
            title: 'monthlyAttendance',
            templateUrl: helper.basepath('ems.hrm/monthlyAttendance.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.myTeam',
        {
            url: '/myTeam',
            title: 'myTeam',
            templateUrl: helper.basepath('ems.hrm/myTeam.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.myTeamEmployeeProfile',
        {
            url: '/myTeamEmployeeProfile',
            title: 'myTeamEmployeeProfile',
            templateUrl: helper.basepath('ems.hrm/myTeamEmployeeProfile.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.myLeave',
        {
            url: '/myLeave',
            title: 'myLeave',
            templateUrl: helper.basepath('ems.hrm/myLeave.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'flot-chart', 'flot-chart-plugins')

        })


        .state('app.gmap',
        {
            url: '/gmap',
            title: 'gmap',
            templateUrl: helper.basepath('ems.hrm/gmap.html?ver=' + version + '"'),
            resolve: helper.resolveFor('loadGoogleMapsJS', function () { return loadGoogleMaps(); }, 'ui.map')

        })

       .state('app.hrmAdminLogin',
        {
            url: '/hrmAdminLogin',
            title: 'hrmAdminLogin',
            templateUrl: helper.basepath('ems.hrm/hrmAdminLogin.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.pageredirect', {
            controller: 'reloadController'
        })
          .state('app.lawyerManagement',
        {
            url: '/lawyerManagement',
            title: 'lawyerManagement',
            templateUrl: helper.basepath('ems.lgl/lawyerManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.legalSR360',
        {
            url: '/legalSR360',
            title: 'legalSR360',
            templateUrl: helper.basepath('ems.lgl/legalSR360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular')

        })

               .state('app.legalSRapproval360',
        {
            url: '/legalSRapproval360',
            title: 'legalSRapproval360',
            templateUrl: helper.basepath('ems.lgl/legalSRapproval360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular')

        })

              .state('app.legalSRapprovemgmt360',
        {
            url: '/legalSRapprovemgmt360',
            title: 'legalSRapprovemgmt360',
            templateUrl: helper.basepath('ems.lgl/legalSRapprovemgmt360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.registerLawyer',
        {
            url: '/registerLawyer',
            title: 'registerLawyer',
            templateUrl: helper.basepath('ems.lgl/registerLawyer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'filestyle')

        })
           .state('app.lawfirmSummary',
        {
            url: '/lawfirmSummary',
            title: 'lawfirmSummary',
            templateUrl: helper.basepath('ems.lgl/lawfirmSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
             .state('app.addLawfirm',
        {
            url: '/addLawfirm',
            title: 'addLawfirm',
            templateUrl: helper.basepath('ems.lgl/addLawfirm.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')

        })
        .state('app.requestCompliancesummary',
        {
            url: '/requestCompliancesummary',
            title: 'requestCompliancesummary',
            templateUrl: helper.basepath('ems.lgl/requestCompliancesummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
         .state('app.requestcompliance',
        {
            url: '/requestcompliance',
            title: 'requestcompliance',
            templateUrl: helper.basepath('ems.lgl/requestcompliance.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'filestyle')

        })

             .state('app.legalapprovalmgmt',
        {
            url: '/legalapprovalmgmt',
            title: 'legalapprovalmgmt',
            templateUrl: helper.basepath('ems.lgl/legalapprovalmgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.editRequestcompliance',
        {
            url: '/editRequestcompliance',
            title: 'editRequestcompliance',
            templateUrl: helper.basepath('ems.lgl/editRequestcompliance.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'filestyle')

        })
         .state('app.requestCompliance360',
        {
            url: '/requestCompliance360',
            title: 'requestCompliance360',
            templateUrl: helper.basepath('ems.lgl/requestCompliance360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'filestyle')

        })
         .state('app.complianceManagement',
        {
            url: '/complianceManagement',
            title: 'complianceManagement',
            templateUrl: helper.basepath('ems.lgl/complianceManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
         .state('app.editRegisterlawyer',
        {
            url: '/editRegisterlawyer',
            title: 'editRegisterlawyer',
            templateUrl: helper.basepath('ems.lgl/editRegisterlawyer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'filestyle')

        })

                .state('app.editLawfirm',
        {
            url: '/editLawfirm',
            title: 'editLawfirm',
            templateUrl: helper.basepath('ems.lgl/editLawfirm.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')

        })
         .state('app.legalSRsummary',
        {
            url: '/legalSRsummary',
            title: 'legalSRsummary',
            templateUrl: helper.basepath('ems.lgl/legalSRsummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.legalSRapproval',
        {
            url: '/legalSRapproval',
            title: 'legalSRapproval',
            templateUrl: helper.basepath('ems.lgl/legalSRapproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })


              .state('app.editLegalSR',
        {
            url: '/editLegalSR',
            title: 'editLegalSR',
            templateUrl: helper.basepath('ems.lgl/editLegalSR.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.raiselegalSR',
        {
            url: '/raiselegalSR',
            title: 'raiselegalSR',
            templateUrl: helper.basepath('ems.lgl/raiselegalSR.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
         .state('app.viewLawfirm',
        {
            url: '/viewLawfirm',
            title: 'viewLawfirm',
            templateUrl: helper.basepath('ems.lgl/viewLawfirm.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
        .state('app.viewLawyer',
        {
            url: '/viewLawyer',
            title: 'viewLawyer',
            templateUrl: helper.basepath('ems.lgl/viewLawyer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
          .state('app.requestComplianceview',
        {
            url: '/requestComplianceview',
            title: 'requestComplianceview',
            templateUrl: helper.basepath('ems.lgl/requestComplianceview.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

             .state('app.penalityAlert',
        {
            url: '/penalityAlert',
            title: 'penalityAlert',
            templateUrl: helper.basepath('ems.ecms/penalityAlert.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.penalityAlertView',
        {
            url: '/penalityAlertView',
            title: 'penalityAlertView',
            templateUrl: helper.basepath('ems.ecms/penalityAlertView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.lawyerPayment',
        {
            url: '/lawyerPayment',
            title: 'lawyerPayment',
            templateUrl: helper.basepath('ems.lgl/lawyerPayment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

           .state('app.lawyerPaymentView',
        {
            url: '/lawyerPaymentView',
            title: 'lawyerPaymentView',
            templateUrl: helper.basepath('ems.lgl/lawyerPaymentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
         .state('app.misDataimport',
        {
            url: '/misDataimport',
            title: 'misDataimport',
            templateUrl: helper.basepath('ems.lgl/misDataimport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
           .state('app.customer2misdata',
        {
            url: '/customer2misdata',
            title: 'customer2misdata',
            templateUrl: helper.basepath('ems.lgl/customer2misdata.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
            .state('app.dnTracker',
        {
            url: '/dnTracker',
            title: 'dnTracker',
            templateUrl: helper.basepath('ems.lgl/dnTracker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
            .state('app.dnCustomer2loandetails',
        {
            url: '/dnCustomer2loandetails',
            title: 'dnCustomer2loandetails',
            templateUrl: helper.basepath('ems.lgl/dnCustomer2loandetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
             .state('app.dn2Customer2loandetails',
        {
            url: '/dn2Customer2loandetails',
            title: 'dn2Customer2loandetails',
            templateUrl: helper.basepath('ems.lgl/dn2Customer2loandetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
             .state('app.dn3Customer2loandetails',
        {
            url: '/dn3Customer2loandetails',
            title: 'dn3Customer2loandetails',
            templateUrl: helper.basepath('ems.lgl/dn3Customer2loandetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })

         .state('app.legalSLNmgmt',
        {
            url: '/legalSLNmgmt',
            title: 'legalSLNmgmt',
            templateUrl: helper.basepath('ems.lgl/legalSLNmgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
         .state('app.viewlegalSR',
        {
            url: '/viewlegalSR',
            title: 'viewlegalSR',
            templateUrl: helper.basepath('ems.lgl/viewlegalSR.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })


        .state('app.sanctionManagement',
        {
            url: '/sanctionManagement',
            title: 'sanctionManagement',
            templateUrl: helper.basepath('ems.rsk/sanctionManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
            .state('app.Customer2EscrowSummary',
        {
            url: '/Customer2EscrowSummary',
            title: 'Customer2EscrowSummary',
            templateUrl: helper.basepath('ems.rsk/Customer2EscrowSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })



         .state('app.sanctionAdd',
        {
            url: '/sanctionAdd',
            title: 'sanctionAdd',
            templateUrl: helper.basepath('ems.rsk/sanctionAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

      .state('app.sanctionCreate',
        {
            url: '/sanctionCreate',
            title: 'sanctionCreate',
            templateUrl: helper.basepath('ems.rsk/sanctionCreate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.sanctionEdit',
        {
            url: '/sanctionEdit',
            title: 'sanctionEdit',
            templateUrl: helper.basepath('ems.rsk/sanctionEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
       .state('app.sanctionView',
        {
            url: '/sanctionView',
            title: 'sanctionView',
            templateUrl: helper.basepath('ems.rsk/sanctionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

         .state('app.documentation',
        {
            url: '/documentation',
            title: 'documentation',
            templateUrl: helper.basepath('ems.rsk/documentation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.dasTracker',
        {
            url: '/dasTracker',
            title: 'dasTracker',
            templateUrl: helper.basepath('ems.rsk/dasTracker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.dasRemitterBuyers',
        {
            url: '/dasRemitterBuyers',
            title: 'dasRemitterBuyers',
            templateUrl: helper.basepath('ems.rsk/dasRemitterBuyers.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

                .state('app.customerManagement',
        {
            url: '/customerManagement',
            title: 'customerManagement',
            templateUrl: helper.basepath('ems.rsk/customerManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.customerManagement360',
        {
            url: '/customerManagement360',
            title: 'customerManagement360',
            templateUrl: helper.basepath('ems.rsk/customerManagement360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.lglDashboard',
        {
            url: '/lglDashboard',
            title: 'lglDashboard',
            templateUrl: helper.basepath('ems.lgl/lglDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

           .state('app.rskDashboard',
        {
            url: '/rskDashboard',
            title: 'rskDashboard',
            templateUrl: helper.basepath('ems.rsk/rskDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'chartjs')

        })
          .state('app.optDashboard',
        {
            url: '/optDashboard',
            title: 'optDashboard',
            templateUrl: helper.basepath('ems.lgl/optDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.rmMapping',
        {
            url: '/rmMapping',
            title: 'rmMapping',
            templateUrl: helper.basepath('ems.rsk/rmMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.caseAllocation',
        {
            url: '/caseAllocation',
            title: 'caseAllocation',
            templateUrl: helper.basepath('ems.rsk/caseAllocation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular')

        })

        .state('app.allocationCreate',
        {
            url: '/allocationCreate',
            title: 'allocationCreate',
            templateUrl: helper.basepath('ems.rsk/allocationCreate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.allocationView',
        {
            url: '/allocationView',
            title: 'allocationView',
            templateUrl: helper.basepath('ems.rsk/allocationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.rmAllocation',
        {
            url: '/rmAllocation',
            title: 'rmAllocation',
            templateUrl: helper.basepath('ems.rsk/rmAllocation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.rmAllocationTransfer',
        {
            url: '/rmAllocationTransfer',
            title: 'rmAllocationTransfer',
            templateUrl: helper.basepath('ems.rsk/rmAllocationTransfer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

            .state('app.rmVisitReport',
        {
            url: '/rmVisitReport',
            title: 'rmVisitReport',
            templateUrl: helper.basepath('ems.rsk/rmVisitReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')

        })

         .state('app.visitReportGenerate',
        {
            url: '/visitReportGenerate',
            title: 'visitReportGenerate',
            templateUrl: helper.basepath('ems.rsk/visitReportGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives')

        })


        .state('app.externalRegister',
        {
            url: '/externalRegister',
            title: 'externalRegister',
            templateUrl: helper.basepath('ems.rsk/externalRegister.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

           .state('app.externalRegisterAdd',
        {
            url: '/externalRegisterAdd',
            title: 'externalRegisterAdd',
            templateUrl: helper.basepath('ems.rsk/externalRegisterAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            .state('app.externalRegisterView',
        {
            url: '/externalRegisterView',
            title: 'externalRegisterView',
            templateUrl: helper.basepath('ems.rsk/externalRegisterView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            .state('app.externalRegisterEdit',
        {
            url: '/externalRegisterEdit',
            title: 'externalRegisterEdit',
            templateUrl: helper.basepath('ems.rsk/externalRegisterEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.allocationCreateDirect',
        {
            url: '/allocationCreateDirect',
            title: 'allocationCreateDirect',
            templateUrl: helper.basepath('ems.rsk/allocationCreateDirect.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

         .state('app.visitReportdetailView',
        {
            url: '/visitReportdetailView',
            title: 'visitReportdetailView',
            templateUrl: helper.basepath('ems.rsk/visitReportdetailView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular')

        })

          .state('app.allocation360',
        {
            url: '/allocation360',
            title: 'allocation360',
            templateUrl: helper.basepath('ems.rsk/allocation360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.allocationHistorydetails',
        {
            url: '/allocationHistorydetails',
            title: 'allocationHistorydetails',
            templateUrl: helper.basepath('ems.rsk/allocationHistorydetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            .state('app.allocationHistoryView',
        {
            url: '/allocationHistoryView',
            title: 'allocationHistoryView',
            templateUrl: helper.basepath('ems.rsk/allocationHistoryView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular')

        })

          .state('app.allocationZonalRM',
        {
            url: '/allocationZonalRM',
            title: 'allocationZonalRM',
            templateUrl: helper.basepath('ems.rsk/allocationZonalRM.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')

        })

        .state('app.zonalAllocation360',
        {
            url: '/zonalAllocation360',
            title: 'zonalAllocation360',
            templateUrl: helper.basepath('ems.rsk/zonalAllocation360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

           .state('app.allocationTransfer',
        {
            url: '/allocationTransfer',
            title: 'allocationTransfer',
            templateUrl: helper.basepath('ems.rsk/allocationTransfer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.allocationTransferInitiate',
        {
            url: '/allocationTransferInitiate',
            title: 'allocationTransferInitiate',
            templateUrl: helper.basepath('ems.rsk/allocationTransferInitiate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.transferApproval',
        {
            url: '/transferApproval',
            title: 'transferApproval',
            templateUrl: helper.basepath('ems.rsk/transferApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.transferApproval360',
        {
            url: '/transferApproval360',
            title: 'transferApproval360',
            templateUrl: helper.basepath('ems.rsk/transferApproval360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

      .state('app.myZonalCustomer',
        {
            url: '/myZonalCustomer',
            title: 'myZonalCustomer',
            templateUrl: helper.basepath('ems.rsk/myZonalCustomer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.allocationZonalCreate',
        {
            url: '/allocationZonalCreate',
            title: 'allocationZonalCreate',
            templateUrl: helper.basepath('ems.rsk/allocationZonalCreate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

       .state('app.allocationZonalCreateDirect',
        {
            url: '/allocationZonalCreateDirect',
            title: 'allocationZonalCreateDirect',
            templateUrl: helper.basepath('ems.rsk/allocationZonalCreateDirect.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })




           .state('app.raiseSR2authentication',
        {
            url: '/raiseSR2authentication',
            title: 'raiseSR2authentication',
            templateUrl: helper.basepath('ems.lgl/raiseSR2authentication.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.zonalMapping',
        {
            url: '/zonalMapping',
            title: 'zonalMapping',
            templateUrl: helper.basepath('ems.rsk/zonalMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
        .state('app.dnTrackerCBO',
        {
            url: '/dnTrackerCBO',
            title: 'dnTrackerCBO',
            templateUrl: helper.basepath('ems.lgl/dnTrackerCBO.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.cboCustomer2loandetails',
        {
            url: '/cboCustomer2loandetails',
            title: 'cboCustomer2loandetails',
            templateUrl: helper.basepath('ems.lgl/cboCustomer2loandetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
         .state('app.cadReport', {
             url: '/cadReport',
             title: 'cadReport',
             templateUrl: helper.basepath('ems.ecms/cadReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
         .state('app.userReport', {
             url: '/userReport',
             title: 'userReport',
             templateUrl: helper.basepath('ems.ecms/userReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })


    .state('app.dnTrackerReport', {
        url: '/dnTrackerReport',
        title: 'dnTrackerReport',
        templateUrl: helper.basepath('ems.lgl/dnTrackerReport.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
    })



             // document drafting

              .state('app.idasMstDocMaster',
        {
            url: '/idasMstDocMaster',
            title: 'idasMstDocMaster',
            templateUrl: helper.basepath('ems.idas/idasMstDocMaster.html'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

             .state('app.idasMstWaterMarkMaster',
        {
            url: '/idasMstWaterMarkMaster',
            title: 'idasMstWaterMarkMaster',
            templateUrl: helper.basepath('ems.idas/idasMstWaterMarkMaster.html'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

             .state('app.idasDocumentSummary',
        {
            url: '/idasDocumentSummary',
            title: 'idasDocumentSummary',
            templateUrl: helper.basepath('ems.idas/idasDocumentSummary.html'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

             .state('app.idasCreateDocument',
        {
            url: '/idasCreateDocument',
            title: 'idasCreateDocument',
            templateUrl: helper.basepath('ems.idas/idasCreateDocument.html'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


             .state('app.idaspreviewDocument',
        {
            url: '/idaspreviewDocument',
            title: 'idaspreviewDocument',
            templateUrl: helper.basepath('ems.idas/idaspreviewDocument.html'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
            //end

          .state('app.visitReportCancel',
        {
            url: '/visitReportCancel',
            title: 'visitReportCancel',
            templateUrl: helper.basepath('ems.rsk/visitReportCancel.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives')

        })

          .state('app.transferApprovalHistory',
        {
            url: '/transferApprovalHistory',
            title: 'transferApprovalHistory',
            templateUrl: helper.basepath('ems.rsk/transferApprovalHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables')

        })
        .state('app.lsaManagement',
        {
            url: '/lsaManagement',
            title: 'lsaManagement',
            templateUrl: helper.basepath('ems.idas/lsaManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
             .state('app.IdasDashboard',
        {
            url: '/IdasDashboard',
            title: 'IdasDashboard',
            templateUrl: helper.basepath('ems.idas/IdasDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
           .state('app.createLSA',
        {
            url: '/createLSA',
            title: 'createLSA',
            templateUrl: helper.basepath('ems.idas/createLSA.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
          .state('app.lsaManagementadd',
        {
            url: '/lsaManagementadd',
            title: 'lsaManagementadd',
            templateUrl: helper.basepath('ems.idas/lsaManagementadd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'parsley')

        })

        //IDAS


           //IDAS
            .state('app.idasTrnRmResponseDoc',
        {
            url: '/idasTrnRmResponseDoc',
            title: 'idasTrnRmResponseDoc',
            templateUrl: helper.basepath('ems.idas/idasTrnRmResponseDoc.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })

        .state('app.idasTrnRetrievalReqCreate',
        {
            url: '/idasTrnRetrievalReqCreate',
            title: 'idasTrnRetrievalReqCreate',
            templateUrl: helper.basepath('ems.idas/idasTrnRetrievalReqCreate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
        .state('app.idasTrnRetrievalReqView',
        {
            url: '/idasTrnRetrievalReqView',
            title: 'idasTrnRetrievalReqView',
            templateUrl: helper.basepath('ems.idas/idasTrnRetrievalReqView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
        .state('app.idasTrnRetrievalReqSummary',
        {
            url: '/idasTrnRetrievalReqSummary',
            title: 'idasTrnRetrievalReqSummary',
            templateUrl: helper.basepath('ems.idas/idasTrnRetrievalReqSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


              .state('app.idasTrnRmResponse',
        {
            url: '/idasTrnRmResponse',
            title: 'idasTrnRmResponse',
            templateUrl: helper.basepath('ems.idas/idasTrnRmResponse.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
            .state('app.idasTrnPhyDocSummary',
        {
            url: '/idasTrnPhyDocSummary',
            title: 'idasTrnPhyDocSummary',
            templateUrl: helper.basepath('ems.idas/idasTrnPhyDocSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
             .state('app.idasTrnRmResponseSummary',
        {
            url: '/idasTrnRmResponseSummary',
            title: 'idasTrnRmResponseSummary',
            templateUrl: helper.basepath('ems.idas/idasTrnRmResponseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
            .state('app.idasTrnPhyDocVerification',
        {
            url: '/idasTrnPhyDocVerification',
            title: 'idasTrnPhyDocVerification',
            templateUrl: helper.basepath('ems.idas/idasTrnPhyDocVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
             .state('app.idasTrnPhyDocConversation',
        {
            url: '/idasTrnPhyDocConversation',
            title: 'idasTrnPhyDocConversation',
            templateUrl: helper.basepath('ems.idas/idasTrnPhyDocConversation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
            .state('app.idasTrnDocConversationMkr',
        {
            url: '/idasTrnDocConversationMkr',
            title: 'idasTrnDocConversationMkr',
            templateUrl: helper.basepath('ems.idas/idasTrnDocConversationMkr.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
             .state('app.idasTrnDocConversationChkr',
        {
            url: '/idasTrnDocConversationChkr',
            title: 'idasTrnDocConversationChkr',
            templateUrl: helper.basepath('ems.idas/idasTrnDocConversationChkr.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })
                  .state('app.idasTrnMakerSummary',
        {
            url: '/idasTrnMakerSummary',
            title: 'idasTrnMakerSummary',
            templateUrl: helper.basepath('ems.idas/idasTrnMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
            .state('app.idasTrnDocVerifyChkr',
        {
            url: '/idasTrnDocVerifyChkr',
            title: 'idasTrnDocVerifyChkr',
            templateUrl: helper.basepath('ems.idas/idasTrnDocVerifyChkr.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

              .state('app.idasTrnDocVerifyMkr',
        {
            url: '/idasTrnDocVerifyMkr',
            title: 'idasTrnDocVerifyMkr',
            templateUrl: helper.basepath('ems.idas/idasTrnDocVerifyMkr.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')

        })

              .state('app.idasTrnCheckerSummary',
        {
            url: '/idasTrnCheckerSummary',
            title: 'idasTrnCheckerSummary',
            templateUrl: helper.basepath('ems.idas/idasTrnCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
                .state('app.idasMstSanctionEdit',
        {
            url: '/idasMstSanctionEdit',
            title: 'idasMstSanctionEdit',
            templateUrl: helper.basepath('ems.idas/idasMstSanctionEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

            .state('app.lsa',
        {
            url: '/lsa',
            title: 'lsa',
            templateUrl: helper.basepath('ems.idas/lsa.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.idasTrnSanctionMgmt',
        {
            url: '/idasTrnSanctionMgmt',
            title: 'idasTrnSanctionMgmt',
            templateUrl: helper.basepath('ems.idas/idasTrnSanctionMgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.createdespatch',
        {
            url: '/createdespatch',
            title: 'createdespatch',
            templateUrl: helper.basepath('ems.idas/createdespatch.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

               .state('app.idasTrnFile2Despatch',
        {
            url: '/idasTrnFile2Despatch',
            title: 'idasTrnFile2Despatch',
            templateUrl: helper.basepath('ems.idas/idasTrnFile2Despatch.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

             .state('app.IdasTrnBatchView',
        {
            url: '/IdasTrnBatchView',
            title: 'IdasTrnBatchView',
            templateUrl: helper.basepath('ems.idas/IdasTrnBatchView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
            .state('app.IdasTrnBoxDtlsView',
        {
            url: '/IdasTrnBoxDtlsView',
            title: 'IdasTrnBoxDtlsView',
            templateUrl: helper.basepath('ems.idas/IdasTrnBoxDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

              .state('app.IdasTrnDespatchDtlsView',
        {
            url: '/IdasTrnDespatchDtlsView',
            title: 'IdasTrnDespatchDtlsView',
            templateUrl: helper.basepath('ems.idas/IdasTrnDespatchDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
             .state('app.IdasTrnDespatchBoxDtlsView',
        {
            url: '/IdasTrnDespatchBoxDtlsView',
            title: 'IdasTrnDespatchBoxDtlsView',
            templateUrl: helper.basepath('ems.idas/IdasTrnDespatchBoxDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


              .state('app.IdasTrnBatchConversationView',
        {
            url: '/IdasTrnBatchConversationView',
            title: 'IdasTrnBatchConversationView',
            templateUrl: helper.basepath('ems.idas/IdasTrnBatchConversationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


        .state('app.boxdetails',
        {
            url: '/boxdetails',
            title: 'boxdetails',
            templateUrl: helper.basepath('ems.idas/boxdetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

              .state('app.despatchdetails',
        {
            url: '/despatchdetails',
            title: 'despatchdetails',
            templateUrl: helper.basepath('ems.idas/despatchdetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.doc360',
        {
            url: '/doc360',
            title: 'doc360',
            templateUrl: helper.basepath('ems.idas/doc360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.createBox',
        {
            url: '/createBox',
            title: 'createBox',
            templateUrl: helper.basepath('ems.idas/createBox.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

            // docverification

         .state('app.idasTrnSanctionDoc',
        {
            url: '/idasTrnSanctionDoc',
            title: 'idasTrnSanctionDoc',
            templateUrl: helper.basepath('ems.idas/idasTrnSanctionDoc.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')

        })

         .state('app.docverification',
        {
            url: '/docverification',
            title: 'docverification',
            templateUrl: helper.basepath('ems.idas/docverification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

        .state('app.fileMgmt',
        {
            url: '/fileMgmt',
            title: 'fileMgmt',
            templateUrl: helper.basepath('ems.idas/fileMgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })


        .state('app.boxMgmt',
        {
            url: '/boxMgmt',
            title: 'boxMgmt',
            templateUrl: helper.basepath('ems.idas/boxMgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.despatchMgmt',
        {
            url: '/despatchMgmt',
            title: 'despatchMgmt',
            templateUrl: helper.basepath('ems.idas/despatchMgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })


        .state('app.docverificationMgmt',
        {
            url: '/docverificationMgmt',
            title: 'docverificationMgmt',
            templateUrl: helper.basepath('ems.idas/docverificationMgmt.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.createFile',
        {
            url: '/createFile',
            title: 'createFile',
            templateUrl: helper.basepath('ems.idas/createFile.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.boxStampupdate',
        {
            url: '/boxStampupdate',
            title: 'boxStampupdate',
            templateUrl: helper.basepath('ems.idas/boxStampupdate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })


        .state('app.idasMstDocList',
        {
            url: '/idasMstDocList',
            title: 'idasMstDocList',
            templateUrl: helper.basepath('ems.idas/idasMstDocList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.idasMstCreateSanction',
        {
            url: '/idasMstCreateSanction',
            title: 'idasMstCreateSanction',
            templateUrl: helper.basepath('ems.idas/idasMstCreateSanction.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
            .state('app.idasMstSanctionSummary',
        {
            url: '/idasMstSanctionSummary',
            title: 'idasMstSanctionSummary',
            templateUrl: helper.basepath('ems.idas/idasMstSanctionSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })
        .state('app.fileStamprefupdate',
        {
            url: '/fileStamprefupdate',
            title: 'fileStamprefupdate',
            templateUrl: helper.basepath('ems.idas/fileStamprefupdate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.docconversation',
        {
            url: '/docconversation',
            title: 'docconversation',
            templateUrl: helper.basepath('ems.idas/docconversation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'localytics.directives')

        })
        .state('app.phydocverify',
        {
            url: '/phydocverify',
            title: 'phydocverify',
            templateUrl: helper.basepath('ems.idas/phydocverify.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'localytics.directives')

        })

        .state('app.rmresponse',
        {
            url: '/rmresponse',
            title: 'rmresponse',
            templateUrl: helper.basepath('ems.idas/rmresponse.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'localytics.directives')

        })
         .state('app.rmresponsesummary',
        {
            url: '/rmresponsesummary',
            title: 'rmresponsesummary',
            templateUrl: helper.basepath('ems.idas/rmresponsesummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'localytics.directives')

        })
         .state('app.rmresponsedoc',
        {
            url: '/rmresponsedoc',
            title: 'rmresponsedoc',
            templateUrl: helper.basepath('ems.idas/rmresponsedoc.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngWig', 'ngDialog', 'datatables', 'localytics.directives')

        })

         .state('app.idasTrnSanctionMIS',
        {
            url: '/idasTrnSanctionMIS',
            title: 'idasTrnSanctionMIS',
            templateUrl: helper.basepath('ems.idas/idasTrnSanctionMIS.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

         .state('app.idasTrnSanctionMISEdit',
        {
            url: '/idasTrnSanctionMISEdit',
            title: 'idasTrnSanctionMISEdit',
            templateUrl: helper.basepath('ems.idas/idasTrnSanctionMISEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })

          .state('app.idasTrnSanctionDashboard',
        {
            url: '/idasTrnSanctionDashboard',
            title: 'idasTrnSanctionDashboard',
            templateUrl: helper.basepath('ems.idas/idasTrnSanctionDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
         .state('app.dntatReport', {
             url: '/dntatReport',
             title: 'dntatReport',
             templateUrl: helper.basepath('ems.lgl/dntatReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
          .state('app.idasTrnaddLimitinfo', {
              url: '/idasTrnaddLimitinfo',
              title: 'idasTrnaddLimitinfo',
              templateUrl: helper.basepath('ems.idas/idasTrnaddLimitinfo.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid', 'filestyle')
          })
         .state('app.viewLSA', {
             url: '/viewLSA',
             title: 'viewLSA',
             templateUrl: helper.basepath('ems.idas/viewLSA.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

        .state('app.SysMstEmployeeSummary', {
            url: '/SysMstEmployeeSummary',
            title: 'SysMstEmployeeSummary',
            templateUrl: helper.basepath('ems.system/SysMstEmployeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })
            .state('app.SysMstEmployeeAdd', {
                url: '/SysMstEmployeeAdd',
                title: 'SysMstEmployeeAdd',
                templateUrl: helper.basepath('ems.system/SysMstEmployeeAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
            })
            .state('app.SysMstRoleSummary', {
                url: '/SysMstRoleSummary',
                title: 'SysMstRoleSummary',
                templateUrl: helper.basepath('ems.system/SysMstRoleSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })
            .state('app.SysMstRoleAdd', {
                url: '/SysMstRoleAdd',
                title: 'SysMstRoleAdd',
                templateUrl: helper.basepath('ems.system/SysMstRoleAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })
            .state('app.SysMstEmployeeEdit', {
                url: '/SysMstEmployeeEdit',
                title: 'SysMstEmployeeEdit',
                templateUrl: helper.basepath('ems.system/SysMstEmployeeEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
            })
            .state('app.SysMstEmployeeView', {
                url: '/SysMstEmployeeView',
                title: 'SysMstEmployeeView',
                templateUrl: helper.basepath('ems.system/SysMstEmployeeView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })
            .state('app.SysMstEmployeeDeactivate', {
                url: '/SysMstEmployeeDeactivate',
                title: 'SysMstEmployeeDeactivate',
                templateUrl: helper.basepath('ems.system/SysMstEmployeeDeactivate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })
            .state('app.SysMstRoleEdit', {
                url: '/SysMstRoleEdit',
                title: 'SysMstRoleEdit',
                templateUrl: helper.basepath('ems.system/SysMstRoleEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })
        .state('app.idasTrnlimitInfoEdit', {
            url: '/idasTrnlimitInfoEdit',
            title: 'idasTrnlimitInfoEdit',
            templateUrl: helper.basepath('ems.idas/idasTrnlimitInfoEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid', 'filestyle')
        })
          .state('app.rmScheduleLogDetails', {
              url: '/rmScheduleLogDetails',
              title: 'rmScheduleLogDetails',
              templateUrl: helper.basepath('ems.rsk/rmScheduleLogDetails.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
          })
        .state('app.rmScheduleLogView', {
            url: '/rmScheduleLogView',
            title: 'rmScheduleLogView',
            templateUrl: helper.basepath('ems.rsk/rmScheduleLogView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.documentCheckList',
        {
            url: '/documentCheckList',
            title: 'documentCheckList',
            templateUrl: helper.basepath('ems.rsk/documentCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.IdasMstSecurityAdd', {
              url: '/IdasMstSecurityAdd',
              title: 'IdasMstSecurityAdd',
              templateUrl: helper.basepath('ems.idas/IdasMstSecurityAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
          })

          .state('app.IdasTrnSecurityEdit', {
              url: '/IdasTrnSecurityEdit',
              title: 'IdasTrnSecurityEdit',
              templateUrl: helper.basepath('ems.idas/IdasTrnSecurityEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
          })
         .state('app.MstDashboard', {
             url: '/MstDashboard',
             title: 'MstDashboard',
             templateUrl: helper.basepath('ems.master/MstDashboard.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
          .state('app.MstCCMemberSummary', {
              url: '/MstCCMemberSummary',
              title: 'MstCCMemberSummary',
              templateUrl: helper.basepath('ems.master/MstCCMemberSummary.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
          })
       .state('app.IdasMstSanction2loanfacilitytypeadd', {
           url: '/IdasMstSanction2loanfacilitytypeadd',
           title: 'IdasMstSanction2loanfacilitytypeadd',
           templateUrl: helper.basepath('ems.idas/IdasMstSanction2loanfacilitytypeadd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
       })

                .state('app.rmObservationReport', {
                    url: '/rmObservationReport',
                    title: 'ObservationReport',
                    templateUrl: helper.basepath('ems.rsk/rmObservationReport.html?ver=' + version + '"'),
                    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
                })

         .state('app.rmObservationReportView', {
             url: '/rmObservationReportView',
             title: 'ObservationReportView',
             templateUrl: helper.basepath('ems.rsk/rmObservationReportView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

            .state('app.observationReportSummary', {
                url: '/observationReportSummary',
                title: 'observationReportSummary',
                templateUrl: helper.basepath('ems.rsk/observationReportSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
            })

         .state('app.observationReportApproval', {
             url: '/observationReportApproval',
             title: 'observationReportApproval',
             templateUrl: helper.basepath('ems.rsk/observationReportApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

        .state('app.tier1Summary', {
            url: '/tier1Summary',
            title: 'tier1Summary',
            templateUrl: helper.basepath('ems.rsk/tier1Summary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

        .state('app.tier1Approval', {
            url: '/tier1Approval',
            title: 'tier1Approval',
            templateUrl: helper.basepath('ems.rsk/tier1Approval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

        .state('app.tier2Preparation', {
            url: '/tier2Preparation',
            title: 'tier2Preparation',
            templateUrl: helper.basepath('ems.rsk/tier2Preparation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

        .state('app.tier2Approval', {
            url: '/tier2Approval',
            title: 'tier2Approval',
            templateUrl: helper.basepath('ems.rsk/tier2Approval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

       .state('app.tier2ApprovalSummary', {
           url: '/tier2ApprovalSummary',
           title: 'tier2ApprovalSummary',
           templateUrl: helper.basepath('ems.rsk/tier2ApprovalSummary.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
       })

       .state('app.tier2PreparationView', {
           url: '/tier2PreparationView',
           title: 'tier2PreparationView',
           templateUrl: helper.basepath('ems.rsk/tier2PreparationView.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
       })

      .state('app.tier3Preparation', {
          url: '/tier3Preparation',
          title: 'tier3Preparation',
          templateUrl: helper.basepath('ems.rsk/tier3Preparation.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
      })

       .state('app.tier3PreparationView', {
           url: '/tier3PreparationView',
           title: 'tier3PreparationView',
           templateUrl: helper.basepath('ems.rsk/tier3PreparationView.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
       })

        .state('app.tierReport', {
            url: '/tierReport',
            title: 'tierReport',
            templateUrl: helper.basepath('ems.rsk/tierReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

        .state('app.tierReportView', {
            url: '/tierReportView',
            title: 'tierReportView',
            templateUrl: helper.basepath('ems.rsk/tierReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

         .state('app.tier2Create', {
             url: '/tier2Create',
             title: 'tier2Create',
             templateUrl: helper.basepath('ems.rsk/tier2Create.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

         .state('app.tier3Create', {
             url: '/tier3Create',
             title: 'tier3Create',
             templateUrl: helper.basepath('ems.rsk/tier3Create.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

        .state('app.test', {
            url: '/test',
            title: 'test',
            templateUrl: helper.basepath('ems.rsk/test.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.IdasMstHistorySanctionRefNo', {
            url: '/IdasMstHistorySanctionRefNo',
            title: 'IdasMstHistorySanctionRefNo',
            templateUrl: helper.basepath('ems.idas/IdasMstHistorySanctionRefNo.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

            .state('app.ZRMObservationReportView', {
                url: '/ZRMObservationReportView',
                title: 'ObservationReportView',
                templateUrl: helper.basepath('ems.rsk/ZRMObservationReportView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
            })


          .state('app.IdasMstSanctionReset', {
              url: '/IdasMstSanctionReset',
              title: 'IdasMstSanctionReset',
              templateUrl: helper.basepath('ems.idas/IdasMstSanctionReset.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
          })
         .state('app.idasTrnLSAapproval', {
             url: '/idasTrnLSAapproval',
             title: 'idasTrnLSAapproval',
             templateUrl: helper.basepath('ems.idas/idasTrnLSAapproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
         .state('app.IdasTrnLSAapprovalview', {
             url: '/IdasTrnLSAapprovalview',
             title: 'IdasTrnLSAapprovalview',
             templateUrl: helper.basepath('ems.idas/IdasTrnLSAapprovalview.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
        .state('app.MstCCGroupName', {
            url: '/MstCCGroupName',
            title: 'MstCCGroupName',
            templateUrl: helper.basepath('ems.master/MstCCGroupName.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })


        .state('app.exclusionCustomerList', {
            url: '/exclusionCustomerList',
            title: 'exclusionCustomerList',
            templateUrl: helper.basepath('ems.rsk/exclusionCustomerList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

        .state('app.exclusionZonalCustomerList', {
            url: '/exclusionZonalCustomerList',
            title: 'exclusionZonalCustomerList',
            templateUrl: helper.basepath('ems.rsk/exclusionZonalCustomerList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.lgl_mst_requesttypesummary', {
            url: '/lgl_mst_requesttypesummary',
            title: 'Request Type ',
            templateUrl: helper.basepath('ems.lgl/lgl_mst_requesttypesummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
         .state('app.lgl_mst_servicetypesummary', {
             url: '/lgl_mst_servicetypesummary',
             title: 'Service Type ',
             templateUrl: helper.basepath('ems.lgl/lgl_mst_servicetypesummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
          .state('app.LglMstCompliance2TagLawyer', {
              url: '/LglMstCompliance2TagLawyer',
              title: 'LglMstCompliance2TagLawyer ',
              templateUrl: helper.basepath('ems.lgl/LglMstCompliance2TagLawyer.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid', 'filestyle', 'localytics.directives')
          })
        .state('app.LglTrnInvoiceSummary', {
            url: '/LglTrnInvoiceSummary',
            title: 'LglTrnInvoiceSummary ',
            templateUrl: helper.basepath('ems.lgl/LglTrnInvoiceSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

         .state('app.LglTrnCompliancePending', {
             url: '/LglTrnCompliancePending',
             title: 'LglTrnCompliancePending ',
             templateUrl: helper.basepath('ems.lgl/LglTrnCompliancePending.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
        .state('app.LglTrnComplianceCompleted', {
            url: '/LglTrnComplianceCompleted',
            title: 'LglTrnComplianceCompleted ',
            templateUrl: helper.basepath('ems.lgl/LglTrnComplianceCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
         .state('app.LglTrnComplianceRejected', {
             url: '/LglTrnComplianceRejected',
             title: 'LglTrnComplianceRejected ',
             templateUrl: helper.basepath('ems.lgl/LglTrnComplianceRejected.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })

         .state('app.idasTrnDocumentUploadMain',
         {
             url: '/idasTrnDocumentUploadMain',
             title: 'idasTrnDocumentUploadMain',
             templateUrl: helper.basepath('ems.idas/idasTrnDocumentUploadMain.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

         })

         .state('app.idasCourierMgmtsummary', {
             url: '/idasCourierMgmtsummary',
             title: 'idasCourierMgmtsummary',
             templateUrl: helper.basepath('ems.idas/idasCourierMgmtsummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
         .state('app.idasMstCourierCompany',
         {
             url: '/idasMstCourierCompany',
             title: 'idasMstCourierCompany',
             templateUrl: helper.basepath('ems.idas/idasMstCourierCompany.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

         })

         .state('app.idasCourierCreation', {
             url: '/idasCourierCreation',
             title: 'idasCourierCreation',
             templateUrl: helper.basepath('ems.idas/idasCourierCreation.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })

         .state('app.idasCourierEdit', {
             url: '/idasCourierEdit',
             title: 'idasCourierEdit',
             templateUrl: helper.basepath('ems.idas/idasCourierEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })


         .state('app.idasTrnDocumentUploadChild',
         {
             url: '/idasTrnDocumentUploadChild',
             title: 'idasTrnDocumentUploadChild',
             templateUrl: helper.basepath('ems.idas/idasTrnDocumentUploadChild.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')

         })

         .state('page.CourierMgmtAckForm', {
             url: '/CourierMgmtAckForm',
             title: 'CourierMgmtAckForm',
             templateUrl: 'app/pages/CourierMgmtAckForm.html?ver=' + version + '"',
         })

.state('app.idasTrnCourierView', {
    url: '/idasTrnCourierView',
    title: 'idasTrnCourierView',
    templateUrl: helper.basepath('ems.idas/idasTrnCourierView.html?ver=' + version + '"'),
    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
})

        .state('app.MstCustomerSummary', {
            url: '/MstCustomerSummary',
            title: 'MstCustomerSummary',
            templateUrl: helper.basepath('ems.master/MstCustomerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.MstCustomeradd', {
            url: '/MstCustomeradd',
            title: 'MstCustomeradd',
            templateUrl: helper.basepath('ems.master/MstCustomeradd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')
        })
       .state('app.MstInstitutionCustomeradd', {
           url: '/MstInstitutionCustomeradd',
           title: 'MstInstitutionCustomeradd',
           templateUrl: helper.basepath('ems.master/MstInstitutionCustomeradd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')
       })
        .state('app.MstIndividualCustomeradd', {
            url: '/MstIndividualCustomeradd',
            title: 'MstIndividualCustomeradd',
            templateUrl: helper.basepath('ems.master/MstIndividualCustomeradd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')
        })
         .state('app.MstAddressType', {
             url: '/MstAddressType',
             title: 'MstAddressType',
             templateUrl: helper.basepath('ems.master/MstAddressType.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
        .state('app.MstUserType', {
            url: '/MstUserType',
            title: 'MstUserType',
            templateUrl: helper.basepath('ems.master/MstUserType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.MstDesignation', {
             url: '/MstDesignation',
             title: 'MstDesignation',
             templateUrl: helper.basepath('ems.master/MstDesignation.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
         .state('app.MstStrategicBusinessUnit', {
             url: '/MstStrategicBusinessUnit',
             title: 'MstStrategicBusinessUnit',
             templateUrl: helper.basepath('ems.master/MstStrategicBusinessUnit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
         .state('app.MstValueChain', {
             url: '/MstValueChain',
             title: 'MstValueChain',
             templateUrl: helper.basepath('ems.master/MstValueChain.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
          .state('app.MstSamunnatiAssociateMaster', {
              url: '/MstSamunnatiAssociateMaster',
              title: 'MstSamunnatiAssociateMaster',
              templateUrl: helper.basepath('ems.master/MstSamunnatiAssociateMaster.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
          })
        .state('app.MstConstitution', {
            url: '/MstConstitution',
            title: 'MstConstitution',
            templateUrl: helper.basepath('ems.master/MstConstitution.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

       .state('app.MstCustomer2userView', {
           url: '/MstCustomer2userView',
           title: 'MstCustomer2userView',
           templateUrl: helper.basepath('ems.master/MstCustomer2userView.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
       })
        .state('app.MstGuarantorSummary', {
            url: '/MstGuarantorSummary',
            title: 'MstGuarantorSummary',
            templateUrl: helper.basepath('ems.master/MstGuarantorSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
            .state('app.MstCustomerView', {
                url: '/MstCustomerView',
                title: 'MstCustomerView',
                templateUrl: helper.basepath('ems.master/MstCustomerView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'filestyle')
            })
         .state('app.MstGuarantorView', {
             url: '/MstGuarantorView',
             title: 'MstGuarantorView',
             templateUrl: helper.basepath('ems.master/MstGuarantorView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
        .state('app.idasSanctionMIS360', {
            url: '/idasSanctionMIS360',
            title: 'idasSanctionMIS360',
            templateUrl: helper.basepath('ems.idas/idasSanctionMIS360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

     .state('app.tierCustomer360',
        {
            url: '/tierCustomer360',
            title: 'tierCustomer360',
            templateUrl: helper.basepath('ems.rsk/tierCustomer360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')

        })
      .state('app.osdMstBusinessUnit', {
          url: '/osdMstBusinessUnit',
          title: 'osdMstBusinessUnit',
          templateUrl: helper.basepath('ems.osd/osdMstBusinessUnit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
      })

        .state('app.osdMstActivitySummary', {
            url: '/osdMstActivitySummary',
            title: 'osdMstActivitySummary',
            templateUrl: helper.basepath('ems.osd/osdMstActivitySummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

            .state('app.osdMstTeamSummary', {
                url: '/osdMstTeamSummary',
                title: 'osdMstTeamSummary',
                templateUrl: helper.basepath('ems.osd/osdMstTeamSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
            })

                .state('app.osdMstDepartmentManagement', {
                    url: '/osdMstDepartmentManagement',
                    title: 'osdMstDepartmentManagement',
                    templateUrl: helper.basepath('ems.osd/osdMstDepartmentManagement.html?ver=' + version + '"'),
                    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
                })

           .state('app.osdTrnServiceRequestAdd',
        {
            url: '/osdTrnServiceRequestAdd',
            title: 'osdTrnServiceRequestAdd',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
            .state('app.osdTrnServiceRequestSummary',
        {
            url: '/osdTrnServiceRequestSummary',
            title: 'osdTrnServiceRequestSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

         .state('app.osdTrnTicketManagement',
        {
            url: '/osdTrnTicketManagement',
            title: 'osdTrnTicketManagement',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })



         .state('app.osdTrnServiceRequestView',
        {
            url: '/osdTrnServiceRequestView',
            title: 'osdTrnServiceRequestView',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

          .state('app.osdTrnTicketManagementView',
        {
            url: '/osdTrnTicketManagementView',
            title: 'osdTrnTicketManagementView',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketManagementView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.LglTrnDNTrackerAE',
        {
            url: '/LglTrnDNTrackerAE',
            title: 'LglTrnDNTrackerAE',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerAE.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.osdTrnMyActivityAllotted360',
        {
            url: '/osdTrnMyActivityAllotted360',
            title: 'osdTrnMyActivityAllotted360',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityAllotted360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.osdTrnMyActivity360',
        {
            url: '/osdTrnMyActivity360',
            title: 'osdTrnMyActivity360',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivity360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.osdTrnActivityManagement360',
        {
            url: '/osdTrnActivityManagement360',
            title: 'osdTrnActivityManagement360',
            templateUrl: helper.basepath('ems.osd/osdTrnActivityManagement360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.osdDashboard',
        {
            url: '/osdDashboard',
            title: 'osdDashboard',
            templateUrl: helper.basepath('ems.osd/osdDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'chartjs')
        })

              .state('app.osdTrnMyTicket',
        {
            url: '/osdTrnMyTicket',
            title: 'osdTrnMyTicket',
            templateUrl: helper.basepath('ems.osd/osdTrnMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

             .state('app.osdTrnServiceRequestTaggedView',
        {
            url: '/osdTrnServiceRequestTaggedView',
            title: 'osdTrnServiceRequestTaggedView',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestTaggedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.customerReport360', {
            url: '/customerReport360',
            title: 'customerReport360',
            templateUrl: helper.basepath('ems.master/customerReport360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.visitdetails360', {
             url: '/visitdetails360',
             title: 'visitdetails360',
             templateUrl: helper.basepath('ems.master/visitdetails360.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
         })
         .state('app.customerReport', {
             url: '/customerReport',
             title: 'customerReport',
             templateUrl: helper.basepath('ems.master/customerReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
         })
              .state('app.osdTrnMyActivityTransfer',
        {
            url: '/osdTrnMyActivityTransfer',
            title: 'osdTrnMyActivityTransfer',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityTransfer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
              .state('app.osdTrnServiceRequestForwardView',
        {
            url: '/osdTrnServiceRequestForwardView',
            title: 'osdTrnServiceRequestForwardView',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestForwardView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

              .state('app.osdTrnMyActivityForward360',
        {
            url: '/osdTrnMyActivityForward360',
            title: 'osdTrnMyActivityForward360',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityForward360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

                .state('app.osdTrnMyActivityComplete',
        {
            url: '/osdTrnMyActivityComplete',
            title: 'osdTrnMyActivityComplete',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityComplete.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.osdTrnMyActivityHistory',
        {
            url: '/osdTrnMyActivityHistory',
            title: 'osdTrnMyActivityHistory',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

        .state('app.osdTrnMyActivityReopenHistory',
        {
            url: '/osdTrnMyActivityReopenHistory',
            title: 'osdTrnMyActivityReopenHistory',
            templateUrl: helper.basepath('ems.osd/osdTrnMyActivityReopenHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
          .state('app.LglTrnDN2GeneratedAE',
        {
            url: '/LglTrnDN2GeneratedAE',
            title: 'LglTrnDN2GeneratedAE',
            templateUrl: helper.basepath('ems.lgl/LglTrnDN2GeneratedAE.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })


          .state('app.LglTrnDNTrackerAEGenerate',
        {
            url: '/LglTrnDNTrackerAEGenerate',
            title: 'LglTrnDNTrackerAEGenerate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerAEGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
          .state('app.LglTrnDNTrackerAE2Generate',
        {
            url: '/LglTrnDNTrackerAE2Generate',
            title: 'LglTrnDNTrackerAE2Generate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerAE2Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
           .state('app.LglTrnDNTrackerAE3Generate',
        {
            url: '/LglTrnDNTrackerAE3Generate',
            title: 'LglTrnDNTrackerAE3Generate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerAE3Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })

         .state('app.lglTrnDNTrackerFPO',
        {
            url: '/lglTrnDNTrackerFPO',
            title: 'lglTrnDNTrackerFPO',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerFPO.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
        .state('app.lglTrnDNTrackerRetail',
        {
            url: '/lglTrnDNTrackerRetail',
            title: 'lglTrnDNTrackerRetail',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerRetail.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
        .state('app.lglTrnDNTrackerOthers',
        {
            url: '/lglTrnDNTrackerOthers',
            title: 'lglTrnDNTrackerOthers',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerOthers.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })

         .state('app.lglTrnDNTrackerCBO',
        {
            url: '/lglTrnDNTrackerCBO',
            title: 'lglTrnDNTrackerCBO',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerCBO.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerRetailGenerate',
        {
            url: '/lglTrnDNTrackerRetailGenerate',
            title: 'lglTrnDNTrackerRetailGenerate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerRetailGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerRetail2Generate',
        {
            url: '/lglTrnDNTrackerRetail2Generate',
            title: 'lglTrnDNTrackerRetail2Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerRetail2Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerRetail3Generate',
        {
            url: '/lglTrnDNTrackerRetail3Generate',
            title: 'lglTrnDNTrackerRetail3Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerRetail3Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
        .state('app.LglTrnDNTrackerFPOGenerate',
        {
            url: '/LglTrnDNTrackerFPOGenerate',
            title: 'LglTrnDNTrackerFPOGenerate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerFPOGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.LglTrnDNTrackerFPO2Generate',
        {
            url: '/LglTrnDNTrackerFPO2Generate',
            title: 'LglTrnDNTrackerFPO2Generate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerFPO2Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.LglTrnDNTrackerFPO3Generate',
        {
            url: '/LglTrnDNTrackerFPO3Generate',
            title: 'LglTrnDNTrackerFPO3Generate',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerFPO3Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })

         .state('app.lglTrnDNTrackerOthersGenerate',
        {
            url: '/lglTrnDNTrackerOthersGenerate',
            title: 'lglTrnDNTrackerOthersGenerate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerOthersGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerOthers2Generate',
        {
            url: '/lglTrnDNTrackerOthers2Generate',
            title: 'lglTrnDNTrackerOthers2Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerOthers2Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerOthers3Generate',
        {
            url: '/lglTrnDNTrackerOthers3Generate',
            title: 'lglTrnDNTrackerOthers3Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerOthers3Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })

         .state('app.lglTrnDNFPOGenerateTab',
        {
            url: '/lglTrnDNFPOGenerateTab',
            title: 'lglTrnDNFPOGenerateTab',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNFPOGenerateTab.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNOthersGenerateTab',
        {
            url: '/lglTrnDNOthersGenerateTab',
            title: 'lglTrnDNOthersGenerateTab',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNOthersGenerateTab.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNRetailGenerateTab',
        {
            url: '/lglTrnDNRetailGenerateTab',
            title: 'lglTrnDNRetailGenerateTab',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNRetailGenerateTab.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNCBOGenerateTab',
        {
            url: '/lglTrnDNCBOGenerateTab',
            title: 'lglTrnDNCBOGenerateTab',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNCBOGenerateTab.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerCBOGenerate',
        {
            url: '/lglTrnDNTrackerCBOGenerate',
            title: 'lglTrnDNTrackerCBOGenerate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerCBOGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerCBO2Generate',
        {
            url: '/lglTrnDNTrackerCBO2Generate',
            title: 'lglTrnDNTrackerCBO2Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerCBO2Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
         .state('app.lglTrnDNTrackerCBO3Generate',
        {
            url: '/lglTrnDNTrackerCBO3Generate',
            title: 'lglTrnDNTrackerCBO3Generate',
            templateUrl: helper.basepath('ems.lgl/lglTrnDNTrackerCBO3Generate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
        .state('app.LglTrnDNTrackerSkipped',
        {
            url: '/LglTrnDNTrackerSkipped',
            title: 'LglTrnDNTrackerSkipped',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerSkipped.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives')
        })
        .state('app.MstCustomerEdit',
        {
            url: '/MstCustomerEdit',
            title: 'MstCustomerEdit',
            templateUrl: helper.basepath('ems.master/MstCustomerEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives', 'filestyle')
        })
        .state('app.MstCustomer2userdtlEdit',
        {
            url: '/MstCustomer2userdtlEdit',
            title: 'MstCustomer2userdtlEdit',
            templateUrl: helper.basepath('ems.master/MstCustomer2userdtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'localytics.directives', 'filestyle')
        })
        .state('app.idasTrnDocumentTagging',
        {
            url: '/idasTrnDocumentTagging',
            title: 'idasTrnDocumentTagging',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentTagging.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

        .state('app.idasTrnDocumentTaggingView',
        {
            url: '/idasTrnDocumentTaggingView',
            title: 'idasTrnDocumentTaggingView',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentTaggingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.idasTrnDocumentTaggingDocView',
        {
            url: '/idasTrnDocumentTaggingDocView',
            title: 'idasTrnDocumentTaggingDocView',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentTaggingDocView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.idasTrnDocumentTaggingDocChild',
        {
            url: '/idasTrnDocumentTaggingDocChild',
            title: 'idasTrnDocumentTaggingDocChild',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentTaggingDocChild.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.idasMstDocLabelSummary',
        {
            url: '/idasMstDocLabelSummary',
            title: 'idasMstDocLabelSummary',
            templateUrl: helper.basepath('ems.idas/idasMstDocLabelSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.iasnDashboard',
        {
            url: '/iasnDashboard',
            title: 'iasnDashboard',
            templateUrl: helper.basepath('ems.iasn/iasnDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'morris')
        })
         .state('app.osdTrnApprovalView',
        {
            url: '/osdTrnApprovalView',
            title: 'osdTrnApprovalView',
            templateUrl: helper.basepath('ems.osd/osdTrnApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

           .state('app.osdTrnApprovalViewHistory',
        {
            url: '/osdTrnApprovalViewHistory',
            title: 'osdTrnApprovalViewHistory',
            templateUrl: helper.basepath('ems.osd/osdTrnApprovalViewHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.allocationReport',
        {
            url: '/allocationReport',
            title: 'allocationReport',
            templateUrl: helper.basepath('ems.rsk/allocationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.iasnConsolidatedWorkItem',
        {
            url: '/iasnConsolidatedWorkItem',
            title: 'iasnConsolidatedWorkItem',
            templateUrl: helper.basepath('ems.iasn/iasnConsolidatedWorkItem.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.isanconsolidatedview',
        {
            url: '/isanconsolidatedview',
            title: 'isanconsolidatedview',
            templateUrl: helper.basepath('ems.iasn/isanconsolidatedview.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.marketingDashboard',
        {
            url: '/marketingDashboard',
            title: 'marketingDashboard',
            templateUrl: helper.basepath('ems.marketing/marketingDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.osdRptAllTickets',
        {
            url: '/osdRptAllTickets',
            title: 'osdRptAllTickets',
            templateUrl: helper.basepath('ems.osd/osdRptAllTickets.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig', 'angularGrid', 'localytics.directives')
        })

          .state('app.osdRptAllTicketsView',
        {
            url: '/osdRptAllTicketsView',
            title: 'osdRptAllTicketsView',
            templateUrl: helper.basepath('ems.osd/osdRptAllTicketsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.osdTrnServiceRequestReopenView',
        {
            url: '/osdTrnServiceRequestReopenView',
            title: 'osdTrnServiceRequestReopenView',
            templateUrl: helper.basepath('ems.osd/osdTrnServiceRequestReopenView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.MstCustomer2tmpuserView',
        {
            url: '/MstCustomer2tmpuserView',
            title: 'MstCustomer2tmpuserView',
            templateUrl: helper.basepath('ems.master/MstCustomer2tmpuserView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.MstCustomertmpView',
        {
            url: '/MstCustomertmpView',
            title: 'MstCustomertmpView',
            templateUrl: helper.basepath('ems.master/MstCustomertmpView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.iasnTrnAllotedSummary',
        {
            url: '/iasnTrnAllotedSummary',
            title: 'iasnTrnAllotedSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnAllotedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.iasnTrnPushbackSummary',
        {
            url: '/iasnTrnPushbackSummary',
            title: 'iasnTrnPushbackSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnPushbackSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.iasnTrnForwardSummary',
        {
            url: '/iasnTrnForwardSummary',
            title: 'iasnTrnForwardSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnForwardSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.iasnTrnCloseSummary',
        {
            url: '/iasnTrnCloseSummary',
            title: 'iasnTrnCloseSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnCloseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.iasnTrnWorkItemSummary',
        {
            url: '/iasnTrnWorkItemSummary',
            title: 'iasnTrnWorkItemSummary',
            templateUrl: helper.basepath('ems.iasn/iasnTrnWorkItemSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.iasnTrnWorkItemMail', {
              url: '/iasnTrnWorkItemMail',
              title: 'iasnTrnWorkItemMail',
              templateUrl: helper.basepath('ems.iasn/iasnTrnWorkItemMail.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig')
          })
         .state('app.CommonMstDashboard',
        {
            url: '/CommonMstDashboard',
            title: 'CommonMstDashboard',
            templateUrl: helper.basepath('ems.master/CommonMstDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.iasnTrnComposeMail360', {
             url: '/iasnTrnComposeMail360',
             title: 'iasnTrnComposeMail360',
             templateUrl: helper.basepath('ems.iasn/iasnTrnComposeMail360.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig')
         })

         .state('app.iasnTrnForwardMail', {
             url: '/iasnTrnForwardMail',
             title: 'iasnTrnForwardMail',
             templateUrl: helper.basepath('ems.iasn/iasnTrnForwardMail.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig')
         })


         .state('app.MstCibilSummary', {
             url: '/MstCibilSummary',
             title: 'MstCibilSummary',
             templateUrl: helper.basepath('ems.master/MstCibilSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig', 'filestyle')
         })

         .state('app.MstCibilDataSummary', {
             url: '/MstCibilDataSummary',
             title: 'MstCibilDataSummary',
             templateUrl: helper.basepath('ems.master/MstCibilDataSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig', 'filestyle')
         })
        .state('app.MstCibilEdit', {
            url: '/MstCibilEdit',
            title: 'MstCibilEdit',
            templateUrl: helper.basepath('ems.master/MstCibilEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig', 'filestyle')
        })

        .state('app.MstCibilDataLogDetails', {
            url: '/MstCibilDataLogDetails',
            title: 'MstCibilDataLogDetails',
            templateUrl: helper.basepath('ems.master/MstCibilDataLogDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives', 'ngWig', 'filestyle')
        })

         .state('app.DtsRptUserReport2', {
             url: '/DtsRptUserReport2',
             title: 'DtsRptUserReport2',
             templateUrl: helper.basepath('ems.ecms/DtsRptUserReport2.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
         .state('app.iasnTrnMyWorkItemPushback', {
             url: '/iasnTrnMyWorkItemPushback',
             title: 'iasnTrnMyWorkItemPushback',
             templateUrl: helper.basepath('ems.iasn/iasnTrnMyWorkItemPushback.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
         })
        .state('app.iasnTrnMyWorkItemForward', {
            url: '/iasnTrnMyWorkItemForward',
            title: 'iasnTrnMyWorkItemForward',
            templateUrl: helper.basepath('ems.iasn/iasnTrnMyWorkItemForward.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.iasnTrnMyWorkItemClose', {
            url: '/iasnTrnMyWorkItemClose',
            title: 'iasnTrnMyWorkItemClose',
            templateUrl: helper.basepath('ems.iasn/iasnTrnMyWorkItemClose.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.MstDocumentUploadSummary', {
            url: '/MstDocumentUploadSummary',
            title: 'MstDocumentUploadSummary',
            templateUrl: helper.basepath('ems.master/MstDocumentUploadSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid', 'filestyle', 'ngWig')
        })
        .state('app.MstDocumentDownload', {
            url: '/MstDocumentDownload',
            title: 'MstDocumentDownload',
            templateUrl: helper.basepath('ems.master/MstDocumentDownload.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })

           .state('app.sdcMstModuleSummary',
        {
            url: '/sdcMstModuleSummary',
            title: 'sdcMstModuleSummary',
            templateUrl: helper.basepath('ems.sdc/sdcMstModuleSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.sdcMstTagCustomer',
        {
            url: '/sdcMstTagCustomer',
            title: 'sdcMstTagCustomer',
            templateUrl: helper.basepath('ems.sdc/sdcMstTagCustomer.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

          .state('app.sdcTrnDeploymentSummary',
        {
            url: '/sdcTrnDeploymentSummary',
            title: 'sdcTrnDeploymentSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnDeploymentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

            .state('app.sdcTrnAddDeployment',
        {
            url: '/sdcTrnAddDeployment',
            title: 'sdcTrnAddDeployment',
            templateUrl: helper.basepath('ems.sdc/sdcTrnAddDeployment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
            .state('app.sdcTrnTestDeploymentSummary',
        {
            url: '/sdcTrnTestDeploymentSummary',
            title: 'sdcTrnTestDeploymentSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnTestDeploymentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
           .state('app.LglTrnDNTrackerHistory',
        {
            url: '/LglTrnDNTrackerHistory',
            title: 'LglTrnDNTrackerHistory',
            templateUrl: helper.basepath('ems.lgl/LglTrnDNTrackerHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdCqmQueryAssignment',
        {
            url: '/osdCqmQueryAssignment',
            title: 'osdCqmQueryAssignment',
            templateUrl: helper.basepath('ems.osd/osdCqmQueryAssignment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdCqmQueryTicketAssignment',
        {
            url: '/osdCqmQueryTicketAssignment',
            title: 'osdCqmQueryTicketAssignment',
            templateUrl: helper.basepath('ems.osd/osdCqmQueryTicketAssignment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdCqmAssignToQuery',
        {
            url: '/osdCqmAssignToQuery',
            title: 'osdCqmAssignToQuery',
            templateUrl: helper.basepath('ems.osd/osdCqmAssignToQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdCqmQueryAssign360',
        {
            url: '/osdCqmQueryAssign360',
            title: 'osdCqmQueryAssign360',
            templateUrl: helper.basepath('ems.osd/osdCqmQueryAssign360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdCqmAssignedQuery360',
        {
            url: '/osdCqmAssignedQuery360',
            title: 'osdCqmAssignedQuery360',
            templateUrl: helper.basepath('ems.osd/osdCqmAssignedQuery360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmAssignedQuery',
        {
            url: '/osdCqmAssignedQuery',
            title: 'osdCqmAssignedQuery',
            templateUrl: helper.basepath('ems.osd/osdCqmAssignedQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdComposeMail', {
            url: '/osdComposeMail',
            title: 'osdComposeMail',
            templateUrl: helper.basepath('ems.osd/osdComposeMail.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmCloseView', {
            url: '/osdCqmCloseView',
            title: 'osdCqmCloseView',
            templateUrl: helper.basepath('ems.osd/osdCqmCloseView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmCloseSummary', {
            url: '/osdCqmCloseSummary',
            title: 'osdCqmCloseSummary',
            templateUrl: helper.basepath('ems.osd/osdCqmCloseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
        .state('app.osdCqmAssignCloseSummary', {
            url: '/osdCqmAssignCloseSummary',
            title: 'osdCqmAssignCloseSummary',
            templateUrl: helper.basepath('ems.osd/osdCqmAssignCloseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
        .state('app.osdCqmAssignCloseView', {
            url: '/osdCqmAssignCloseView',
            title: 'osdCqmAssignCloseView',
            templateUrl: helper.basepath('ems.osd/osdCqmAssignCloseView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmReplaySummary', {
            url: '/osdCqmReplaySummary',
            title: 'osdCqmReplaySummary',
            templateUrl: helper.basepath('ems.osd/osdCqmReplaySummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
        .state('app.osdCqmReplayView ', {
            url: '/osdCqmReplayView',
            title: 'osdCqmReplayView',
            templateUrl: helper.basepath('ems.osd/osdCqmReplayView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmForwardSummary', {
            url: '/osdCqmForwardSummary',
            title: 'osdCqmForwardSummary',
            templateUrl: helper.basepath('ems.osd/osdCqmForwardSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
        .state('app.osdCqmForwardView ', {
            url: '/osdCqmForwardView',
            title: 'osdCqmForwardView',
            templateUrl: helper.basepath('ems.osd/osdCqmForwardView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdCqmTransferSummary', {
            url: '/osdCqmTransferSummary',
            title: 'osdCqmTransferSummary',
            templateUrl: helper.basepath('ems.osd/osdCqmTransferSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig')
        })
        .state('app.osdCqmTransferView', {
            url: '/osdCqmTransferView',
            title: 'osdCqmTransferView',
            templateUrl: helper.basepath('ems.osd/osdCqmTransferView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
            .state('app.MstRMmappingSummary',
        {
            url: '/MstRMmappingSummary',
            title: 'MstRMmappingSummary',
            templateUrl: helper.basepath('ems.master/MstRMmappingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
           .state('app.MstRMCustomerSummary',
        {
            url: '/MstRMCustomerSummary',
            title: 'MstRMCustomerSummary',
            templateUrl: helper.basepath('ems.master/MstRMCustomerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.MstRMCustomerView',
        {
            url: '/MstRMCustomerView',
            title: 'MstRMCustomerView',
            templateUrl: helper.basepath('ems.master/MstRMCustomerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.MstRMCustomer2userView',
        {
            url: '/MstRMCustomer2userView',
            title: 'MstRMCustomer2userView',
            templateUrl: helper.basepath('ems.master/MstRMCustomer2userView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.osdBamAllocatedToRM', {
            url: '/osdBamAllocatedToRM',
            title: 'osdBamAllocatedToRM',
            templateUrl: helper.basepath('ems.osd/osdBamAllocatedToRM.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdBamAllocatedToRMView', {
            url: '/osdBamAllocatedToRMView',
            title: 'osdBamAllocatedToRMView',
            templateUrl: helper.basepath('ems.osd/osdBamAllocatedToRMView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

           .state('app.OsdTrnBankAlertManagementSummary', {
               url: '/OsdTrnBankAlertManagementSummary',
               title: 'OsdTrnBankAlertManagementSummary',
               templateUrl: helper.basepath('ems.osd/OsdTrnBankAlertManagementSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

         .state('app.osdBamAssign2operation', {
             url: '/osdBamAssign2operation',
             title: 'osdBamAssign2operation',
             templateUrl: helper.basepath('ems.osd/osdBamAssign2operation.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.osdBamNotAllocatedView', {
             url: '/osdBamNotAllocatedView',
             title: 'osdBamNotAllocatedView',
             templateUrl: helper.basepath('ems.osd/osdBamNotAllocatedView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.osdBamAllocatedView', {
             url: '/osdBamAllocatedView',
             title: 'osdBamAllocatedView',
             templateUrl: helper.basepath('ems.osd/osdBamAllocatedView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.osdBAMrmtransfer', {
             url: '/osdBAMrmtransfer',
             title: 'osdBAMrmtransfer',
             templateUrl: helper.basepath('ems.osd/osdBAMrmtransfer.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.MstReligion', {
             url: '/MstReligion',
             title: 'MstReligion',
             templateUrl: helper.basepath('ems.master/MstReligion.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
        .state('app.MstEducation',
        {
            url: '/MstEducation',
            title: 'MstEducation',
            templateUrl: helper.basepath('ems.master/MstEducation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstCompanyType',
        {
            url: '/MstCompanyType',
            title: 'MstCompanyType',
            templateUrl: helper.basepath('ems.master/MstCompanyType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstCreditTypeSummary',
        {
            url: '/MstCreditTypeSummary',
            title: 'MstCreditTypeSummary',
            templateUrl: helper.basepath('ems.master/MstCreditTypeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstLoanType',
        {
            url: '/MstLoanType',
            title: 'MstLoanType',
            templateUrl: helper.basepath('ems.master/MstLoanType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstCountryCode',
        {
            url: '/MstCountryCode',
            title: 'MstCountryCode',
            templateUrl: helper.basepath('ems.master/MstCountryCode.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstAssessmentAgency',
        {
            url: '/MstAssessmentAgency',
            title: 'MstAssessmentAgency',
            templateUrl: helper.basepath('ems.master/MstAssessmentAgency.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstInterestFrequency',
        {
            url: '/MstInterestFrequency',
            title: 'MstInterestFrequency',
            templateUrl: helper.basepath('ems.master/MstInterestFrequency.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstVerticalTags',
        {
            url: '/MstVerticalTags',
            title: 'MstVerticalTags',
            templateUrl: helper.basepath('ems.master/MstVerticalTags.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstPayment',
        {
            url: '/MstPayment',
            title: 'MstPayment',
            templateUrl: helper.basepath('ems.master/MstPayment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstAreaType',
        {
            url: '/MstAreaType',
            title: 'MstAreaType',
            templateUrl: helper.basepath('ems.master/MstAreaType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstSAType',
        {
            url: '/MstSAType',
            title: 'MstSAType',
            templateUrl: helper.basepath('ems.master/MstSAType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstSAEntityType',
        {
            url: '/MstSAEntityType',
            title: 'MstSAType',
            templateUrl: helper.basepath('ems.master/MstSAEntityType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstSADocumentList',
        {
            url: '/MstSADocumentList',
            title: 'MstSADocumentList',
            templateUrl: helper.basepath('ems.master/MstSADocumentList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstVernacularLanguage',
        {
            url: '/MstVernacularLanguage',
            title: 'MstVernacularLanguage',
            templateUrl: helper.basepath('ems.master/MstVernacularLanguage.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
            .state('app.MstLenderType',
        {
            url: '/MstLenderType',
            title: 'MstLenderType',
            templateUrl: helper.basepath('ems.master/MstLenderType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
             .state('app.MstCreditUnderwritingFacilityType',
        {
            url: '/MstCreditUnderwritingFacilityType',
            title: 'MstCreditUnderwritingFacilityType',
            templateUrl: helper.basepath('ems.master/MstCreditUnderwritingFacilityType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
             .state('app.MstGenderSummary',
        {
            url: '/MstGenderSummary',
            title: 'MstGenderSummary',
            templateUrl: helper.basepath('ems.master/MstGenderSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
              .state('app.MstMaritalStatusSummary',
        {
            url: '/MstMaritalStatusSummary',
            title: 'MstMaritalStatusSummary',
            templateUrl: helper.basepath('ems.master/MstMaritalStatusSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
            .state('app.MstLoanProductsSummary',
        {
            url: '/MstLoanProductsSummary',
            title: 'MstLoanProductsSummary',
            templateUrl: helper.basepath('ems.master/MstLoanProductsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstLoanTermPeriodSummary',
        {
            url: '/MstLoanTermPeriodSummary',
            title: 'MstLoanTermPeriodSummary',
            templateUrl: helper.basepath('ems.master/MstLoanTermPeriodSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
            .state('app.MstAmortizationMethodSummary',
        {
            url: '/MstAmortizationMethodSummary',
            title: 'MstAmortizationMethodSummary',
            templateUrl: helper.basepath('ems.master/MstAmortizationMethodSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstFundedTypeIndicatorSummary',
        {
            url: '/MstFundedTypeIndicatorSummary',
            title: 'MstFundedTypeIndicatorSummary',
            templateUrl: helper.basepath('ems.master/MstFundedTypeIndicatorSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstTypeofDebtSummary',
        {
            url: '/MstTypeofDebtSummary',
            title: 'MstTypeofDebtSummary',
            templateUrl: helper.basepath('ems.master/MstTypeofDebtSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstLoanPurpose',
        {
            url: '/MstLoanPurpose',
            title: 'MstLoanPurpose',
            templateUrl: helper.basepath('ems.master/MstLoanPurpose.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstAssessmentAgencyRating',
        {
            url: '/MstAssessmentAgencyRating',
            title: 'MstAssessmentAgencyRating',
            templateUrl: helper.basepath('ems.master/MstAssessmentAgencyRating.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstCreditTypeOfFacility', {
            url: '/MstCreditTypeOfFacility',
            title: 'MstCreditTypeOfFacility',
            templateUrl: helper.basepath('ems.master/MstCreditTypeOfFacility.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
       .state('app.MstCreditAccountClassification', {
           url: '/MstCreditAccountClassification',
           title: 'MstCreditAccountClassification',
           templateUrl: helper.basepath('ems.master/MstCreditAccountClassification.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
       })
       .state('app.MstCreditInstalmentFrequency', {
           url: '/MstCreditInstalmentFrequency',
           title: 'MstCreditInstalmentFrequency',
           templateUrl: helper.basepath('ems.master/MstCreditInstalmentFrequency.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
       })
       .state('app.MstCreditTypeOfExistingFunded', {
           url: '/MstCreditTypeOfExistingFunded',
           title: 'MstCreditTypeOfExistingFunded',
           templateUrl: helper.basepath('ems.master/MstCreditTypeOfExistingFunded.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
       })
       .state('app.MstIndividualDocument', {
           url: '/MstIndividualDocument',
           title: 'MstIndividualDocument',
           templateUrl: helper.basepath('ems.master/MstIndividualDocument.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })
    .state('app.MstCompanyDocument', {
        url: '/MstCompanyDocument',
        title: 'MstCompanyDocument',
        templateUrl: helper.basepath('ems.master/MstCompanyDocument.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstBureauName', {
        url: '/MstBureauName',
        title: 'MstBureauName',
        templateUrl: helper.basepath('ems.master/MstBureauName.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstAMLCategory', {
        url: '/MstAMLCategory',
        title: 'MstAMLCategory',
        templateUrl: helper.basepath('ems.master/MstAMLCategory.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstSecurityClassification', {
        url: '/MstSecurityClassification',
        title: 'MstSecurityClassification',
        templateUrl: helper.basepath('ems.master/MstSecurityClassification.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstSecurityCoverage', {
        url: '/MstSecurityCoverage',
        title: 'MstSecurityCoverage',
        templateUrl: helper.basepath('ems.master/MstSecurityCoverage.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstGuaranteeCoverage', {
        url: '/MstGuaranteeCoverage',
        title: 'MstGuaranteeCoverage',
        templateUrl: helper.basepath('ems.master/MstGuaranteeCoverage.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstBusinessCategory', {
        url: '/MstBusinessCategory',
        title: 'MstBusinessCategory',
        templateUrl: helper.basepath('ems.master/MstBusinessCategory.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstBusinessIndustryType', {
        url: '/MstBusinessIndustryType',
        title: 'MstBusinessIndustryType',
        templateUrl: helper.basepath('ems.master/MstBusinessIndustryType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstBankAccountLevel', {
        url: '/MstBankAccountLevel',
        title: 'MstBankAccountLevel',
        templateUrl: helper.basepath('ems.master/MstBankAccountLevel.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstRelationship', {
        url: '/MstRelationship',
        title: 'MstRelationship',
        templateUrl: helper.basepath('ems.master/MstRelationship.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstSamunnatiBranchName', {
        url: '/MstSamunnatiBranchName',
        title: 'MstSamunnatiBranchName',
        templateUrl: helper.basepath('ems.master/MstSamunnatiBranchName.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstSamunnatiBranchState', {
        url: '/MstSamunnatiBranchState',
        title: 'MstSamunnatiBranchState',
        templateUrl: helper.basepath('ems.master/MstSamunnatiBranchState.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstGeneticCode', {
        url: '/MstGeneticCode',
        title: 'MstGeneticCode',
        templateUrl: helper.basepath('ems.master/MstGeneticCode.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstEntity', {
        url: '/MstEntity',
        title: 'MstEntity',
        templateUrl: helper.basepath('ems.master/MstEntity.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstOwnerShipType', {
        url: '/MstOwnerShipType',
        title: 'MstOwnerShipType',
        templateUrl: helper.basepath('ems.master/MstOwnerShipType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstResidenceType', {
        url: '/MstResidenceType',
        title: 'MstResidenceType',
        templateUrl: helper.basepath('ems.master/MstResidenceType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstLicenseType', {
        url: '/MstLicenseType',
        title: 'MstLicenseType',
        templateUrl: helper.basepath('ems.master/MstLicenseType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstConstructionType', {
        url: '/MstConstructionType',
        title: 'MstConstructionType',
        templateUrl: helper.basepath('ems.master/MstConstructionType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstCaste', {
        url: '/MstCaste',
        title: 'MstCaste',
        templateUrl: helper.basepath('ems.master/MstCaste.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstPartyType', {
        url: '/MstPartyType',
        title: 'MstPartyType',
        templateUrl: helper.basepath('ems.master/MstPartyType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstTypeofChargecreated', {
        url: '/MstTypeofChargecreated',
        title: 'MstTypeofChargecreated',
        templateUrl: helper.basepath('ems.master/MstTypeofChargecreated.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstAssetstype', {
        url: '/MstAssetstype',
        title: 'MstAssetstype',
        templateUrl: helper.basepath('ems.master/MstAssetstype.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstLendingarrangement', {
        url: '/MstLendingarrangement',
        title: 'MstLendingarrangement',
        templateUrl: helper.basepath('ems.master/MstLendingarrangement.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstIncomeType', {
        url: '/MstIncomeType',
        title: 'MstIncomeType',
        templateUrl: helper.basepath('ems.master/MstIncomeType.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstIndividualProof', {
        url: '/MstIndividualProof',
        title: 'MstIndividualProof',
        templateUrl: helper.basepath('ems.master/MstIndividualProof.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.MstCreditType',
        {
            url: '/MstCreditType',
            title: 'MstCreditType',
            templateUrl: helper.basepath('ems.master/MstCreditType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstBuyerSummary', {
            url: '/MstBuyerSummary',
            title: 'MstBuyerSummary',
            templateUrl: helper.basepath('ems.master/MstBuyerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBuyerAdd', {
            url: '/MstBuyerAdd',
            title: 'MstBuyerAdd',
            templateUrl: helper.basepath('ems.master/MstBuyerAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
             .state('app.MstBuyerEdit', {
                 url: '/MstBuyerEdit',
                 title: 'MstBuyerEdit',
                 templateUrl: helper.basepath('ems.master/MstBuyerEdit.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
	 .state('app.MstBuyerView', {
	     url: '/MstBuyerView',
	     title: 'MstBuyerView',
	     templateUrl: helper.basepath('ems.master/MstBuyerView.html?ver=' + version + '"'),
	     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	 })
        .state('app.MstCreditStatusSummary', {
            url: '/MstCreditStatusSummary',
            title: 'MstCreditStatusSummary',
            templateUrl: helper.basepath('ems.master/MstCreditStatusSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditStatusAdd', {
            url: '/MstCreditStatusAdd',
            title: 'MstCreditStatusAdd',
            templateUrl: helper.basepath('ems.master/MstCreditStatusAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstPrincipalFrequency',
        {
            url: '/MstPrincipalFrequency',
            title: 'MstPrincipalFrequency',
            templateUrl: helper.basepath('ems.master/MstPrincipalFrequency.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstGender',
        {
            url: '/MstGender',
            title: 'MstGender',
            templateUrl: helper.basepath('ems.master/MstGender.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstMaritalStatus',
        {
            url: '/MstMaritalStatus',
            title: 'MstMaritalStatus',
            templateUrl: helper.basepath('ems.master/MstMaritalStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstFundedTypeIndicator',
        {
            url: '/MstFundedTypeIndicator',
            title: 'MstFundedTypeIndicator',
            templateUrl: helper.basepath('ems.master/MstFundedTypeIndicator.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

          .state('app.MstLoanSubProduct',
        {
            url: '/MstLoanSubProduct',
            title: 'MstLoanSubProduct',
            templateUrl: helper.basepath('ems.master/MstLoanSubProduct.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

          .state('app.MstColending',
        {
            url: '/MstColending',
            title: 'MstColending',
            templateUrl: helper.basepath('ems.master/MstColending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })
        .state('app.MstApplicationCreationSummary', {
            url: '/MstApplicationCreationSummary',
            title: 'MstApplicationCreationSummary',
            templateUrl: helper.basepath('ems.master/MstApplicationCreationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstApplicationGeneralAdd', {
            url: '/MstApplicationGeneralAdd',
            title: 'MstApplicationGeneralAdd',
            templateUrl: helper.basepath('ems.master/MstApplicationGeneralAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstGradingToolAdd', {
            url: '/MstGradingToolAdd',
            title: 'MstGradingToolAdd',
            templateUrl: helper.basepath('ems.master/MstGradingToolAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

        .state('app.MstBuyer2CreditStatusView', {
            url: '/MstBuyer2CreditStatusView',
            title: 'MstBuyer2CreditStatusView',
            templateUrl: helper.basepath('ems.master/MstBuyer2CreditStatusView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

        .state('app.MstVisitReportAdd', {
            url: '/MstVisitReportAdd',
            title: 'MstVisitReportAdd',
            templateUrl: helper.basepath('ems.master/MstVisitReportAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

                    .state('app.idasMstTemplateSummary',
        {
            url: '/idasMstTemplateSummary',
            title: 'idasMstTemplateSummary',
            templateUrl: helper.basepath('ems.idas/idasMstTemplateSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

             .state('app.idasMstAddTemplate',
        {
            url: '/idasMstAddTemplate',
            title: 'idasMstAddTemplate',
            templateUrl: helper.basepath('ems.idas/idasMstAddTemplate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

               .state('app.viewTemplateDetails',
        {
            url: '/viewTemplateDetails',
            title: 'viewTemplateDetails',
            templateUrl: helper.basepath('ems.idas/viewTemplateDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

                .state('app.idasMstEditTemplate',
        {
            url: '/idasMstEditTemplate',
            title: 'idasMstEditTemplate',
            templateUrl: helper.basepath('ems.idas/idasMstEditTemplate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

             .state('app.idasMstSanctionLetterGeneration',
        {
            url: '/idasMstSanctionLetterGeneration',
            title: 'idasMstSanctionLetterGeneration',
            templateUrl: helper.basepath('ems.idas/idasMstSanctionLetterGeneration.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')

        })

         .state('app.MstCreditStatusApprovedBuyer', {
             url: '/MstCreditStatusApprovedBuyer',
             title: 'MstCreditStatusApprovedBuyer',
             templateUrl: helper.basepath('ems.master/MstCreditStatusApprovedBuyer.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })


         .state('app.MstCreditStatusNonApprovedBuyer', {
             url: '/MstCreditStatusNonApprovedBuyer',
             title: 'MstCreditStatusNonApprovedBuyer',
             templateUrl: helper.basepath('ems.master/MstCreditStatusNonApprovedBuyer.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.MstCreditPolicyCompliance', {
             url: '/MstCreditPolicyCompliance',
             title: 'MstCreditPolicyCompliance',
             templateUrl: helper.basepath('ems.master/MstCreditPolicyCompliance.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstApplicationGeneralEdit', {
            url: '/MstApplicationGeneralEdit',
            title: 'MstApplicationGeneralEdit',
            templateUrl: helper.basepath('ems.master/MstApplicationGeneralEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

        .state('app.MstApplcreationBasicdtlEdit', {
            url: '/MstApplcreationBasicdtlEdit',
            title: 'MstApplcreationBasicdtlEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationBasicdtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
	        .state('app.MstApplcreationIndividualdtlEdit', {
	            url: '/MstApplcreationIndividualdtlEdit',
	            title: 'MstApplcreationIndividualdtlEdit',
	            templateUrl: helper.basepath('ems.master/MstApplcreationIndividualdtlEdit.html?ver=' + version + '"'),
	            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	        })
        .state('app.MstApplcreationInstitutiondtlEdit', {
            url: '/MstApplcreationInstitutiondtlEdit',
            title: 'MstApplcreationInstitutiondtlEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationInstitutiondtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

            .state('app.MstApplcreationGroupdtlEdit', {
                url: '/MstApplcreationGroupdtlEdit',
                title: 'MstApplcreationGroupdtlEdit',
                templateUrl: helper.basepath('ems.master/MstApplcreationGroupdtlEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

        .state('app.MstApplcreationSocialTradeEdit', {
            url: '/MstApplcreationSocialTradeEdit',
            title: 'MstApplcreationSocialTradeEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationSocialTradeEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplcreationProductchargesEdit', {
            url: '/MstApplcreationProductchargesEdit',
            title: 'MstApplcreationProductchargesEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationProductchargesEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplcreationCICUploadEdit', {
            url: '/MstApplcreationCICUploadEdit',
            title: 'MstApplcreationCICUploadEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationCICUploadEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstSAOnboardingSummary', {
            url: '/MstSAOnboardingSummary',
            title: 'MstSAOnboardingSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAOnboardingAddInstitution', {
            url: '/MstSAOnboardingAddInstitution',
            title: 'MstSAOnboardingAddInstitution',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingAddInstitution.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAOnboardingAddIndividual', {
            url: '/MstSAOnboardingAddIndividual',
            title: 'MstSAOnboardingAddIndividual',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingAddIndividual.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstaddSAOnboarding', {
            url: '/MstaddSAOnboarding',
            title: 'MstaddSAOnboarding',
            templateUrl: helper.basepath('ems.master/MstaddSAOnboarding.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstApplicationCreationView', {
            url: '/MstApplicationCreationView',
            title: 'MstApplicationCreationView',
            templateUrl: helper.basepath('ems.master/MstApplicationCreationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplCreationIndividualGuarantorView', {
            url: '/MstApplCreationIndividualGuarantorView',
            title: 'MstApplCreationIndividualGuarantorView',
            templateUrl: helper.basepath('ems.master/MstApplCreationIndividualGuarantorView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplCreationInstitutionGuarantorView', {
            url: '/MstApplCreationInstitutionGuarantorView',
            title: 'MstApplCreationInstitutionGuarantorView',
            templateUrl: helper.basepath('ems.master/MstApplCreationInstitutionGuarantorView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplCreationGradingToolView', {
            url: '/MstApplCreationGradingToolView',
            title: 'MstApplCreationGradingToolView',
            templateUrl: helper.basepath('ems.master/MstApplCreationGradingToolView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
        .state('app.MstApplCreationVisitReportView', {
            url: '/MstApplCreationVisitReportView',
            title: 'MstApplCreationVisitReportView',
            templateUrl: helper.basepath('ems.master/MstApplCreationVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

        .state('app.MstApplcreationCICUploadInstEdit', {
            url: '/MstApplcreationCICUploadInstEdit',
            title: 'MstApplcreationCICUploadInstEdit',
            templateUrl: helper.basepath('ems.master/MstApplcreationCICUploadInstEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstAssessmentCriteria', {
            url: '/MstAssessmentCriteria',
            title: 'MstAssessmentCriteria',
            templateUrl: helper.basepath('ems.master/MstAssessmentCriteria.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstApplicationAssignmentSummary', {
             url: '/MstApplicationAssignmentSummary',
             title: 'MstApplicationAssignmentSummary',
             templateUrl: helper.basepath('ems.master/MstApplicationAssignmentSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.MstAppassignedAssignmentSummary', {
            url: '/MstAppassignedAssignmentSummary',
            title: 'MstAppassignedAssignmentSummary',
            templateUrl: helper.basepath('ems.master/MstAppassignedAssignmentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstVisitReportEdit', {
             url: '/MstVisitReportEdit',
             title: 'MstVisitReportEdit',
             templateUrl: helper.basepath('ems.master/MstVisitReportEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')



         })
                .state('app.MstVisitReportView', {
                    url: '/MstVisitReportView',
                    title: 'MstVisitReportView',
                    templateUrl: helper.basepath('ems.master/MstVisitReportView.html?ver=' + version + '"'),
                    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')



                })

         .state('app.idasTrnDocumentTaggingCreditChild',
        {
            url: '/idasTrnDocumentTaggingCreditChild',
            title: 'idasTrnDocumentTaggingCreditChild',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentTaggingCreditChild.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.MstAssessmentCriteriaDetailsEdit', {
             url: '/MstAssessmentCriteriaDetailsEdit',
             title: 'MstAssessmentCriteriaDetailsEdit',
             templateUrl: helper.basepath('ems.master/MstAssessmentCriteriaDetailsEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })
            .state('app.MstAssessmentCriteriaDetailsView', {
                url: '/MstAssessmentCriteriaDetailsView',
                title: 'MstAssessmentCriteriaDetailsView',
                templateUrl: helper.basepath('ems.master/MstAssessmentCriteriaDetailsView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

         .state('app.MstGradingToolEdit', {
             url: '/MstGradingToolEdit',
             title: 'MstGradingToolEdit',
             templateUrl: helper.basepath('ems.master/MstGradingToolEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })
         .state('app.MstGradingToolView', {
             url: '/MstGradingToolView',
             title: 'MstGradingToolView',
             templateUrl: helper.basepath('ems.master/MstGradingToolView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })
             .state('app.MstApplicationInstitutionAdd', {
                 url: '/MstApplicationInstitutionAdd',
                 title: 'MstApplicationInstitutionAdd',
                 templateUrl: helper.basepath('ems.master/MstApplicationInstitutionAdd.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.MstApplicationOverallLimitAdd', {
                url: '/MstApplicationOverallLimitAdd',
                title: 'MstApplicationOverallLimitAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationOverallLimitAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstApplicationProductChargesAdd', {
                url: '/MstApplicationProductChargesAdd',
                title: 'MstApplicationProductChargesAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationProductChargesAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstApplicationServiceChargeAdd', {
                url: '/MstApplicationServiceChargeAdd',
                title: 'MstApplicationServiceChargeAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationServiceChargeAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstApplicationHypothecationAdd', {
                url: '/MstApplicationHypothecationAdd',
                title: 'MstApplicationHypothecationAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationHypothecationAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstApplicationIndividualAdd', {
                url: '/MstApplicationIndividualAdd',
                title: 'MstApplicationIndividualAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationIndividualAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

            .state('app.MstApplicationCICUploadAdd', {
                url: '/MstApplicationCICUploadAdd',
                title: 'MstApplicationCICUploadAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationCICUploadAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

            .state('app.MstApplicationSocialTradeCapitalAdd', {
                url: '/MstApplicationSocialTradeCapitalAdd',
                title: 'MstApplicationSocialTradeCapitalAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationSocialTradeCapitalAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

            .state('app.MstApplicationGroupAdd', {
                url: '/MstApplicationGroupAdd',
                title: 'MstApplicationGroupAdd',
                templateUrl: helper.basepath('ems.master/MstApplicationGroupAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

            .state('app.MstApplicationIndividualEdit', {
                url: '/MstApplicationIndividualEdit',
                title: 'MstApplicationIndividualEdit',
                templateUrl: helper.basepath('ems.master/MstApplicationIndividualEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

           .state('app.MstApplicationSocialTradeCapitalEdit', {
               url: '/MstApplicationSocialTradeCapitalEdit',
               title: 'MstApplicationSocialTradeCapitalEdit',
               templateUrl: helper.basepath('ems.master/MstApplicationSocialTradeCapitalEdit.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

           })

            .state('app.MstApplicationProductChargesEdit', {
                url: '/MstApplicationProductChargesEdit',
                title: 'MstApplicationProductChargesEdit',
                templateUrl: helper.basepath('ems.master/MstApplicationProductChargesEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

            .state('app.MstApplicationInstitutionEdit', {
                url: '/MstApplicationInstitutionEdit',
                title: 'MstApplicationInstitutionEdit',
                templateUrl: helper.basepath('ems.master/MstApplicationInstitutionEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })
            .state('app.MstApplicationGroupEdit', {
                url: '/MstApplicationGroupEdit',
                title: 'MstApplicationGroupEdit',
                templateUrl: helper.basepath('ems.master/MstApplicationGroupEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

          .state('app.idasTrnDocumentTaggingCreditOperationsChild', {
              url: '/idasTrnDocumentTaggingCreditOperationsChild',
              title: 'idasTrnDocumentTaggingCreditOperationsChild',
              templateUrl: helper.basepath('ems.idas/idasTrnDocumentTaggingCreditOperationsChild.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

          })
        .state('app.MstApplicationHypothecationEdit', {
            url: '/MstApplicationHypothecationEdit',
            title: 'MstApplicationHypothecationEdit',
            templateUrl: helper.basepath('ems.master/MstApplicationHypothecationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

             .state('app.MstApplicationEditKycView', {
                 url: '/MstApplicationEditKycView',
                 title: 'MstApplicationEditKycView',
                 templateUrl: helper.basepath('ems.master/MstApplicationEditKycView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

            .state('app.MstApplGroupMemberdtlView', {
                url: '/MstApplGroupMemberdtlView',
                title: 'MstApplGroupMemberdtlView',
                templateUrl: helper.basepath('ems.master/MstApplGroupMemberdtlView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })

         .state('app.MstAppEditHypothecationAdd', {
             url: '/MstAppEditHypothecationAdd',
             title: 'MstAppEditHypothecationAdd',
             templateUrl: helper.basepath('ems.master/MstAppEditHypothecationAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })

         .state('app.MstAppEditOverallLimitAdd', {
             url: '/MstAppEditOverallLimitAdd',
             title: 'MstAppEditOverallLimitAdd',
             templateUrl: helper.basepath('ems.master/MstAppEditOverallLimitAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })
        .state('app.MstAppEditProductAdd', {
            url: '/MstAppEditProductAdd',
            title: 'MstAppEditProductAdd',
            templateUrl: helper.basepath('ems.master/MstAppEditProductAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })

         .state('app.MstAppEditChargeAdd', {
             url: '/MstAppEditChargeAdd',
             title: 'MstAppEditChargeAdd',
             templateUrl: helper.basepath('ems.master/MstAppEditChargeAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

         })

        .state('app.MstApplicationLoanEdit', {
            url: '/MstApplicationLoanEdit',
            title: 'MstApplicationLoanEdit',
            templateUrl: helper.basepath('ems.master/MstApplicationLoanEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })


          .state('app.osdTrnTicketAllotedSummary',
        {
            url: '/osdTrnTicketAllotedSummary',
            title: 'osdTrnTicketAllotedSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketAllotedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })


         .state('app.osdTrnTicketWorkSummary',
        {
            url: '/osdTrnTicketWorkSummary',
            title: 'osdTrnTicketWorkSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketWorkSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

           .state('app.osdTrnTicketForwardSummary',
        {
            url: '/osdTrnTicketForwardSummary',
            title: 'osdTrnTicketForwardSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketForwardSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.osdTrnTicketCompletedSummary',
        {
            url: '/osdTrnTicketCompletedSummary',
            title: 'osdTrnTicketCompletedSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.osdTrnTicketClosedSummary',
        {
            url: '/osdTrnTicketClosedSummary',
            title: 'osdTrnTicketClosedSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketClosedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

         .state('app.MstPslCategory',
        {
            url: '/MstPslCategory',
            title: 'MstPslCategory',
            templateUrl: helper.basepath('ems.master/MstPslCategory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstWeakerSection',
        {
            url: '/MstWeakerSection',
            title: 'MstWeakerSection',
            templateUrl: helper.basepath('ems.master/MstWeakerSection.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstPslPurpose',
        {
            url: '/MstPslPurpose',
            title: 'MstPslPurpose',
            templateUrl: helper.basepath('ems.master/MstPslPurpose.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
 	     .state('app.MstLineofActivity',
        {
            url: '/MstLineofActivity',
            title: 'MstLineofActivity',
            templateUrl: helper.basepath('ems.master/MstLineofActivity.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstBSRCode',
        {
            url: '/MstBSRCode',
            title: 'MstBSRCode',
            templateUrl: helper.basepath('ems.master/MstBSRCode.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstOccupation',
        {
            url: '/MstOccupation',
            title: 'MstOccupation',
            templateUrl: helper.basepath('ems.master/MstOccupation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstTurnover',
        {
            url: '/MstTurnover',
            title: 'MstTurnover',
            templateUrl: helper.basepath('ems.master/MstTurnover.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstInvestment',
        {
            url: '/MstInvestment',
            title: 'MstInvestment',
            templateUrl: helper.basepath('ems.master/MstInvestment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstPurposecolumn',
        {
            url: '/MstPurposecolumn',
            title: 'MstPurposecolumn',
            templateUrl: helper.basepath('ems.master/MstPurposecolumn.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstNatureofEntity',
        {
            url: '/MstNatureofEntity',
            title: 'MstNatureofEntity',
            templateUrl: helper.basepath('ems.master/MstNatureofEntity.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstMsme',
        {
            url: '/MstMsme',
            title: 'MstMsme',
            templateUrl: helper.basepath('ems.master/MstMsme.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })

        .state('app.MstApplicationEditCICUploadAdd', {
            url: '/MstApplicationEditCICUploadAdd',
            title: 'MstApplicationEditCICUploadAdd',
            templateUrl: helper.basepath('ems.master/MstApplicationEditCICUploadAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
   	    .state('app.MstBankAccountType',
            {
                url: '/MstBankAccountType',
                title: 'MstBankAccountType',
                templateUrl: helper.basepath('ems.master/MstBankAccountType.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
            })

          .state('app.sdcTrnUatSummary',
        {
            url: '/sdcTrnUatSummary',
            title: 'sdcTrnUatSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnUatSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.sdcTrnUatDeploymentSummary',
        {
            url: '/sdcTrnUatDeploymentSummary',
            title: 'sdcTrnUatDeploymentSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnUatDeploymentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
       .state('app.sdcTrnTestDeploymentView',
        {
            url: '/sdcTrnTestDeploymentView',
            title: 'sdcTrnTestDeploymentView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnTestDeploymentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.sdcTrnUatDeploymentView',
        {
            url: '/sdcTrnUatDeploymentView',
            title: 'sdcTrnUatDeploymentView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnUatDeploymentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.sdcTrnLiveSummary',
        {
            url: '/sdcTrnLiveSummary',
            title: 'sdcTrnLiveSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnLiveSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.sdcTrnLiveDeploymentSummary',
        {
            url: '/sdcTrnLiveDeploymentSummary',
            title: 'sdcTrnLiveDeploymentSummary',
            templateUrl: helper.basepath('ems.sdc/sdcTrnLiveDeploymentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
            .state('app.sdcTrnLiveDeploymentView',
        {
            url: '/sdcTrnLiveDeploymentView',
            title: 'sdcTrnLiveDeploymentView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnLiveDeploymentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
          .state('app.sdcTrnLiveView',
        {
            url: '/sdcTrnLiveView',
            title: 'sdcTrnLiveView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnLiveView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
         .state('app.sdcTrnUatView',
        {
            url: '/sdcTrnUatView',
            title: 'sdcTrnUatView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnUatView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
            .state('app.sdcTrnTestView',
        {
            url: '/sdcTrnTestView',
            title: 'sdcTrnTestView',
            templateUrl: helper.basepath('ems.sdc/sdcTrnTestView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
             .state('app.idasTrnLsaReport',
        {
            url: '/idasTrnLsaReport',
            title: 'idasTrnLsaReport',
            templateUrl: helper.basepath('ems.idas/idasTrnLsaReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.osdTrnTicketRejectCancelSummary',
        {
            url: '/osdTrnTicketRejectCancelSummary',
            title: 'osdTrnTicketRejectCancelSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketRejectCancelSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.MstBankName',
        {
            url: '/MstBankName',
            title: 'MstBankName',
            templateUrl: helper.basepath('ems.master/MstBankName.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstProperty',
        {
            url: '/MstProperty',
            title: 'MstProperty',
            templateUrl: helper.basepath('ems.master/MstProperty.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstClientDetails',
        {
            url: '/MstClientDetails',
            title: 'MstClientDetails',
            templateUrl: helper.basepath('ems.master/MstClientDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstStartCreditUnderwriting', {
            url: '/MstStartCreditUnderwriting',
            title: 'MstStartCreditUnderwriting',
            templateUrl: helper.basepath('ems.master/MstStartCreditUnderwriting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditCompanyDtlAdd', {
            url: '/MstCreditCompanyDtlAdd',
            title: 'MstCreditCompanyDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditCompanyDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditEconomicCapitalAdd', {
            url: '/MstCreditEconomicCapitalAdd',
            title: 'MstCreditEconomicCapitalAdd',
            templateUrl: helper.basepath('ems.master/MstCreditEconomicCapitalAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditPSLDataFlaggingAdd', {
            url: '/MstCreditPSLDataFlaggingAdd',
            title: 'MstCreditPSLDataFlaggingAdd',
            templateUrl: helper.basepath('ems.master/MstCreditPSLDataFlaggingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRMInstitutionView', {
            url: '/MstRMInstitutionView',
            title: 'MstRMInstitutionView',
            templateUrl: helper.basepath('ems.master/MstRMInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRMIndividualView', {
            url: '/MstRMIndividualView',
            title: 'MstRMIndividualView',
            templateUrl: helper.basepath('ems.master/MstRMIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRMMemberView', {
            url: '/MstRMMemberView',
            title: 'MstRMMemberView',
            templateUrl: helper.basepath('ems.master/MstRMMemberView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditSuppliersDtlAdd', {
            url: '/MstCreditSuppliersDtlAdd',
            title: 'MstCreditSuppliersDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditSuppliersDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditBuyerDtlAdd', {
            url: '/MstCreditBuyerDtlAdd',
            title: 'MstCreditBuyerDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditBuyerDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditBankAccountDtlAdd', {
            url: '/MstCreditBankAccountDtlAdd',
            title: 'MstCreditBankAccountDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditBankAccountDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditExistingBankDtlAdd', {
            url: '/MstCreditExistingBankDtlAdd',
            title: 'MstCreditExistingBankDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditExistingBankDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRepaymentDtlAdd', {
            url: '/MstCreditRepaymentDtlAdd',
            title: 'MstCreditRepaymentDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditRepaymentDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditObservationAdd', {
            url: '/MstCreditObservationAdd',
            title: 'MstCreditObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCreditObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualDtlAdd', {
            url: '/MstCreditIndividualDtlAdd',
            title: 'MstCreditIndividualDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualBankAcctAdd', {
            url: '/MstCreditIndividualBankAcctAdd',
            title: 'MstCreditIndividualBankAcctAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualExistingBankAdd', {
            url: '/MstCreditIndividualExistingBankAdd',
            title: 'MstCreditIndividualExistingBankAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualRepaymentAdd', {
            url: '/MstCreditIndividualRepaymentAdd',
            title: 'MstCreditIndividualRepaymentAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualPSLDataFlagAdd', {
            url: '/MstCreditIndividualPSLDataFlagAdd',
            title: 'MstCreditIndividualPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualObservationAdd', {
            url: '/MstCreditIndividualObservationAdd',
            title: 'MstCreditIndividualObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupDtlAdd', {
            url: '/MstCreditGroupDtlAdd',
            title: 'MstCreditGroupDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupBankAcctAdd', {
            url: '/MstCreditGroupBankAcctAdd',
            title: 'MstCreditGroupBankAcctAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupExistingBankAdd', {
            url: '/MstCreditGroupExistingBankAdd',
            title: 'MstCreditGroupExistingBankAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupRepaymentAdd', {
            url: '/MstCreditGroupRepaymentAdd',
            title: 'MstCreditGroupRepaymentAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupPSLDataFlagAdd', {
            url: '/MstCreditGroupPSLDataFlagAdd',
            title: 'MstCreditGroupPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupObservationAdd', {
            url: '/MstCreditGroupObservationAdd',
            title: 'MstCreditGroupObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditEconomicCapitalEdit', {
            url: '/MstCreditEconomicCapitalEdit',
            title: 'MstCreditEconomicCapitalEdit',
            templateUrl: helper.basepath('ems.master/MstCreditEconomicCapitalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditPSLDataFlaggingEdit', {
            url: '/MstCreditPSLDataFlaggingEdit',
            title: 'MstCreditPSLDataFlaggingEdit',
            templateUrl: helper.basepath('ems.master/MstCreditPSLDataFlaggingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditBuyerDtlEdit', {
            url: '/MstCreditBuyerDtlEdit',
            title: 'MstCreditBuyerDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditBuyerDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditSuppliersDtlEdit', {
            url: '/MstCreditSuppliersDtlEdit',
            title: 'MstCreditSuppliersDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditSuppliersDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditBankAccountDtlEdit', {
            url: '/MstCreditBankAccountDtlEdit',
            title: 'MstCreditBankAccountDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditBankAccountDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditExistingBankDtlEdit', {
            url: '/MstCreditExistingBankDtlEdit',
            title: 'MstCreditExistingBankDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditExistingBankDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRepaymentDtlEdit', {
            url: '/MstCreditRepaymentDtlEdit',
            title: 'MstCreditRepaymentDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditRepaymentDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualBureauEdit', {
            url: '/MstCreditIndividualBureauEdit',
            title: 'MstCreditIndividualBureauEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualBankAcctEdit', {
            url: '/MstCreditIndividualBankAcctEdit',
            title: 'MstCreditIndividualBankAcctEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualExistingBankEdit', {
            url: '/MstCreditIndividualExistingBankEdit',
            title: 'MstCreditIndividualExistingBankEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualRepaymentEdit', {
            url: '/MstCreditIndividualRepaymentEdit',
            title: 'MstCreditIndividualRepaymentEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualPSLDataFlagEdit', {
            url: '/MstCreditIndividualPSLDataFlagEdit',
            title: 'MstCreditIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupBureauEdit', {
            url: '/MstCreditGroupBureauEdit',
            title: 'MstCreditGroupBureauEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupBankAcctEdit', {
            url: '/MstCreditGroupBankAcctEdit',
            title: 'MstCreditGroupBankAcctEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupExistingBankEdit', {
            url: '/MstCreditGroupExistingBankEdit',
            title: 'MstCreditGroupExistingBankEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupRepaymentEdit', {
            url: '/MstCreditGroupRepaymentEdit',
            title: 'MstCreditGroupRepaymentEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupPSLDataFlagEdit', {
            url: '/MstCreditGroupPSLDataFlagEdit',
            title: 'MstCreditGroupPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditCompanyDtlView', {
            url: '/MstCreditCompanyDtlView',
            title: 'MstCreditCompanyDtlView',
            templateUrl: helper.basepath('ems.master/MstCreditCompanyDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
      
        .state('app.legalsrreport',
        {
            url: '/legalsrreport',
            title: 'legalsrreport',
            templateUrl: helper.basepath('ems.lgl/legalsrreport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstCreditIndividualDtlView', {
            url: '/MstCreditIndividualDtlView',
            title: 'MstCreditIndividualDtlView',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupDtlView', {
            url: '/MstCreditGroupDtlView',
            title: 'MstCreditGroupDtlView',
            templateUrl: helper.basepath('ems.master/MstCreditGroupDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditAssessedScoreAdd', {
            url: '/MstCreditAssessedScoreAdd',
            title: 'MstCreditAssessedScoreAdd',
            templateUrl: helper.basepath('ems.master/MstCreditAssessedScoreAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRMAssessedScoreView', {
            url: '/MstRMAssessedScoreView',
            title: 'MstRMAssessedScoreView',
            templateUrl: helper.basepath('ems.master/MstRMAssessedScoreView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditAssessedScoreEdit', {
            url: '/MstCreditAssessedScoreEdit',
            title: 'MstCreditAssessedScoreEdit',
            templateUrl: helper.basepath('ems.master/MstCreditAssessedScoreEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditAssessedScoreView', {
            url: '/MstCreditAssessedScoreView',
            title: 'MstCreditAssessedScoreView',
            templateUrl: helper.basepath('ems.master/MstCreditAssessedScoreView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditVisitReportAdd', {
            url: '/MstCreditVisitReportAdd',
            title: 'MstCreditVisitReportAdd',
            templateUrl: helper.basepath('ems.master/MstCreditVisitReportAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRMVisitReportView', {
            url: '/MstRMVisitReportView',
            title: 'MstRMVisitReportView',
            templateUrl: helper.basepath('ems.master/MstRMVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditVisitReportEdit', {
            url: '/MstCreditVisitReportEdit',
            title: 'MstCreditVisitReportEdit',
            templateUrl: helper.basepath('ems.master/MstCreditVisitReportEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditVisitReportView', {
            url: '/MstCreditVisitReportView',
            title: 'MstCreditVisitReportView',
            templateUrl: helper.basepath('ems.master/MstCreditVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGeneralDtlEdit', {
            url: '/MstCreditGeneralDtlEdit',
            title: 'MstCreditGeneralDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGeneralDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditInstitutionDtlEdit', {
            url: '/MstCreditInstitutionDtlEdit',
            title: 'MstCreditInstitutionDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditInstitutionDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualDtlEdit', {
            url: '/MstCreditIndividualDtlEdit',
            title: 'MstCreditIndividualDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupDtlEdit', {
            url: '/MstCreditGroupDtlEdit',
            title: 'MstCreditGroupDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditGroupDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstApplicationReport', {
            url: '/MstApplicationReport',
            title: 'MstApplicationReport',
            templateUrl: helper.basepath('ems.master/MstApplicationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditProductChargesDtlEdit', {
            url: '/MstCreditProductChargesDtlEdit',
            title: 'MstCreditProductChargesDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditProductChargesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditLoanDtlEdit', {
            url: '/MstCreditLoanDtlEdit',
            title: 'MstCreditLoanDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditLoanDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditServicesDtlEdit', {
            url: '/MstCreditServicesDtlEdit',
            title: 'MstCreditServicesDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCreditServicesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
	    .state('app.idasTrnCourierReport',
        {
            url: '/idasTrnCourierReport',
            title: 'idasTrnCourierReport',
            templateUrl: helper.basepath('ems.idas/idasTrnCourierReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstCreditHypothecationEdit', {
            url: '/MstCreditHypothecationEdit',
            title: 'MstCreditHypothecationEdit',
            templateUrl: helper.basepath('ems.master/MstCreditHypothecationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.idasCourierMgmtAckList',
        {
            url: '/idasCourierMgmtAckList',
            title: 'idasCourierMgmtAckList',
            templateUrl: helper.basepath('ems.idas/idasCourierMgmtAckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
         .state('app.MstUDCMakerSummary', {
             url: '/MstUDCMakerSummary',
             title: 'MstUDCMakerSummary',
             templateUrl: helper.basepath('ems.master/MstUDCMakerSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstUDCMakerAdd', {
            url: '/MstUDCMakerAdd',
            title: 'MstUDCMakerAdd',
            templateUrl: helper.basepath('ems.master/MstUDCMakerAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstUDCMakerEdit', {
            url: '/MstUDCMakerEdit',
            title: 'MstUDCMakerEdit',
            templateUrl: helper.basepath('ems.master/MstUDCMakerEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstUDCMakerEditCheque', {
            url: '/MstUDCMakerEditCheque',
            title: 'MstUDCMakerEditCheque',
            templateUrl: helper.basepath('ems.master/MstUDCMakerEditCheque.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstUDCMakerAddCheque', {
            url: '/MstUDCMakerAddCheque',
            title: 'MstUDCMakerAddCheque',
            templateUrl: helper.basepath('ems.master/MstUDCMakerAddCheque.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstUDCMakerView', {
            url: '/MstUDCMakerView',
            title: 'MstUDCMakerView',
            templateUrl: helper.basepath('ems.master/MstUDCMakerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstCreditCompanyAPIAdd', {
             url: '/MstCreditCompanyAPIAdd',
             title: 'MstCreditCompanyAPIAdd',
             templateUrl: helper.basepath('ems.master/MstCreditCompanyAPIAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.MstCreditIndividualAPI', {
             url: '/MstCreditIndividualAPI',
             title: 'MstCreditIndividualAPI',
             templateUrl: helper.basepath('ems.master/MstCreditIndividualAPI.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.idasTrnCollateralReport', {
             url: '/idasTrnCollateralReport',
             title: 'idasTrnCollateralReport',
             templateUrl: helper.basepath('ems.idas/idasTrnCollateralReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.IECDetailedProfileView', {
             url: '/IECDetailedProfileView',
             title: 'IECDetailedProfileView',
             templateUrl: helper.basepath('ems.master/IECDetailedProfileView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.osdTrnTaggedRequestSummary', {
            url: '/osdTrnTaggedRequestSummary',
            title: 'osdTrnTaggedRequestSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTaggedRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdTrnForwardTransferSummary', {
            url: '/osdTrnForwardTransferSummary',
            title: 'osdTrnForwardTransferSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnForwardTransferSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdTrnReopenRequestSummary', {
            url: '/osdTrnReopenRequestSummary',
            title: 'osdTrnReopenRequestSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnReopenRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.OsdTrnAllotedMyTicket',
        {
            url: '/OsdTrnAllotedMyTicket',
            title: 'OsdTrnAllotedMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnAllotedMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.OsdTrnWorkMyTicket',
        {
            url: '/OsdTrnWorkMyTicket',
            title: 'OsdTrnWorkMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnWorkMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.OsdTrnExternalMyTicket',
        {
            url: '/OsdTrnExternalMyTicket',
            title: 'OsdTrnExternalMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnExternalMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.OsdTrnInternalMyTicket',
        {
            url: '/OsdTrnInternalMyTicket',
            title: 'OsdTrnInternalMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnInternalMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.OsdTrnCompletedMyTicket',
        {
            url: '/OsdTrnCompletedMyTicket',
            title: 'OsdTrnCompletedMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnCompletedMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.OsdTrnClosedMyTicket',
        {
            url: '/OsdTrnClosedMyTicket',
            title: 'OsdTrnClosedMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnClosedMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.GSPGSTReturnFilingView', {
            url: '/GSPGSTReturnFilingView',
            title: 'GSPGSTReturnFilingView',
            templateUrl: helper.basepath('ems.master/GSPGSTReturnFilingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.GSPGSTINAuthenticationView', {
            url: '/GSPGSTINAuthenticationView',
            title: 'GSPGSTINAuthenticationView',
            templateUrl: helper.basepath('ems.master/GSPGSTINAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.GSTAuthenticationView', {
            url: '/GSTAuthenticationView',
            title: 'GSTAuthenticationView',
            templateUrl: helper.basepath('ems.master/GSTAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditCommitteeSummary', {
            url: '/MstCreditCommitteeSummary',
            title: 'MstCreditCommitteeSummary',
            templateUrl: helper.basepath('ems.master/MstCreditCommitteeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCommitteeApplicationView', {
            url: '/MstCcCommitteeApplicationView',
            title: 'MstCcCommitteeApplicationView',
            templateUrl: helper.basepath('ems.master/MstCcCommitteeApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCommitteeKycView', {
            url: '/MstCcCommitteeKycView',
            title: 'MstCcCommitteeKycView',
            templateUrl: helper.basepath('ems.master/MstCcCommitteeKycView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCommitteeInstitutionView', {
            url: '/MstCcCommitteeInstitutionView',
            title: 'MstCcCommitteeInstitutionView',
            templateUrl: helper.basepath('ems.master/MstCcCommitteeInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCommitteeIndividualView', {
            url: '/MstCcCommitteeIndividualView',
            title: 'MstCcCommitteeIndividualView',
            templateUrl: helper.basepath('ems.master/MstCcCommitteeIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCommitteeGroupView', {
            url: '/MstCcCommitteeGroupView',
            title: 'MstCcCommitteeGroupView',
            templateUrl: helper.basepath('ems.master/MstCcCommitteeGroupView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCMeetingSchedule', {
            url: '/MstCCMeetingSchedule',
            title: 'MstCCMeetingSchedule',
            templateUrl: helper.basepath('ems.master/MstCCMeetingSchedule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCscheduledSummary', {
            url: '/MstCCscheduledSummary',
            title: 'MstCCscheduledSummary',
            templateUrl: helper.basepath('ems.master/MstCCscheduledSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.RCAuthAdvancedView', {
            url: '/RCAuthAdvancedView',
            title: 'RCAuthAdvancedView',
            templateUrl: helper.basepath('ems.master/RCAuthAdvancedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.PropertyTaxView', {
            url: '/PropertyTaxView',
            title: 'PropertyTaxView',
            templateUrl: helper.basepath('ems.master/PropertyTaxView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcScheduledMeetingSummary', {
            url: '/MstCcScheduledMeetingSummary',
            title: 'MstCcScheduledMeetingSummary',
            templateUrl: helper.basepath('ems.master/MstCcScheduledMeetingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')
        })
        .state('app.MstStartScheduledMeeting', {
            url: '/MstStartScheduledMeeting',
            title: 'MstStartScheduledMeeting',
            templateUrl: helper.basepath('ems.master/MstStartScheduledMeeting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCMeetingReschedule', {
            url: '/MstCCMeetingReschedule',
            title: 'MstCCMeetingReschedule',
            templateUrl: helper.basepath('ems.master/MstCCMeetingReschedule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.CreditUnderwritingKycLogView', {
            url: '/CreditUnderwritingKycLogView',
            title: 'CreditUnderwritingKycLogView',
            templateUrl: helper.basepath('ems.master/CreditUnderwritingKycLogView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstProgram', {
            url: '/MstProgram',
            title: 'MstProgram',
            templateUrl: helper.basepath('ems.master/MstProgram.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstTriggerUser', {
            url: '/SysMstTriggerUser',
            title: 'SysMstTriggerUser',
            templateUrl: helper.basepath('ems.system/SysMstTriggerUser.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.SysMstBloodGroup', {
             url: '/SysMstBloodGroup',
             title: 'SysMstBloodGroup',
             templateUrl: helper.basepath('ems.system/SysMstBloodGroup.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
            .state('app.SysMstPhysicalStatus', {
                url: '/SysMstPhysicalStatus',
                title: 'SysMstPhysicalStatus',
                templateUrl: helper.basepath('ems.system/SysMstPhysicalStatus.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.SysMstBaseLocation', {
            url: '/SysMstBaseLocation',
            title: 'SysMstBaseLocation',
            templateUrl: helper.basepath('ems.system/SysMstBaseLocation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstSalutation', {
            url: '/SysMstSalutation',
            title: 'SysMstSalutation',
            templateUrl: helper.basepath('ems.system/SysMstSalutation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstClientRole', {
            url: '/SysMstClientRole',
            title: 'SysMstClientRole',
            templateUrl: helper.basepath('ems.system/SysMstClientRole.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstCalendarGroup', {
            url: '/SysMstCalendarGroup',
            title: 'SysMstCalendarGroup',
            templateUrl: helper.basepath('ems.system/SysMstCalendarGroup.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstProjects', {
            url: '/SysMstProjects',
            title: 'SysMstProjects',
            templateUrl: helper.basepath('ems.system/SysMstProjects.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCCompletedSummary', {
            url: '/MstCCCompletedSummary',
            title: 'MstCCCompletedSummary',
            templateUrl: helper.basepath('ems.master/MstCCCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcCompletedScheduledMeeting', {
            url: '/MstCcCompletedScheduledMeeting',
            title: 'MstCcCompletedScheduledMeeting',
            templateUrl: helper.basepath('ems.master/MstCcCompletedScheduledMeeting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcScheduledMeetingDtlView', {
            url: '/MstCcScheduledMeetingDtlView',
            title: 'MstCcScheduledMeetingDtlView',
            templateUrl: helper.basepath('ems.master/MstCcScheduledMeetingDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCAMGenerate', {
            url: '/MstCAMGenerate',
            title: 'MstCAMGenerate',
            templateUrl: helper.basepath('ems.master/MstCAMGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditBankStatementAnalysisAdd', {
            url: '/MstCreditBankStatementAnalysisAdd',
            title: 'MstCreditBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCreditBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualBankStatementAnalysisAdd', {
            url: '/MstCreditIndividualBankStatementAnalysisAdd',
            title: 'MstCreditIndividualBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupBankStatementAnalysisAdd', {
            url: '/MstCreditGroupBankStatementAnalysisAdd',
            title: 'MstCreditGroupBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstClusterMapping', {
            url: '/SysMstClusterMapping',
            title: 'SysMstClusterMapping',
            templateUrl: helper.basepath('ems.system/SysMstClusterMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstRegionMapping', {
            url: '/SysMstRegionMapping',
            title: 'SysMstRegionMapping',
            templateUrl: helper.basepath('ems.system/SysMstRegionMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstZoneMapping', {
            url: '/SysMstZoneMapping',
            title: 'SysMstZoneMapping',
            templateUrl: helper.basepath('ems.system/SysMstZoneMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstRegionHead', {
            url: '/SysMstRegionHead',
            title: 'SysMstRegionHead',
            templateUrl: helper.basepath('ems.system/SysMstRegionHead.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstBusinessHead', {
            url: '/SysMstBusinessHead',
            title: 'SysMstBusinessHead',
            templateUrl: helper.basepath('ems.system/SysMstBusinessHead.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.SysMstGroupBusinessHead', {
            url: '/SysMstGroupBusinessHead',
            title: 'SysMstGroupBusinessHead',
            templateUrl: helper.basepath('ems.system/SysMstGroupBusinessHead.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstClusterHead', {
            url: '/SysMstClusterHead',
            title: 'SysMstClusterHead',
            templateUrl: helper.basepath('ems.system/SysMstClusterHead.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.SysMstZonalHead', {
             url: '/SysMstZonalHead',
             title: 'SysMstZonalHead',
             templateUrl: helper.basepath('ems.system/SysMstZonalHead.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.SysMstProductHead', {
             url: '/SysMstProductHead',
             title: 'SysMstProductHead',
             templateUrl: helper.basepath('ems.system/SysMstProductHead.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.SysMstOtherApplication', {
             url: '/SysMstOtherApplication',
             title: 'SysMstOtherApplication',
             templateUrl: helper.basepath('ems.system/SysMstOtherApplication.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.OtherApplicationDashboard', {
            url: '/OtherApplicationDashboard',
            title: 'OtherApplicationDashboard',
            templateUrl: helper.basepath('ems.system/OtherApplicationDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditFsaDetailAdd', {
            url: '/MstCreditFsaDetailAdd',
            title: 'MstCreditFsaDetailAdd',
            templateUrl: helper.basepath('ems.master/MstCreditFsaDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.idasTrnCadDashboard', {
            url: '/idasTrnCadDashboard',
            title: 'idasTrnCadDashboard',
            templateUrl: helper.basepath('ems.idas/idasTrnCadDashboard.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditFSAView', {
            url: '/MstCreditFSAView',
            title: 'MstCreditFSAView',
            templateUrl: helper.basepath('ems.master/MstCreditFSAView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.iasnTrnConsolidatedReport', {
            url: '/iasnTrnConsolidatedReport',
            title: 'iasnTrnConsolidatedReport',
            templateUrl: helper.basepath('ems.iasn/iasnTrnConsolidatedReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
	    .state('app.SystemDashboard', {
	        url: '/SystemDashboard',
	        title: 'SystemDashboard',
	        templateUrl: helper.basepath('ems.system/SystemDashboard.html?ver=' + version + '"'),
	        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
	    })
        .state('app.idasMstDocTemplate', {
            url: '/idasMstDocTemplate',
            title: 'idasMstDocTemplate',
            templateUrl: helper.basepath('ems.idas/idasMstDocTemplate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.idasTrnPreFilGeneration', {
            url: '/idasTrnPreFilGeneration',
            title: 'idasTrnPreFilGeneration',
            templateUrl: helper.basepath('ems.idas/idasTrnPreFilGeneration.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.idasTrnDocumentGeneration', {
            url: '/idasTrnDocumentGeneration',
            title: 'idasTrnDocumentGeneration',
            templateUrl: helper.basepath('ems.idas/idasTrnDocumentGeneration.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.idasTrnPreFilManagement', {
            url: '/idasTrnPreFilManagement',
            title: 'idasTrnPreFilManagement',
            templateUrl: helper.basepath('ems.idas/idasTrnPreFilManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
       	.state('app.MstCallType', {
       	    url: '/MstCallType',
       	    title: 'MstCallType',
       	    templateUrl: helper.basepath('ems.master/MstCallType.html?ver=' + version + '"'),
       	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
       	})
	    .state('app.MstSourceofContact', {
	        url: '/MstSourceofContact',
	        title: 'MstSourceofContact',
	        templateUrl: helper.basepath('ems.master/MstSourceofContact.html?ver=' + version + '"'),
	        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
	    })
        .state('app.MstApplicationCreationRMApproval', {
            url: '/MstApplicationCreationRMApproval',
            title: 'MstApplicationCreationRMApproval',
            templateUrl: helper.basepath('ems.master/MstApplicationCreationRMApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRejectedApplicationSummary', {
            url: '/MstRejectedApplicationSummary',
            title: 'MstRejectedApplicationSummary',
            templateUrl: helper.basepath('ems.master/MstRejectedApplicationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHoldApplicationSummary', {
            url: '/MstHoldApplicationSummary',
            title: 'MstHoldApplicationSummary',
            templateUrl: helper.basepath('ems.master/MstHoldApplicationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstApprovedApplicationSummary', {
            url: '/MstApprovedApplicationSummary',
            title: 'MstApprovedApplicationSummary',
            templateUrl: helper.basepath('ems.master/MstApprovedApplicationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessApprovalSummary', {
            url: '/MstBusinessApprovalSummary',
            title: 'MstBusinessApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstBusinessApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessRejectedSummary', {
            url: '/MstBusinessRejectedSummary',
            title: 'MstBusinessRejectedSummary',
            templateUrl: helper.basepath('ems.master/MstBusinessRejectedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessHoldSummary', {
            url: '/MstBusinessHoldSummary',
            title: 'MstBusinessHoldSummary',
            templateUrl: helper.basepath('ems.master/MstBusinessHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessApprovedSummary', {
            url: '/MstBusinessApprovedSummary',
            title: 'MstBusinessApprovedSummary',
            templateUrl: helper.basepath('ems.master/MstBusinessApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessApproval', {
            url: '/MstBusinessApproval',
            title: 'MstBusinessApproval',
            templateUrl: helper.basepath('ems.master/MstBusinessApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstTelecallingFunction', {
            url: '/MstTelecallingFunction',
            title: 'MstTelecallingFunction',
            templateUrl: helper.basepath('ems.master/MstTelecallingFunction.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstCallReceivedNumber', {
            url: '/MstCallReceivedNumber',
            title: 'MstCallReceivedNumber',
            templateUrl: helper.basepath('ems.master/MstCallReceivedNumber.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
        })
        .state('app.MstCreditMappingSummary', {
            url: '/MstCreditMappingSummary',
            title: 'MstCreditMappingSummary',
            templateUrl: helper.basepath('ems.master/MstCreditMappingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'localytics.directives')
        })
         .state('app.osdTrnCloseRequestSummary', {
             url: '/osdTrnCloseRequestSummary',
             title: 'osdTrnCloseRequestSummary',
             templateUrl: helper.basepath('ems.osd/osdTrnCloseRequestSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstVisitorSummary', {
            url: '/MstVisitorSummary',
            title: 'MstVisitorSummary',
            templateUrl: helper.basepath('ems.master/MstVisitorSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'angularGrid')
        })
        .state('app.MstVisitorAdd', {
            url: '/MstVisitorAdd',
            title: 'MstVisitorAdd',
            templateUrl: helper.basepath('ems.master/MstVisitorAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.MstVisitorEdit', {
            url: '/MstVisitorEdit',
            title: 'MstVisitorEdit',
            templateUrl: helper.basepath('ems.master/MstVisitorEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
        .state('app.MstMyApplicationsSummary', {
            url: '/MstMyApplicationsSummary',
            title: 'MstMyApplicationsSummary',
            templateUrl: helper.basepath('ems.master/MstMyApplicationsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSubmittedtoApprovalSummary', {
            url: '/MstSubmittedtoApprovalSummary',
            title: 'MstSubmittedtoApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstSubmittedtoApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSubmittedtoCCSummary', {
            url: '/MstSubmittedtoCCSummary',
            title: 'MstSubmittedtoCCSummary',
            templateUrl: helper.basepath('ems.master/MstSubmittedtoCCSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCSkippedApplicationSummary', {
            url: '/MstCCSkippedApplicationSummary',
            title: 'MstCCSkippedApplicationSummary',
            templateUrl: helper.basepath('ems.master/MstCCSkippedApplicationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstRejectandHoldSummary', {
            url: '/MstRejectandHoldSummary',
            title: 'MstRejectandHoldSummary',
            templateUrl: helper.basepath('ems.master/MstRejectandHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditApprovalSummary', {
            url: '/MstCreditApprovalSummary',
            title: 'MstCreditApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCreditApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditApprovedSummary', {
            url: '/MstCreditApprovedSummary',
            title: 'MstCreditApprovedSummary',
            templateUrl: helper.basepath('ems.master/MstCreditApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditSubmittedtoCCSummary', {
            url: '/MstCreditSubmittedtoCCSummary',
            title: 'MstCreditSubmittedtoCCSummary',
            templateUrl: helper.basepath('ems.master/MstCreditSubmittedtoCCSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditCCSkippedSummary', {
            url: '/MstCreditCCSkippedSummary',
            title: 'MstCreditCCSkippedSummary',
            templateUrl: helper.basepath('ems.master/MstCreditCCSkippedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRejectandHoldSummary', {
            url: '/MstCreditRejectandHoldSummary',
            title: 'MstCreditRejectandHoldSummary',
            templateUrl: helper.basepath('ems.master/MstCreditRejectandHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditApproval', {
            url: '/MstCreditApproval',
            title: 'MstCreditApproval',
            templateUrl: helper.basepath('ems.master/MstCreditApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditQueryStatus', {
            url: '/MstCreditQueryStatus',
            title: 'MstCreditQueryStatus',
            templateUrl: helper.basepath('ems.master/MstCreditQueryStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.osdBamTicketCompletedSummary', {
            url: '/osdBamTicketCompletedSummary',
            title: 'osdBamTicketCompletedSummary',
            templateUrl: helper.basepath('ems.osd/osdBamTicketCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.HighmarkReport', {
            url: '/HighmarkReport',
            title: 'HighmarkReport',
            templateUrl: helper.basepath('ems.master/HighmarkReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
 	    .state('app.idasTrnNocAndNdc', {
 	       url: '/idasTrnNocAndNdc',
 	       title: 'idasTrnNocAndNdc',
 	       templateUrl: helper.basepath('ems.idas/idasTrnNocAndNdc.html?ver=' + version + '"'),
 	       resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables')
 	    })
        .state('app.MstApplSubmittedtoCCSummary', {
            url: '/MstApplSubmittedtoCCSummary',
            title: 'MstApplSubmittedtoCCSummary',
            templateUrl: helper.basepath('ems.master/MstApplSubmittedtoCCSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditAllocationReport', {
            url: '/MstCreditAllocationReport',
            title: 'MstCreditAllocationReport',
            templateUrl: helper.basepath('ems.master/MstCreditAllocationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstTaggedVisitorSummary', {
             url: '/MstTaggedVisitorSummary',
             title: 'MstTaggedVisitorSummary',
             templateUrl: helper.basepath('ems.master/MstTaggedVisitorSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstHistoryVisitorSummary', {
            url: '/MstHistoryVisitorSummary',
            title: 'MstHistoryVisitorSummary',
            templateUrl: helper.basepath('ems.master/MstHistoryVisitorSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstVisitorView', {
             url: '/MstVisitorView',
             title: 'MstVisitorView',
             templateUrl: helper.basepath('ems.master/MstVisitorView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.idasTrnNocAndNdcView', {
             url: '/idasTrnNocAndNdcView',
             title: 'idasTrnNocAndNdcView',
             templateUrl: helper.basepath('ems.idas/idasTrnNocAndNdcView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
         })
       .state('app.idasTrnNocAndNdcAdd', {
            url: '/idasTrnNocAndNdcAdd',
            title: 'idasTrnNocAndNdcAdd',
            templateUrl: helper.basepath('ems.idas/idasTrnNocAndNdcAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.idasTrnNocAndNdcEdit', {
            url: '/idasTrnNocAndNdcEdit',
            title: 'idasTrnNocAndNdcEdit',
            templateUrl: helper.basepath('ems.idas/idasTrnNocAndNdcEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTaggedMemberSummary', {
            url: '/MstTaggedMemberSummary',
            title: 'MstTaggedMemberSummary',
            templateUrl: helper.basepath('ems.master/MstTaggedMemberSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCompletedCallSummary', {
            url: '/MstCompletedCallSummary',
            title: 'MstCompletedCallSummary',
            templateUrl: helper.basepath('ems.master/MstCompletedCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTransferCallSummary', {
            url: '/MstTransferCallSummary',
            title: 'MstTransferCallSummary',
            templateUrl: helper.basepath('ems.master/MstTransferCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstInboundAdd', {
            url: '/MstInboundAdd',
            title: 'MstInboundAdd',
            templateUrl: helper.basepath('ems.master/MstInboundAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTelecallingSummary', {
            url: '/MstTelecallingSummary',
            title: 'MstTelecallingSummary',
            templateUrl: helper.basepath('ems.master/MstTelecallingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstInboundEdit', {
            url: '/MstInboundEdit',
            title: 'MstInboundEdit',
            templateUrl: helper.basepath('ems.master/MstInboundEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingCompletedCall', {
            url: '/MstTeleCallingCompletedCall',
            title: 'MstTeleCallingCompletedCall',
            templateUrl: helper.basepath('ems.master/MstTeleCallingCompletedCall.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingFollowupCall', {
            url: '/MstTeleCallingFollowupCall',
            title: 'MstTeleCallingFollowupCall',
            templateUrl: helper.basepath('ems.master/MstTeleCallingFollowupCall.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingClosedCall', {
            url: '/MstTeleCallingClosedCall',
            title: 'MstTeleCallingClosedCall',
            templateUrl: helper.basepath('ems.master/MstTeleCallingClosedCall.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingAssignView', {
            url: '/MstTeleCallingAssignView',
            title: 'MstTeleCallingAssignView',
            templateUrl: helper.basepath('ems.master/MstTeleCallingAssignView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingClosedView', {
            url: '/MstTeleCallingClosedView',
            title: 'MstTeleCallingClosedView',
            templateUrl: helper.basepath('ems.master/MstTeleCallingClosedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingCompletedView', {
            url: '/MstTeleCallingCompletedView',
            title: 'MstTeleCallingCompletedView',
            templateUrl: helper.basepath('ems.master/MstTeleCallingCompletedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstMyAssignedCallSummary', {
            url: '/MstMyAssignedCallSummary',
            title: 'MstMyAssignedCallSummary',
            templateUrl: helper.basepath('ems.master/MstMyAssignedCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingClose', {
            url: '/MstTeleCallingClose',
            title: 'MstTeleCallingClose',
            templateUrl: helper.basepath('ems.master/MstTeleCallingClose.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCallResponse', {
            url: '/MstCallResponse',
            title: 'MstCallResponse',
            templateUrl: helper.basepath('ems.master/MstCallResponse.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAssignedInboundCallSummary', {
            url: '/MstAssignedInboundCallSummary',
            title: 'MstAssignedInboundCallSummary',
            templateUrl: helper.basepath('ems.master/MstAssignedInboundCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCompletedInboundCallSummary', {
            url: '/MstCompletedInboundCallSummary',
            title: 'MstCompletedInboundCallSummary',
            templateUrl: helper.basepath('ems.master/MstCompletedInboundCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstFollowUpInboundCallSummary', {
            url: '/MstFollowUpInboundCallSummary',
            title: 'MstFollowUpInboundCallSummary',
            templateUrl: helper.basepath('ems.master/MstFollowUpInboundCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstClosedInboundCallSummary', {
            url: '/MstClosedInboundCallSummary',
            title: 'MstClosedInboundCallSummary',
            templateUrl: helper.basepath('ems.master/MstClosedInboundCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstWorkInprogressCallSummary', {
            url: '/MstWorkInprogressCallSummary',
            title: 'MstWorkInprogressCallSummary',
            templateUrl: helper.basepath('ems.master/MstWorkInprogressCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAssignedCalls', {
            url: '/MstAssignedCalls',
            title: 'MstAssignedCalls',
            templateUrl: helper.basepath('ems.master/MstAssignedCalls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstFollowUpCallSummary', {
            url: '/MstFollowUpCallSummary',
            title: 'MstFollowUpCallSummary',
            templateUrl: helper.basepath('ems.master/MstFollowUpCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTaggedMemberView', {
            url: '/MstTaggedMemberView',
            title: 'MstTaggedMemberView',
            templateUrl: helper.basepath('ems.master/MstTaggedMemberView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAssignedCallView', {
            url: '/MstAssignedCallView',
            title: 'MstAssignedCallView',
            templateUrl: helper.basepath('ems.master/MstAssignedCallView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAssignedInboundCallView', {
            url: '/MstAssignedInboundCallView',
            title: 'MstAssignedInboundCallView',
            templateUrl: helper.basepath('ems.master/MstAssignedInboundCallView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstRejectedCallSummary', {
            url: '/MstRejectedCallSummary',
            title: 'MstRejectedCallSummary',
            templateUrl: helper.basepath('ems.master/MstRejectedCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstRejectedCallView', {
            url: '/MstRejectedCallView',
            title: 'MstRejectedCallView',
            templateUrl: helper.basepath('ems.master/MstRejectedCallView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstRejectedInboundCallSummary', {
            url: '/MstRejectedInboundCallSummary',
            title: 'MstRejectedInboundCallSummary',
            templateUrl: helper.basepath('ems.master/MstRejectedInboundCallSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingFollowupCallView', {
            url: '/MstTeleCallingFollowupCallView',
            title: 'MstTeleCallingFollowupCallView',
            templateUrl: helper.basepath('ems.master/MstTeleCallingFollowupCallView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.idasTrnNocAndNdcReport', {
            url: '/idasTrnNocAndNdcReport',
            title: 'idasTrnNocAndNdcReport',
            templateUrl: helper.basepath('ems.idas/idasTrnNocAndNdcReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstProductSummary', {
             url: '/MstProductSummary',
             title: 'MstProductSummary',
             templateUrl: helper.basepath('ems.master/MstProductSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
       .state('app.MstProductView', {
            url: '/MstProductView',
            title: 'MstProductView',
            templateUrl: helper.basepath('ems.master/MstProductView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstProductAdd', {
              url: '/MstProductAdd',
              title: 'MstProductAdd',
              templateUrl: helper.basepath('ems.master/MstProductAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstProductEdit', {
            url: '/MstProductEdit',
            title: 'MstProductEdit',
            templateUrl: helper.basepath('ems.master/MstProductEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupSummary', {
             url: '/MstCADGroupSummary',
             title: 'MstCADGroupSummary',
             templateUrl: helper.basepath('ems.master/MstCADGroupSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.sdcTrnTestReport', {
            url: '/sdcTrnTestReport',
            title: 'sdcTrnTestReport',
            templateUrl: helper.basepath('ems.sdc/sdcTrnTestReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.sdcTrnUatReport', {
            url: '/sdcTrnUatReport',
            title: 'sdcTrnUatReport',
            templateUrl: helper.basepath('ems.sdc/sdcTrnUatReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.sdcTrnLiveReport', {
            url: '/sdcTrnLiveReport',
            title: 'sdcTrnLiveReport',
            templateUrl: helper.basepath('ems.sdc/sdcTrnLiveReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupAssignmentSummary', {
            url: '/MstCADGroupAssignmentSummary',
            title: 'MstCADGroupAssignmentSummary',
            templateUrl: helper.basepath('ems.master/MstCADGroupAssignmentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupAssignmentAdd', {
            url: '/MstCADGroupAssignmentAdd',
            title: 'MstCADGroupAssignmentAdd',
            templateUrl: helper.basepath('ems.master/MstCADGroupAssignmentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupAssignmentEdit', {
            url: '/MstCADGroupAssignmentEdit',
            title: 'MstCADGroupAssignmentEdit',
            templateUrl: helper.basepath('ems.master/MstCADGroupAssignmentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstCheckpointGroupAdd', {
            url: '/AtmMstCheckpointGroupAdd',
            title: 'AtmMstCheckpointGroupAdd',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointGroupAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstAuditMappingAdd', {
            url: '/AtmMstAuditMappingAdd',
            title: 'AtmMstAuditMappingAdd',
            templateUrl: helper.basepath('ems.audit/AtmMstAuditMappingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstRiskCategory', {
            url: '/AtmMstRiskCategory',
            title: 'AtmMstRiskCategory',
            templateUrl: helper.basepath('ems.audit/AtmMstRiskCategory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstAuditType', {
            url: '/AtmMstAuditType',
            title: 'AtmMstAuditType',
            templateUrl: helper.basepath('ems.audit/AtmMstAuditType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
         .state('app.AtmMstAuditDepartment', {
            url: '/AtmMstAuditDepartment',
            title: 'AtmMstAuditDepartment',
            templateUrl: helper.basepath('ems.audit/AtmMstAuditDepartment.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })
        .state('app.MstPendingCADReview', {
            url: '/MstPendingCADReview',
            title: 'MstPendingCADReview',
            templateUrl: helper.basepath('ems.master/MstPendingCADReview.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadAcceptedCustomers', {
            url: '/MstCadAcceptedCustomers',
            title: 'MstCadAcceptedCustomers',
            templateUrl: helper.basepath('ems.master/MstCadAcceptedCustomers.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSentBackToUnderwriting', {
            url: '/MstSentBackToUnderwriting',
            title: 'MstSentBackToUnderwriting',
            templateUrl: helper.basepath('ems.master/MstSentBackToUnderwriting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSentBackToCC', {
            url: '/MstSentBackToCC',
            title: 'MstSentBackToCC',
            templateUrl: helper.basepath('ems.master/MstSentBackToCC.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadApplicationView', {
            url: '/MstCadApplicationView',
            title: 'MstCadApplicationView',
            templateUrl: helper.basepath('ems.master/MstCadApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCCRejectedApplications', {
            url: '/MstCCRejectedApplications',
            title: 'MstCCRejectedApplications',
            templateUrl: helper.basepath('ems.master/MstCCRejectedApplications.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSanctionSummary', {
            url: '/MstSanctionSummary',
            title: 'MstSanctionSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSanctionCheckerSummary', {
            url: '/MstSanctionCheckerSummary',
            title: 'MstSanctionCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSanctionApprovalSummary', {
            url: '/MstSanctionApprovalSummary',
            title: 'MstSanctionApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSanctionDtlSummary', {
            url: '/MstSanctionDtlSummary',
            title: 'MstSanctionDtlSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionDtlSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCreateSanction', {
            url: '/MstCreateSanction',
            title: 'MstCreateSanction',
            templateUrl: helper.basepath('ems.master/MstCreateSanction.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupProcessAssign', {
            url: '/MstCADGroupProcessAssign',
            title: 'MstCADGroupProcessAssign',
            templateUrl: helper.basepath('ems.master/MstCADGroupProcessAssign.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADApplicationEdit', {
            url: '/MstCADApplicationEdit',
            title: 'MstCADApplicationEdit',
            templateUrl: helper.basepath('ems.master/MstCADApplicationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAppSanctionLetterGeneration', {
            url: '/MstAppSanctionLetterGeneration',
            title: 'MstAppSanctionLetterGeneration',
            templateUrl: helper.basepath('ems.master/MstAppSanctionLetterGeneration.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstAppSanctionLetterWordView', {
            url: '/MstAppSanctionLetterWordView',
            title: 'MstAppSanctionLetterWordView',
            templateUrl: helper.basepath('ems.master/MstAppSanctionLetterWordView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADInstitutionDtlAdd', {
            url: '/MstCADInstitutionDtlAdd',
            title: 'MstCADInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADIndividualDtlAdd', {
            url: '/MstCADIndividualDtlAdd',
            title: 'MstCADIndividualDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCADGroupDtlAdd', {
            url: '/MstCADGroupDtlAdd',
            title: 'MstCADGroupDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADGroupDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })       
        .state('app.AtmMstChecklistMasterSummary', {
            url: '/AtmMstChecklistMasterSummary',
            title: 'AtmMstChecklistMasterSummary',
            templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstChecklistMasterAdd', {
            url: '/AtmMstChecklistMasterAdd',
            title: 'AtmMstChecklistMasterAdd',
            templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstChecklistMasterAudit', {
            url: '/AtmMstChecklistMasterAudit',
            title: 'AtmMstChecklistMasterAudit',
            templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstChecklistMasterAuditEdit', {
            url: '/AtmMstChecklistMasterAuditEdit',
            title: 'AtmMstChecklistMasterAuditEdit',
            templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterAuditEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstChecklistMasterAuditView', {
           url: '/AtmMstChecklistMasterAuditView',
           title: 'AtmMstChecklistMasterAuditView',
           templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterAuditView.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })                 
        .state('app.AtmMstAuditFrequency', {
           url: '/AtmMstAuditFrequency',
           title: 'AtmMstAuditFrequency',
           templateUrl: helper.basepath('ems.audit/AtmMstAuditFrequency.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstAuditPriority', {
            url: '/AtmMstAuditPriority',
            title: 'AtmMstAuditPriority',
            templateUrl: helper.basepath('ems.audit/AtmMstAuditPriority.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmMstPositiveConfirmity', {
            url: '/AtmMstPositiveConfirmity',
            title: 'AtmMstPositiveConfirmity',
            templateUrl: helper.basepath('ems.audit/AtmMstPositiveConfirmity.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstDocumentCheckList', {
            url: '/MstDocumentCheckList',
            title: 'MstDocumentCheckList',
            templateUrl: helper.basepath('ems.master/MstDocumentCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDocumentChecklistSummary', {
            url: '/MstCadDocumentChecklistSummary',
            title: 'MstCadDocumentChecklistSummary',
            templateUrl: helper.basepath('ems.master/MstCadDocumentChecklistSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadGuarantorDetails', {
            url: '/MstCadGuarantorDetails',
            title: 'MstCadGuarantorDetails',
            templateUrl: helper.basepath('ems.master/MstCadGuarantorDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDocumentChecklistAdd', {
            url: '/MstCadDocumentChecklistAdd',
            title: 'MstCadDocumentChecklistAdd',
            templateUrl: helper.basepath('ems.master/MstCadDocumentChecklistAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstIndividualDocCheckList', {
            url: '/MstIndividualDocCheckList',
            title: 'MstIndividualDocCheckList',
            templateUrl: helper.basepath('ems.master/MstIndividualDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstGroupDocCheckList', {
            url: '/MstGroupDocCheckList',
            title: 'MstGroupDocCheckList',
            templateUrl: helper.basepath('ems.master/MstGroupDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstDocumentTypeSummary', {
            url: '/MstDocumentTypeSummary',
            title: 'MstDocumentTypeSummary',
            templateUrl: helper.basepath('ems.master/MstDocumentTypeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadLSASummary', {
            url: '/MstCadLSASummary',
            title: 'MstCadLSASummary',
            templateUrl: helper.basepath('ems.master/MstCadLSASummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadLSACheckerSummary', {
            url: '/MstCadLSACheckerSummary',
            title: 'MstCadLSACheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadLSACheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadLSAApprovalSummary', {
            url: '/MstCadLSAApprovalSummary',
            title: 'MstCadLSAApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadLSAApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeferralSummary', {
            url: '/MstCadDeferralSummary',
            title: 'MstCadDeferralSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeferralSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeferralCheckerSummary', {
            url: '/MstCadDeferralCheckerSummary',
            title: 'MstCadDeferralCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeferralCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeferralApprovalSummary', {
            url: '/MstCadDeferralApprovalSummary',
            title: 'MstCadDeferralApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeferralApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadCovenantSummary', {
            url: '/MstCadCovenantSummary',
            title: 'MstCadCovenantSummary',
            templateUrl: helper.basepath('ems.master/MstCadCovenantSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadCovenantCheckerSummary', {
            url: '/MstCadCovenantCheckerSummary',
            title: 'MstCadCovenantCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadCovenantCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadCovenantApprovalSummary', {
            url: '/MstCadCovenantApprovalSummary',
            title: 'MstCadCovenantApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadCovenantApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadChequeManagementSummary', {
            url: '/MstCadChequeManagementSummary',
            title: 'MstCadChequeManagementSummary',
            templateUrl: helper.basepath('ems.master/MstCadChequeManagementSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadChequeMgmtCheckerSummary', {
            url: '/MstCadChequeMgmtCheckerSummary',
            title: 'MstCadChequeMgmtCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadChequeMgmtCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadChequeMgmtApprovalSummary', {
            url: '/MstCadChequeMgmtApprovalSummary',
            title: 'MstCadChequeMgmtApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadChequeMgmtApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadNACHSummary', {
            url: '/MstCadNACHSummary',
            title: 'MstCadNACHSummary',
            templateUrl: helper.basepath('ems.master/MstCadNACHSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadNACHCheckerSummary', {
            url: '/MstCadNACHCheckerSummary',
            title: 'MstCadNACHCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadNACHCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadNACHApprovalSummary', {
            url: '/MstCadNACHApprovalSummary',
            title: 'MstCadNACHApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadNACHApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadWaiverSummary', {
            url: '/MstCadWaiverSummary',
            title: 'MstCadWaiverSummary',
            templateUrl: helper.basepath('ems.master/MstCadWaiverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadWaiverCheckerSummary', {
            url: '/MstCadWaiverCheckerSummary',
            title: 'MstCadWaiverCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadWaiverCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadWaiverApprovalSummary', {
            url: '/MstCadWaiverApprovalSummary',
            title: 'MstCadWaiverApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadWaiverApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeviationSummary', {
            url: '/MstCadDeviationSummary',
            title: 'MstCadDeviationSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeviationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeviationCheckerSummary', {
            url: '/MstCadDeviationCheckerSummary',
            title: 'MstCadDeviationCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeviationCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDeviationApprovalSummary', {
            url: '/MstCadDeviationApprovalSummary',
            title: 'MstCadDeviationApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadDeviationApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDisbursementRequestSummary', {
            url: '/MstCadDisbursementRequestSummary',
            title: 'MstCadDisbursementRequestSummary',
            templateUrl: helper.basepath('ems.master/MstCadDisbursementRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDisburseReqCheckerSummary', {
            url: '/MstCadDisburseReqCheckerSummary',
            title: 'MstCadDisburseReqCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadDisburseReqCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDisburseReqApprovalSummary', {
            url: '/MstCadDisburseReqApprovalSummary',
            title: 'MstCadDisburseReqApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadDisburseReqApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCheckerApprovalSummary', {
            url: '/MstCheckerApprovalSummary',
            title: 'MstCheckerApprovalSummary',
            templateUrl: helper.basepath('ems.idas/MstCheckerApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.DocDigitalSignatureSummary', {
            url: '/DocDigitalSignatureSummary',
            title: 'DocDigitalSignatureSummary',
            templateUrl: helper.basepath('ems.idas/DocDigitalSignatureSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.idasMstSanctionLetterWordView', {
            url: '/idasMstSanctionLetterWordView',
            title: 'idasMstSanctionLetterWordView',
            templateUrl: helper.basepath('ems.idas/idasMstSanctionLetterWordView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCheckerSummary', {
            url: '/MstCheckerSummary',
            title: 'MstCheckerSummary',
            templateUrl: helper.basepath('ems.idas/MstCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSanctionEdit', {
            url: '/MstSanctionEdit',
            title: 'MstSanctionEdit',
            templateUrl: helper.basepath('ems.master/MstSanctionEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSanctionWaiverSummary', {
            url: '/MstSanctionWaiverSummary',
            title: 'MstSanctionWaiverSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionWaiverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstGroupDocument', {
            url: '/MstGroupDocument',
            title: 'MstGroupDocument',
            templateUrl: helper.basepath('ems.master/MstGroupDocument.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstGroupWaiverSummary', {
            url: '/MstGroupWaiverSummary',
            title: 'MstGroupWaiverSummary',
            templateUrl: helper.basepath('ems.master/MstGroupWaiverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
         .state('app.MstLANWaiverSummary', {
             url: '/MstLANWaiverSummary',
             title: 'MstLANWaiverSummary',
             templateUrl: helper.basepath('ems.master/MstLANWaiverSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })
         .state('app.MstProgramAdd', {
                url: '/MstProgramAdd',
                title: 'MstProgramAdd',
                templateUrl: helper.basepath('ems.master/MstProgramAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })
        .state('app.MstProgramEdit', {
            url: '/MstProgramEdit',
            title: 'MstProgramEdit',
            templateUrl: helper.basepath('ems.master/MstProgramEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstProgramView', {
             url: '/MstProgramView',
             title: 'MstProgramView',
             templateUrl: helper.basepath('ems.master/MstProgramView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
           .state('app.TransUnionReport', {
               url: '/TransUnionReport',
               title: 'TransUnionReport',
               templateUrl: helper.basepath('ems.master/TransUnionReport.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })
        .state('app.BureauUpdateIndividual', {
            url: '/BureauUpdateIndividual',
            title: 'BureauUpdateIndividual',
            templateUrl: helper.basepath('ems.master/BureauUpdateIndividual.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.BureauUpdateInstitution', {
            url: '/BureauUpdateInstitution',
            title: 'BureauUpdateInstitution',
            templateUrl: helper.basepath('ems.master/BureauUpdateInstitution.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditInstitutionDtlAdd', {
            url: '/MstCreditInstitutionDtlAdd',
            title: 'MstCreditInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditInstitutionBureauEdit', {
            url: '/MstCreditInstitutionBureauEdit',
            title: 'MstCreditInstitutionBureauEdit',
            templateUrl: helper.basepath('ems.master/MstCreditInstitutionBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstDigitalSignature', {
            url: '/MstDigitalSignature',
            title: 'MstDigitalSignature',
            templateUrl: helper.basepath('ems.master/MstDigitalSignature.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCadDocChecklistCheckerSummary', {
            url: '/MstCadDocChecklistCheckerSummary',
            title: 'MstCadDocChecklistCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadDocChecklistCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadDocChecklistApprovalSummary', {
            url: '/MstCadDocChecklistApprovalSummary',
            title: 'MstCadDocChecklistApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadDocChecklistApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCadGuarantorApproval', {
            url: '/MstCadGuarantorApproval',
            title: 'MstCadGuarantorApproval',
            templateUrl: helper.basepath('ems.master/MstCadGuarantorApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstDocumentSeverity', {
            url: '/MstDocumentSeverity',
            title: 'MstDocumentSeverity',
            templateUrl: helper.basepath('ems.master/MstDocumentSeverity.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstIndividualDocumentAdd', {
            url: '/MstIndividualDocumentAdd',
            title: 'MstIndividualDocumentAdd',
            templateUrl: helper.basepath('ems.master/MstIndividualDocumentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstIndividualDocumentEdit', {
            url: '/MstIndividualDocumentEdit',
            title: 'MstIndividualDocumentEdit',
            templateUrl: helper.basepath('ems.master/MstIndividualDocumentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstIndividualDocumentView', {
            url: '/MstIndividualDocumentView',
            title: 'MstIndividualDocumentView',
            templateUrl: helper.basepath('ems.master/MstIndividualDocumentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCompanyDocumentAdd', {
            url: '/MstCompanyDocumentAdd',
            title: 'MstCompanyDocumentAdd',
            templateUrl: helper.basepath('ems.master/MstCompanyDocumentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCompanyDocumentEdit', {
            url: '/MstCompanyDocumentEdit',
            title: 'MstCompanyDocumentEdit',
            templateUrl: helper.basepath('ems.master/MstCompanyDocumentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstCompanyDocumentView', {
            url: '/MstCompanyDocumentView',
            title: 'MstCompanyDocumentView',
            templateUrl: helper.basepath('ems.master/MstCompanyDocumentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })                 
        .state('app.MstGroupDocumentAdd', {
            url: '/MstGroupDocumentAdd',
            title: 'MstGroupDocumentAdd',
            templateUrl: helper.basepath('ems.master/MstGroupDocumentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstGroupDocumentEdit', {
            url: '/MstGroupDocumentEdit',
            title: 'MstGroupDocumentEdit',
            templateUrl: helper.basepath('ems.master/MstGroupDocumentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.MstGroupDocumentView', {
            url: '/MstGroupDocumentView',
            title: 'MstGroupDocumentView',
            templateUrl: helper.basepath('ems.master/MstGroupDocumentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstApplcreationCICUploadView', {
            url: '/MstApplcreationCICUploadView',
            title: 'MstApplcreationCICUploadView',
            templateUrl: helper.basepath('ems.master/MstApplcreationCICUploadView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstApplcreationCICUploadInstView', {
            url: '/MstApplcreationCICUploadInstView',
            title: 'MstApplcreationCICUploadInstView',
            templateUrl: helper.basepath('ems.master/MstApplcreationCICUploadInstView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCreditIndividualBureauView', {
            url: '/MstCreditIndividualBureauView',
            title: 'MstCreditIndividualBureauView',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCreditInstitutionBureauView', {
            url: '/MstCreditInstitutionBureauView',
            title: 'MstCreditInstitutionBureauView',
            templateUrl: helper.basepath('ems.master/MstCreditInstitutionBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditCreationView', {
            url: '/AtmTrnAuditCreationView',
            title: 'AtmTrnAuditCreationView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditCreationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditCreationEdit', {
            url: '/AtmTrnAuditCreationEdit',
            title: 'AtmTrnAuditCreationEdit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditCreationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditCreationSummary', {
            url: '/AtmTrnAuditCreationSummary',
            title: 'AtmTrnAuditCreationSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditCreationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckpointSummary', {
            url: '/AtmTrnCheckpointSummary',
            title: 'AtmTrnCheckpointSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckpointSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCreateAudit', {
            url: '/AtmTrnCreateAudit',
            title: 'AtmTrnCreateAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnCreateAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckpointObservation', {
            url: '/AtmTrnCheckpointObservation',
            title: 'AtmTrnCheckpointObservation',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckpointObservation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
         
        .state('app.AtmTrnMyAuditTaskSummary', {
            url: '/AtmTrnMyAuditTaskSummary',
            title: 'AtmTrnMyAuditTaskSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnSampling', {
            url: '/AtmTrnSampling',
            title: 'AtmTrnSampling',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampling.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckpointSummaryAssign', {
            url: '/AtmTrnCheckpointSummaryAssign',
            title: 'AtmTrnCheckpointSummaryAssign',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckpointSummaryAssign.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnSamplingView', {
            url: '/AtmTrnSamplingView',
            title: 'AtmTrnSamplingView',
            templateUrl: helper.basepath('ems.audit/AtmTrnSamplingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditTask', {
            url: '/AtmTrnMyAuditTask',
            title: 'AtmTrnMyAuditTask',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTask.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCCReport', {
            url: '/MstCCReport',
            title: 'MstCCReport',
            templateUrl: helper.basepath('ems.master/MstCCReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
		.state('app.HighmarkInstitutionReport', {
            url: '/HighmarkInstitutionReport',
            title: 'HighmarkInstitutionReport',
            templateUrl: helper.basepath('ems.master/HighmarkInstitutionReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstSentbackcctoCredit', {
            url: '/MstSentbackcctoCredit',
            title: 'MstSentbackcctoCredit',
            templateUrl: helper.basepath('ems.master/MstSentbackcctoCredit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSentbackcctoCreditHistory', {
            url: '/MstSentbackcctoCreditHistory',
            title: 'MstSentbackcctoCreditHistory',
            templateUrl: helper.basepath('ems.master/MstSentbackcctoCreditHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.OsdTrnApprovalMyTicket',
        {
            url: '/OsdTrnApprovalMyTicket',
            title: 'OsdTrnApprovalMyTicket',
            templateUrl: helper.basepath('ems.osd/OsdTrnApprovalMyTicket.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.osdTrnApprovalPending360',
        {
            url: '/osdTrnApprovalPending360',
            title: 'osdTrnApprovalPending360',
            templateUrl: helper.basepath('ems.osd/osdTrnApprovalPending360.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstSentbackCadtoCcHistory', {
            url: '/MstSentbackCadtoCcHistory',
            title: 'MstSentbackCadtoCcHistory',
            templateUrl: helper.basepath('ems.master/MstSentbackCadtoCcHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstVisitorManagementReport', {
            url: '/MstVisitorManagementReport',
            title: 'MstVisitorManagementReport',
            templateUrl: helper.basepath('ems.master/MstVisitorManagementReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

		.state('app.osdBankAlertReport', {
            url: '/osdBankAlertReport',
            title: 'osdBankAlertReport',
            templateUrl: helper.basepath('ems.osd/osdBankAlertReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AtmTrnAssignedQuery', {
            url: '/AtmTrnAssignedQuery',
            title: 'AtmTrnAssignedQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAssignedQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnReplyToQuery', {
            url: '/AtmTrnReplyToQuery',
            title: 'AtmTrnReplyToQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnReplyToQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnApproval',
        {
            url: '/AtmTrnApproval',
            title: 'AtmTrnApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.AtmTrnApprovalView',
        {
            url: '/AtmTrnApprovalView',
            title: 'AtmTrnApprovalView',
            templateUrl: helper.basepath('ems.audit/AtmTrnApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.AtmTrnObservations', {
            url: '/AtmTrnObservations',
            title: 'AtmTrnObservations',
            templateUrl: helper.basepath('ems.audit/AtmTrnObservations.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnSampleAssignedQuery', {
            url: '/AtmTrnSampleAssignedQuery',
            title: 'AtmTrnSampleAssignedQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleAssignedQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmTrnSampleReplyQuery', {
            url: '/AtmTrnSampleReplyQuery',
            title: 'AtmTrnSampleReplyQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleReplyQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstChecklistMasterEdit', {
            url: '/AtmMstChecklistMasterEdit',
            title: 'AtmMstChecklistMasterEdit',
            templateUrl: helper.basepath('ems.audit/AtmMstChecklistMasterEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditApprovalView', {
            url: '/AtmTrnAuditApprovalView',
            title: 'AtmTrnAuditApprovalView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditApproval', {
            url: '/AtmTrnAuditApproval',
            title: 'AtmTrnAuditApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCreditAddCovenantCheckList', {
            url: '/MstCreditAddCovenantCheckList',
            title: 'MstCreditAddCovenantCheckList',
            templateUrl: helper.basepath('ems.master/MstCreditAddCovenantCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstIndividualCovenantDocChecklist', {
            url: '/MstIndividualCovenantDocChecklist',
            title: 'MstIndividualCovenantDocChecklist',
            templateUrl: helper.basepath('ems.master/MstIndividualCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstGroupCovenantDocChecklist', {
            url: '/MstGroupCovenantDocChecklist',
            title: 'MstGroupCovenantDocChecklist',
            templateUrl: helper.basepath('ems.master/MstGroupCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.AtmTrnAuditTaskSample', {
            url: '/AtmTrnAuditTaskSample',
            title: 'AtmTrnAuditTaskSample',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditTaskSample.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

		.state('app.MstTeleCallingReport', {
            url: '/MstTeleCallingReport',
            title: 'MstTeleCallingReport',
            templateUrl: helper.basepath('ems.master/MstTeleCallingReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
		})

        .state('page.CCMeetingApproval', {
            url: '/CCMeetingApproval',
            title: 'CCMeetingApproval',
            templateUrl: 'app/pages/CCMeetingApproval.html?ver=' + version + '"',
        })

        .state('app.AtmTrnAuditRaiseQuery', {
            url: '/AtmTrnAuditRaiseQuery',
            title: 'AtmTrnAuditRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.AtmTrnSampleQuery', {
            url: '/AtmTrnSampleQuery',
            title: 'AtmTrnSampleQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.osdTrnTicketApprovalSummary', {
            url: '/osdTrnTicketApprovalSummary',
            title: 'osdTrnTicketApprovalSummary',
            templateUrl: helper.basepath('ems.osd/osdTrnTicketApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMakerCheckpointObservation', {
            url: '/AtmTrnMakerCheckpointObservation',
            title: 'AtmTrnMakerCheckpointObservation',
            templateUrl: helper.basepath('ems.audit/AtmTrnMakerCheckpointObservation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditTaskAuditeeSummary', {
            url: '/AtmTrnMyAuditTaskAuditeeSummary',
            title: 'AtmTrnMyAuditTaskAuditeeSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskAuditeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditTaskAuditeeView', {
            url: '/AtmTrnMyAuditTaskAuditeeView',
            title: 'AtmTrnMyAuditTaskAuditeeView',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskAuditeeView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorMakerSummary', {
            url: '/AtmTrnAuditorMakerSummary',
            title: 'AtmTrnAuditorMakerSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

        .state('app.AtmTrnAuditorMakerView', {
            url: '/AtmTrnAuditorMakerView',
            title: 'AtmTrnAuditorMakerView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorRaiseQuery', {
            url: '/AtmTrnAuditorRaiseQuery',
            title: 'AtmTrnAuditorRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnSampleQueryAuditor', {
            url: '/AtmTrnSampleQueryAuditor',
            title: 'AtmTrnSampleQueryAuditor',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleQueryAuditor.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditCreationSampleView', {
            url: '/AtmTrnAuditCreationSampleView',
            title: 'AtmTrnAuditCreationSampleView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditCreationSampleView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAudit360View', {
            url: '/AtmTrnAudit360View',
            title: 'AtmTrnAudit360View',
            templateUrl: helper.basepath('ems.audit/AtmTrnAudit360View.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        
     
        
        // Horizontal layout
        // -----------------------------------
        // 
        // CUSTOM RESOLVES
        //   Add your own resolves properties
        //   following this object extend
        //   method
        // -----------------------------------
        // .state('app.someroute', {
        //   url: '/some_url',
        //   templateUrl: 'path_to_template.html',
        //   controller: 'someController',
        //   resolve: angular.extend(
        //     helper.resolveFor(), {
        //     // YOUR RESOLVES GO HERE
        //     }
        //   )
        // })
        ;

    } // routesConfig

    angular.module('angle').config(['$httpProvider', function ($httpProvider) {
        $httpProvider.interceptors.push(["$q", "$location", "$rootScope", "$cookies", function ($q, $location, $rootScope, $cookies) {
            return {
                'request': function (config) {
                    config.headers.Authorization = $cookies.getObject('token');
                    //$http.defaults.headers.common.Authorization = localStorage.getItem("token");
                    return config;
                },
                'response': function (response) {
                    //Will only be called for HTTP up to 300
                    //console.log(response);
                    return response;
                },
                'responseError': function (rejection) {

                    if (rejection.status === 401) {
                        // $location.url('page/404?errno=401');
                    }
                    else if (rejection.status === 404) {
                        //console.log('404');
                        //$location.url('page/404?errno=404');
                    }
                    else if (rejection.status === 400) {
                        // $location.url('page/404?errno=400');
                    }
                    else if (rejection.status === 403) {
                        // $location.url('page/404?errno=403');
                    }
                    ////$state.go('page.404');
                    if (rejection.message === 404) {
                        //location.reload();
                    }
                    return $q.reject(rejection);
                }
            };
        }]);
    }]);


})();


/**=========================================================
 * Module: config.js
 * App routes and resources configuration
 =========================================================*/


 (function () {
    'use strict';

    angular
        .module('app.routes')
        .config(routesConfig);

    routesConfig.$inject = ['$stateProvider', '$locationProvider', '$urlRouterProvider', 'RouteHelpersProvider'];
    function routesConfig($stateProvider, $locationProvider, $urlRouterProvider, helper) {

        // Set the following to true to enable the HTML5 Mode
        // You may have to set <base> tag in index and a routing configuration in your server
        $locationProvider.html5Mode(false);

        // defaults to dashboard
        $urlRouterProvider.otherwise('/page/user_login');

        // version update
        var version = '1.0';

        // 
        // Application Routes
        // -----------------------------------   
        $stateProvider
        
        .state('app.MstCadDeferralStatus', {
            url: '/MstCadDeferralStatus',
            title: 'MstCadDeferralStatus',
            templateUrl: helper.basepath('ems.master/MstCadDeferralStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstPostCcActivitiesRMView', {
            url: '/MstPostCcActivitiesRMView',
            title: 'MstPostCcActivitiesRMView',
            templateUrl: helper.basepath('ems.master/MstPostCcActivitiesRMView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadDeferralQuery', {
            url: '/MstCadDeferralQuery',
            title: 'MstCadDeferralQuery',
            templateUrl: helper.basepath('ems.master/MstCadDeferralQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadDeferralGuarantorDtls', {
            url: '/MstCadDeferralGuarantorDtls',
            title: 'MstCadDeferralGuarantorDtls',
            templateUrl: helper.basepath('ems.master/MstCadDeferralGuarantorDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadDeferralDochecklist', {
            url: '/MstCadDeferralDochecklist',
            title: 'MstCadDeferralDochecklist',
            templateUrl: helper.basepath('ems.master/MstCadDeferralDochecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMSanctionSummary', {
            url: '/MstRMSanctionSummary',
            title: 'MstRMSanctionSummary',
            templateUrl: helper.basepath('ems.master/MstRMSanctionSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMDocChecklistDtls', {
            url: '/MstRMDocChecklistDtls',
            title: 'MstRMDocChecklistDtls',
            templateUrl: helper.basepath('ems.master/MstRMDocChecklistDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMDeferralDtls', {
            url: '/MstRMDeferralDtls',
            title: 'MstRMDeferralDtls',
            templateUrl: helper.basepath('ems.master/MstRMDeferralDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMDeferralDtlsView', {
            url: '/MstRMDeferralDtlsView',
            title: 'MstRMDeferralDtlsView',
            templateUrl: helper.basepath('ems.master/MstRMDeferralDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMDeferralCloseQuery', {
            url: '/MstRMDeferralCloseQuery',
            title: 'MstRMDeferralCloseQuery',
            templateUrl: helper.basepath('ems.master/MstRMDeferralCloseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadLSADtlSummary', {
            url: '/MstCadLSADtlSummary',
            title: 'MstCadLSADtlSummary',
            templateUrl: helper.basepath('ems.master/MstCadLSADtlSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadGenerateLSA', {
            url: '/MstCadGenerateLSA',
            title: 'MstCadGenerateLSA',
            templateUrl: helper.basepath('ems.master/MstCadGenerateLSA.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        }) 

        .state('app.MstCadPhysicalDocSummary', {
            url: '/MstCadPhysicalDocSummary',
            title: 'MstCadPhysicalDocSummary',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDocCheckerSummary', {
            url: '/MstCadPhysicalDocCheckerSummary',
            title: 'MstCadPhysicalDocCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDocApprovalSummary', {
            url: '/MstCadPhysicalDocApprovalSummary',
            title: 'MstCadPhysicalDocApprovalSummary',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDocGuarantorDtls', {
            url: '/MstCadPhysicalDocGuarantorDtls',
            title: 'MstCadPhysicalDocGuarantorDtls',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocGuarantorDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDochecklist', {
            url: '/MstCadPhysicalDochecklist',
            title: 'MstCadPhysicalDochecklist',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDochecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDocQuery', {
            url: '/MstCadPhysicalDocQuery',
            title: 'MstCadPhysicalDocQuery',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCadPhysicalDocStatus', {
            url: '/MstCadPhysicalDocStatus',
            title: 'MstCadPhysicalDocStatus',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMInitiateWaiverSummary', {
            url: '/MstRMInitiateWaiverSummary',
            title: 'MstRMInitiateWaiverSummary',
            templateUrl: helper.basepath('ems.master/MstRMInitiateWaiverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCreateWaiver', {
            url: '/MstCreateWaiver',
            title: 'MstCreateWaiver',
            templateUrl: helper.basepath('ems.master/MstCreateWaiver.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMInitiateWaiverView', {
            url: '/MstRMInitiateWaiverView',
            title: 'MstRMInitiateWaiverView',
            templateUrl: helper.basepath('ems.master/MstRMInitiateWaiverView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMWaiverApprovalView', {
            url: '/MstRMWaiverApprovalView',
            title: 'MstRMWaiverApprovalView',
            templateUrl: helper.basepath('ems.master/MstRMWaiverApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMWaiverApprovalHistoryView', {
            url: '/MstRMWaiverApprovalHistoryView',
            title: 'MstRMWaiverApprovalHistoryView',
            templateUrl: helper.basepath('ems.master/MstRMWaiverApprovalHistoryView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstDeferralMyApproval', {
            url: '/MstDeferralMyApproval',
            title: 'MstDeferralMyApproval',
            templateUrl: helper.basepath('ems.master/MstDeferralMyApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstDeferralMyApprovalHistory', {
            url: '/MstDeferralMyApprovalHistory',
            title: 'MstDeferralMyApprovalHistory',
            templateUrl: helper.basepath('ems.master/MstDeferralMyApprovalHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstScannedDeferralHistory', {
            url: '/MstScannedDeferralHistory',
            title: 'MstScannedDeferralHistory',
            templateUrl: helper.basepath('ems.master/MstScannedDeferralHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstScannedCompletedSummary', {
            url: '/MstScannedCompletedSummary',
            title: 'MstScannedCompletedSummary',
            templateUrl: helper.basepath('ems.master/MstScannedCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.ScannedCompleted', {
            url: '/ScannedCompleted',
            title: 'ScannedCompleted',
            templateUrl: helper.basepath('ems.master/ScannedCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })



        .state('app.MstPSLCSAManagement', {
            url: '/MstPSLCSAManagement',
            title: 'MstPSLCSAManagement',
            templateUrl: helper.basepath('ems.master/MstPSLCSAManagement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })  

        .state('app.MstPSLCSAGuarantorDetails', {
            url: '/MstPSLCSAGuarantorDetails',
            title: 'MstPSLCSAGuarantorDetails',
            templateUrl: helper.basepath('ems.master/MstPSLCSAGuarantorDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSADataFlaggingAdd', {
            url: '/MstPSLCSADataFlaggingAdd',
            title: 'MstPSLCSADataFlaggingAdd',
            templateUrl: helper.basepath('ems.master/MstPSLCSADataFlaggingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSAIndividualPSLDataFlagAdd', {
            url: '/MstPSLCSAIndividualPSLDataFlagAdd',
            title: 'MstPSLCSAIndividualPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstPSLCSAIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSAGroupPSLDataFlagAdd', {
            url: '/MstPSLCSAGroupPSLDataFlagAdd',
            title: 'MstPSLCSAGroupPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstPSLCSAGroupPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSADataFlaggingEdit', {
            url: '/MstPSLCSADataFlaggingEdit',
            title: 'MstPSLCSADataFlaggingEdit',
            templateUrl: helper.basepath('ems.master/MstPSLCSADataFlaggingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSAIndividualPSLDataFlagEdit', {
            url: '/MstPSLCSAIndividualPSLDataFlagEdit',
            title: 'MstPSLCSAIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstPSLCSAIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSAGroupPSLDataFlagEdit', {
            url: '/MstPSLCSAGroupPSLDataFlagEdit',
            title: 'MstPSLCSAGroupPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstPSLCSAGroupPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.MstPSLCSAComplete', {
            url: '/MstPSLCSAComplete',
            title: 'MstPSLCSAComplete',
            templateUrl: helper.basepath('ems.master/MstPSLCSAComplete.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })       
     
        .state('app.AtmMstCheckpointAdd', {
            url: '/AtmMstCheckpointAdd',
            title: 'AtmMstCheckpointAdd',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstCheckpointEdit', {
            url: '/AtmMstCheckpointEdit',
            title: 'AtmMstCheckpointEdit',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

        .state('app.AtmMstCheckpointView', {
            url: '/AtmMstCheckpointView',
            title: 'AtmMstCheckpointView',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverSummary', {
            url: '/AtmTrnAuditorApproverSummary',
            title: 'AtmTrnAuditorApproverSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

        .state('app.AtmTrnAuditorCheckerSummary', {
            url: '/AtmTrnAuditorCheckerSummary',
            title: 'AtmTrnAuditorCheckerSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditeeCheckerSummary', {
            url: '/AtmTrnAuditeeCheckerSummary',
            title: 'AtmTrnAuditeeCheckerSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditeeMakerSummary', {
            url: '/AtmTrnAuditeeMakerSummary',
            title: 'AtmTrnAuditeeMakerSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditTaskAuditeeCheckerView', {
            url: '/AtmTrnMyAuditTaskAuditeeCheckerView',
            title: 'AtmTrnMyAuditTaskAuditeeCheckerView',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskAuditeeCheckerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverView', {
            url: '/AtmTrnAuditorApproverView',
            title: 'AtmTrnAuditorApproverView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnApproverCheckpointObservation', {
            url: '/AtmTrnApproverCheckpointObservation',
            title: 'AtmTrnApproverCheckpointObservation',
            templateUrl: helper.basepath('ems.audit/AtmTrnApproverCheckpointObservation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerCheckpointObservation', {
            url: '/AtmTrnCheckerCheckpointObservation',
            title: 'AtmTrnCheckerCheckpointObservation',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerCheckpointObservation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerView', {
            url: '/AtmTrnAuditorCheckerView',
            title: 'AtmTrnAuditorCheckerView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditeeCheckerRaiseQuery', {
            url: '/AtmTrnAuditeeCheckerRaiseQuery',
            title: 'AtmTrnAuditeeCheckerRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeCheckerRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

        .state('app.AtmTrnAuditeeMakerRaiseQuery', {
            url: '/AtmTrnAuditeeMakerRaiseQuery',
            title: 'AtmTrnAuditeeMakerRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeMakerRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

        .state('app.AtmTrnAuditorApproverRaiseQuery', {
            url: '/AtmTrnAuditorApproverRaiseQuery',
            title: 'AtmTrnAuditorApproverRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerRaiseQuery', {
            url: '/AtmTrnAuditorCheckerRaiseQuery',
            title: 'AtmTrnAuditorCheckerRaiseQuery',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerRaiseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerApproval', {
            url: '/AtmTrnAuditorCheckerApproval',
            title: 'AtmTrnAuditorCheckerApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditeeCheckerApproval', {
            url: '/AtmTrnAuditeeCheckerApproval',
            title: 'AtmTrnAuditeeCheckerApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeCheckerApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstQuestionBankMaster', {
            url: '/FndMstQuestionBankMaster',
            title: 'FndMstQuestionBankMaster',
            templateUrl: helper.basepath('ems.foundation/FndMstQuestionBankMaster.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndAddQuestion', {
            url: '/FndAddQuestion',
            title: 'FndAddQuestion',
            templateUrl: helper.basepath('ems.foundation/FndAddQuestion.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

 	    .state('app.FndMstCustomerApprovingMaster', {
            url: '/FndMstCustomerApprovingMaster',
            title: 'FndMstCustomerApprovingMaster',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerApprovingMaster.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.FndMstCampaignTypeMaster', {
            url: '/FndMstCampaignTypeMaster',
            title: 'FndMstCampaignTypeMaster',
            templateUrl: helper.basepath('ems.foundation/FndMstCampaignTypeMaster.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstCustomerMaster', {
            url: '/FndMstCustomerMaster',
            title: 'FndMstCustomerMaster',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerMaster.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstCustomerMasterAdd', {
            url: '/FndMstCustomerMasterAdd',
            title: 'FndMstCustomerMasterAdd',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerMasterAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstCustomerMasterEdit', {
            url: '/FndMstCustomerMasterEdit',
            title: 'FndMstCustomerMasterEdit',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerMasterEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstCustomerMasterView', {
            url: '/FndMstCustomerMasterView',
            title: 'FndMstCustomerMasterView',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerMasterView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstCustomerChequeView', {
            url: '/FndMstCustomerChequeView',
            title: 'FndMstCustomerChequeView',
            templateUrl: helper.basepath('ems.foundation/FndMstCustomerChequeView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndEditQuestion', {
            url: '/FndEditQuestion',
            title: 'FndEditQuestion',
            templateUrl: helper.basepath('ems.foundation/FndEditQuestion.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproval', {
            url: '/AtmTrnAuditorApproval',
            title: 'AtmTrnAuditorApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnHoldAuditeeSummary', {
            url: '/AtmTrnHoldAuditeeSummary',
            title: 'AtmTrnHoldAuditeeSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnHoldAuditeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnClosedAuditeeSummary', {
            url: '/AtmTrnClosedAuditeeSummary',
            title: 'AtmTrnClosedAuditeeSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnClosedAuditeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnTaggedAuditeeSummary', {
            url: '/AtmTrnTaggedAuditeeSummary',
            title: 'AtmTrnTaggedAuditeeSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnTaggedAuditeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCompletedAuditeeSummary', {
            url: '/AtmTrnCompletedAuditeeSummary',
            title: 'AtmTrnCompletedAuditeeSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnCompletedAuditeeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditeeCheckerSummary', {
            url: '/AtmTrnMyAuditeeCheckerSummary',
            title: 'AtmTrnMyAuditeeCheckerSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditeeCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstCheckpointSummary', {
            url: '/AtmMstCheckpointSummary',
            title: 'AtmMstCheckpointSummary',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerHoldAuditee', {
            url: '/AtmTrnCheckerHoldAuditee',
            title: 'AtmTrnCheckerHoldAuditee',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerHoldAuditee.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerClosedAuditee', {
            url: '/AtmTrnCheckerClosedAuditee',
            title: 'AtmTrnCheckerClosedAuditee',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerClosedAuditee.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerTaggedAuditee', {
            url: '/AtmTrnCheckerTaggedAuditee',
            title: 'AtmTrnCheckerTaggedAuditee',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerTaggedAuditee.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerCompletedAuditee', {
            url: '/AtmTrnCheckerCompletedAuditee',
            title: 'AtmTrnCheckerCompletedAuditee',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerCompletedAuditee.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnCheckerPendingApproval', {
            url: '/AtmTrnCheckerPendingApproval',
            title: 'AtmTrnCheckerPendingApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnCheckerPendingApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorMakerHoldAudit', {
            url: '/AtmTrnAuditorMakerHoldAudit',
            title: 'AtmTrnAuditorMakerHoldAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerHoldAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorMakerClosedAudit', {
            url: '/AtmTrnAuditorMakerClosedAudit',
            title: 'AtmTrnAuditorMakerClosedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerClosedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorMakerTaggedAudit', {
            url: '/AtmTrnAuditorMakerTaggedAudit',
            title: 'AtmTrnAuditorMakerTaggedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerTaggedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorMakerCompletedAudit', {
            url: '/AtmTrnAuditorMakerCompletedAudit',
            title: 'AtmTrnAuditorMakerCompletedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerCompletedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerPendingApproval', {
            url: '/AtmTrnAuditorCheckerPendingApproval',
            title: 'AtmTrnAuditorCheckerPendingApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerPendingApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerHoldAudit', {
            url: '/AtmTrnAuditorCheckerHoldAudit',
            title: 'AtmTrnAuditorCheckerHoldAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerHoldAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerClosedAudit', {
            url: '/AtmTrnAuditorCheckerClosedAudit',
            title: 'AtmTrnAuditorCheckerClosedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerClosedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerTaggedItems', {
            url: '/AtmTrnAuditorCheckerTaggedItems',
            title: 'AtmTrnAuditorCheckerTaggedItems',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerTaggedItems.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorCheckerCompletedAudit', {
            url: '/AtmTrnAuditorCheckerCompletedAudit',
            title: 'AtmTrnAuditorCheckerCompletedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerCompletedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverPendingApproval', {
            url: '/AtmTrnAuditorApproverPendingApproval',
            title: 'AtmTrnAuditorApproverPendingApproval',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverPendingApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverHoldAudit', {
            url: '/AtmTrnAuditorApproverHoldAudit',
            title: 'AtmTrnAuditorApproverHoldAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverHoldAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverClosedAudit', {
            url: '/AtmTrnAuditorApproverClosedAudit',
            title: 'AtmTrnAuditorApproverClosedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverClosedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverTaggedItems', {
            url: '/AtmTrnAuditorApproverTaggedItems',
            title: 'AtmTrnAuditorApproverTaggedItems',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverTaggedItems.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnAuditorApproverCompletedAudit', {
            url: '/AtmTrnAuditorApproverCompletedAudit',
            title: 'AtmTrnAuditorApproverCompletedAudit',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverCompletedAudit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmMstCheckpointAddSummary', {
            url: '/AtmMstCheckpointAddSummary',
            title: 'AtmMstCheckpointAddSummary',
            templateUrl: helper.basepath('ems.audit/AtmMstCheckpointAddSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerApproval', {
            url: '/FndTrnCustomerApproval',
            title: 'FndTrnCustomerApproval',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerApprovalEdit', {
            url: '/FndTrnCustomerApprovalEdit',
            title: 'FndTrnCustomerApprovalEdit',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstcustomerAddCheque', {
            url: '/FndMstcustomerAddCheque',
            title: 'FndMstcustomerAddCheque',
            templateUrl: helper.basepath('ems.foundation/FndMstcustomerAddCheque.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndMstQuestionnarieCategory', {
            url: '/FndMstQuestionnarieCategory',
            title: 'FndMstQuestionnarieCategory',
            templateUrl: helper.basepath('ems.foundation/FndMstQuestionnarieCategory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnApprovalView', {
            url: '/FndTrnApprovalView',
            title: 'FndTrnApprovalView',
            templateUrl: helper.basepath('ems.foundation/FndTrnApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    	.state('app.FndTrnApprovalEdit', {
            url: '/FndTrnApprovalEdit',
            title: 'FndTrnApprovalEdit',
            templateUrl: helper.basepath('ems.foundation/FndTrnApprovalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerApproved', {
            url: '/FndTrnCustomerApproved',
            title: 'FndTrnCustomerApproved',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerApproved.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerRejected', {
            url: '/FndTrnCustomerRejected',
            title: 'FndTrnCustomerRejected',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerRejected.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerApprovedView', {
            url: '/FndTrnCustomerApprovedView',
            title: 'FndTrnCustomerApprovedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerApprovedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	    .state('app.FndTrnCustomerRejectedView', {
            url: '/FndTrnCustomerRejectedView',
            title: 'FndTrnCustomerRejectedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCustomerRejectedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditApproverSummary', {
            url: '/AtmTrnMyAuditApproverSummary',
            title: 'AtmTrnMyAuditApproverSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditApproverSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AtmTrnMyAuditApprover360View', {
            url: '/AtmTrnMyAuditApprover360View',
            title: 'AtmTrnMyAuditApprover360View',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditApprover360View.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')

        })

		.state('app.SysMstEmployeeInactiveSummary', {
            url: '/SysMstEmployeeInactiveSummary',
            title: 'SysMstEmployeeInactiveSummary',
            templateUrl: helper.basepath('ems.system/SysMstEmployeeInactiveSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })

        .state('app.SysMstEmployeePendingSummary', {
            url: '/SysMstEmployeePendingSummary',
            title: 'SysMstEmployeePendingSummary',
            templateUrl: helper.basepath('ems.system/SysMstEmployeePendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })

        .state('app.SysMstEmployeeActiveUserSummary', {
            url: '/SysMstEmployeeActiveUserSummary',
            title: 'SysMstEmployeeActiveUserSummary',
            templateUrl: helper.basepath('ems.system/SysMstEmployeeActiveUserSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })

        .state('app.SysMstEmployeeRelievingSummary', {
            url: '/SysMstEmployeeRelievingSummary',
            title: 'SysMstEmployeeRelievingSummary',
            templateUrl: helper.basepath('ems.system/SysMstEmployeeRelievingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })

        .state('app.SysMstTaskInitiate', {
            url: '/SysMstTaskInitiate',
            title: 'SysMstTaskInitiate',
            templateUrl: helper.basepath('ems.system/SysMstTaskInitiate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.SysMstTask', {
            url: '/SysMstTask',
            title: 'SysMstTask',
            templateUrl: helper.basepath('ems.system/SysMstTask.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstTaskAdd', {
            url: '/SysMstTaskAdd',
            title: 'SysMstTaskAdd',
            templateUrl: helper.basepath('ems.system/SysMstTaskAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstTaskEdit', {
            url: '/SysMstTaskEdit',
            title: 'SysMstTaskEdit',
            templateUrl: helper.basepath('ems.system/SysMstTaskEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.SysMstMyOnboardingProcess', {
            url: '/SysMstMyOnboardingProcess',
            title: 'SysMstMyOnboardingProcess',
            templateUrl: helper.basepath('ems.system/SysMstMyOnboardingProcess.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.SysMstMyOnboardingTaskCompleted', {
            url: '/SysMstMyOnboardingTaskCompleted',
            title: 'SysMstMyOnboardingTaskCompleted',
            templateUrl: helper.basepath('ems.system/SysMstMyOnboardingTaskCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })

        .state('app.SysMstMyOnboardingTaskPending', {
            url: '/SysMstMyOnboardingTaskPending',
            title: 'SysMstMyOnboardingTaskPending',
            templateUrl: helper.basepath('ems.system/SysMstMyOnboardingTaskPending.html?ver=' + version + '"'),            
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')        
        })

        .state('app.AtmTrnMyApprovedAuditSummary', {
            url: '/AtmTrnMyApprovedAuditSummary',
            title: 'AtmTrnMyApprovedAuditSummary',
            templateUrl: helper.basepath('ems.audit/AtmTrnMyApprovedAuditSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignSummary', {
            url: '/FndTrnCampaignSummary',
            title: 'FndTrnCampaignSummary',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignAdd', {
            url: '/FndTrnCampaignAdd',
            title: 'FndTrnCampaignAdd',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignOpen', {
            url: '/FndTrnMyCampaignOpen',
            title: 'FndTrnMyCampaignOpen',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignOpen.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignPending', {
            url: '/FndTrnMyCampaignPending',
            title: 'FndTrnMyCampaignPending',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignApproved', {
            url: '/FndTrnMyCampaignApproved',
            title: 'FndTrnMyCampaignApproved',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApproved.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignEdit', {
            url: '/FndTrnMyCampaignEdit',
            title: 'FndTrnMyCampaignEdit',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.FndTrnMyCampaignView', {
            url: '/FndTrnMyCampaignView',
            title: 'FndTrnMyCampaignView',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignEdit', {
            url: '/FndTrnCampaignEdit',
            title: 'FndTrnCampaignEdit',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignWork', {
            url: '/FndTrnCampaignWork',
            title: 'FndTrnCampaignWork',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignWorkSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignClosed', {
            url: '/FndTrnCampaignClosed',
            title: 'FndTrnCampaignClosed',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignClosedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignReject', {
            url: '/FndTrnCampaignReject',
            title: 'FndTrnCampaignReject',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignRejectSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.AtmTrnTaggedAuditeeView', {
            url: '/AtmTrnTaggedAuditeeView',
            title: 'AtmTrnTaggedAuditeeView',
            templateUrl: helper.basepath('ems.audit/AtmTrnTaggedAuditeeView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.FndTrnMyCampaignApprovalPending', {
	 	    url: '/FndTrnMyCampaignApprovalPending',
		    title: 'FndTrnMyCampaignApprovalPending',
		    templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApprovalPending.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    	})

        .state('app.FndTrnMyCampaignApprovalClosed', {
            url: '/FndTrnMyCampaignApprovalClosed',
            title: 'FndTrnMyCampaignApprovalClosed',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApprovalClosed.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalWork', {
            url: '/FndTrnCampaignApprovalWork',
            title: 'FndTrnCampaignApprovalWork',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalWork.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalReject', {
            url: '/FndTrnCampaignApprovalReject',
            title: 'FndTrnCampaignApprovalReject',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalReject.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApproval', {
            url: '/FndTrnCampaignApproval',
            title: 'FndTrnCampaignApproval',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalEdit', {
            url: '/FndTrnCampaignApprovalEdit',
            title: 'FndTrnCampaignApprovalEdit',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.SysMstTaskView', {
            url: '/SysMstTaskView',
            title: 'SysMstTaskView',
            templateUrl: helper.basepath('ems.system/SysMstTaskView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADReassignApplication', {
            url: '/MstCADReassignApplication',
            title: 'MstCADReassignApplication',
            templateUrl: helper.basepath('ems.master/MstCADReassignApplication.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives')
        })
	
	    .state('app.MstSanctionApprovalCompleted', {
		    url: '/MstSanctionApprovalCompleted',
		    title: 'MstSanctionApprovalCompleted',
		    templateUrl: helper.basepath('ems.master/MstSanctionApprovalCompleted.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
	    })

        .state('app.MstRMPenaltyDtls', {
            url: '/MstRMPenaltyDtls',
            title: 'MstRMPenaltyDtls',
            templateUrl: helper.basepath('ems.master/MstRMPenaltyDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.MstRMLoanDetailsDtls', {
            url: '/MstRMLoanDetailsDtls',
            title: 'MstRMLoanDetailsDtls',
            templateUrl: helper.basepath('ems.master/MstRMLoanDetailsDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMTDSDtls', {
            url: '/MstRMTDSDtls',
            title: 'MstRMTDSDtls',
            templateUrl: helper.basepath('ems.master/MstRMTDSDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstCreditCrimeCheckRecordAPI', {
            url: '/MstCreditCrimeCheckRecordAPI',
            title: 'MstCreditCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.master/MstCreditCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCompanyCrimeCheckRecordAPI', {
            url: '/MstCompanyCrimeCheckRecordAPI',
            title: 'MstCompanyCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.master/MstCompanyCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCrimeReportCompanyView', {
            url: '/MstCrimeReportCompanyView',
            title: 'MstCrimeReportCompanyView',
            templateUrl: helper.basepath('ems.master/MstCrimeReportCompanyView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCrimeReportIndividualView', {
            url: '/MstCrimeReportIndividualView',
            title: 'MstCrimeReportIndividualView',
            templateUrl: helper.basepath('ems.master/MstCrimeReportIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.MstSAOnboardingIndividualEdit', {
            url: '/MstSAOnboardingIndividualEdit',
            title: 'MstSAOnboardingIndividualEdit',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAOnboardingIndividualSummary', {
            url: '/MstSAOnboardingIndividualSummary',
            title: 'MstSAOnboardingIndividualSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingInstitutionEdit', {
            url: '/MstSAOnboardingInstitutionEdit',
            title: 'MstSAOnboardingInstitutionEdit',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingInstitutionView', {
            url: '/MstSAOnboardingInstitutionView',
            title: 'MstSAOnboardingInstitutionView',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAVerificationPendingInstitutionView', {
            url: '/MstSAVerificationPendingInstitutionView',
            title: 'MstSAVerificationPendingInstitutionView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationPendingInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationIndividualMappingPending', {
            url: '/MstSAVerificationIndividualMappingPending',
            title: 'MstSAVerificationIndividualMappingPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualMappingPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationPendingIndividualView', {
            url: '/MstSAVerificationPendingIndividualView',
            title: 'MstSAVerificationPendingIndividualView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationPendingIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationAssignedInstitutionView', {
            url: '/MstSAVerificationAssignedInstitutionView',
            title: 'MstSAVerificationAssignedInstitutionView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationAssignedInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationAssignedIndividualView', {
            url: '/MstSAVerificationAssignedIndividualView',
            title: 'MstSAVerificationAssignedIndividualView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationAssignedIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingIndividualView', {
            url: '/MstSAOnboardingIndividualView',
            title: 'MstSAOnboardingIndividualView',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMappingPending', {
            url: '/MstSAVerificationMappingPending',
            title: 'MstSAVerificationMappingPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMappingPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMNDCDtls', {
            url: '/MstRMNDCDtls',
            title: 'MstRMNDCDtls',
            templateUrl: helper.basepath('ems.master/MstRMNDCDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMNOCDtls', {
            url: '/MstRMNOCDtls',
            title: 'MstRMNOCDtls',
            templateUrl: helper.basepath('ems.master/MstRMNOCDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMMoratoriumDtls', {
            url: '/MstRMMoratoriumDtls',
            title: 'MstRMMoratoriumDtls',
            templateUrl: helper.basepath('ems.master/MstRMMoratoriumDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.FndTrnMyCampaignApproval', {
            url: '/FndTrnMyCampaignApproval',
            title: 'FndTrnMyCampaignApproval',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstRMBankAccountDetails', {
            url: '/MstRMBankAccountDetails',
            title: 'MstRMBankAccountDetails',
            templateUrl: helper.basepath('ems.master/MstRMBankAccountDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.OsdBamRMCompletedSummary', {
            url: '/OsdBamRMCompletedSummary',
            title: 'OsdBamRMCompletedSummary',
            templateUrl: helper.basepath('ems.osd/OsdBamRMCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMDeviationDtls', {
            url: '/MstRMDeviationDtls',
            title: 'MstRMDeviationDtls',
            templateUrl: helper.basepath('ems.master/MstRMDeviationDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCadPhysicalDocCompletedSummary', {
            url: '/MstCadPhysicalDocCompletedSummary',
            title: 'MstCadPhysicalDocCompletedSummary',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.MstPhysicalDeferralHistory', {
            url: '/MstPhysicalDeferralHistory',
            title: 'MstPhysicalDeferralHistory',
            templateUrl: helper.basepath('ems.master/MstPhysicalDeferralHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAOnboardingInstitutionVerification', {
            url: '/MstSAOnboardingInstitutionVerification',
            title: 'MstSAOnboardingInstitutionVerification',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingIndividualVerification', {
            url: '/MstSAOnboardingIndividualVerification',
            title: 'MstSAOnboardingIndividualVerification',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingVerificationSummary', {
            url: '/MstSAOnboardingVerificationSummary',
            title: 'MstSAOnboardingVerificationSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingVerificationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingIndividualVerificationSummary', {
            url: '/MstSAOnboardingIndividualVerificationSummary',
            title: 'MstSAOnboardingIndividualVerificationSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualVerificationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAonboardingBureauView', {
            url: '/MstSAonboardingBureauView',
            title: 'MstSAonboardingBureauView',
            templateUrl: helper.basepath('ems.master/MstSAonboardingBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAonboardingIndBureauView', {
            url: '/MstSAonboardingIndBureauView',
            title: 'MstSAonboardingIndBureauView',
            templateUrl: helper.basepath('ems.master/MstSAonboardingIndBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstChequeApprovalCompleted', {
            url: '/MstChequeApprovalCompleted',
            title: 'MstChequeApprovalCompleted',
            templateUrl: helper.basepath('ems.master/MstChequeApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstChequeMakerFollowDtls', {
            url: '/MstChequeMakerFollowDtls',
            title: 'MstChequeMakerFollowDtls',
            templateUrl: helper.basepath('ems.master/MstChequeMakerFollowDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstChequeCheckerDtls', {
            url: '/MstChequeCheckerDtls',
            title: 'MstChequeCheckerDtls',
            templateUrl: helper.basepath('ems.master/MstChequeCheckerDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstChequeApprovalDtls', {
            url: '/MstChequeApprovalDtls',
            title: 'MstChequeApprovalDtls',
            templateUrl: helper.basepath('ems.master/MstChequeApprovalDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstMenuMapping', {
            url: '/SysMstMenuMapping',
            title: 'SysMstMenuMapping',
            templateUrl: helper.basepath('ems.system/SysMstMenuMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
        })
        
        .state('app.MstLSAApprovalCompleted', {
            url: '/MstLSAApprovalCompleted',
            title: 'MstLSAApprovalCompleted',
            templateUrl: helper.basepath('ems.master/MstLSAApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.MstCADlsa360View', {
            url: '/MstCADlsa360View',
            title: 'MstCADlsa360View',
            templateUrl: helper.basepath('ems.master/MstCADlsa360View.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.FndTrnMyCampaignApprovalView', {
            url: '/FndTrnMyCampaignApprovalView',
            title: 'FndTrnMyCampaignApprovalView',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignApprovalClosedView', {
            url: '/FndTrnMyCampaignApprovalClosedView',
            title: 'FndTrnMyCampaignApprovalClosedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApprovalClosedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAOnboardingApprovalInsSummary', {
            url: '/MstSAOnboardingApprovalInsSummary',
            title: 'MstSAOnboardingApprovalInsSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingApprovalInsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
              
        .state('app.MstSAOnboardingApprovalIndSummary', {
            url: '/MstSAOnboardingApprovalIndSummary',
            title: 'MstSAOnboardingApprovalIndSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingApprovalIndSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })            
            
        .state('app.MstSAOnboardingInstitutionApproval', {
            url: '/MstSAOnboardingInstitutionApproval',
            title: 'MstSAOnboardingInstitutionApproval',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })            
            
        .state('app.MstSAOnboardingIndividualApproval', {
            url: '/MstSAOnboardingIndividualApproval',
            title: 'MstSAOnboardingIndividualApproval',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCreditOpsMapping', {
            url: '/MstCreditOpsMapping',
            title: 'MstCreditOpsMapping',
            templateUrl: helper.basepath('ems.master/MstCreditOpsMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMDisbursementRequest', {
            url: '/MstRMDisbursementRequest',
            title: 'MstRMDisbursementRequest',
            templateUrl: helper.basepath('ems.master/MstRMDisbursementRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMInitiateDisbursement', {
            url: '/MstRMInitiateDisbursement',
            title: 'MstRMInitiateDisbursement',
            templateUrl: helper.basepath('ems.master/MstRMInitiateDisbursement.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMDisbursementRequestEdit', {
            url: '/MstRMDisbursementRequestEdit',
            title: 'MstRMDisbursementRequestEdit',
            templateUrl: helper.basepath('ems.master/MstRMDisbursementRequestEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRMDisbursementRequestView', {
            url: '/MstRMDisbursementRequestView',
            title: 'MstRMDisbursementRequestView',
            templateUrl: helper.basepath('ems.master/MstRMDisbursementRequestView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalView', {
            url: '/FndTrnCampaignApprovalView',
            title: 'FndTrnCampaignApprovalView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalRejectedView', {
            url: '/FndTrnCampaignApprovalRejectedView',
            title: 'FndTrnCampaignApprovalRejectedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalRejectedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignApprovalWorkView', {
            url: '/FndTrnCampaignApprovalWorkView',
            title: 'FndTrnCampaignApprovalWorkView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignApprovalWorkView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignRejectedView', {
            url: '/FndTrnCampaignRejectedView',
            title: 'FndTrnCampaignRejectedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignRejectedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignWorkView', {
            url: '/FndTrnCampaignWorkView',
            title: 'FndTrnCampaignWorkView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignWorkView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignClosedView', {
            url: '/FndTrnCampaignClosedView',
            title: 'FndTrnCampaignClosedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignClosedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignApprovedView', {
            url: '/FndTrnMyCampaignApprovedView',
            title: 'FndTrnMyCampaignApprovedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignApprovedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnMyCampaignRejectedView', {
            url: '/FndTrnMyCampaignRejectedView',
            title: 'FndTrnMyCampaignRejectedView',
            templateUrl: helper.basepath('ems.foundation/FndTrnMyCampaignRejectedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.FndTrnCampaignView', {
            url: '/FndTrnCampaignView',
            title: 'FndTrnCampaignView',
            templateUrl: helper.basepath('ems.foundation/FndTrnCampaignView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstDisbursementAssignmentSummary', {
            url: '/MstDisbursementAssignmentSummary',
            title: 'MstDisbursementAssignmentSummary',
            templateUrl: helper.basepath('ems.master/MstDisbursementAssignmentSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstAssignedDisbursementSummary', {
            url: '/MstAssignedDisbursementSummary',
            title: 'MstAssignedDisbursementSummary',
            templateUrl: helper.basepath('ems.master/MstAssignedDisbursementSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstMyDisbursementSummary', {
            url: '/MstMyDisbursementSummary',
            title: 'MstMyDisbursementSummary',
            templateUrl: helper.basepath('ems.master/MstMyDisbursementSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstMyDisbursementCheckerSummary', {
            url: '/MstMyDisbursementCheckerSummary',
            title: 'MstMyDisbursementCheckerSummary',
            templateUrl: helper.basepath('ems.master/MstMyDisbursementCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstMyDisbursementCompletedSummary', {
            url: '/MstMyDisbursementCompletedSummary',
            title: 'MstMyDisbursementCompletedSummary',
            templateUrl: helper.basepath('ems.master/MstMyDisbursementCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstDisbursementMaker', {
            url: '/MstDisbursementMaker',
            title: 'MstDisbursementMaker',
            templateUrl: helper.basepath('ems.master/MstDisbursementMaker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.MstDisbursementChecker', {
            url: '/MstDisbursementChecker',
            title: 'MstDisbursementChecker',
            templateUrl: helper.basepath('ems.master/MstDisbursementChecker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstEditWaiver', {
            url: '/MstEditWaiver',
            title: 'MstEditWaiver',
            templateUrl: helper.basepath('ems.master/MstEditWaiver.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstAddWaiver', {
            url: '/MstAddWaiver',
            title: 'MstAddWaiver',
            templateUrl: helper.basepath('ems.master/MstAddWaiver.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstApprovedDisbursementSummary', {
            url: '/MstApprovedDisbursementSummary',
            title: 'MstApprovedDisbursementSummary',
            templateUrl: helper.basepath('ems.master/MstApprovedDisbursementSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstApprovedDisbursementView', {
            url: '/MstApprovedDisbursementView',
            title: 'MstApprovedDisbursementView',
            templateUrl: helper.basepath('ems.master/MstApprovedDisbursementView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSAVerificationIndPendingSummary', {
            url: '/MstSAVerificationIndPendingSummary',
            title: 'MstSAVerificationIndPendingSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationIndPendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationInstPendingSummary', {
            url: '/MstSAVerificationInstPendingSummary',
            title: 'MstSAVerificationInstPendingSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationInstPendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAApprovalInsPendingSummary', {
            url: '/MstSAApprovalInsPendingSummary',
            title: 'MstSAApprovalInsPendingSummary',
            templateUrl: helper.basepath('ems.master/MstSAApprovalInsPendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAApprovalIndPendingSummary', {
            url: '/MstSAApprovalIndPendingSummary',
            title: 'MstSAApprovalIndPendingSummary',
            templateUrl: helper.basepath('ems.master/MstSAApprovalIndPendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AtmMstAuditReportSummary', {
            url: '/AtmMstAuditReportSummary',
            title: 'AtmMstAuditReportSummary',
            templateUrl: helper.basepath('ems.audit/AtmMstAuditReportSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmRptAuditReportView', {
            url: '/AtmRptAuditReportView',
            title: 'AtmRptAuditReportView',
            templateUrl: helper.basepath('ems.audit/AtmRptAuditReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.MstTeleCallingReportView', {
            url: '/MstTeleCallingReportView',
            title: 'MstTeleCallingReportView',
            templateUrl: helper.basepath('ems.master/MstTeleCallingReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.MstSanctionDtlViewSummary', {
            url: '/MstSanctionDtlViewSummary',
            title: 'MstSanctionDtlViewSummary',
            templateUrl: helper.basepath('ems.master/MstSanctionDtlViewSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       
        
        .state('app.MstDocChecklistApprovalCompleted', {
            url: '/MstDocChecklistApprovalCompleted',
            title: 'MstDocChecklistApprovalCompleted',
            templateUrl: helper.basepath('ems.master/MstDocChecklistApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.rpthighmark', {
            url: '/rpthighmark',
            title: 'rpthighmark',
            templateUrl: helper.basepath('ems.mis/rpthighmark.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.osdBamAllocatedToAssignedView', {
            url: '/osdBamAllocatedToAssignedView',
            title: 'osdBamAllocatedToAssignedView',
            templateUrl: helper.basepath('ems.osd/osdBamAllocatedToAssignedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstPhysicalStatusSummary', {
            url: '/MstPhysicalStatusSummary',
            title: 'MstPhysicalStatusSummary',
            templateUrl: helper.basepath('ems.master/MstPhysicalStatusSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSalutation', {
            url: '/MstSalutation',
            title: 'MstSalutation',
            templateUrl: helper.basepath('ems.master/MstSalutation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.osdMstBusinessUnitAdd', {
            url: '/osdMstBusinessUnitAdd',
            title: 'osdMstBusinessUnitAdd',
            templateUrl: helper.basepath('ems.osd/osdMstBusinessUnitAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
	    .state('app.osdMstBusinessUnitEdit', {
            url: '/osdMstBusinessUnitEdit',
            title: 'osdMstBusinessUnitEdit',
            templateUrl: helper.basepath('ems.osd/osdMstBusinessUnitEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.ExcelDataMigration', {
            url: '/Migration',
            title: 'ExcelDataMigration',
            templateUrl: helper.basepath('ems.master/ExcelDataMigration.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADGeneralDtlEdit', {
            url: '/MstCADGeneralDtlEdit',
            title: 'MstCADGeneralDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADGeneralDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADInstitutionDtlEdit', {
            url: '/MstCADInstitutionDtlEdit',
            title: 'MstCADInstitutionDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADInstitutionDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

		.state('app.MstCADIndividualDtlEdit', {
		    url: '/MstCADIndividualDtlEdit',
		    title: 'MstCADIndividualDtlEdit',
		    templateUrl: helper.basepath('ems.master/MstCADIndividualDtlEdit.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
		})

		.state('app.MstCADGroupDtlEdit', {
		    url: '/MstCADGroupDtlEdit',
		    title: 'MstCADGroupDtlEdit',
		    templateUrl: helper.basepath('ems.master/MstCADGroupDtlEdit.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
		})

		.state('app.MstCADProductChargesDtlEdit', {
		    url: '/MstCADProductChargesDtlEdit',
		    title: 'MstCADProductChargesDtlEdit',
		    templateUrl: helper.basepath('ems.master/MstCADProductChargesDtlEdit.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
		})

		 .state('app.MstCADLoanDtlEdit', {
		     url: '/MstCADLoanDtlEdit',
		     title: 'MstCADLoanDtlEdit',
		     templateUrl: helper.basepath('ems.master/MstCADLoanDtlEdit.html?ver=' + version + '"'),
		     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
		 })

        .state('app.MstCADHypothecationEdit', {
            url: '/MstCADHypothecationEdit',
            title: 'MstCADHypothecationEdit',
            templateUrl: helper.basepath('ems.master/MstCADHypothecationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

		.state('app.MstCADServicesDtlEdit', {
		    url: '/MstCADServicesDtlEdit',
		    title: 'MstCADServicesDtlEdit',
		    templateUrl: helper.basepath('ems.master/MstCADServicesDtlEdit.html?ver=' + version + '"'),
		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
		})

         	.state('app.MstCadUrnAcceptedCustomers', {
         	    url: '/MstCadUrnAcceptedCustomers',
         	    title: 'MstCadUrnAcceptedCustomers',
         	    templateUrl: helper.basepath('ems.master/MstCadUrnAcceptedCustomers.html?ver=' + version + '"'),
         	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         	})
        .state('app.MstCadUrnAcceptedCustomerDtls', {
            url: '/MstCadUrnAcceptedCustomerDtls',
            title: 'MstCadUrnAcceptedCustomerDtls',
            templateUrl: helper.basepath('ems.master/MstCadUrnAcceptedCustomerDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCadInstitutionView', {
            url: '/MstCadInstitutionView',
            title: 'MstCadInstitutionView',
            templateUrl: helper.basepath('ems.master/MstCadInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCadIndividualView', {
            url: '/MstCadIndividualView',
            title: 'MstCadIndividualView',
            templateUrl: helper.basepath('ems.master/MstCadIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstCadGroupView', {
             url: '/MstCadGroupView',
             title: 'MstCadGroupView',
             templateUrl: helper.basepath('ems.master/MstCadGroupView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstCadVisitReportView', {
            url: '/MstCadVisitReportView',
            title: 'MstCadVisitReportView',
            templateUrl: helper.basepath('ems.master/MstCadVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstCadGradingToolView', {
             url: '/MstCadGradingToolView',
             title: 'MstCadGradingToolView',
             templateUrl: helper.basepath('ems.master/MstCadGradingToolView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
	.state('app.MstCADDocumentCheckList', {
	    url: '/MstCADDocumentCheckList',
	    title: 'MstCADDocumentCheckList',
	    templateUrl: helper.basepath('ems.master/MstCADDocumentCheckList.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

        .state('app.MstCADCreditAddCovenantCheckList', {
            url: '/MstCADCreditAddCovenantCheckList',
            title: 'MstCADCreditAddCovenantCheckList',
            templateUrl: helper.basepath('ems.master/MstCADCreditAddCovenantCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditInstitutionDtlAdd', {
            url: '/MstCADCreditInstitutionDtlAdd',
            title: 'MstCADCreditInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditInstitutionBureauEdit', {
            url: '/MstCADCreditInstitutionBureauEdit',
            title: 'MstCADCreditInstitutionBureauEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditInstitutionBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditEconomicCapitalAdd', {
            url: '/MstCADCreditEconomicCapitalAdd',
            title: 'MstCADCreditEconomicCapitalAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditEconomicCapitalAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditEconomicCapitalEdit', {
            url: '/MstCADCreditEconomicCapitalEdit',
            title: 'MstCADCreditEconomicCapitalEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditEconomicCapitalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditPSLDataFlaggingAdd', {
            url: '/MstCADCreditPSLDataFlaggingAdd',
            title: 'MstCADCreditPSLDataFlaggingAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditPSLDataFlaggingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditPSLDataFlaggingEdit', {
            url: '/MstCADCreditPSLDataFlaggingEdit',
            title: 'MstCADCreditPSLDataFlaggingEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditPSLDataFlaggingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditSuppliersDtlAdd', {
            url: '/MstCADCreditSuppliersDtlAdd',
            title: 'MstCADCreditSuppliersDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditSuppliersDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditSuppliersDtlEdit', {
            url: '/MstCADCreditSuppliersDtlEdit',
            title: 'MstCADCreditSuppliersDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditSuppliersDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstCADCreditBuyerDtlAdd', {
            url: '/MstCADCreditBuyerDtlAdd',
            title: 'MstCADCreditBuyerDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditBuyerDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditBuyerDtlEdit', {
            url: '/MstCADCreditBuyerDtlEdit',
            title: 'MstCADCreditBuyerDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditBuyerDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditBankAccountDtlAdd', {
            url: '/MstCADCreditBankAccountDtlAdd',
            title: 'MstCADCreditBankAccountDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditBankAccountDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditExistingBankDtlAdd', {
            url: '/MstCADCreditExistingBankDtlAdd',
            title: 'MstCADCreditExistingBankDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditExistingBankDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditRepaymentDtlAdd', {
            url: '/MstCADCreditRepaymentDtlAdd',
            title: 'MstCADCreditRepaymentDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditRepaymentDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditBankStatementAnalysisAdd', {
            url: '/MstCADCreditBankStatementAnalysisAdd',
            title: 'MstCADCreditBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditFsaDetailAdd', {
            url: '/MstCADCreditFsaDetailAdd',
            title: 'MstCADCreditFsaDetailAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditFsaDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditObservationAdd', {
            url: '/MstCADCreditObservationAdd',
            title: 'MstCADCreditObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditCompanyDtlAdd', {
            url: '/MstCADCreditCompanyDtlAdd',
            title: 'MstCADCreditCompanyDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditCompanyDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADIndividualDocCheckList', {
            url: '/MstCADIndividualDocCheckList',
            title: 'MstCADIndividualDocCheckList',
            templateUrl: helper.basepath('ems.master/MstCADIndividualDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADIndividualCovenantDocChecklist', {
            url: '/MstCADIndividualCovenantDocChecklist',
            title: 'MstCADIndividualCovenantDocChecklist',
            templateUrl: helper.basepath('ems.master/MstCADIndividualCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualDtlAdd', {
            url: '/MstCADCreditIndividualDtlAdd',
            title: 'MstCADCreditIndividualDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualBureauEdit', {
            url: '/MstCADCreditIndividualBureauEdit',
            title: 'MstCADCreditIndividualBureauEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualBankAcctAdd', {
            url: '/MstCADCreditIndividualBankAcctAdd',
            title: 'MstCADCreditIndividualBankAcctAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualBankAcctEdit', {
            url: '/MstCADCreditIndividualBankAcctEdit',
            title: 'MstCADCreditIndividualBankAcctEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualExistingBankAdd', {
            url: '/MstCADCreditIndividualExistingBankAdd',
            title: 'MstCADCreditIndividualExistingBankAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualExistingBankEdit', {
            url: '/MstCADCreditIndividualExistingBankEdit',
            title: 'MstCADCreditIndividualExistingBankEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualRepaymentAdd', {
            url: '/MstCADCreditIndividualRepaymentAdd',
            title: 'MstCADCreditIndividualRepaymentAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualRepaymentEdit', {
            url: '/MstCADCreditIndividualRepaymentEdit',
            title: 'MstCADCreditIndividualRepaymentEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualPSLDataFlagAdd', {
            url: '/MstCADCreditIndividualPSLDataFlagAdd',
            title: 'MstCADCreditIndividualPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualPSLDataFlagEdit', {
            url: '/MstCADCreditIndividualPSLDataFlagEdit',
            title: 'MstCADCreditIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualBankStatementAnalysisAdd', {
            url: '/MstCADCreditIndividualBankStatementAnalysisAdd',
            title: 'MstCADCreditIndividualBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualObservationAdd', {
            url: '/MstCADCreditIndividualObservationAdd',
            title: 'MstCADCreditIndividualObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADGroupDocCheckList', {
            url: '/MstCADGroupDocCheckList',
            title: 'MstCADGroupDocCheckList',
            templateUrl: helper.basepath('ems.master/MstCADGroupDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADGroupCovenantDocChecklist', {
            url: '/MstCADGroupCovenantDocChecklist',
            title: 'MstCADGroupCovenantDocChecklist',
            templateUrl: helper.basepath('ems.master/MstCADGroupCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupBankAcctAdd', {
            url: '/MstCADCreditGroupBankAcctAdd',
            title: 'MstCADCreditGroupBankAcctAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupBankAcctEdit', {
            url: '/MstCADCreditGroupBankAcctEdit',
            title: 'MstCADCreditGroupBankAcctEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupExistingBankAdd', {
            url: '/MstCADCreditGroupExistingBankAdd',
            title: 'MstCADCreditGroupExistingBankAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupExistingBankEdit', {
            url: '/MstCADCreditGroupExistingBankEdit',
            title: 'MstCADCreditGroupExistingBankEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupRepaymentAdd', {
            url: '/MstCADCreditGroupRepaymentAdd',
            title: 'MstCADCreditGroupRepaymentAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupRepaymentEdit', {
            url: '/MstCADCreditGroupRepaymentEdit',
            title: 'MstCADCreditGroupRepaymentEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupPSLDataFlagAdd', {
            url: '/MstCADCreditGroupPSLDataFlagAdd',
            title: 'MstCADCreditGroupPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupPSLDataFlagEdit', {
            url: '/MstCADCreditGroupPSLDataFlagEdit',
            title: 'MstCADCreditGroupPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupBankStatementAnalysisAdd', {
            url: '/MstCADCreditGroupBankStatementAnalysisAdd',
            title: 'MstCADCreditGroupBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupObservationAdd', {
            url: '/MstCADCreditGroupObservationAdd',
            title: 'MstCADCreditGroupObservationAdd',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditInstitutionBureauView', {
            url: '/MstCADCreditInstitutionBureauView',
            title: 'MstCADCreditInstitutionBureauView',
            templateUrl: helper.basepath('ems.master/MstCADCreditInstitutionBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

	.state('app.MstCADCreditIndividualBureauView', {
	    url: '/MstCADCreditIndividualBureauView',
	    title: 'MstCADCreditIndividualBureauView',
	    templateUrl: helper.basepath('ems.master/MstCADCreditIndividualBureauView.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

	.state('app.MstCADPendingApplicationEdit', {
	    url: '/MstCADPendingApplicationEdit',
	    title: 'MstCADPendingApplicationEdit',
	    templateUrl: helper.basepath('ems.master/MstCADPendingApplicationEdit.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

	
	.state('app.MstCADCreditCompanyAPIAdd', {
	    url: '/MstCADCreditCompanyAPIAdd',
	    title: 'MstCADCreditCompanyAPIAdd',
	    templateUrl: helper.basepath('ems.master/MstCADCreditCompanyAPIAdd.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

        .state('app.CADGSTAuthenticationView', {
            url: '/CADGSTAuthenticationView',
            title: 'CADGSTAuthenticationView',
            templateUrl: helper.basepath('ems.master/CADGSTAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADGSPGSTINAuthenticationView', {
            url: '/CADGSPGSTINAuthenticationView',
            title: 'CADGSPGSTINAuthenticationView',
            templateUrl: helper.basepath('ems.master/CADGSPGSTINAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADGSPGSTReturnFilingView', {
            url: '/CADGSPGSTReturnFilingView',
            title: 'CADGSPGSTReturnFilingView',
            templateUrl: helper.basepath('ems.master/CADGSPGSTReturnFilingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADIECDetailedProfileView', {
            url: '/CADIECDetailedProfileView',
            title: 'CADIECDetailedProfileView',
            templateUrl: helper.basepath('ems.master/CADIECDetailedProfileView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADPropertyTaxView', {
            url: '/CADPropertyTaxView',
            title: 'CADPropertyTaxView',
            templateUrl: helper.basepath('ems.master/CADPropertyTaxView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADBaseDetailsView', {
            url: '/CADBaseDetailsView',
            title: 'CADBaseDetailsView',
            templateUrl: helper.basepath('ems.master/CADBaseDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.CADComprehensiveDetailsView', {
            url: '/CADComprehensiveDetailsView',
            title: 'CADComprehensiveDetailsView',
            templateUrl: helper.basepath('ems.master/CADComprehensiveDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCrimeReportCompanyView', {
            url: '/MstCADCrimeReportCompanyView',
            title: 'MstCADCrimeReportCompanyView',
            templateUrl: helper.basepath('ems.master/MstCADCrimeReportCompanyView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCompanyCrimeCheckRecordAPI', {
            url: '/MstCADCompanyCrimeCheckRecordAPI',
            title: 'MstCADCompanyCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.master/MstCADCompanyCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

	.state('app.MstCADCreditCrimeCheckRecordAPI', {
	    url: '/MstCADCreditCrimeCheckRecordAPI',
	    title: 'MstCADCreditCrimeCheckRecordAPI',
	    templateUrl: helper.basepath('ems.master/MstCADCreditCrimeCheckRecordAPI.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

        .state('app.MstCADCrimeReportIndividualView', {
            url: '/MstCADCrimeReportIndividualView',
            title: 'MstCADCrimeReportIndividualView',
            templateUrl: helper.basepath('ems.master/MstCADCrimeReportIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

	.state('app.MstCADRMInstitutionView', {
	    url: '/MstCADRMInstitutionView',
	    title: 'MstCADRMInstitutionView',
	    templateUrl: helper.basepath('ems.master/MstCADRMInstitutionView.html?ver=' + version + '"'),
	    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})

        .state('app.MstCADRMIndividualView', {
            url: '/MstCADRMIndividualView',
            title: 'MstCADRMIndividualView',
            templateUrl: helper.basepath('ems.master/MstCADRMIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditCompanyDtlView', {
            url: '/MstCADCreditCompanyDtlView',
            title: 'MstCADCreditCompanyDtlView',
            templateUrl: helper.basepath('ems.master/MstCADCreditCompanyDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualDtlView', {
            url: '/MstCADCreditIndividualDtlView',
            title: 'MstCADCreditIndividualDtlView',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditGroupDtlView', {
            url: '/MstCADCreditGroupDtlView',
            title: 'MstCADCreditGroupDtlView',
            templateUrl: helper.basepath('ems.master/MstCADCreditGroupDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCadPendingApplicationView', {
            url: '/MstCadPendingApplicationView',
            title: 'MstCadPendingApplicationView',
            templateUrl: helper.basepath('ems.master/MstCadPendingApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        		.state('app.MstCADPendingInstitutionDtlAdd', {
        		    url: '/MstCADPendingInstitutionDtlAdd',
        		    title: 'MstCADPendingInstitutionDtlAdd',
        		    templateUrl: helper.basepath('ems.master/MstCADPendingInstitutionDtlAdd.html?ver=' + version + '"'),
        		    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        		})

        .state('app.MstCADPendingIndividualDtlAdd', {
            url: '/MstCADPendingIndividualDtlAdd',
            title: 'MstCADPendingIndividualDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADPendingIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADPendingGroupDtlAdd', {
            url: '/MstCADPendingGroupDtlAdd',
            title: 'MstCADPendingGroupDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADPendingGroupDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditIndividualAPI', {
            url: '/MstCADCreditIndividualAPI',
            title: 'MstCADCreditIndividualAPI',
            templateUrl: helper.basepath('ems.master/MstCADCreditIndividualAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

          .state('app.MstCADCreditBankAccountDtlEdit', {
              url: '/MstCADCreditBankAccountDtlEdit',
              title: 'MstCADCreditBankAccountDtlEdit',
              templateUrl: helper.basepath('ems.master/MstCADCreditBankAccountDtlEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })


        .state('app.MstCADCreditExistingBankDtlEdit', {
            url: '/MstCADCreditExistingBankDtlEdit',
            title: 'MstCADCreditExistingBankDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditExistingBankDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADCreditRepaymentDtlEdit', {
            url: '/MstCADCreditRepaymentDtlEdit',
            title: 'MstCADCreditRepaymentDtlEdit',
            templateUrl: helper.basepath('ems.master/MstCADCreditRepaymentDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.MstCADCreditFSAView', {
             url: '/MstCADCreditFSAView',
             title: 'MstCADCreditFSAView',
             templateUrl: helper.basepath('ems.master/MstCADCreditFSAView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.MstRMCadUrnAcceptedCustomerDtls', {
            url: '/MstRMCadUrnAcceptedCustomerDtls',
            title: 'MstRMCadUrnAcceptedCustomerDtls',
            templateUrl: helper.basepath('ems.master/MstRMCadUrnAcceptedCustomerDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

          .state('app.MstCADPSLCSADataFlaggingAdd', {
              url: '/MstCADPSLCSADataFlaggingAdd',
              title: 'MstCADPSLCSADataFlaggingAdd',
              templateUrl: helper.basepath('ems.master/MstCADPSLCSADataFlaggingAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

        .state('app.MstCADPSLCSAIndividualPSLDataFlagAdd', {
            url: '/MstCADPSLCSAIndividualPSLDataFlagAdd',
            title: 'MstCADPSLCSAIndividualPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCADPSLCSAIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADPSLCSAGroupPSLDataFlagAdd', {
            url: '/MstCADPSLCSAGroupPSLDataFlagAdd',
            title: 'MstCADPSLCSAGroupPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.master/MstCADPSLCSAGroupPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADPSLCSADataFlaggingEdit', {
            url: '/MstCADPSLCSADataFlaggingEdit',
            title: 'MstCADPSLCSADataFlaggingEdit',
            templateUrl: helper.basepath('ems.master/MstCADPSLCSADataFlaggingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADPSLCSAIndividualPSLDataFlagEdit', {
            url: '/MstCADPSLCSAIndividualPSLDataFlagEdit',
            title: 'MstCADPSLCSAIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCADPSLCSAIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCADPSLCSAGroupPSLDataFlagEdit', {
            url: '/MstCADPSLCSAGroupPSLDataFlagEdit',
            title: 'MstCADPSLCSAGroupPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.master/MstCADPSLCSAGroupPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.SysMstHRNotification', {
            url: '/SysMstHRNotification',
            title: 'SysMstHRNotification',
            templateUrl: helper.basepath('ems.system/SysMstHRNotification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.Mstinternalrating', {
            url: '/MstInternalrating',
            title: 'MstInternalrating',
            templateUrl: helper.basepath('ems.master/MstInternalRating.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.Mstlivestock', {
            url: '/MstLiveStock',
            title: 'MstLiveStock',
            templateUrl: helper.basepath('ems.master/MstLiveStock.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationCheckerSummary', {
             url: '/MstSAVerificationCheckerSummary',
             title: 'MstSAVerificationCheckerSummary',
             templateUrl: helper.basepath('ems.master/MstSAVerificationCheckerSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerPendingSummary', {
            url: '/MstSAVerificationMakerPendingSummary',
            title: 'MstSAVerificationMakerPendingSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerPendingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerIndividualSummary', {
            url: '/MstSAVerificationMakerIndividualSummary',
            title: 'MstSAVerificationMakerIndividualSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerIndividualSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerSummary', {
            url: '/MstSAVerificationMakerSummary',
            title: 'MstSAVerificationMakerSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerInitiatedPending', {
            url: '/MstSAVerificationMakerInitiatedPending',
            title: 'MstSAVerificationMakerInitiatedPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerInitiatedPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerInitiatedSummary', {
            url: '/MstSAVerificationMakerInitiatedSummary',
            title: 'MstSAVerificationMakerInitiatedSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerInitiatedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerInstitutionInitiated', {
            url: '/MstSAVerificationMakerInstitutionInitiated',
            title: 'MstSAVerificationMakerInstitutionInitiated',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerInstitutionInitiated.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerIndividualPending', {
            url: '/MstSAVerificationMakerIndividualPending',
            title: 'MstSAVerificationMakerIndividualPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerIndividualPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerIndInstSummary', {
            url: '/MstSAVerificationMakerIndInstSummary',
            title: 'MstSAVerificationMakerIndInstSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerIndInstSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationMakerIndividualInitiated', {
            url: '/MstSAVerificationMakerIndividualInitiated',
            title: 'MstSAVerificationMakerIndividualInitiated',
            templateUrl: helper.basepath('ems.master/MstSAVerificationMakerIndividualInitiated.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationPending', {
            url: '/MstSAVerificationPending',
            title: 'MstSAVerificationPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationIndividualPending', {
            url: '/MstSAVerificationIndividualPending',
            title: 'MstSAVerificationIndividualPending',
            templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualPending.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSAVerificationInstitutionEdit', {
            url: '/MstSAVerificationInstitutionEdit',
            title: 'MstSAVerificationInstitutionEdit',
            templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstRmMyTeamCustomerSummary', {
            url: '/MstRmMyTeamCustomerSummary',
            title: 'MstRmMyTeamCustomerSummary',
            templateUrl: helper.basepath('ems.master/MstRmMyTeamCustomerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

            .state('app.MstMarketingSourceofContact', {
                 url: '/MstMarketingSourceofContact',
                 title: 'MstMarketingSourceofContact',
                 templateUrl: helper.basepath('ems.businessteam/MstMarketingSourceofContact.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCallType', {
                url: '/MstMarketingCallType',
                title: 'MstMarketingCallType',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCallType.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingTelecallingFunction', {
                url: '/MstMarketingTelecallingFunction',
                title: 'MstMarketingTelecallingFunction',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingTelecallingFunction.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCallReceivedNumber', {
                url: '/MstMarketingCallReceivedNumber',
                title: 'MstMarketingCallReceivedNumber',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCallReceivedNumber.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingSummary', {
                url: '/MstMarketingSummary',
                title: 'MstMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingAdd', {
                url: '/MstMarketingAdd',
                title: 'MstMarketingAdd',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstAssignedMarketingSummary', {
                url: '/MstAssignedMarketingSummary',
                title: 'MstAssignedMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstAssignedMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstAssignedMarketingView', {
                url: '/MstAssignedMarketingView',
                title: 'MstAssignedMarketingView',
                templateUrl: helper.basepath('ems.businessteam/MstAssignedMarketingView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstClosedMarketingSummary', {
                url: '/MstClosedMarketingSummary',
                title: 'MstClosedMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstClosedMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCompletedMarketingSummary', {
                url: '/MstCompletedMarketingSummary',
                title: 'MstCompletedMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstCompletedMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstFollowUpMarketingSummary', {
                url: '/MstFollowUpMarketingSummary',
                title: 'MstFollowUpMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstFollowUpMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingAssignedCalls', {
                url: '/MstMarketingAssignedCalls',
                title: 'MstMarketingAssignedCalls',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingAssignedCalls.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingAssignedCallView', {
                url: '/MstMarketingAssignedCallView',
                title: 'MstMarketingAssignedCallView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingAssignedCallView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingAssignView', {
                url: '/MstMarketingAssignView',
                title: 'MstMarketingAssignView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingAssignView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCallResponse', {
                url: '/MstMarketingCallResponse',
                title: 'MstMarketingCallResponse',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCallResponse.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingClose', {
                url: '/MstMarketingClose',
                title: 'MstMarketingClose',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingClose.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingClosedCall', {
                url: '/MstMarketingClosedCall',
                title: 'MstMarketingClosedCall',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingClosedCall.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingClosedCalls', {
                url: '/MstMarketingClosedCalls',
                title: 'MstMarketingClosedCalls',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingClosedCalls.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingClosedView', {
                url: '/MstMarketingClosedView',
                title: 'MstMarketingClosedView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingClosedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCompletedCall', {
                url: '/MstMarketingCompletedCall',
                title: 'MstMarketingCompletedCall',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCompletedCall.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCompletedCallSummary', {
                url: '/MstMarketingCompletedCallSummary',
                title: 'MstMarketingCompletedCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCompletedCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCompletedView', {
                url: '/MstMarketingCompletedView',
                title: 'MstMarketingCompletedView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCompletedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingCompleteView', {
                url: '/MstMarketingCompleteView',
                title: 'MstMarketingCompleteView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingCompleteView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingEdit', {
                url: '/MstMarketingEdit',
                title: 'MstMarketingEdit',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingFollowupCalls', {
                url: '/MstMarketingFollowupCalls',
                title: 'MstMarketingFollowupCalls',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingFollowupCalls.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingFollowupCall', {
                url: '/MstMarketingFollowupCall',
                title: 'MstMarketingFollowupCall',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingFollowupCall.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingFollowUpCallSummary', {
                url: '/MstMarketingFollowUpCallSummary',
                title: 'MstMarketingFollowUpCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingFollowUpCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingFollowupCallView', {
                url: '/MstMarketingFollowupCallView',
                title: 'MstMarketingFollowupCallView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingFollowupCallView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingMyAssignedCallSummary', {
                url: '/MstMarketingMyAssignedCallSummary',
                title: 'MstMarketingMyAssignedCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingMyAssignedCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingRejectedCallSummary', {
                url: '/MstMarketingRejectedCallSummary',
                title: 'MstMarketingRejectedCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingRejectedCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingReport', {
                url: '/MstMarketingReport',
                title: 'MstMarketingReport',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingTaggedMemberSummary', {
                url: '/MstMarketingTaggedMemberSummary',
                title: 'MstMarketingTaggedMemberSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingTaggedMemberSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingTaggedMemberView', {
                url: '/MstMarketingTaggedMemberView',
                title: 'MstMarketingTaggedMemberView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingTaggedMemberView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingTransferCallSummary', {
                url: '/MstMarketingTransferCallSummary',
                title: 'MstMarketingTransferCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingTransferCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingWorkInprogressCallSummary', {
                url: '/MstMarketingWorkInprogressCallSummary',
                title: 'MstMarketingWorkInprogressCallSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingWorkInprogressCallSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstRejectedMarketingSummary', {
                url: '/MstRejectedMarketingSummary',
                title: 'MstRejectedMarketingSummary',
                templateUrl: helper.basepath('ems.businessteam/MstRejectedMarketingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingReportView', {
                url: '/MstMarketingReportView',
                title: 'MstMarketingReportView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingReportView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingRejectedCallView', {
                url: '/MstMarketingRejectedCallView',
                title: 'MstMarketingRejectedCallView',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingRejectedCallView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
           
            .state('app.MstEquipment', {
                url: '/MstEquipment',
                title: 'MstEquipment',
                templateUrl: helper.basepath('ems.master/MstEquipment.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             //Moved to test

            .state('app.MstApplCCApproved', {
                url: '/MstApplCCApproved',
                title: 'MstApplCCApproved',
                templateUrl: helper.basepath('ems.master/MstApplCCApproved.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstUpcomingBusinessApprovalSummary', {
                url: '/MstUpcomingBusinessApprovalSummary',
                title: 'MstUpcomingBusinessApprovalSummary',
                templateUrl: helper.basepath('ems.master/MstUpcomingBusinessApprovalSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstUpcomingCreditApprovalSummary', {
                url: '/MstUpcomingCreditApprovalSummary',
                title: 'MstUpcomingCreditApprovalSummary',
                templateUrl: helper.basepath('ems.master/MstUpcomingCreditApprovalSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            
            //not moved to test
            .state('app.samforms', {
                url: '/samforms',
                title: 'samforms',
                templateUrl: helper.basepath('ems.master/samforms.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.MstSAOnboardingBussDevtVerificationSummary', {
                 url: '/MstSAOnboardingBussDevtVerificationSummary',
                 title: 'MstSAOnboardingBussDevtVerificationSummary',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerificationSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

            .state('app.MstSAonboardingSBAVerifyindividual', {
                url: '/MstSAonboardingSBAVerifyindividual',
                title: 'MstSAonboardingSBAVerifyindividual',
                templateUrl: helper.basepath('ems.master/MstSAonboardingSBAVerifyindividual.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.MstSAOnboardingBussDevtVerification', {
                 url: '/MstSAOnboardingBussDevtVerification',
                 title: 'MstSAOnboardingBussDevtVerification',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerification.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

            .state('app.MstSAOnboardingBussDevtVerificationIndividual', {
                url: '/MstSAOnboardingBussDevtVerificationIndividual',
                title: 'MstSAOnboardingBussDevtVerificationIndividual',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerificationIndividual.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingBussDevtVerifcationSummary', {
                url: '/MstSAOnboardingBussDevtVerifcationSummary',
                title: 'MstSAOnboardingBussDevtVerifcationSummary',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerifcationSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingBussDevtVerificationIndividualSummary', {
                url: '/MstSAOnboardingBussDevtVerificationIndividualSummary',
                title: 'MstSAOnboardingBussDevtVerificationIndividualSummary',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerificationIndividualSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.sbaportalcompany', {
                url: '/sbaportalcompany',
                title: 'sbaportalcompany',
                templateUrl: helper.basepath('ems.master/sbaportalcompany.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingSBAVerification', {
                url: '/MstSAOnboardingSBAVerification',
                title: 'MstSAOnboardingSBAVerification',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingSBAVerification.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAonboardingSBAindividualverification', {
                url: '/MstSAonboardingSBAindividualverification',
                title: 'MstSAonboardingSBAindividualverification',
                templateUrl: helper.basepath('ems.master/MstSAonboardingSBAindividualverification.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.MstSAVerificationCheckerInstitutionInitiatedView', {
                 url: '/MstSAVerificationCheckerInstitutionInitiatedView',
                 title: 'MstSAVerificationCheckerInstitutionInitiatedView',
                 templateUrl: helper.basepath('ems.master/MstSAVerificationCheckerInstitutionInitiatedView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

            .state('app.MstSAVerificationCheckerIndividualInitiatedView', {
                url: '/MstSAVerificationCheckerIndividualInitiatedView',
                title: 'MstSAVerificationCheckerIndividualInitiatedView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationCheckerIndividualInitiatedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingIndividualApprovalView', {
                url: '/MstSAOnboardingIndividualApprovalView',
                title: 'MstSAOnboardingIndividualApprovalView',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualApprovalView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationApprovedSummary', {
                url: '/MstSAVerificationApprovedSummary',
                title: 'MstSAVerificationApprovedSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationApprovedIndSummary', {
                url: '/MstSAVerificationApprovedIndSummary',
                title: 'MstSAVerificationApprovedIndSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationApprovedIndSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationApprovedView', {
                url: '/MstSAVerificationApprovedView',
                title: 'MstSAVerificationApprovedView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationApprovedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationApprovedIndView', {
                url: '/MstSAVerificationApprovedIndView',
                title: 'MstSAVerificationApprovedIndView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationApprovedIndView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationRejectedSummary', {
                url: '/MstSAVerificationRejectedSummary',
                title: 'MstSAVerificationRejectedSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationRejectedIndSummary', {
                url: '/MstSAVerificationRejectedIndSummary',
                title: 'MstSAVerificationRejectedIndSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationRejectedIndSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationRejectedView', {
                url: '/MstSAVerificationRejectedView',
                title: 'MstSAVerificationRejectedView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationRejectedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAVerificationRejectedIndView', {
                url: '/MstSAVerificationRejectedIndView',
                title: 'MstSAVerificationRejectedIndView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationRejectedIndView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            //moved to test
            .state('app.MstApplGroupdtlView', {
                url: '/MstApplGroupdtlView',
                title: 'MstApplGroupdtlView',
                templateUrl: helper.basepath('ems.master/MstApplGroupdtlView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.MstCADGroupdtlView', {
                 url: '/MstCADGroupdtlView',
                 title: 'MstCADGroupdtlView',
                 templateUrl: helper.basepath('ems.master/MstCADGroupdtlView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            //not moved to test

            .state('app.MstSAonboardingSBAinstitutionverification', {
                url: '/MstSAonboardingSBAinstitutionverification',
                title: 'MstSAonboardingSBAinstitutionverification',
                templateUrl: helper.basepath('ems.master/MstSAonboardingSBAinstitutionverification.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            //moved to test
            .state('app.MstRERule', {
                url: '/MstRERule',
                title: 'MstRERule',
                templateUrl: helper.basepath('ems.master/MstRERule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

          .state('app.MstRETemplate', {
              url: '/MstRETemplate',
              title: 'MstRETemplate',
              templateUrl: helper.basepath('ems.master/MstRETemplate.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

        .state('app.MstREAddTemplate', {
            url: '/MstREAddTemplate',
            title: 'MstREAddTemplate',
            templateUrl: helper.basepath('ems.master/MstREAddTemplate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.MstREDoConfiguration', {
             url: '/MstREDoConfiguration',
             title: 'MstREDoConfiguration',
             templateUrl: helper.basepath('ems.master/MstREDoConfiguration.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.MstBREExecution', {
            url: '/MstBREExecution',
            title: 'MstBREExecution',
            templateUrl: helper.basepath('ems.master/MstBREExecution.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

          .state('app.MstBREExecutionView', {
              url: '/MstBREExecutionView',
              title: 'MstBREExecutionView',
              templateUrl: helper.basepath('ems.master/MstBREExecutionView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular', 'flot-chart', 'flot-chart-plugins', 'weather-icons')
          })

        .state('app.MstSanctionMISReport', {
            url: '/MstSanctionMISReport',
            title: 'MstSanctionMISReport',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSanctionMISReportView', {
            url: '/MstSanctionMISReportView',
            title: 'MstSanctionMISReportView',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        //------- Hr loan menus starts -------
          .state('app.MstHRLoanTypeofFinancialAssistance', {
              url: '/MstHRLoanTypeofFinancialAssistance',
              title: 'MstHRLoanTypeofFinancialAssistance',
              templateUrl: helper.basepath('ems.hrloan/MstHRLoanTypeofFinancialAssistance.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

       .state('app.MstHRLoanPurpose', {
           url: '/MstHRLoanPurpose',
           title: 'MstHRLoanPurpose',
           templateUrl: helper.basepath('ems.hrloan/MstHRLoanPurpose.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.MstHRLoanSeverity', {
           url: '/MstHRLoanSeverity',
           title: 'MstHRLoanSeverity',
           templateUrl: helper.basepath('ems.hrloan/MstHRLoanSeverity.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

        .state('app.MstHRLoanTenure', {
            url: '/MstHRLoanTenure',
            title: 'MstHRLoanTenure',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanTenure.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstHRLoanTenureAdd', {
            url: '/MstHRLoanTenureAdd',
            title: 'MstHRLoanTenureAdd',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanTenureAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstHRLoanTenureEdit', {
            url: '/MstHRLoanTenureEdit',
            title: 'MstHRLoanTenureEdit',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanTenureEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstHRLoanTenureView', {
            url: '/MstHRLoanTenureView',
            title: 'MstHRLoanTenureView',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanTenureView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstHRLoanTermsandConditions', {
            url: '/MstHRLoanTermsandConditions',
            title: 'MstHRLoanTermsandConditions',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanTermsandConditions.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstHRLoanHRDocument', {
            url: '/MstHRLoanHRDocument',
            title: 'MstHRLoanHRDocument',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanHRDocument.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstHRLoanHRDocumentAdd', {
            url: '/MstHRLoanHRDocumentAdd',
            title: 'MstHRLoanHRDocumentAdd',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanHRDocumentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHRLoanHRDocumentEdit', {
            url: '/MstHRLoanHRDocumentEdit',
            title: 'MstHRLoanHRDocumentEdit',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanHRDocumentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHRLoanHRDocumentView', {
            url: '/MstHRLoanHRDocumentView',
            title: 'MstHRLoanHRDocumentView',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanHRDocumentView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstHRLoanHRMappingApprovals', {
            url: '/MstHRLoanHRMappingApprovals',
            title: 'MstHRLoanHRMappingApprovals',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanHRMappingApprovals.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AprHRLoanHRAdvanceApprovals', {
            url: '/AprHRLoanHRAdvanceApprovals',
            title: 'AprHRLoanHRAdvanceApprovals',
            templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceApprovals.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AprHRLoanHRAdvanceApprovalsSummary', {
            url: '/AprHRLoanHRAdvanceApprovalsSummary',
            title: 'AprHRLoanHRAdvanceApprovalsSummary',
            templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceApprovalsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AprHRLoanHRAdvanceApprovedSummary', {
            url: '/AprHRLoanHRAdvanceApprovedSummary',
            title: 'AprHRLoanHRAdvanceApprovedSummary',
            templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AprHRLoanHRAdvanceRejectedSummary', {
            url: '/AprHRLoanHRAdvanceRejectedSummary',
            title: 'AprHRLoanHRAdvanceRejectedSummary',
            templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceRejectedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.TrnHRLoanHRVerifications', {
            url: '/TrnHRLoanHRVerifications',
            title: 'TrnHRLoanHRVerifications',
            templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRVerifications.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.TrnHRLoanHRVerificationsSummary', {
            url: '/TrnHRLoanHRVerificationsSummary',
            title: 'TrnHRLoanHRVerificationsSummary',
            templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRVerificationsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.TrnHRLoanHRVerificationsApprovedSummary', {
            url: '/TrnHRLoanHRVerificationsApprovedSummary',
            title: 'TrnHRLoanHRVerificationsApprovedSummary',
            templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRVerificationsApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.TrnHRLoanHRVerificationsRejectedSummary', {
            url: '/TrnHRLoanHRVerificationsRejectedSummary',
            title: 'TrnHRLoanHRVerificationsRejectedSummary',
            templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRVerificationsRejectedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstHRLoanAddRequest', {
            url: '/MstHRLoanAddRequest',
            title: 'MstHRLoanAddRequest',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanAddRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHRLoanViewRequest', {
            url: '/MstHRLoanViewRequest',
            title: 'MstHRLoanViewRequest',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanViewRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHRLoanEditRequest', {
            url: '/MstHRLoanEditRequest',
            title: 'MstHRLoanEditRequest',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanEditRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstHRLoanRaiseRequest', {
            url: '/MstHRLoanRaiseRequest',
            title: 'MstHRLoanRaiseRequest',
            templateUrl: helper.basepath('ems.hrloan/MstHRLoanRaiseRequest.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        // ------ Hr loan menus end -------

        .state('app.MstCovenantPeriod', {
            url: '/MstCovenantPeriod',
            title: 'MstCovenantPeriod',
            templateUrl: helper.basepath('ems.master/MstCovenantPeriod.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AtmTrnSampleAgainstObservationScore', {
            url: '/AtmTrnSampleAgainstObservationScore',
            title: 'AtmTrnSampleAgainstObservationScore',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstObservationScore.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AtmTrnSampleQueryAgainstObservationScore', {
            url: '/AtmTrnSampleQueryAgainstObservationScore',
            title: 'AtmTrnSampleQueryAgainstObservationScore',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleQueryAgainstObservationScore.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCreditMappingEdit', {
            url: '/MstCreditMappingEdit',
            title: 'MstCreditMappingEdit',
            templateUrl: helper.basepath('ems.master/MstCreditMappingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCreditMappingAdd', {
            url: '/MstCreditMappingAdd',
            title: 'MstCreditMappingAdd',
            templateUrl: helper.basepath('ems.master/MstCreditMappingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCreditMappingDetails', {
            url: '/MstCreditMappingDetails',
            title: 'MstCreditMappingDetails',
            templateUrl: helper.basepath('ems.master/MstCreditMappingDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.BaseDetailsView', {
            url: '/BaseDetailsView',
            title: 'BaseDetailsView',
            templateUrl: helper.basepath('ems.master/BaseDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.ComprehensiveDetailsView', {
            url: '/ComprehensiveDetailsView',
            title: 'ComprehensiveDetailsView',
            templateUrl: helper.basepath('ems.master/ComprehensiveDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AtmTrnAuditorMakerObservationView', {
             url: '/AtmTrnAuditorMakerObservationView',
             title: 'AtmTrnAuditorMakerObservationView',
             templateUrl: helper.basepath('ems.audit/AtmTrnAuditorMakerObservationView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AtmTrnAuditorCheckerObservationView', {
            url: '/AtmTrnAuditorCheckerObservationView',
            title: 'AtmTrnAuditorCheckerObservationView',
            templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerObservationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AtmTrnSampleAgainstCheckerObservationScore', {
            url: '/AtmTrnSampleAgainstCheckerObservationScore',
            title: 'AtmTrnSampleAgainstCheckerObservationScore',
            templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstCheckerObservationScore.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSBACodeCreationSummary', {
            url: '/MstSBACodeCreationSummary',
            title: 'MstSBACodeCreationSummary',
            templateUrl: helper.basepath('ems.master/MstSBACodeCreationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.MstSAOnboardingInstitutionCodecreation', {
             url: '/MstSAOnboardingInstitutionCodecreation',
             title: 'MstSAOnboardingInstitutionCodecreation',
             templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionCodecreation.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

          .state('app.MstSAOnboardingIndividualCodecreationView', {
              url: '/MstSAOnboardingIndividualCodecreationView',
              title: 'MstSAOnboardingIndividualCodecreationView',
              templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualCodecreationView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

           .state('app.MstSAOnboardingCodeApprovalInsSummary', {
               url: '/MstSAOnboardingCodeApprovalInsSummary',
               title: 'MstSAOnboardingCodeApprovalInsSummary',
               templateUrl: helper.basepath('ems.master/MstSAOnboardingCodeApprovalInsSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

            .state('app.MstSAOnboardingCodeApprovalIndSummary', {
                url: '/MstSAOnboardingCodeApprovalIndSummary',
                title: 'MstSAOnboardingCodeApprovalIndSummary',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingCodeApprovalIndSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

          .state('app.AprHRLoanHRHeadApprovalsSummary', {
              url: '/AprHRLoanHRHeadApprovalsSummary',
              title: 'AprHRLoanHRHeadApprovalsSummary',
              templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadApprovalsSummary.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

           .state('app.AprHRLoanHRHeadApprovals', {
               url: '/AprHRLoanHRHeadApprovals',
               title: 'AprHRLoanHRHeadApprovals',
               templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadApprovals.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

            .state('app.AprHRLoanHRHeadApprovedSummary', {
                url: '/AprHRLoanHRHeadApprovedSummary',
                title: 'AprHRLoanHRHeadApprovedSummary',
                templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

           .state('app.AprHRLoanHRHeadRejectedSummary', {
               url: '/AprHRLoanHRHeadRejectedSummary',
               title: 'AprHRLoanHRHeadRejectedSummary',
               templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadRejectedSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })
        
           .state('app.MstSAOnboardingInstitutionBDView', {
              url: '/MstSAOnboardingInstitutionBDView',
              title: 'MstSAOnboardingInstitutionBDView',
              templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionBDView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

            .state('app.MstSAOnboardingIndividualBDView', {
                url: '/MstSAOnboardingIndividualBDView',
                title: 'MstSAOnboardingIndividualBDView',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualBDView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AtmTrnSampleAgainstMakerObservationScoreView', {
                url: '/AtmTrnSampleAgainstMakerObservationScoreView',
                title: 'AtmTrnSampleAgainstMakerObservationScoreView',
                templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstMakerObservationScoreView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AtmTrnSampleAgainstCheckerObservationScoreView', {
                url: '/AtmTrnSampleAgainstCheckerObservationScoreView',
                title: 'AtmTrnSampleAgainstCheckerObservationScoreView',
                templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstCheckerObservationScoreView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstBuyerReport', {
                url: '/MstBuyerReport',
                title: 'MstBuyerReport',
                templateUrl: helper.basepath('ems.master/MstBuyerReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AprHRLoanHRAdvanceApprovalsView', {
                url: '/AprHRLoanHRAdvanceApprovalsView',
                title: 'AprHRLoanHRAdvanceApprovalsView',
                templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceApprovalsView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.AprHRLoanHRAdvanceApprovedView', {
                url: '/AprHRLoanHRAdvanceApprovedView',
                title: 'AprHRLoanHRAdvanceApprovedView',
                templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceApprovedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


           .state('app.AprHRLoanHRAdvanceRejectedView', {
               url: '/AprHRLoanHRAdvanceRejectedView',
               title: 'AprHRLoanHRAdvanceRejectedView',
               templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRAdvanceRejectedView.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })


           .state('app.AprHRLoanHRHeadApprovalsView', {
               url: '/AprHRLoanHRHeadApprovalsView',
               title: 'AprHRLoanHRHeadApprovalsView',
               templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadApprovalsView.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

           .state('app.AprHRLoanHRHeadApprovedView', {
               url: '/AprHRLoanHRHeadApprovedView',
               title: 'AprHRLoanHRHeadApprovedView',
               templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadApprovedView.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })


         .state('app.AprHRLoanHRHeadRejectedView', {
             url: '/AprHRLoanHRHeadRejectedView',
             title: 'AprHRLoanHRHeadRejectedView',
             templateUrl: helper.basepath('ems.hrloan/AprHRLoanHRHeadRejectedView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.MstBusinessRevokeSummary', {
             url: '/MstBusinessRevokeSummary',
             title: 'MstBusinessRevokeSummary',
             templateUrl: helper.basepath('ems.master/MstBusinessRevokeSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstBusinessRejectRevoke', {
            url: '/MstBusinessRejectRevoke',
            title: 'MstBusinessRejectRevoke',
            templateUrl: helper.basepath('ems.master/MstBusinessRejectRevoke.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessHoldRevokeSummary', {
            url: '/MstBusinessHoldRevokeSummary',
            title: 'MstBusinessHoldRevokeSummary',
            templateUrl: helper.basepath('ems.master/MstBusinessHoldRevokeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstBusinessRevokeHistory', {
            url: '/MstBusinessRevokeHistory',
            title: 'MstBusinessRevokeHistory',
            templateUrl: helper.basepath('ems.master/MstBusinessRevokeHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstBusinessRevokedApplSummary', {
             url: '/MstBusinessRevokedApplSummary',
             title: 'MstBusinessRevokedApplSummary',
             templateUrl: helper.basepath('ems.master/MstBusinessRevokedApplSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
         .state('app.MstCreditRevokeSummary', {
             url: '/MstCreditRevokeSummary',
             title: 'MstCreditRevokeSummary',
             templateUrl: helper.basepath('ems.master/MstCreditRevokeSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstCreditHoldRevokeSummary', {
            url: '/MstCreditHoldRevokeSummary',
            title: 'MstCreditHoldRevokeSummary',
            templateUrl: helper.basepath('ems.master/MstCreditHoldRevokeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRevokedApplSummary', {
            url: '/MstCreditRevokedApplSummary',
            title: 'MstCreditRevokedApplSummary',
            templateUrl: helper.basepath('ems.master/MstCreditRevokedApplSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRejectHoldRevoke', {
            url: '/MstCreditRejectHoldRevoke',
            title: 'MstCreditRejectHoldRevoke',
            templateUrl: helper.basepath('ems.master/MstCreditRejectHoldRevoke.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditRejectHoldRevokeHistory', {
            url: '/MstCreditRejectHoldRevokeHistory',
            title: 'MstCreditRejectHoldRevokeHistory',
            templateUrl: helper.basepath('ems.master/MstCreditRejectHoldRevokeHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        //5th Sep routes committed
        
        .state('app.TrnHRLoanHRPaymentSummary', {
                url: '/TrnHRLoanHRPaymentSummary',
                title: 'TrnHRLoanHRPaymentSummary',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

        .state('app.TrnHRLoanHRPaymentApprovals', {
                url: '/TrnHRLoanHRPaymentApprovals',
                title: 'TrnHRLoanHRPaymentApprovals',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentApprovals.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.TrnHRLoanHRPaymentApprovalsView', {
                url: '/TrnHRLoanHRPaymentApprovalsView',
                title: 'TrnHRLoanHRPaymentApprovalsView',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentApprovalsView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

        .state('app.TrnHRLoanHRPaymentApprovedSummary', {
                url: '/TrnHRLoanHRPaymentApprovedSummary',
                title: 'TrnHRLoanHRPaymentApprovedSummary',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.TrnHRLoanHRPaymentApprovedView', {
                url: '/TrnHRLoanHRPaymentApprovedView',
                title: 'TrnHRLoanHRPaymentApprovedView',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentApprovedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

        .state('app.TrnHRLoanHRPaymentRejectedSummary', {
                url: '/TrnHRLoanHRPaymentRejectedSummary',
                title: 'TrnHRLoanHRPaymentRejectedSummary',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

        .state('app.TrnHRLoanHRPaymentRejectedView', {
                url: '/TrnHRLoanHRPaymentRejectedView',
                title: 'TrnHRLoanHRPaymentRejectedView',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRPaymentRejectedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AtmTrnAuditorCheckerOpenView', {
                url: '/AtmTrnAuditorCheckerOpenView',
                title: 'AtmTrnAuditorCheckerOpenView',
                templateUrl: helper.basepath('ems.audit/AtmTrnAuditorCheckerOpenView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
    
            .state('app.AtmTrnMyAuditTaskAuditeeMakerView', {
                url: '/AtmTrnMyAuditTaskAuditeeMakerView',
                title: 'AtmTrnMyAuditTaskAuditeeMakerView',
                templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskAuditeeMakerView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            }) 
            
             .state('app.AtmTrnSampleAgainstApproverObservationScore', {
                url: '/AtmTrnSampleAgainstApproverObservationScore',
                title: 'AtmTrnSampleAgainstApproverObservationScore',
                templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstApproverObservationScore.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })    
           
            .state('app.MstSAOnboardingBDVerificationTrainingStatus', {
                 url: '/MstSAOnboardingBDVerificationTrainingStatus',
                 title: 'MstSAOnboardingBDVerificationTrainingStatus',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBDVerificationTrainingStatus.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })    
            .state('app.MstSAOnboardingBDVerificationTrainingStatusindividual', {
                url: '/MstSAOnboardingBDVerificationTrainingStatusindividual',
                title: 'MstSAOnboardingBDVerificationTrainingStatusindividual',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBDVerificationTrainingStatusindividual.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
   
            })
            .state('app.MstSAOnboardingBussDevRejectedSummary', {
                 url: '/MstSAOnboardingBussDevRejectedSummary',
                 title: 'MstSAOnboardingBussDevRejectedSummary',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevRejectedSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingBussDevIndividualRejectedSummary', {
                 url: '/MstSAOnboardingBussDevIndividualRejectedSummary',
                 title: 'MstSAOnboardingBussDevIndividualRejectedSummary',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevIndividualRejectedSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingBussDevtInstitutionRejectedView', {
                  url: '/MstSAOnboardingBussDevtInstitutionRejectedView',
                  title: 'MstSAOnboardingBussDevtInstitutionRejectedView',
                  templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtInstitutionRejectedView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingBussDevtIndividualRejectedView', {
                  url: '/MstSAOnboardingBussDevtIndividualRejectedView',
                  title: 'MstSAOnboardingBussDevtIndividualRejectedView',
                 templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtIndividualRejectedView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AtmTrnAuditeeCheckerObservationView', {
                url: '/AtmTrnAuditeeCheckerObservationView',
                title: 'AtmTrnAuditeeCheckerObservationView',
                templateUrl: helper.basepath('ems.audit/AtmTrnAuditeeCheckerObservationView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmTrnMyAuditTaskAuditeeMakerObservationScoreView', {
                url: '/AtmTrnMyAuditTaskAuditeeMakerObservationScoreView',
                title: 'AtmTrnMyAuditTaskAuditeeMakerObservationScoreView',
                templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditTaskAuditeeMakerObservationScoreView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmTrnSampleAgainstApproverObservationScoreView', {
                url: '/AtmTrnSampleAgainstApproverObservationScoreView',
                title: 'AtmTrnSampleAgainstApproverObservationScoreView',
                templateUrl: helper.basepath('ems.audit/AtmTrnSampleAgainstApproverObservationScoreView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
           .state('app.AtmTrnAuditorApproverObservationView', {
                url: '/AtmTrnAuditorApproverObservationView',
                title: 'AtmTrnAuditorApproverObservationView',
                templateUrl: helper.basepath('ems.audit/AtmTrnAuditorApproverObservationView.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            //MstBDLeadRequestType
            .state('app.MstBDLeadRequestType', {
                url: '/MstBDLeadRequestType',
                title: 'MstBDLeadRequestType',
                templateUrl: helper.basepath('ems.businessteam/MstBDLeadRequestType.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstHRLoanRaiseRequestCompleted', {
                url: '/MstHRLoanRaiseRequestCompleted',
                title: 'MstHRLoanRaiseRequestCompleted',
                templateUrl: helper.basepath('ems.hrloan/MstHRLoanRaiseRequestCompleted.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstHRLoanRaiseRequestWithdrawn', {
                url: '/MstHRLoanRaiseRequestWithdrawn',
                title: 'MstHRLoanRaiseRequestWithdrawn',
                templateUrl: helper.basepath('ems.hrloan/MstHRLoanRaiseRequestWithdrawn.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.TrnHRLoanHRVerificationsView', {
                url: '/TrnHRLoanHRVerificationsView',
                title: 'TrnHRLoanHRVerificationsView',
                templateUrl: helper.basepath('ems.hrloan/TrnHRLoanHRVerificationsView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstBusinessHierarchyUpdateSummary', {
                url: '/MstBusinessHierarchyUpdateSummary',
                title: 'MstBusinessHierarchyUpdateSummary',
                templateUrl: helper.basepath('ems.master/MstBusinessHierarchyUpdateSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCreditStageSummary', {
                url: '/MstCreditStageSummary',
                title: 'MstCreditStageSummary',
                templateUrl: helper.basepath('ems.master/MstCreditStageSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCcStageSummary', {
                url: '/MstCcStageSummary',
                title: 'MstCcStageSummary',
                templateUrl: helper.basepath('ems.master/MstCcStageSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCadPendingStageSummary', {
                url: '/MstCadPendingStageSummary',
                title: 'MstCadPendingStageSummary',
                templateUrl: helper.basepath('ems.master/MstCadPendingStageSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCadAcceptedStageSummary', {
                url: '/MstCadAcceptedStageSummary',
                title: 'MstCadAcceptedStageSummary',
                templateUrl: helper.basepath('ems.master/MstCadAcceptedStageSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstBusinessHierarchyUpdate', {
                url: '/MstBusinessHierarchyUpdate',
                title: 'MstBusinessHierarchyUpdate',
                templateUrl: helper.basepath('ems.master/MstBusinessHierarchyUpdate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstBusinessHierarchyUpdateHistory', {
                url: '/MstBusinessHierarchyUpdateHistory',
                title: 'MstBusinessHierarchyUpdateHistory',
                templateUrl: helper.basepath('ems.master/MstBusinessHierarchyUpdateHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstAnswerType', {
                url: '/MstAnswerType',
                title: 'MstAnswerType',
                templateUrl: helper.basepath('ems.master/MstAnswerType.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstGroupTitle', {
                url: '/MstGroupTitle',
                title: 'MstGroupTitle',
                templateUrl: helper.basepath('ems.master/MstGroupTitle.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('page.TandC', {
                url: '/TandC',
                title: 'TandC',
                templateUrl: 'app/pages/TandC.html?ver=' + version + '"'
            })

           .state('page.PrivacyPolicy', {
               url: '/PrivacyPolicy',
               title: 'PrivacyPolicy',
               templateUrl: 'app/pages/PrivacyPolicy.html?ver=' + version + '"'
           })

           .state('app.MstIncompleteStageSummary', {
               url: '/MstIncompleteStageSummary',
               title: 'MstIncompleteStageSummary',
               templateUrl: helper.basepath('ems.master/MstIncompleteStageSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })
           
            .state('app.MstCreditMappingRule', {
                url: '/MstCreditMappingRule',
                title: 'MstCreditMappingRule',
                templateUrl: helper.basepath('ems.master/MstCreditMappingRule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstApplicationAssigRejectSummary', {
                url: '/MstApplicationAssigRejectSummary',
                title: 'MstApplicationAssigRejectSummary',
                templateUrl: helper.basepath('ems.master/MstApplicationAssigRejectSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingBDVerificationPending', {
                url: '/MstSAOnboardingBDVerificationPending',
                title: 'MstSAOnboardingBDVerificationPending',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBDVerificationPending.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingBDVerificationIndividualPending', {
                url: '/MstSAOnboardingBDVerificationIndividualPending',
                title: 'MstSAOnboardingBDVerificationIndividualPending',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingBDVerificationIndividualPending.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingSBAReport', {
                url: '/MstSAOnboardingSBAReport',
                title: 'MstSAOnboardingSBAReport',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingSBAReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })          
            
           // MstSAOnboardingSBAReport
            .state('app.MstAppScoreCardViewdtl', {
                url: '/MstAppScoreCardViewdtl',
                title: 'MstAppScoreCardViewdtl',
                templateUrl: helper.basepath('ems.master/MstAppScoreCardViewdtl.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstHRLoanRaiseRequestRejected', {
                url: '/MstHRLoanRaiseRequestRejected',
                title: 'MstHRLoanRaiseRequestRejected',
                templateUrl: helper.basepath('ems.hrloan/MstHRLoanRaiseRequestRejected.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

          .state('app.MstHRLoanEditRequest360', {
              url: '/MstHRLoanEditRequest360',
              title: 'MstHRLoanEditRequest360',
              templateUrl: helper.basepath('ems.hrloan/MstHRLoanEditRequest360.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })
          .state('app.MstCcMeetingSkipSummary', {
            url: '/MstCcMeetingSkipSummary',
            title: 'MstCcMeetingSkipSummary',
            templateUrl: helper.basepath('ems.master/MstCcMeetingSkipSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCcMeetingSkipHistory', {
            url: '/MstCcMeetingSkipHistory',
            title: 'MstCcMeetingSkipHistory',
            templateUrl: helper.basepath('ems.master/MstCcMeetingSkipHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
       .state('app.MstRejectedSummary', {
        url: '/MstRejectedSummary',
        title: 'MstRejectedSummary',
        templateUrl: helper.basepath('ems.master/MstRejectedSummary.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstMarketingMBDRejectedCallSummary', {
        url: '/MstMarketingMBDRejectedCallSummary',
        title: 'MstMarketingMBDRejectedCallSummary',
        templateUrl: helper.basepath('ems.businessteam/MstMarketingMBDRejectedCallSummary.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstMarketingMBDRejectedCallView', {
        url: '/MstMarketingMBDRejectedCallView',
        title: 'MstMarketingMBDRejectedCallView',
        templateUrl: helper.basepath('ems.businessteam/MstMarketingMBDRejectedCallView.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.MstMarketingManageRejectedCallView', {
        url: '/MstMarketingManageRejectedCallView',
        title: 'MstMarketingManageRejectedCallView',
        templateUrl: helper.basepath('ems.businessteam/MstMarketingManageRejectedCallView.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

      .state('app.MstSAOnboardingBussDevtVerificationIndividualPendingBDSummary', {
          url: '/MstSAOnboardingBussDevtVerificationIndividualPendingBDSummary',
          title: 'MstSAOnboardingBussDevtVerificationIndividualPendingBDSummary',
          templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerificationIndividualPendingBDSummary.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })
      .state('app.MstCreditGuaranteeDetailAdd', {
        url: '/MstCreditGuaranteeDetailAdd',
        title: 'MstCreditGuaranteeDetailAdd',
        templateUrl: helper.basepath('ems.master/MstCreditGuaranteeDetailAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
     .state('app.MstCreditIndividualGuaranteeDtlAdd', {
         url: '/MstCreditIndividualGuaranteeDtlAdd',
         title: 'MstCreditIndividualGuaranteeDtlAdd',
         templateUrl: helper.basepath('ems.master/MstCreditIndividualGuaranteeDtlAdd.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })
      .state('app.MstCreditGroupGuaranteeDtlAdd', {
          url: '/MstCreditGroupGuaranteeDtlAdd',
          title: 'MstCreditGroupGuaranteeDtlAdd',
          templateUrl: helper.basepath('ems.master/MstCreditGroupGuaranteeDtlAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })
  .state('app.MstUserProfile', {
      url: '/MstUserProfile',
      title: 'MstUserProfile',
      templateUrl: helper.basepath('ems.master/MstUserProfile.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
  })

      .state('app.MstSAOnboardingBussDevtVerificationInstitutionPendingBDSummary', {
          url: '/MstSAOnboardingBussDevtVerificationInstitutionPendingBDSummary',
          title: 'MstSAOnboardingBussDevtVerificationInstitutionPendingBDSummary',
          templateUrl: helper.basepath('ems.master/MstSAOnboardingBussDevtVerificationInstitutionPendingBDSummary.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })

        .state('app.SysMstHRDocument', {
            url: '/SysMstHRDocument',
            title: 'SysMstHRDocument',
            templateUrl: helper.basepath('ems.system/SysMstHRDocument.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.SysMstEmployeeHRDocument', {
            url: '/SysMstEmployeeHRDocument',
            title: 'SysMstEmployeeHRDocument',
            templateUrl: helper.basepath('ems.system/SysMstEmployeeHRDocument.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AtmTrnMyAuditeeTaskCheckerAuditeeView', {
            url: '/AtmTrnMyAuditeeTaskCheckerAuditeeView',
             title: 'AtmTrnMyAuditeeTaskCheckerAuditeeView',
             templateUrl: helper.basepath('ems.audit/AtmTrnMyAuditeeTaskCheckerAuditeeView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCsaCategory', {
            url: '/MstCsaCategory',
            title: 'MstCsaCategory',
            templateUrl: helper.basepath('ems.master/MstCsaCategory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         .state('app.MstCsaClassification', {
             url: '/MstCsaClassification',
             title: 'MstCsaClassification',
             templateUrl: helper.basepath('ems.master/MstCsaClassification.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
        .state('app.MstGuaranteePrograms', {
            url: '/MstGuaranteePrograms',
            title: 'MstGuaranteePrograms',
            templateUrl: helper.basepath('ems.master/MstGuaranteePrograms.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingCategory', {
            url: '/MstColendingCategory',
            title: 'MstColendingCategory',
            templateUrl: helper.basepath('ems.master/MstColendingCategory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
            .state('app.MstColendingPrograms', {
                url: '/MstColendingPrograms',
                title: 'MstColendingPrograms',
                templateUrl: helper.basepath('ems.master/MstColendingPrograms.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstColendingProgramAdd', {
                url: '/MstColendingProgramAdd',
                title: 'MstColendingProgramAdd',
                templateUrl: helper.basepath('ems.master/MstColendingProgramAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstColendingProgramEdit', {
                url: '/MstColendingProgramEdit',
                title: 'MstColendingProgramEdit',
                templateUrl: helper.basepath('ems.master/MstColendingProgramEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstColendingProgramView', {
                url: '/MstColendingProgramView',
                title: 'MstColendingProgramView',
                templateUrl: helper.basepath('ems.master/MstColendingProgramView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstMarketingMyleadsClosedCall', {
                url: '/MstMarketingMyleadsClosedCall',
                title: 'MstMarketingMyleadsClosedCall',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingMyleadsClosedCall.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        // Horizontal layout

        .state('app.AtmTrnInitiateAuditHold', {
            url: '/AtmTrnInitiateAuditHold',
             title: 'AtmTrnInitiateAuditHold',
             templateUrl: helper.basepath('ems.audit/AtmTrnInitiateAuditHold.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AtmTrnInitiateAuditClosed', {
            url: '/AtmTrnInitiateAuditClosed',
             title: 'AtmTrnInitiateAuditClosed',
             templateUrl: helper.basepath('ems.audit/AtmTrnInitiateAuditClosed.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AtmTrnInitiateAuditCompleted', {
            url: '/AtmTrnInitiateAuditCompleted',
             title: 'AtmTrnInitiateAuditCompleted',
             templateUrl: helper.basepath('ems.audit/AtmTrnInitiateAuditCompleted.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AtmTrnInitiateAuditRejected', {
            url: '/AtmTrnInitiateAuditRejected',
             title: 'AtmTrnInitiateAuditRejected',
             templateUrl: helper.basepath('ems.audit/AtmTrnInitiateAuditRejected.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AtmTrnInitiateAuditApproved', {
            url: '/AtmTrnInitiateAuditApproved',
             title: 'AtmTrnInitiateAuditApproved',
             templateUrl: helper.basepath('ems.audit/AtmTrnInitiateAuditApproved.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstVerticalRule', {
            url: '/MstVerticalRule',
            title: 'MstVerticalRule',
            templateUrl: helper.basepath('ems.master/MstVerticalRule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditColendingDetailAdd', {
            url: '/MstCreditColendingDetailAdd',
            title: 'MstCreditColendingDetailAdd',
            templateUrl: helper.basepath('ems.master/MstCreditColendingDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditIndividualColendingDtlAdd', {
            url: '/MstCreditIndividualColendingDtlAdd',
            title: 'MstCreditIndividualColendingDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditIndividualColendingDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditGroupColendingDtlAdd', {
            url: '/MstCreditGroupColendingDtlAdd',
            title: 'MstCreditGroupColendingDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCreditGroupColendingDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingVerificationSummary', {
            url: '/MstColendingVerificationSummary',
            title: 'MstColendingVerificationSummary',
            templateUrl: helper.basepath('ems.master/MstColendingVerificationSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingCreditVerification', {
            url: '/MstColendingCreditVerification',
            title: 'MstColendingCreditVerification',
            templateUrl: helper.basepath('ems.master/MstColendingCreditVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCreditCompletedVerification', {
            url: '/MstCreditCompletedVerification',
            title: 'MstCreditCompletedVerification',
            templateUrl: helper.basepath('ems.master/MstCreditCompletedVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingVerifyCompletedSummary', {
            url: '/MstColendingVerifyCompletedSummary',
            title: 'MstColendingVerifyCompletedSummary',
            templateUrl: helper.basepath('ems.master/MstColendingVerifyCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingCCApprovedVerification', {
            url: '/MstColendingCCApprovedVerification',
            title: 'MstColendingCCApprovedVerification',
            templateUrl: helper.basepath('ems.master/MstColendingCCApprovedVerification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstColendingCCApprovedVerifySummary', {
            url: '/MstColendingCCApprovedVerifySummary',
            title: 'MstColendingCCApprovedVerifySummary',
            templateUrl: helper.basepath('ems.master/MstColendingCCApprovedVerifySummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCFinalApprovedVerifiedSummary', {
            url: '/MstCCFinalApprovedVerifiedSummary',
            title: 'MstCCFinalApprovedVerifiedSummary',
            templateUrl: helper.basepath('ems.master/MstCCFinalApprovedVerifiedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCCFinalApprovedVerifiedView', {
            url: '/MstCCFinalApprovedVerifiedView',
            title: 'MstCCFinalApprovedVerifiedView',
            templateUrl: helper.basepath('ems.master/MstCCFinalApprovedVerifiedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingPendingwithRMSummary', {
            url: '/MstSAOnboardingPendingwithRMSummary',
            title: 'MstSAOnboardingPendingwithRMSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingPendingwithRMSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingPendingwithCADSummary', {
            url: '/MstSAOnboardingPendingwithCADSummary',
            title: 'MstSAOnboardingPendingwithCADSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingPendingwithCADSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingPendingwithRMIndividualSummary', {
            url: '/MstSAOnboardingPendingwithRMIndividualSummary',
            title: 'MstSAOnboardingPendingwithRMIndividualSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingPendingwithRMIndividualSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingPendingwithCADIndividualSummary', {
            url: '/MstSAOnboardingPendingwithCADIndividualSummary',
            title: 'MstSAOnboardingPendingwithCADIndividualSummary',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingPendingwithCADIndividualSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingIndividualCodeCreateView', {
            url: '/MstSAOnboardingIndividualCodeCreateView',
            title: 'MstSAOnboardingIndividualCodeCreateView',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualCodeCreateView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAOnboardingInstitutionCodeCreateView', {
            url: '/MstSAOnboardingInstitutionCodeCreateView',
            title: 'MstSAOnboardingInstitutionCodeCreateView',
            templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionCodeCreateView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        
        .state('app.MstSanctionMISReportChecker', {
            url: '/MstSanctionMISReportChecker',
            title: 'MstSanctionMISReportChecker',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReportChecker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSanctionMISReportApprover', {
            url: '/MstSanctionMISReportApprover',
            title: 'MstSanctionMISReportApprover',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReportApprover.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSanctionMISReportApproved', {
            url: '/MstSanctionMISReportApproved',
            title: 'MstSanctionMISReportApproved',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReportApproved.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

	    .state('app.Msthypothecationreport', {
            url: '/Msthypothecationreport',
            title: 'Msthypothecationreport',
            templateUrl: helper.basepath('ems.master/Msthypothecationreport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstSanctionMISReportMaker', {
            url: '/MstSanctionMISReportMaker',
            title: 'MstSanctionMISReportMaker',
            templateUrl: helper.basepath('ems.master/MstSanctionMISReportMaker.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

            .state('app.MstDocumentChecklistReport', {
                url: '/MstDocumentChecklistReport',
                title: 'MstDocumentChecklistReport',
                templateUrl: helper.basepath('ems.master/MstDocumentChecklistReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstDocumentChecklistCheckerReport', {
                url: '/MstDocumentChecklistCheckerReport',
                title: 'MstDocumentChecklistCheckerReport',
                templateUrl: helper.basepath('ems.master/MstDocumentChecklistCheckerReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstDocumentChecklistApprovalReport', {
                url: '/MstDocumentChecklistApprovalReport',
                title: 'MstDocumentChecklistApprovalReport',
                templateUrl: helper.basepath('ems.master/MstDocumentChecklistApprovalReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstColendingRule', {
                url: '/MstColendingRule',
                title: 'MstColendingRule',
                templateUrl: helper.basepath('ems.master/MstColendingRule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
             .state('app.MstCADGuaranteeDetailAdd', {
            url: '/MstCADGuaranteeDetailAdd',
            title: 'MstCADGuaranteeDetailAdd',
            templateUrl: helper.basepath('ems.master/MstCADGuaranteeDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCADIndividualGuaranteeDtlAdd', {
            url: '/MstCADIndividualGuaranteeDtlAdd',
            title: 'MstCADIndividualGuaranteeDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADIndividualGuaranteeDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCADGroupGuaranteeDtlAdd', {
            url: '/MstCADGroupGuaranteeDtlAdd',
            title: 'MstCADGroupGuaranteeDtlAdd',
            templateUrl: helper.basepath('ems.master/MstCADGroupGuaranteeDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstCADAcceptColendingAdd', {
            url: '/MstCADAcceptColendingAdd',
            title: 'MstCADAcceptColendingAdd',
            templateUrl: helper.basepath('ems.master/MstCADAcceptColendingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstMarketingAssignedFollowupLeadsView', {
            url: '/MstMarketingAssignedFollowupLeadsView',
            title: 'MstMarketingAssignedFollowupLeadsView',
            templateUrl: helper.basepath('ems.businessteam/MstMarketingAssignedFollowupLeadsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSoftcopyVettingFollowupReport', {
            url: '/MstSoftcopyVettingFollowupReport',
            title: 'MstSoftcopyVettingFollowupReport',
            templateUrl: helper.basepath('ems.master/MstSoftcopyVettingFollowupReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
       .state('app.MstCadPhysicalDocFollowupStatus', {
            url: '/MstCadPhysicalDocFollowupStatus',
            title: 'MstCadPhysicalDocFollowupStatus',
            templateUrl: helper.basepath('ems.master/MstCadPhysicalDocFollowupStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })  
        
	    .state('app.SysRptEsign', {
            url: '/SysRptEsign',
            title: 'SysRptEsign',
            templateUrl: helper.basepath('ems.system/SysRptEsign.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.SysRptESignSignedDoc', {
            url: '/SysRptESignSignedDoc',
            title: 'SysRptESignSignedDoc',
            templateUrl: helper.basepath('ems.system/SysRptESignSignedDoc.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

            .state('app.MstRptCadDeferral', {
                url: '/MstRptCadDeferral',
                title: 'MstRptCadDeferral',
                templateUrl: helper.basepath('ems.master/MstRptCadDeferral.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadApplicationDeferralCovenantView', {
                url: '/MstRptCadApplicationDeferralCovenantView',
                title: 'MstRptCadApplicationDeferralCovenantView',
                templateUrl: helper.basepath('ems.master/MstRptCadApplicationDeferralCovenantView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadScannedDeferralCovenantDtls', {
                url: '/MstRptCadScannedDeferralCovenantDtls',
                title: 'MstRptCadScannedDeferralCovenantDtls',
                templateUrl: helper.basepath('ems.master/MstRptCadScannedDeferralCovenantDtls.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadScannedDocchecklist', {
                url: '/MstRptCadScannedDocchecklist',
                title: 'MstRptCadScannedDocchecklist',
                templateUrl: helper.basepath('ems.master/MstRptCadScannedDocchecklist.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadScannedQuery', {
                url: '/MstRptCadScannedQuery',
                title: 'MstRptCadScannedQuery',
                templateUrl: helper.basepath('ems.master/MstRptCadScannedQuery.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadScannedDeferralHistory', {
                url: '/MstRptCadScannedDeferralHistory',
                title: 'MstRptCadScannedDeferralHistory',
                templateUrl: helper.basepath('ems.master/MstRptCadScannedDeferralHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })



            .state('app.MstRptCadScannedDeferralStatus', {
                url: '/MstRptCadScannedDeferralStatus',
                title: 'MstRptCadScannedDeferralStatus',
                templateUrl: helper.basepath('ems.master/MstRptCadScannedDeferralStatus.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadPhysicalDeferralCovenantDtls', {
                url: '/MstRptCadPhysicalDeferralCovenantDtls',
                title: 'MstRptCadPhysicalDeferralCovenantDtls',
                templateUrl: helper.basepath('ems.master/MstRptCadPhysicalDeferralCovenantDtls.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadPhysicalDocchecklist', {
                url: '/MstRptCadPhysicalDocchecklist',
                title: 'MstRptCadPhysicalDocchecklist',
                templateUrl: helper.basepath('ems.master/MstRptCadPhysicalDocchecklist.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })


            .state('app.MstRptCadPhysicalDocQuery', {
                url: '/MstRptCadPhysicalDocQuery',
                title: 'MstRptCadPhysicalDocQuery',
                templateUrl: helper.basepath('ems.master/MstRptCadPhysicalDocQuery.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadPhysicalDocStatus', {
                url: '/MstRptCadPhysicalDocStatus',
                title: 'MstRptCadPhysicalDocStatus',
                templateUrl: helper.basepath('ems.master/MstRptCadPhysicalDocStatus.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadPhysicalDeferralHistory', {
                url: '/MstRptCadPhysicalDeferralHistory',
                title: 'MstRptCadPhysicalDeferralHistory',
                templateUrl: helper.basepath('ems.master/MstRptCadPhysicalDeferralHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.MstRptCadCovenant', {
                url: '/MstRptCadCovenant',
                title: 'MstRptCadCovenant',
                templateUrl: helper.basepath('ems.master/MstRptCadCovenant.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCCApprovedSummary', {
                url: '/MstCCApprovedSummary',
                title: 'MstCCApprovedSummary',
                templateUrl: helper.basepath('ems.master/MstCCApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCreditColendingRule', {
                url: '/MstCreditColendingRule',
                title: 'MstCreditColendingRule',
                templateUrl: helper.basepath('ems.master/MstCreditColendingRule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstVerticalBRETrnRule', {
                url: '/MstVerticalBRETrnRule',
                title: 'MstVerticalBRETrnRule',
                templateUrl: helper.basepath('ems.master/MstVerticalBRETrnRule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstMarketingUnassignedLeadSummary', {
                url: '/MstMarketingUnassignedLeadSummary',
                title: 'MstMarketingUnassignedLeadSummary',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingUnassignedLeadSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.MstMarketingUnassignedLeadEdit', {
                 url: '/MstMarketingUnassignedLeadEdit',
                 title: 'MstMarketingUnassignedLeadEdit',
                templateUrl: helper.basepath('ems.businessteam/MstMarketingUnassignedLeadEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.MstSAOnboardingIndividualVerificationEdit', {
                url: '/MstSAOnboardingIndividualVerificationEdit',
                title: 'MstSAOnboardingIndividualVerificationEdit',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualVerificationEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingInstitutionVerificationEdit', {
                url: '/MstSAOnboardingInstitutionVerificationEdit',
                title: 'MstSAOnboardingInstitutionVerificationEdit',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionVerificationEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            }) 
           
            .state('app.AtmRptSamfinCustomerVisitSummary', {
                 url: '/AtmRptSamfinCustomerVisitSummary',
                 title: 'AtmRptSamfinCustomerVisitSummary',
                 templateUrl: helper.basepath('ems.audit/AtmRptSamfinCustomerVisitSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.AtmRptCadUrnAcceptedCustomerDtls', {
                 url: '/AtmRptCadUrnAcceptedCustomerDtls',
                 title: 'AtmRptCadUrnAcceptedCustomerDtls',
                 templateUrl: helper.basepath('ems.audit/AtmRptCadUrnAcceptedCustomerDtls.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.AtmRptApplicationView', {
                 url: '/AtmRptApplicationView',
                 title: 'AtmRptApplicationView',
                 templateUrl: helper.basepath('ems.audit/AtmRptApplicationView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.MstVerticalApplicantTypeRule', {
                url: '/MstVerticalApplicantTypeRule',
                title: 'MstVerticalApplicantTypeRule',
                templateUrl: helper.basepath('ems.master/MstVerticalApplicantTypeRule.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstColendingRuleadd', {
                url: '/MstColendingRuleadd',
                title: 'MstColendingRuleadd',
                templateUrl: helper.basepath('ems.master/MstColendingRuleadd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstLimitManagementView', {
                url: '/MstLimitManagementView',
                title: 'MstLimitManagementView',
                templateUrl: helper.basepath('ems.master/MstLimitManagementView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.SysRptESignExpiredDoc', {
                url: '/SysRptESignExpiredDoc',
                title: 'SysRptESignExpiredDoc',
                templateUrl: helper.basepath('ems.system/SysRptESignExpiredDoc.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnimport', {
                url: '/brsTrnimport',    
                title: 'brsTrnimport',    
                templateUrl: helper.basepath('ems.brs/brsTrnimport.html?ver=' + version + '"'),    
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')    
            })

            .state('app.MstCadUrnAcceptedCustomersLegaltag', {
                url: '/MstCadUrnAcceptedCustomersLegaltag',
                title: 'MstCadUrnAcceptedCustomersLegaltag',
                templateUrl: helper.basepath('ems.master/MstCadUrnAcceptedCustomersLegaltag.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCadUrnAcceptedCustomersNPAtag', {
                url: '/MstCadUrnAcceptedCustomersNPAtag',
                title: 'MstCadUrnAcceptedCustomersNPAtag',
                templateUrl: helper.basepath('ems.master/MstCadUrnAcceptedCustomersNPAtag.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCadDocumentChecklistView', {
                url: '/MstCadDocumentChecklistView',
                title: 'MstCadDocumentChecklistView',
                templateUrl: helper.basepath('ems.master/MstCadDocumentChecklistView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSBAInstitutionFinalApproval', {
                url: '/MstSBAInstitutionFinalApproval',
                title: 'MstSBAInstitutionFinalApproval',
                templateUrl: helper.basepath('ems.master/MstSBAInstitutionFinalApproval.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSBAIndividualFinalApproval', {
                url: '/MstSBAIndividualFinalApproval',
                title: 'MstSBAIndividualFinalApproval',
                templateUrl: helper.basepath('ems.master/MstSBAIndividualFinalApproval.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSBAIndividualFinalApprovalView', {
                url: '/MstSBAIndividualFinalApprovalView',
                title: 'MstSBAIndividualFinalApprovalView',
                templateUrl: helper.basepath('ems.master/MstSBAIndividualFinalApprovalView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.SysprtAgriFinanceSnapshot', {
                url: '/SysprtAgriFinanceSnapshot',
                title: 'SysprtAgriFinanceSnapshot',
                templateUrl: helper.basepath('ems.system/SysprtAgriFinanceSnapshot.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnbankconfiguration', {
                url: '/brsTrnbankconfiguration',
                title: 'brsTrnbankconfiguration',
                templateUrl: helper.basepath('ems.brs/brsTrnbankconfiguration.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnbankconfigurationadd', {
                url: '/brsTrnbankconfigurationadd',
                title: 'brsTrnbankconfigurationadd',
                templateUrl: helper.basepath('ems.brs/brsTrnbankconfigurationadd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnbankconfigurationedit', {
                url: '/brsTrnbankconfigurationedit',
                title: 'brsTrnbankconfigurationedit',
                templateUrl: helper.basepath('ems.brs/brsTrnbankconfigurationedit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.SysprtAgriFinanceSummary', {
                url: '/SysprtAgriFinanceSummary',
                title: 'SysprtAgriFinanceSummary',
                templateUrl: helper.basepath('ems.system/SysprtAgriFinanceSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })     
            
        .state('app.SysprtPipelinePlanner', {
                url: '/SysprtPipelinePlanner',
                title: 'SysprtPipelinePlanner',
                templateUrl: helper.basepath('ems.system/SysprtPipelinePlanner.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSanctionAccepted', {
                url: '/MstSanctionAccepted',
                title: 'MstSanctionAccepted',
                templateUrl: helper.basepath('ems.master/MstSanctionAccepted.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSanctionHistory', {
                url: '/MstSanctionHistory',
                title: 'MstSanctionHistory',
                templateUrl: helper.basepath('ems.master/MstSanctionHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSanctionAcceptedView', {
                url: '/MstSanctionAcceptedView',
                title: 'MstSanctionAcceptedView',
                templateUrl: helper.basepath('ems.master/MstSanctionAcceptedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCreditColendingRuleView', {
                url: '/MstCreditColendingRuleView',
                title: 'MstCreditColendingRuleView',
                templateUrl: helper.basepath('ems.master/MstCreditColendingRuleView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
            .state('app.SysprtAgriFinancePortfolioQuality', {
                url: '/SysprtAgriFinancePortfolioQuality',
                title: 'SysprtAgriFinancePortfolioQuality',
                templateUrl: helper.basepath('ems.system/SysprtAgriFinancePortfolioQuality.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstTemplateSummary', {
                url: '/MstTemplateSummary',
                title: 'MstTemplateSummary',
                templateUrl: helper.basepath('ems.master/MstTemplateSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })

            .state('app.MstAddTemplate', {
                url: '/MstAddTemplate',
                title: 'MstAddTemplate',
                templateUrl: helper.basepath('ems.master/MstAddTemplate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })  
       
            .state('app.MstEditTemplate', {
                url: '/MstEditTemplate',
                title: 'MstEditTemplate',
                templateUrl: helper.basepath('ems.master/MstEditTemplate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })

            .state('app.MstCourierMgmtsummary', {
                url: '/MstCourierMgmtsummary',
                title: 'MstCourierMgmtsummary',
                templateUrl: helper.basepath('ems.master/MstCourierMgmtsummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCourierCreation', {
                url: '/MstCourierCreation',
                title: 'MstCourierCreation',
                templateUrl: helper.basepath('ems.master/MstCourierCreation.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCourierMgmtAckList', {
                url: '/MstCourierMgmtAckList',
                title: 'MstCourierMgmtAckList',
                templateUrl: helper.basepath('ems.master/MstCourierMgmtAckList.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCourierEdit', {
                url: '/MstCourierEdit',
                title: 'MstCourierEdit',
                templateUrl: helper.basepath('ems.master/MstCourierEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCourierView', {
                url: '/MstCourierView',
                title: 'MstCourierView',
                templateUrl: helper.basepath('ems.master/MstCourierView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('page.MstCourierMgmtAckForm', {
                url: '/MstCourierMgmtAckForm',
                title: 'MstCourierMgmtAckForm',
                templateUrl: 'app/pages/MstCourierMgmtAckForm.html?ver=' + version + '"'
            })
            .state('app.MstCourierCompanysummary', {
                url: '/MstCourierCompanysummary',
                title: 'MstCourierCompanysummary',
                templateUrl: helper.basepath('ems.master/MstCourierCompanysummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportSummary', {
                url: '/AtmRptAuditVisitReportSummary',
                title: 'AtmRptAuditVisitReportSummary',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
             .state('app.AtmRptAuditVisitReportApprovalSummary', {
                url: '/AtmRptAuditVisitReportApprovalSummary',
                title: 'AtmRptAuditVisitReportApprovalSummary',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovalSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApprovalApprovedSummary', {
                url: '/AtmRptAuditVisitReportApprovalApprovedSummary',
                title: 'AtmRptAuditVisitReportApprovalApprovedSummary',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovalApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApproval', {
                url: '/AtmRptAuditVisitReportApproval',
                title: 'AtmRptAuditVisitReportApproval',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApproval.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApprovedSummary', {
                url: '/AtmRptAuditVisitReportApprovedSummary',
                title: 'AtmRptAuditVisitReportApprovedSummary',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApprovedView', {
                url: '/AtmRptAuditVisitReportApprovedView',
                title: 'AtmRptAuditVisitReportApprovedView',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApprovalPendingView', {
                url: '/AtmRptAuditVisitReportApprovalPendingView',
                title: 'AtmRptAuditVisitReportApprovalPendingView',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovalPendingView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportApprovalApprovedView', {
                url: '/AtmRptAuditVisitReportApprovalApprovedView',
                title: 'AtmRptAuditVisitReportApprovalApprovedView',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportApprovalApprovedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportEdit', {
                url: '/AtmRptAuditVisitReportEdit',
                title: 'AtmRptAuditVisitReportEdit',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportEdit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.AtmRptAuditVisitReportView', {
                url: '/AtmRptAuditVisitReportView',
                title: 'AtmRptAuditVisitReportView',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
           .state('app.AtmRptAuditVisitReport', {
                url: '/AtmRptAuditVisitReport',
                title: 'AtmRptAuditVisitReport',
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.osdTrnRHApprovalView', {
                url: '/osdTrnRHApprovalView',
                title: 'osdTrnRHApprovalView',
                templateUrl: helper.basepath('ems.osd/osdTrnRHApprovalView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })

            .state('app.osdTrnRHApprovalViewHistory', {
                url: '/osdTrnRHApprovalViewHistory',
                title: 'osdTrnRHApprovalViewHistory',
                templateUrl: helper.basepath('ems.osd/osdTrnRHApprovalViewHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })
            
.state('app.brsTrnReconcillation', {
                url: '/brsTrnReconcillation',
                title: 'brsTrnReconcillation',
                templateUrl: helper.basepath('ems.brs/brsTrnReconcillation.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnUnReconcillation', {
                url: '/brsTrnUnReconcillation',
                title: 'brsTrnUnReconcillation',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillation.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnRepaymentImport', {
                url: '/brsTrnRepaymentImport',
                title: 'brsTrnRepaymentImport',
                templateUrl: helper.basepath('ems.brs/brsTrnRepaymentImport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnReconcillationManagement', {
                url: '/brsTrnUnReconcillationManagement',
                title: 'brsTrnUnReconcillationManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillationPendingManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnUnReconcillationCompletedManagement', {
                url: '/brsTrnUnReconcillationCompletedManagement',
                title: 'brsTrnUnReconcillationCompletedManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillationCompletedManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnreconcillationTag', {
                url: '/brsTrnUnreconcillationTag',
                title: 'brsTrnUnreconcillationTag',
                templateUrl: helper.basepath('ems.brs/brsTrnUnreconcillationTag.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.osdTrnUnreconciliationRepaymentView', {
                url: '/osdTrnUnreconciliationRepaymentView',
                title: 'osdTrnUnreconciliationRepaymentView',
                templateUrl: helper.basepath('ems.osd/osdTrnUnreconciliationTransactionView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            
            .state('app.AtmRptAuditVisitReportManagementPendingSummary', {                
                url: '/AtmRptAuditVisitReportManagementPendingSummary',                
                title: 'AtmRptAuditVisitReportManagementPendingSummary',                
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportManagementPendingSummary.html?ver=' + version + '"'),                
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')            
            })
            .state('app.AtmRptAuditVisitReportManagementApprovedSummary', {                
                url: '/AtmRptAuditVisitReportManagementApprovedSummary',                
                title: 'AtmRptAuditVisitReportManagementApprovedSummary',                
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportManagementApprovedSummary.html?ver=' + version + '"'),                
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')            
            })
            .state('app.AtmRptAuditVisitReportManagementApprovedView', {                
                url: '/AtmRptAuditVisitReportManagementApprovedView',                
                title: 'AtmRptAuditVisitReportManagementApprovedView',                
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportManagementApprovedView.html?ver=' + version + '"'),                
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')            
            })
             .state('app.AtmRptAuditVisitReportManagementPendingView', {                
                url: '/AtmRptAuditVisitReportManagementPendingView',                
                title: 'AtmRptAuditVisitReportManagementPendingView',                
                templateUrl: helper.basepath('ems.audit/AtmRptAuditVisitReportManagementPendingView.html?ver=' + version + '"'),                
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')            
            })
            .state('app.brsTrnUnreconTagViewAssignedHistory', {
                url: '/brsTrnUnreconTagViewAssignedHistory',
                title: 'brsTrnUnreconTagViewAssignedHistory',
                templateUrl: helper.basepath('ems.brs/brsTrnUnreconTagViewAssignedHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsMstTemplateSummary', {
                url: '/brsMstTemplateSummary',
                title: 'brsMstTemplateSummary',
                templateUrl: helper.basepath('ems.brs/brsMstTemplateSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsMstRepaymentTemplate', {
                url: '/brsMstRepaymentTemplate',
                title: 'brsMstRepaymentTemplate',
                templateUrl: helper.basepath('ems.brs/brsMstRepaymentTemplate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSanctionTemplateSummary', {
                url: '/MstSanctionTemplateSummary',
                title: 'MstSanctionTemplateSummary',
                templateUrl: helper.basepath('ems.master/MstSanctionTemplateSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })
            .state('app.MstSanctionAddTemplate', {
                url: '/MstSanctionAddTemplate',
                title: 'MstSanctionAddTemplate',
                templateUrl: helper.basepath('ems.master/MstSanctionAddTemplate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })
            .state('app.MstSanctionEditTemplate', {
                url: '/MstSanctionEditTemplate',
                title: 'MstSanctionEditTemplate',
                templateUrl: helper.basepath('ems.master/MstSanctionEditTemplate.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'textAngular', 'ngWig')
            })
            .state('app.brsTrnRepaymentReconcillation', {
                url: '/brsTrnRepaymentReconcillation',
                title: 'brsTrnRepaymentReconcillation',
                templateUrl: helper.basepath('ems.brs/brsTrnRepaymentReconcillation.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnRepaymentUnReconcillation', {
                url: '/brsTrnRepaymentUnReconcillation',
                title: 'brsTrnRepaymentUnReconcillation',
                templateUrl: helper.basepath('ems.brs/brsTrnRepaymentUnReconcillation.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnReconcillationdebit', {
                url: '/brsTrnReconcillationdebit',
                title: 'brsTrnReconcillationdebit',
                templateUrl: helper.basepath('ems.brs/brsTrnReconcillationdebit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnReconcillationdebit', {
                url: '/brsTrnUnReconcillationdebit',
                title: 'brsTrnUnReconcillationdebit',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillationdebit.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnReconcillationPendingdebitManagement', {
                url: '/brsTrnUnReconcillationPendingdebitManagement',
                title: 'brsTrnUnReconcillationPendingdebitManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillationPendingdebitManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnReconcillationCompleteddebitManagement', {
                url: '/brsTrnUnReconcillationCompleteddebitManagement',
                title: 'brsTrnUnReconcillationCompleteddebitManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconcillationCompleteddebitManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnreconcillationTransfer', {
                url: '/brsTrnUnreconcillationTransfer',
                title: 'brsTrnUnreconcillationTransfer',
                templateUrl: helper.basepath('ems.brs/brsTrnUnreconcillationTransfer.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnMyUnReconClosedSummary', {
                url: '/brsTrnMyUnReconClosedSummary',
                title: 'brsTrnMyUnReconClosedSummary',
                templateUrl: helper.basepath('ems.brs/brsTrnMyUnReconClosedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnMyUnReconciliationSummary', {
                url: '/brsTrnMyUnReconciliationSummary',
                title: 'brsTrnMyUnReconciliationSummary',
                templateUrl: helper.basepath('ems.brs/brsTrnMyUnReconciliationSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementDocument', {                
                url: '/MstDisbursementDocument',                
                title: 'MstDisbursementDocument',                
                templateUrl: helper.basepath('ems.master/MstDisbursementDocument.html?ver=' + version + '"'),                
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')            
            })
            .state('app.MstDeviationApprovalGroup', {
                url: '/MstDeviationApprovalGroup',
                title: 'MstDeviationApprovalGroup',
                templateUrl: helper.basepath('ems.master/MstDeviationApprovalGroup.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCADPSLCSAGuarantorDetails', {
                url: '/MstCADPSLCSAGuarantorDetails',
                title: 'MstCADPSLCSAGuarantorDetails',
                templateUrl: helper.basepath('ems.master/MstCADPSLCSAGuarantorDetails.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
        
            .state('app.SysprtAgriCommerceTradeReceivablesQuality', {
                url: '/SysprtAgriCommerceTradeReceivablesQuality',
                title: 'SysprtAgriCommerceTradeReceivablesQuality',
                templateUrl: helper.basepath('ems.system/SysprtAgriCommerceTradeReceivablesQuality.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })

            .state('app.SysprtAgriFinanceApplicationStatus', {
                url: '/SysprtAgriFinanceApplicationStatus',
                title: 'SysprtAgriFinanceApplicationStatus',
                templateUrl: helper.basepath('ems.system/SysprtAgriFinanceApplicationStatus.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })

            .state('app.SysprtAgriCommerceApplicationStatus', {
                url: '/SysprtAgriCommerceApplicationStatus',
                title: 'SysprtAgriCommerceApplicationStatus',
                templateUrl: helper.basepath('ems.system/SysprtAgriCommerceApplicationStatus.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
            })

            .state('app.EnquiryRequire', {
                url: '/EnquiryRequire',
                title: 'EnquiryRequire',
                templateUrl: helper.basepath('ems.businessteam/EnquiryRequire.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.StartupRequire', {
                url: '/StartupRequire',
                title: 'StartupRequire',
                templateUrl: helper.basepath('ems.businessteam/StartupRequire.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSBAManagement', {
                url: '/MstSBAManagement',
                title: 'MstSBAManagement',
                templateUrl: helper.basepath('ems.master/MstSBAManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
            .state('app.MstSBAIndividualManagement', {
                url: '/MstSBAIndividualManagement',
                title: 'MstSBAIndividualManagement',
                templateUrl: helper.basepath('ems.master/MstSBAIndividualManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
            .state('app.brsTrnCreditMatched', {
                url: '/brsTrnCreditMatched',
                title: 'brsTrnCreditMatched',
                templateUrl: helper.basepath('ems.brs/brsTrnCreditMatched.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnDebitMatched', {
                url: '/brsTrnDebitMatched',
                title: 'brsTrnDebitMatched',
                templateUrl: helper.basepath('ems.brs/brsTrnDebitMatched.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnCreditPartialMatched', {
                url: '/brsTrnCreditPartialMatched',
                title: 'brsTrnCreditPartialMatched',
                templateUrl: helper.basepath('ems.brs/brsTrnCreditPartialMatched.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnCreditUnMatchedUnAssigned', {
                url: '/brsTrnCreditUnMatchedUnAssigned',
                title: 'brsTrnCreditUnMatchedUnAssigned',
                templateUrl: helper.basepath('ems.brs/brsTrnCreditUnMatchedUnAssigned.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnCreditUnMatchedAssigned', {
                url: '/brsTrnCreditUnMatchedAssigned',
                title: 'brsTrnCreditUnMatchedAssigned',
                templateUrl: helper.basepath('ems.brs/brsTrnCreditUnMatchedAssigned.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnCreditClosed', {
                url: '/brsTrnCreditClosed',
                title: 'brsTrnCreditClosed',
                templateUrl: helper.basepath('ems.brs/brsTrnCreditClosed.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })



            .state('app.brsTrnDebitPartialMatched', {
                url: '/brsTrnDebitPartialMatched',
                title: 'brsTrnDebitPartialMatched',
                templateUrl: helper.basepath('ems.brs/brsTrnDebitPartialMatched.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnDebitUnMatchedUnAssigned', {
                url: '/brsTrnDebitUnMatchedUnAssigned',
                title: 'brsTrnDebitUnMatchedUnAssigned',
                templateUrl: helper.basepath('ems.brs/brsTrnDebitUnMatchedUnAssigned.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnDebitUnMatchedAssigned', {
                url: '/brsTrnDebitUnMatchedAssigned',
                title: 'brsTrnDebitUnMatchedAssigned',
                templateUrl: helper.basepath('ems.brs/brsTrnDebitUnMatchedAssigned.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnDebitClosed', {
                url: '/brsTrnDebitClosed',
                title: 'brsTrnDebitClosed',
                templateUrl: helper.basepath('ems.brs/brsTrnDebitClosed.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnUnreconCreditSummaryManagement', {
                url: '/brsTrnUnreconCreditSummaryManagement',
                title: 'brsTrnUnreconCreditSummaryManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnreconCreditSummaryManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnUnReconCreditAssignedManagement', {
                url: '/brsTrnUnReconCreditAssignedManagement',
                title: 'brsTrnUnReconCreditAssignedManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconCreditAssignedManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnUnReconCreditClosedManagement', {
                url: '/brsTrnUnReconCreditClosedManagement',
                title: 'brsTrnUnReconCreditClosedManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconCreditClosedManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.brsTrnUnreconDebitSummaryManagement', {
                url: '/brsTrnUnreconDebitSummaryManagement',
                title: 'brsTrnUnreconDebitSummaryManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnreconDebitSummaryManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnUnReconDebitAssignedManagement', {
                url: '/brsTrnUnReconDebitAssignedManagement',
                title: 'brsTrnUnReconDebitAssignedManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconDebitAssignedManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })


            .state('app.brsTrnUnReconDebitClosedManagement', {
                url: '/brsTrnUnReconDebitClosedManagement',
                title: 'brsTrnUnReconDebitClosedManagement',
                templateUrl: helper.basepath('ems.brs/brsTrnUnReconCreditClosedManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.MstFieldMappingSummary', {
                 url: '/MstFieldMappingSummary',
                 title: 'MstFieldMappingSummary',
                 templateUrl: helper.basepath('ems.master/MstFieldMappingSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

            .state('app.brsTrnMyUnReconAlloactedPendingSummary', {
                url: '/brsTrnMyUnReconAlloactedPendingSummary',
                title: 'brsTrnMyUnReconAlloactedPendingSummary',
                templateUrl: helper.basepath('ems.brs/brsTrnMyUnReconAlloactedPendingSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.brsTrnPartialMatchedView', {
                url: '/brsTrnPartialMatchedView',
                title: 'brsTrnPartialMatchedView',
                templateUrl: helper.basepath('ems.brs/brsTrnPartialMatchedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstCreditManagerRejectRevokeSummary', {
                url: '/MstCreditManagerRejectRevokeSummary',
                title: 'MstCreditManagerRejectRevokeSummary',
                templateUrl: helper.basepath('ems.master/MstCreditManagerRejectRevokeSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCreditManagerRejectRevoke', {
                url: '/MstCreditManagerRejectRevoke',
                title: 'MstCreditManagerRejectRevoke',
                templateUrl: helper.basepath('ems.master/MstCreditManagerRejectRevoke.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.SBAProfileDetails', {
                url: '/SBAProfileDetails',
                title: 'SBAProfileDetails',
                templateUrl: helper.basepath('ems.sbiform/SBAProfileDetails.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSBAManagementInstitutionCodeCreateView', {
                url: '/MstSBAManagementInstitutionCodeCreateView',
                title: 'MstSBAManagementInstitutionCodeCreateView',
                templateUrl: helper.basepath('ems.master/MstSBAManagementInstitutionCodeCreateView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSBAManagementIndividualCodeCreateView', {
                url: '/MstSBAManagementIndividualCodeCreateView',
                title: 'MstSBAManagementIndividualCodeCreateView',
                templateUrl: helper.basepath('ems.master/MstSBAManagementIndividualCodeCreateView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AtmTrnTaggedAuditeeObservationScoreView', {
                url: '/AtmTrnTaggedAuditeeObservationScoreView',
                title: 'AtmTrnTaggedAuditeeObservationScoreView',
                templateUrl: helper.basepath('ems.audit/AtmTrnTaggedAuditeeObservationScoreView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingInstitutionRenewalGrouping', {
                url: '/MstSAOnboardingInstitutionRenewalGrouping',
                title: 'MstSAOnboardingInstitutionRenewalGrouping',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionRenewalGrouping.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingIndividualRenewalGrouping', {
                url: '/MstSAOnboardingIndividualRenewalGrouping',
                title: 'MstSAOnboardingIndividualRenewalGrouping',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualRenewalGrouping.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingInstitutionRenewal', {
                url: '/MstSAOnboardingInstitutionRenewal',
                title: 'MstSAOnboardingInstitutionRenewal',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionRenewal.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingIndividualRenewal', {
                url: '/MstSAOnboardingIndividualRenewal',
                title: 'MstSAOnboardingIndividualRenewal',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualRenewal.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAInstitutionActivityManagement', {
                url: '/MstSAInstitutionActivityManagement',
                title: 'MstSAInstitutionActivityManagement',
                templateUrl: helper.basepath('ems.master/MstSAInstitutionActivityManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSBAIndividualActivityManagement', {
                url: '/MstSBAIndividualActivityManagement',
                title: 'MstSBAIndividualActivityManagement',
                templateUrl: helper.basepath('ems.master/MstSBAIndividualActivityManagement.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingInstitutionRejectedView', {
                url: '/MstSAOnboardingInstitutionRejectedView',
                title: 'MstSAOnboardingInstitutionRejectedView',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionRejectedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingIndividualRejectedView', {
                url: '/MstSAOnboardingIndividualRejectedView',
                title: 'MstSAOnboardingIndividualRejectedView',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualRejectedView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAOnboardingRejectedSummary', {
                url: '/MstSAOnboardingRejectedSummary',
                title: 'MstSAOnboardingRejectedSummary',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingIndividualRejectedSummary', {
                url: '/MstSAOnboardingIndividualRejectedSummary',
                title: 'MstSAOnboardingIndividualRejectedSummary',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingInstitutionGrouping', {
                url: '/MstSAOnboardingInstitutionGrouping',
                title: 'MstSAOnboardingInstitutionGrouping',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingInstitutionGrouping.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAOnboardingIndividualGrouping', {
                url: '/MstSAOnboardingIndividualGrouping',
                title: 'MstSAOnboardingIndividualGrouping',
                templateUrl: helper.basepath('ems.master/MstSAOnboardingIndividualGrouping.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstRMCustomerDashboard', {
                url: '/MstRMCustomerDashboard',
                title: 'MstRMCustomerDashboard',
                templateUrl: helper.basepath('ems.master/MstRMCustomerDashboard.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementDeferralDocument', {
                url: '/MstDisbursementDeferralDocument',
                title: 'MstDisbursementDeferralDocument',
                templateUrl: helper.basepath('ems.master/MstDisbursementDeferralDocument.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementBuyerDtlView', {
                url: '/MstDisbursementBuyerDtlView',
                title: 'MstDisbursementBuyerDtlView',
                templateUrl: helper.basepath('ems.master/MstDisbursementBuyerDtlView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbIndividualFarmerDtlView', {
                url: '/MstDisbIndividualFarmerDtlView',
                title: 'MstDisbIndividualFarmerDtlView',
                templateUrl: helper.basepath('ems.master/MstDisbIndividualFarmerDtlView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbCoApplicantDtlAdd', {
                url: '/MstDisbCoApplicantDtlAdd',
                title: 'MstDisbCoApplicantDtlAdd',
                templateUrl: helper.basepath('ems.master/MstDisbCoApplicantDtlAdd.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbCoApplicantContactDtlView', {
                url: '/MstDisbCoApplicantContactDtlView',
                title: 'MstDisbCoApplicantContactDtlView',
                templateUrl: helper.basepath('ems.master/MstDisbCoApplicantContactDtlView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementRejectedSummary', {
                url: '/MstDisbursementRejectedSummary',
                title: 'MstDisbursementRejectedSummary',
                templateUrl: helper.basepath('ems.master/MstDisbursementRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCreditOpsDisbursementRejectedSummary', {
                url: '/MstCreditOpsDisbursementRejectedSummary',
                title: 'MstCreditOpsDisbursementRejectedSummary',
                templateUrl: helper.basepath('ems.master/MstCreditOpsDisbursementRejectedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstDisbursementBankAccount', {
                url: '/MstDisbursementBankAccount',
                title: 'MstDisbursementBankAccount',
                templateUrl: helper.basepath('ems.master/MstDisbursementBankAccount.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementODBelow30', {
                url: '/MstDisbursementODBelow30',
                title: 'MstDisbursementODBelow30',
                templateUrl: helper.basepath('ems.master/MstDisbursementODBelow30.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstDisbursementODBelow90', {
                url: '/MstDisbursementODBelow90',
                title: 'MstDisbursementODBelow90',
                templateUrl: helper.basepath('ems.master/MstDisbursementODBelow90.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstPenalWaiver', {
                url: '/MstPenalWaiver',
                title: 'MstPenalWaiver',
                templateUrl: helper.basepath('ems.master/MstPenalWaiver.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstVerticalDisbursementDocument', {
                url: '/MstVerticalDisbursementDocument',
                title: 'MstVerticalDisbursementDocument',
                templateUrl: helper.basepath('ems.master/MstVerticalDisbursementDocument.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstCADCustomerCreationLMS', {
            url: '/MstCADCustomerCreationLMS',
            title: 'MstCADCustomerCreationLMS',
            templateUrl: helper.basepath('ems.master/MstCADCustomerCreationLMS.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstCustomerCreationRequestSummary', {
            url: '/MstCustomerCreationRequestSummary',
            title: 'MstCustomerCreationRequestSummary',
            templateUrl: helper.basepath('ems.master/MstCustomerCreationRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.MstCustomerUpdatedRequestSummary', {
            url: '/MstCustomerUpdatedRequestSummary',
            title: 'MstCustomerUpdatedRequestSummary',
            templateUrl: helper.basepath('ems.master/MstCustomerUpdatedRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCustomerRejectedRequestSummary', {
            url: '/MstCustomerRejectedRequestSummary',
            title: 'MstCustomerRejectedRequestSummary',
            templateUrl: helper.basepath('ems.master/MstCustomerRejectedRequestSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstCustomercreationlmsurnupdation', {
            url: '/MstCustomercreationlmsurnupdation',
            title: 'MstCustomercreationlmsurnupdation',
            templateUrl: helper.basepath('ems.master/MstCustomercreationlmsurnupdation.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.MstDocumentChecklistApprovalCompletedReport', {
             url: '/MstDocumentChecklistApprovalCompletedReport',
             title: 'MstDocumentChecklistApprovalCompletedReport',
             templateUrl: helper.basepath('ems.master/MstDocumentChecklistApprovalCompletedReport.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
       
        
        // -----------------------------------
        // -----------------------------------
        //	
        // CUSTOM RESOLVES
        //   Add your own resolves properties
        //   following this object extend
        //   method
        // -----------------------------------
        // .state('app.someroute', {
        //   url: '/some_url',
        //   templateUrl: 'path_to_template.html',
        //   controller: 'someController',
        //   resolve: angular.extend(
        //     helper.resolveFor(), {
        //     // YOUR RESOLVES GO HERE
        //     }
        //   )
        // })
        ;

    } // routesConfig

    angular.module('angle').config(['$httpProvider', function ($httpProvider) {
        $httpProvider.interceptors.push(["$q", "$location", "$rootScope", "$cookies", function ($q, $location, $rootScope, $cookies) {
            return {
                'request': function (config) {
                    config.headers.Authorization = $cookies.getObject('token');
                    //$http.defaults.headers.common.Authorization = localStorage.getItem("token");
                    return config;
                },
                'response': function (response) {
                    //Will only be called for HTTP up to 300
                    //console.log(response);
                    return response;
                },
                'responseError': function (rejection) {

                    if (rejection.status === 401) {
                        // $location.url('page/404?errno=401');
                    }
                    else if (rejection.status === 404) {
                        //console.log('404');
                        //$location.url('page/404?errno=404');
                    }
                    else if (rejection.status === 400) {
                        // $location.url('page/404?errno=400');
                    }
                    else if (rejection.status === 403) {
                        // $location.url('page/404?errno=403');
                    }
                    ////$state.go('page.404');
                    if (rejection.message === 404) {
                        //location.reload();
                    }
                    return $q.reject(rejection);
                }
            };
        }]);
    }]); 


})();
/**=========================================================
 * Module: config.js
 * App routes and resources configuration
 =========================================================*/


 (function () {
     'use strict';

     angular
         .module('app.routes')
         .config(routesConfig);

     routesConfig.$inject = ['$stateProvider', '$locationProvider', '$urlRouterProvider', 'RouteHelpersProvider'];
     function routesConfig($stateProvider, $locationProvider, $urlRouterProvider, helper) {

         // Set the following to true to enable the HTML5 Mode
         // You may have to set <base> tag in index and a routing configuration in your server
         $locationProvider.html5Mode(false);

         // defaults to dashboard
         $urlRouterProvider.otherwise('/page/user_login');

         // version update
         var version = '1.0';

         // 
         // Application Routes
         // -----------------------------------   
         $stateProvider
        
        

         .state('app.AgrTrnCreditCommitteeSummary', {
            url: '/AgrTrnCreditCommitteeSummary',
            title: 'AgrTrnCreditCommitteeSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditCommitteeSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
    .state('app.AgrTrnCcScheduledMeetingSummary', {
            url: '/AgrTrnCcScheduledMeetingSummary',
            title: 'AgrTrnCcScheduledMeetingSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcScheduledMeetingSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')
        })
   .state('app.AgrMstSupplierSummary', {
            url: '/AgrMstSupplierSummary',
            title: 'AgrMstSupplierSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

  .state('app.AgrMstCadDeferralSummary', {
            url: '/AgrMstCadDeferralSummary',
            title: 'AgrMstCadDeferralSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadDeferralSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrMstLoanProductsSummary', {
            url: '/AgrMstLoanProductsSummary',
            title: 'AgrMstLoanProductsSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstLoanProductsSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     .state('app.AgrMstLoanSubProduct', {
            url: '/AgrMstLoanSubProduct',
            title: 'AgrMstLoanSubProduct',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstLoanSubProduct.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrTrnCCscheduledSummary', {
            url: '/AgrTrnCCscheduledSummary',
            title: 'AgrTrnCCscheduledSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCscheduledSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrTrnCCCompletedSummary', {
            url: '/AgrTrnCCCompletedSummary',
            title: 'AgrTrnCCCompletedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrTrnSentbackcctoCredit', {
            url: '/AgrTrnSentbackcctoCredit',
            title: 'AgrTrnSentbackcctoCredit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSentbackcctoCredit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrTrnCcCompletedScheduledMeeting', {
            url: '/AgrTrnCcCompletedScheduledMeeting',
            title: 'AgrTrnCcCompletedScheduledMeeting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcCompletedScheduledMeeting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
         .state('app.AgrTrnCreditApprovalSummary', {
            url: '/AgrTrnCreditApprovalSummary',
            title: 'AgrTrnCreditApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AgrTrnCreditApprovedSummary', {
            url: '/AgrTrnCreditApprovedSummary',
            title: 'AgrTrnCreditApprovedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCreditSubmittedtoCCSummary', {
            url: '/AgrTrnCreditSubmittedtoCCSummary',
            title: 'AgrTrnCreditSubmittedtoCCSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditSubmittedtoCCSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCreditCCSkippedSummary', {
            url: '/AgrTrnCreditCCSkippedSummary',
            title: 'AgrTrnCreditCCSkippedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditCCSkippedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCreditRejectandHoldSummary', {
            url: '/AgrTrnCreditRejectandHoldSummary',
            title: 'AgrTrnCreditRejectandHoldSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditRejectandHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
    .state('app.AgrMstCadDeferralCheckerSummary', {
      url: '/AgrMstCadDeferralCheckerSummary',
      title: 'AgrMstCadDeferralCheckerSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadDeferralCheckerSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

     .state('app.AgrMstRMCustomerSummary', {
            url: '/AgrMstRMCustomerSummary',
            title: 'AgrMstRMCustomerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstRMCustomerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
	.state('app.AgrMstCadDeferralApprovalSummary', {
      url: '/AgrMstCadDeferralApprovalSummary',
      title: 'AgrMstCadDeferralApprovalSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadDeferralApprovalSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })
	.state('app.AgrMstScannedCompletedSummary', {
      url: '/AgrMstScannedCompletedSummary',
      title: 'AgrMstScannedCompletedSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstScannedCompletedSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })
	.state('app.AgrMstCadChequeManagementSummary', {
      url: '/AgrMstCadChequeManagementSummary',
      title: 'AgrMstCadChequeManagementSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadChequeManagementSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

    .state('app.AgrMstCadChequeMgmtCheckerSummary', {
      url: '/AgrMstCadChequeMgmtCheckerSummary',
      title: 'AgrMstCadChequeMgmtCheckerSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadChequeMgmtCheckerSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

    .state('app.AgrMstCadChequeMgmtApprovalSummary', {
      url: '/AgrMstCadChequeMgmtApprovalSummary',
      title: 'AgrMstCadChequeMgmtApprovalSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadChequeMgmtApprovalSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

    .state('app.AgrMstChequeApprovalCompleted', {
      url: '/AgrMstChequeApprovalCompleted',
      title: 'AgrMstChequeApprovalCompleted',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstChequeApprovalCompleted.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

	.state('app.AgrMstApplicationCreationSummary', {
      url: '/AgrMstApplicationCreationSummary',
      title: 'AgrMstApplicationCreationSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationCreationSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.AgrMstRejectedApplicationSummary', {
      url: '/AgrMstRejectedApplicationSummary',
      title: 'AgrMstRejectedApplicationSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstRejectedApplicationSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.AgrMstHoldApplicationSummary', {
      url: '/AgrMstHoldApplicationSummary',
      title: 'AgrMstHoldApplicationSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstHoldApplicationSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })
    .state('app.AgrMstApprovedApplicationSummary', {
      url: '/AgrMstApprovedApplicationSummary',
      title: 'AgrMstApprovedApplicationSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstApprovedApplicationSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

	.state('app.AgrTrnCadPhysicalDocCheckerSummary', {
      url: '/AgrTrnCadPhysicalDocCheckerSummary',
      title: 'AgrTrnCadPhysicalDocCheckerSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocCheckerSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

        .state('app.AgrTrnCadDocumentChecklistSummary', {
            url: '/AgrTrnCadDocumentChecklistSummary',
            title: 'AgrTrnCadDocumentChecklistSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDocumentChecklistSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

      .state('app.AgrTrnCadDocChecklistCheckerSummary', {
            url: '/AgrTrnCadDocChecklistCheckerSummary',
            title: 'AgrTrnCadDocChecklistCheckerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDocChecklistCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     .state('app.AgrTrnCadDocChecklistApprovalSummary', {
            url: '/AgrTrnCadDocChecklistApprovalSummary',
            title: 'AgrTrnCadDocChecklistApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDocChecklistApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrTrnCadPhysicalDocCompletedSummary', {
      url: '/AgrTrnCadPhysicalDocCompletedSummary',
      title: 'AgrTrnCadPhysicalDocCompletedSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocCompletedSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })
	.state('app.AgrTrnCadPhysicalDocSummary', {
      url: '/AgrTrnCadPhysicalDocSummary',
      title: 'AgrTrnCadPhysicalDocSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })
	.state('app.AgrTrnCadPhysicalDocApprovalSummary', {
      url: '/AgrTrnCadPhysicalDocApprovalSummary',
      title: 'AgrTrnCadPhysicalDocApprovalSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocApprovalSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })
    .state('app.AgrMstUDCMakerSummary', {
            url: '/AgrMstUDCMakerSummary',
            title: 'AgrMstUDCMakerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstUDCMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrMstUDCMakerAdd', {
            url: '/AgrMstUDCMakerAdd',
            title: 'AgrMstUDCMakerAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstUDCMakerAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrMstUDCMakerView', {
            url: '/AgrMstUDCMakerView',
            title: 'AgrMstUDCMakerView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstUDCMakerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

   .state('app.AgrMstUDCMakerEditCheque', {
            url: '/AgrMstUDCMakerEditCheque',
            title: 'AgrMstUDCMakerView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstUDCMakerEditCheque.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


    .state('app.AgrMstChequeCheckerDtls', {
            url: '/AgrMstChequeCheckerDtls',
            title: 'AgrMstChequeCheckerDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstChequeCheckerDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


  .state('app.AgrMstChequeApprovalDtls', {
            url: '/AgrMstChequeApprovalDtls',
            title: 'AgrMstChequeApprovalDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstChequeApprovalDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


   .state('app.AgrMstChequeMakerFollowDtls', {
            url: '/AgrMstChequeMakerFollowDtls',
            title: 'AgrMstChequeMakerFollowDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstChequeMakerFollowDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


  .state('app.AgrMstCadApplicationView', {
            url: '/AgrMstCadApplicationView',
            title: 'AgrMstCadApplicationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


    .state('app.AgrTrnCadDeferralGuarantorDtls', {
      url: '/AgrTrnCadDeferralGuarantorDtls',
      title: 'AgrTrnCadDeferralGuarantorDtls',
      templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDeferralGuarantorDtls.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })


  .state('app.AgrTrnPendingCADReview', {
            url: '/AgrTrnPendingCADReview',
            title: 'AgrTrnPendingCADReview',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPendingCADReview.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
            
        .state('app.AgrTrnCadAcceptedCustomers', {
            url: '/AgrTrnCadAcceptedCustomers',
            title: 'AgrTrnCadAcceptedCustomers',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadAcceptedCustomers.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSentBackToUnderwriting', {
            url: '/AgrTrnSentBackToUnderwriting',
            title: 'AgrTrnSentBackToUnderwriting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSentBackToUnderwriting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSentBackToCC', {
            url: '/AgrTrnSentBackToCC',
            title: 'AgrTrnSentBackToCC',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSentBackToCC.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCCRejectedApplications', {
            url: '/AgrTrnCCRejectedApplications',
            title: 'AgrTrnCCRejectedApplications',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCRejectedApplications.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrAppassignedAssignmentSummary', {
	url: '/AgrAppassignedAssignmentSummary',
	title: 'AgrAppassignedAssignmentSummary',
	templateUrl: helper.basepath('ems.mastersamagro/AgrAppassignedAssignmentSummary.html?ver=' + version + '"'),
	resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })



    .state('app.AgrApplicationAssignmentSummary', {
     url: '/AgrApplicationAssignmentSummary',
     title: 'AgrApplicationAssignmentSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrApplicationAssignmentSummary.html?ver=' + version + '"'),
    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })



    .state('app.AgrApplSubmittedtoCCSummary', {
    url: '/AgrApplSubmittedtoCCSummary',
   title: 'AgrApplSubmittedtoCCSummary',
    templateUrl: helper.basepath('ems.mastersamagro/AgrApplSubmittedtoCCSummary.html?ver=' + version + '"'),
   resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })



    .state('app.AgrMstMyApplicationsSummary', {
    url: '/AgrMstMyApplicationsSummary',
    title: 'AgrMstMyApplicationsSummary',
    templateUrl: helper.basepath('ems.mastersamagro/AgrMstMyApplicationsSummary.html?ver=' + version + '"'),
    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })



    .state('app.AgrMstSubmittedtoApprovalSummary', {
     url: '/AgrMstSubmittedtoApprovalSummary',
     title: 'AgrMstSubmittedtoApprovalSummary',
     templateUrl: helper.basepath('ems.mastersamagro/AgrMstSubmittedtoApprovalSummary.html?ver=' + version + '"'),
    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })



      .state('app.AgrMstSubmittedtoCCSummary', {
      url: '/AgrMstSubmittedtoCCSummary',
       title: 'AgrMstSubmittedtoCCSummary',
     templateUrl: helper.basepath('ems.mastersamagro/AgrMstSubmittedtoCCSummary.html?ver=' + version + '"'),
      resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })



       .state('app.AgrMstCCSkippedApplicationSummary', {
        url: '/AgrMstCCSkippedApplicationSummary',
       title: 'AgrMstCCSkippedApplicationSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstCCSkippedApplicationSummary.html?ver=' + version + '"'),
     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

     .state('app.AgrMstRejectandHoldSummary', {
     url: '/AgrMstRejectandHoldSummary',
     title: 'AgrMstRejectandHoldSummary',
      templateUrl: helper.basepath('ems.mastersamagro/AgrMstRejectandHoldSummary.html?ver=' + version + '"'),
     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })

	.state('app.AgrTrnCadDeferralDochecklist', {
            url: '/AgrTrnCadDeferralDochecklist',
            title: 'AgrTrnCadDeferralDochecklist',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDeferralDochecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
	.state('app.AgrTrnScannedDeferralHistory', {
            url: '/AgrTrnScannedDeferralHistory',
            title: 'AgrTrnScannedDeferralHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnScannedDeferralHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
	.state('app.AgrTrnCadDeferralQuery', {
            url: '/AgrTrnCadDeferralQuery',
            title: 'AgrTrnCadDeferralQuery',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDeferralQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AgrTrnCadDeferralStatus', {
            url: '/AgrTrnCadDeferralStatus',
            title: 'AgrTrnCadDeferralStatus',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDeferralStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AgrTrnCadDocChecklistSummary', {
            url: '/AgrTrnCadDocChecklistSummary',
            title: 'AgrTrnCadDocChecklistSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDocChecklistSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


	.state('app.AgrTrnCcCommitteeApplicationView', {
            url: '/AgrTrnCcCommitteeApplicationView',
            title: 'AgrTrnCcCommitteeApplicationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcCommitteeApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     
      .state('app.AgrTrnCadGuarantorDetails', {
            url: '/AgrTrnCadGuarantorDetails',
            title: 'AgrTrnCadGuarantorDetails',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadGuarantorDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
      .state('app.AgrTrnCadDocumentChecklistAdd', {
            url: '/AgrTrnCadDocumentChecklistAdd',
            title: 'AgrTrnCadDocumentChecklistAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadDocumentChecklistAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	 .state('app.AgrTrnCCMeetingSchedule', {
            url: '/AgrTrnCCMeetingSchedule',
            title: 'AgrTrnCCMeetingSchedule',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCMeetingSchedule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     .state('app.AgrTrnSentbackCadtoCcHistory', {
            url: '/AgrTrnSentbackCadtoCcHistory',
            title: 'AgrTrnSentbackCadtoCcHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSentbackCadtoCcHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     .state('app.AgrTrnCCMeetingReschedule', {
            url: '/AgrTrnCCMeetingReschedule',
            title: 'AgrTrnCCMeetingReschedule',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCMeetingReschedule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

      .state('app.AgrTrnCcScheduledMeetingDtlView', {
            url: '/AgrTrnCcScheduledMeetingDtlView',
            title: 'AgrTrnCcScheduledMeetingDtlView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcScheduledMeetingDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
 

	 .state('app.AgrTrnApplCreationGradingToolView', {
            url: '/AgrTrnApplCreationGradingToolView',
            title: 'AgrTrnApplCreationGradingToolView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnApplCreationGradingToolView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
 
	 .state('app.AgrTrnApplCreationVisitReportView', {
            url: '/AgrTrnApplCreationVisitReportView',
            title: 'AgrTrnApplCreationVisitReportView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnApplCreationVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
 
 	.state('app.AgrTrnCCCommitteeInstitutionView', {
            url: '/AgrTrnCCCommitteeInstitutionView',
            title: 'AgrTrnCCCommitteeInstitutionView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCCommitteeInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
 
        .state('app.AgrTrnCCCommitteeGroupView', {
            url: '/AgrTrnCCCommitteeGroupView',
            title: 'AgrTrnCCCommitteeGroupView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCCommitteeGroupView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrIECDetailedProfileView', {
            url: '/AgrIECDetailedProfileView',
            title: 'AgrIECDetailedProfileView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrIECDetailedProfileView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrGSTAuthenticationView', {
            url: '/AgrGSTAuthenticationView',
            title: 'AgrGSTAuthenticationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrGSTAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrGSPGSTINAuthenticationView', {
            url: '/AgrGSPGSTINAuthenticationView',
            title: 'AgrGSPGSTINAuthenticationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrGSPGSTINAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
       .state('app.AgrGSPGSTReturnFilingView', {
            url: '/AgrGSPGSTReturnFilingView',
            title: 'AgrGSPGSTReturnFilingView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrGSPGSTReturnFilingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AgrRCAuthAdvancedView', {
            url: '/AgrRCAuthAdvancedView',
            title: 'AgrRCAuthAdvancedView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrRCAuthAdvancedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrPropertyTaxView', {
            url: '/AgrPropertyTaxView',
            title: 'AgrPropertyTaxView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrPropertyTaxView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

	.state('app.AgrMstCreditAssessedScoreAdd', {
            url: '/AgrMstCreditAssessedScoreAdd',
            title: 'AgrMstCreditAssessedScoreAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditAssessedScoreAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
            
        .state('app.AgrMstCreditAssessedScoreEdit', {
            url: '/AgrMstCreditAssessedScoreEdit',
            title: 'AgrMstCreditAssessedScoreEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditAssessedScoreEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
                
        .state('app.AgrMstCreditAssessedScoreView', {
            url: '/AgrMstCreditAssessedScoreView',
            title: 'AgrMstCreditAssessedScoreView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditAssessedScoreView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

            
        .state('app.AgrMstRMAssessedScoreView', {
            url: '/AgrMstRMAssessedScoreView',
            title: 'AgrMstRMAssessedScoreView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstRMAssessedScoreView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
            
        .state('app.AgrCreditVisitReportAdd', {
            url: '/AgrCreditVisitReportAdd',
            title: 'AgrCreditVisitReportAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrCreditVisitReportAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
            
        .state('app.AgrMstRMVisitReportView', {
            url: '/AgrMstRMVisitReportView',
            title: 'AgrMstRMVisitReportView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstRMVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
            
        .state('app.AgrMstCreditVisitReportView', {
            url: '/AgrMstCreditVisitReportView',
            title: 'AgrMstCreditVisitReportView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
     .state('app.AgrApplicationCreationView', {
	url: '/AgrApplicationCreationView',
	title: 'AgrApplicationCreationView',
	templateUrl: helper.basepath('ems.mastersamagro/AgrApplicationCreationView.html?ver=' + version + '"'),
	resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })
        .state('app.AgrTrnStartScheduledMeeting', {
            url: '/AgrTrnStartScheduledMeeting',
            title: 'AgrTrnStartScheduledMeeting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnStartScheduledMeeting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

.state('app.AgrMstApplicationEditKycView', {
            url: '/AgrMstApplicationEditKycView',
            title: 'AgrMstApplicationEditKycView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationEditKycView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

      .state('app.AgrMstVisitReportAdd', {
        url: '/AgrMstVisitReportAdd',
        title: 'AgrMstVisitReportAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrMstVisitReportAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
      })
      .state('app.AgrMstVisitReportEdit', {
        url: '/AgrMstVisitReportEdit',
        title: 'AgrMstVisitReportEdit',
        templateUrl: helper.basepath('ems.mastersamagro/AgrMstVisitReportEdit.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
      })
      .state('app.AgrMstVisitReportView', {
        url: '/AgrMstVisitReportView',
        title: 'AgrMstVisitReportView',
        templateUrl: helper.basepath('ems.mastersamagro/AgrMstVisitReportView.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
      })


      .state('app.AgrMstApplicationGeneralEdit', {
          url: '/AgrMstApplicationGeneralEdit',
          title: 'AgrMstApplicationGeneralEdit',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationGeneralEdit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstApplicationIndividualEdit', {
          url: '/AgrMstApplicationIndividualEdit',
          title: 'AgrMstApplicationIndividualEdit',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationIndividualEdit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstApplicationInstitutionEdit', {
          url: '/AgrMstApplicationInstitutionEdit',
          title: 'AgrMstApplicationInstitutionEdit',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationInstitutionEdit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

     .state('app.AgrMstApplicationGroupEdit', {
          url: '/AgrMstApplicationGroupEdit',
          title: 'AgrMstApplicationGroupEdit',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationGroupEdit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstApplicationSocialTradeCapitalEdit', {
          url: '/AgrMstApplicationSocialTradeCapitalEdit',
          title: 'AgrMstApplicationSocialTradeCapitalEdit',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationSocialTradeCapitalEdit.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstAppEditOverallLimitAdd', {
          url: '/AgrMstAppEditOverallLimitAdd',
          title: 'AgrMstAppEditOverallLimitAdd',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppEditOverallLimitAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstAppEditProductAdd', {
          url: '/AgrMstAppEditProductAdd',
          title: 'AgrMstAppEditProductAdd',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppEditProductAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

     .state('app.AgrMstAppEditChargeAdd', {
          url: '/AgrMstAppEditChargeAdd',
          title: 'AgrMstAppEditChargeAdd',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppEditChargeAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

     .state('app.AgrMstAppEditHypothecationAdd', {
          url: '/AgrMstAppEditHypothecationAdd',
          title: 'AgrMstAppEditHypothecationAdd',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppEditHypothecationAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrMstApplicationEditCICUploadAdd', {
          url: '/AgrMstApplicationEditCICUploadAdd',
          title: 'AgrMstApplicationEditCICUploadAdd',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationEditCICUploadAdd.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })





.state('app.AgrMstApplicationGeneralAdd', {
url: '/AgrMstApplicationGeneralAdd',
title: 'AgrMstApplicationGeneralAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationGeneralAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationInstitutionAdd', {
url: '/AgrMstApplicationInstitutionAdd',
title: 'AgrMstApplicationInstitutionAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationInstitutionAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})
.state('app.AgrMstApplicationIndividualAdd', {
url: '/AgrMstApplicationIndividualAdd',
title: 'AgrMstApplicationIndividualAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationIndividualAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})
.state('app.AgrMstApplicationGroupAdd', {
url: '/AgrMstApplicationGroupAdd',
title: 'AgrMstApplicationGroupAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationGroupAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})
.state('app.AgrMstApplicationSocialTradeCapitalAdd', {
url: '/AgrMstApplicationSocialTradeCapitalAdd',
title: 'AgrMstApplicationSocialTradeCapitalAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationSocialTradeCapitalAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})




.state('app.AgrMstApplicationOverallLimitAdd', {
url: '/AgrMstApplicationOverallLimitAdd',
title: 'AgrMstApplicationOverallLimitAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationOverallLimitAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationProductChargesAdd', {
url: '/AgrMstApplicationProductChargesAdd',
title: 'AgrMstApplicationProductChargesAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationProductChargesAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationServiceChargeAdd', {
url: '/AgrMstApplicationServiceChargeAdd',
title: 'AgrMstApplicationServiceChargeAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationServiceChargeAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationHypothecationAdd', {
url: '/AgrMstApplicationHypothecationAdd',
title: 'AgrMstApplicationHypothecationAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationHypothecationAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationCICUploadAdd', {
url: '/AgrMstApplicationCICUploadAdd',
title: 'AgrMstApplicationCICUploadAdd',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationCICUploadAdd.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})

.state('app.AgrMstApplcreationBasicdtlEdit', {
url: '/AgrMstApplcreationBasicdtlEdit',
title: 'AgrMstApplcreationBasicdtlEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationBasicdtlEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})
.state('app.AgrMstApplcreationInstitutiondtlEdit', {
url: '/AgrMstApplcreationInstitutiondtlEdit',
title: 'AgrMstApplcreationInstitutiondtlEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationInstitutiondtlEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})
.state('app.AgrMstApplcreationIndividualdtlEdit', {
url: '/AgrMstApplcreationIndividualdtlEdit',
title: 'AgrMstApplcreationIndividualdtlEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationIndividualdtlEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})




.state('app.AgrMstApplcreationGroupdtlEdit', {
url: '/AgrMstApplcreationGroupdtlEdit',
title: 'AgrMstApplcreationGroupdtlEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationGroupdtlEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplcreationSocialTradeEdit', {
url: '/AgrMstApplcreationSocialTradeEdit',
title: 'AgrMstApplcreationSocialTradeEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationSocialTradeEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplcreationProductchargesEdit', {
url: '/AgrMstApplcreationProductchargesEdit',
title: 'AgrMstApplcreationProductchargesEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplcreationProductchargesEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})


.state('app.AgrMstApplicationHypothecationEdit', {
url: '/AgrMstApplicationHypothecationEdit',
title: 'AgrMstApplicationHypothecationEdit',
templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationHypothecationEdit.html?ver=' + version + '"'),
resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
})

.state('app.AgrMstBureauUpdateIndividual', {
     url:'/AgrMstBureauUpdateIndividual',
     title:'AgrMstBureauUpdateIndividual',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstBureauUpdateIndividual.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })


    .state('app.AgrMstApplcreationCICUploadView', {
     url:'/AgrMstApplcreationCICUploadView',
     title:'AgrMstApplcreationCICUploadView',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstApplcreationCICUploadView.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })
 .state('app.AgrMstApplcreationCICUploadEdit', {
     url:'/AgrMstApplcreationCICUploadEdit',
     title:'AgrMstApplcreationCICUploadEdit',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstApplcreationCICUploadEdit.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })


    .state('app.AgrMstBureauUpdateInstitution', {
     url:'/AgrMstBureauUpdateInstitution',
     title:'AgrMstBureauUpdateInstitution',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstBureauUpdateInstitution.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })

 .state('app.AgrMstApplcreationCICUploadInstView', {
     url:'/AgrMstApplcreationCICUploadInstView',
     title:'AgrMstApplcreationCICUploadInstView',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstApplcreationCICUploadInstView.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })


    .state('app.AgrMstApplcreationCICUploadInstEdit', {
     url:'/AgrMstApplcreationCICUploadInstEdit',
     title:'AgrMstApplcreationCICUploadInstEdit',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstApplcreationCICUploadInstEdit.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })
  .state('app.AgrMstApplicationLoanEdit', {
     url:'/AgrMstApplicationLoanEdit',
     title:'AgrMstApplicationLoanEdit',
     templateUrl:helper.basepath('ems.mastersamagro/AgrMstApplicationLoanEdit.html?ver='+version+'"'),
     resolve:helper.resolveFor('oitozero.ngSweetAlert','ui.select','ngTable','ngDialog','datatables','localytics.directives','taginput','inputmask','textAngular')
    })


  .state('app.AgrMstCreditQueryStatus', {
    url: '/AgrMstCreditQueryStatus',
    title: 'AgrMstCreditQueryStatus',
    templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditQueryStatus.html?ver=' + version + '"'),
    resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
    })

  .state('app.AgrGradingToolAdd', {
     url: '/AgrGradingToolAdd',
     title: 'AgrGradingToolAdd',
     templateUrl: helper.basepath('ems.mastersamagro/AgrGradingToolAdd.html?ver=' + version + '"'),
     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

  .state('app.AgrGradingToolView', {
     url: '/AgrGradingToolView',
     title: 'AgrGradingToolView',
     templateUrl: helper.basepath('ems.mastersamagro/AgrGradingToolView.html?ver=' + version + '"'),
     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

   .state('app.AgrGradingToolEdit', {
     url: '/AgrGradingToolEdit',
     title: 'AgrGradingToolEdit',
     templateUrl: helper.basepath('ems.mastersamagro/AgrGradingToolEdit.html?ver=' + version + '"'),
     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrMstSentbackcctoCreditHistory', {
                url: '/AgrMstSentbackcctoCreditHistory',
                title: 'AgrMstSentbackcctoCreditHistory',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstSentbackcctoCreditHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

   .state('app.AgrMstApplCreationGradingToolView', {
            url: '/AgrMstApplCreationGradingToolView',
            title: 'AgrMstApplCreationGradingToolView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplCreationGradingToolView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

   .state('app.AgrMstApplCreationVisitReportView', {
        url: '/AgrMstApplCreationVisitReportView',
        title: 'AgrMstApplCreationVisitReportView',
       templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplCreationVisitReportView.html?ver=' + version + '"'),
       resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

   .state('app.AgrTrnCCCommitteeIndividualView', {
        url: '/AgrTrnCCCommitteeIndividualView',
        title: 'AgrTrnCCCommitteeIndividualView',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCCCommitteeIndividualView.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
       })

    .state('app.AgrCreditAssessedScoreAdd', {
        url: '/AgrCreditAssessedScoreAdd',
        title: 'AgrCreditAssessedScoreAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrCreditAssessedScoreAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

    .state('app.AgrMstCreditVisitReportEdit', {
        url: '/AgrMstCreditVisitReportEdit',
        title: 'AgrMstCreditVisitReportEdit',
        templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditVisitReportEdit.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
       })

     .state('app.AgrMstApplCreationInstitutionGuarantorView', {
          url: '/AgrMstApplCreationInstitutionGuarantorView',
         title: 'AgrMstApplCreationInstitutionGuarantorView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplCreationInstitutionGuarantorView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

     .state('app.AgrMstApplCreationIndividualGuarantorView', {
          url: '/AgrMstApplCreationIndividualGuarantorView',
          title: 'AgrMstApplCreationIndividualGuarantorView',
          templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplCreationIndividualGuarantorView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
       })

     .state('app.AgrMstApplicationCreationRMApproval', {
         url: '/AgrMstApplicationCreationRMApproval',
	title: 'AgrMstApplicationCreationRMApproval',
	templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationCreationRMApproval.html?ver=' + version + '"'),
	resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
     })
.state('app.AgrTrnCreditUnderwritingKycLogView', {
            url: '/AgrTrnCreditUnderwritingKycLogView',
            title: 'AgrTrnCreditUnderwritingKycLogView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditUnderwritingKycLogView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

.state('app.AgrTrnCAMGenerate', {
            url: '/AgrTrnCAMGenerate',
            title: 'AgrTrnCAMGenerate',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCAMGenerate.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

.state('app.AgrTrnRMInstitutionView', {
            url: '/AgrTrnRMInstitutionView',
            title: 'AgrTrnRMInstitutionView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


.state('app.AgrTrnRMIndividualView', {
            url: '/AgrTrnRMIndividualView',
            title: 'AgrTrnRMIndividualView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

.state('app.AgrTrnCreditIndividualDtlView', {
            url: '/AgrTrnCreditIndividualDtlView',
            title: 'AgrTrnCreditIndividualDtlView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
.state('app.AgrTrnCreditCompanyDtlView', {
	url: '/AgrTrnCreditCompanyDtlView',
	title: 'AgrTrnCreditCompanyDtlView',
	templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMIndividualView.html?ver=' + version + '"'),
	resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
	})
 .state('app.AgrTrnDocumentCheckList', {
            url: '/AgrTrnDocumentCheckList',
            title: 'AgrTrnDocumentCheckList',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnDocumentCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnIndividualDocCheckList', {
            url: '/AgrTrnIndividualDocCheckList',
            title: 'AgrTrnIndividualDocCheckList',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnIndividualDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnGroupDocCheckList', {
            url: '/AgrTrnGroupDocCheckList',
            title: 'AgrTrnGroupDocCheckList',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnGroupDocCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditGeneralDtlEdit', {
            url: '/AgrTrnCreditGeneralDtlEdit',
            title: 'AgrTrnCreditGeneralDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGeneralDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

.state('app.AgrTrnCreditInstitutionDtlEdit', {
            url: '/AgrTrnCreditInstitutionDtlEdit',
            title: 'AgrTrnCreditInstitutionDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditInstitutionDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

.state('app.AgrTrnCreditGroupDtlEdit', {
            url: '/AgrTrnCreditGroupDtlEdit',
            title: 'AgrTrnCreditGroupDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditProductChargesDtlEdit', {
            url: '/AgrTrnCreditProductChargesDtlEdit',
            title: 'AgrTrnCreditProductChargesDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditProductChargesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditLoanDtlEdit', {
            url: '/AgrTrnCreditLoanDtlEdit',
            title: 'AgrTrnCreditLoanDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditLoanDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditServicesDtlEdit', {
            url: '/AgrTrnCreditServicesDtlEdit',
            title: 'AgrTrnCreditServicesDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditServicesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditHypothecationEdit', {
            url: '/AgrTrnCreditHypothecationEdit',
            title: 'AgrTrnCreditHypothecationEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditHypothecationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AgrTrnApplGroupMemberdtlView', {
            url: '/AgrTrnApplGroupMemberdtlView',
            title: 'AgrTrnApplGroupMemberdtlView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnApplGroupMemberdtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditAddCovenantCheckList', {
            url: '/AgrTrnCreditAddCovenantCheckList',
            title: 'AgrTrnCreditAddCovenantCheckList',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditAddCovenantCheckList.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AgrTrnCreditEconomicCapitalAdd', {
            url: '/AgrTrnCreditEconomicCapitalAdd',
            title: 'AgrTrnCreditEconomicCapitalAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditEconomicCapitalAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditCompanyDtlAdd', {
            url: '/AgrTrnCreditCompanyDtlAdd',
            title: 'AgrTrnCreditCompanyDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditCompanyDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditPSLDataFlaggingAdd', {
            url: '/AgrTrnCreditPSLDataFlaggingAdd',
            title: 'AgrTrnCreditPSLDataFlaggingAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditPSLDataFlaggingAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
 .state('app.AgrTrnCreditSuppliersDtlAdd', {
            url: '/AgrTrnCreditSuppliersDtlAdd',
            title: 'AgrTrnCreditSuppliersDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditSuppliersDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditBuyerDtlAdd', {
            url: '/AgrTrnCreditBuyerDtlAdd',
            title: 'AgrTrnCreditBuyerDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditBuyerDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditBankAccountDtlAdd', {
            url: '/AgrTrnCreditBankAccountDtlAdd',
            title: 'AgrTrnCreditBankAccountDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditBankAccountDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
.state('app.AgrTrnCreditExistingBankDtlAdd', {
            url: '/AgrTrnCreditExistingBankDtlAdd',
            title: 'AgrTrnCreditExistingBankDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditExistingBankDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditRepaymentDtlAdd', {
            url: '/AgrTrnCreditRepaymentDtlAdd',
            title: 'AgrTrnCreditRepaymentDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditRepaymentDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditObservationAdd', {
            url: '/AgrTrnCreditObservationAdd',
            title: 'AgrTrnCreditObservationAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditCompanyAPIAdd', {
            url: '/AgrTrnCreditCompanyAPIAdd',
            title: 'AgrTrnCreditCompanyAPIAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditCompanyAPIAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrBaseDetailsView', {
            url: '/AgrBaseDetailsView',
            title: 'AgrBaseDetailsView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrBaseDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrComprehensiveDetailsView', {
            url: '/AgrComprehensiveDetailsView',
            title: 'AgrComprehensiveDetailsView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrComprehensiveDetailsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCrimeReportCompanyView', {
            url: '/AgrTrnCrimeReportCompanyView',
            title: 'AgrTrnCrimeReportCompanyView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCrimeReportCompanyView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditBankStatementAnalysisAdd', {
            url: '/AgrTrnCreditBankStatementAnalysisAdd',
            title: 'AgrTrnCreditBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditFsaDetailAdd', {
            url: '/AgrTrnCreditFsaDetailAdd',
            title: 'AgrTrnCreditFsaDetailAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditFsaDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditInstitutionDtlAdd', {
            url: '/AgrTrnCreditInstitutionDtlAdd',
            title: 'AgrTrnCreditInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCompanyCrimeCheckRecordAPI', {
            url: '/AgrTrnCompanyCrimeCheckRecordAPI',
            title: 'AgrTrnCompanyCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCompanyCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnIndividualCovenantDocChecklist', {
            url: '/AgrTrnIndividualCovenantDocChecklist',
            title: 'AgrTrnIndividualCovenantDocChecklist',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnIndividualCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualDtlAdd', {
            url: '/AgrTrnCreditIndividualDtlAdd',
            title: 'AgrTrnCreditIndividualDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
         
        .state('app.AgrTransUnionReport', {
            url: '/AgrTransUnionReport',
            title: 'AgrTransUnionReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTransUnionReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrHighmarkReport', {
            url: '/AgrHighmarkReport',
            title: 'AgrHighmarkReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrHighmarkReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualBankAcctAdd', {
            url: '/AgrTrnCreditIndividualBankAcctAdd',
            title: 'AgrTrnCreditIndividualBankAcctAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualExistingBankAdd', {
            url: '/AgrTrnCreditIndividualExistingBankAdd',
            title: 'AgrTrnCreditIndividualExistingBankAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualPSLDataFlagAdd', {
            url: '/AgrTrnCreditIndividualPSLDataFlagAdd',
            title: 'AgrTrnCreditIndividualPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualRepaymentAdd', {
            url: '/AgrTrnCreditIndividualRepaymentAdd',
            title: 'AgrTrnCreditIndividualRepaymentAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualObservationAdd', {
            url: '/AgrTrnCreditIndividualObservationAdd',
            title: 'AgrTrnCreditIndividualObservationAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualBankAcctEdit', {
            url: '/AgrTrnCreditIndividualBankAcctEdit',
            title: 'AgrTrnCreditIndividualBankAcctEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualAPI', {
            url: '/AgrTrnCreditIndividualAPI',
            title: 'AgrTrnCreditIndividualAPI',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCrimeReportIndividualView', {
            url: '/AgrTrnCrimeReportIndividualView',
            title: 'AgrTrnCrimeReportIndividualView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCrimeReportIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualBankStatementAnalysisAdd', {
            url: '/AgrTrnCreditIndividualBankStatementAnalysisAdd',
            title: 'AgrTrnCreditIndividualBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditCrimeCheckRecordAPI', {
            url: '/AgrTrnCreditCrimeCheckRecordAPI',
            title: 'AgrTrnCreditCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnGroupCovenantDocChecklist', {
            url: '/AgrTrnGroupCovenantDocChecklist',
            title: 'AgrTrnGroupCovenantDocChecklist',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnGroupCovenantDocChecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })   
        
        .state('app.AgrTrnCreditGroupDtlAdd', {
            url: '/AgrTrnCreditGroupDtlAdd',
            title: 'AgrTrnCreditGroupDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupBankAcctAdd', {
            url: '/AgrTrnCreditGroupBankAcctAdd',
            title: 'AgrTrnCreditGroupBankAcctAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupBankAcctAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupExistingBankAdd', {
            url: '/AgrTrnCreditGroupExistingBankAdd',
            title: 'AgrTrnCreditGroupExistingBankAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupExistingBankAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupPSLDataFlagAdd', {
            url: '/AgrTrnCreditGroupPSLDataFlagAdd',
            title: 'AgrTrnCreditGroupPSLDataFlagAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupPSLDataFlagAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupRepaymentAdd', {
            url: '/AgrTrnCreditGroupRepaymentAdd',
            title: 'AgrTrnCreditGroupRepaymentAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupRepaymentAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupObservationAdd', {
            url: '/AgrTrnCreditGroupObservationAdd',
            title: 'AgrTrnCreditGroupObservationAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupBankStatementAnalysisAdd', {
            url: '/AgrTrnCreditGroupBankStatementAnalysisAdd',
            title: 'AgrTrnCreditGroupBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

	    .state('app.AgrTrnCreditApproval', {
            url: '/AgrTrnCreditApproval',
            title: 'AgrTrnCreditApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 	'textAngular')
        })

 	    .state('app.AgrMstCcCommitteeApplicationView', {
            url: '/AgrMstCcCommitteeApplicationView',
            title: 'AgrMstCcCommitteeApplicationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcCommitteeApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCcCommitteeKycView', {
                url: '/AgrMstCcCommitteeKycView',
                title: 'AgrMstCcCommitteeKycView',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcCommitteeKycView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCcCommitteeInstitutionView', {
            url: '/AgrMstCcCommitteeInstitutionView',
            title: 'AgrMstCcCommitteeInstitutionView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcCommitteeInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

          .state('app.AgrMstCcCommitteeGroupView', {
            url: '/AgrMstCcCommitteeGroupView',
            title: 'AgrMstCcCommitteeGroupView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcCommitteeGroupView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstCcCommitteeIndividualView', {
            url: '/AgrMstCcCommitteeIndividualView',
            title: 'AgrMstCcCommitteeIndividualView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcCommitteeIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
          
        .state('app.AgrHighmarkInstitutionReport', {
            url: '/AgrHighmarkInstitutionReport',
            title: 'AgrHighmarkInstitutionReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrHighmarkInstitutionReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditInstitutionBureauView', {
            url: '/AgrTrnCreditInstitutionBureauView',
            title: 'AgrTrnCreditInstitutionBureauView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditInstitutionBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditInstitutionBureauEdit', {
            url: '/AgrTrnCreditInstitutionBureauEdit',
            title: 'AgrTrnCreditInstitutionBureauEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditInstitutionBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditEconomicCapitalEdit', {
            url: '/AgrTrnCreditEconomicCapitalEdit',
            title: 'AgrTrnCreditEconomicCapitalEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditEconomicCapitalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditPSLDataFlaggingEdit', {
            url: '/AgrTrnCreditPSLDataFlaggingEdit',
            title: 'AgrTrnCreditPSLDataFlaggingEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditPSLDataFlaggingEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditSuppliersDtlEdit', {
            url: '/AgrTrnCreditSuppliersDtlEdit',
            title: 'AgrTrnCreditSuppliersDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditSuppliersDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditBuyerDtlEdit', {
            url: '/AgrTrnCreditBuyerDtlEdit',
            title: 'AgrTrnCreditBuyerDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditBuyerDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditBankAccountDtlEdit', {
            url: '/AgrTrnCreditBankAccountDtlEdit',
            title: 'AgrTrnCreditBankAccountDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditBankAccountDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditExistingBankDtlEdit', {
            url: '/AgrTrnCreditExistingBankDtlEdit',
            title: 'AgrTrnCreditExistingBankDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditExistingBankDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditRepaymentDtlEdit', {
            url: '/AgrTrnCreditRepaymentDtlEdit',
            title: 'AgrTrnCreditRepaymentDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditRepaymentDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditFSAView', {
            url: '/AgrTrnCreditFSAView',
            title: 'AgrTrnCreditFSAView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditFSAView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCreditIndividualDtlEdit', {
            url: '/AgrTrnCreditIndividualDtlEdit',
            title: 'AgrTrnCreditIndividualDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualBureauView', {
            url: '/AgrTrnCreditIndividualBureauView',
            title: 'AgrTrnCreditIndividualBureauView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualBureauView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualBureauEdit', {
            url: '/AgrTrnCreditIndividualBureauEdit',
            title: 'AgrTrnCreditIndividualBureauEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualExistingBankEdit', {
            url: '/AgrTrnCreditIndividualExistingBankEdit',
            title: 'AgrTrnCreditIndividualExistingBankEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCreditIndividualRepaymentEdit', {
            url: '/AgrTrnCreditIndividualRepaymentEdit',
            title: 'AgrTrnCreditIndividualRepaymentEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditIndividualPSLDataFlagEdit', {
            url: '/AgrTrnCreditIndividualPSLDataFlagEdit',
            title: 'AgrTrnCreditIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupBankAcctEdit', {
            url: '/AgrTrnCreditGroupBankAcctEdit',
            title: 'AgrTrnCreditGroupBankAcctEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupExistingBankEdit', {
            url: '/AgrTrnCreditGroupExistingBankEdit',
            title: 'AgrTrnCreditGroupExistingBankEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupRepaymentEdit', {
            url: '/AgrTrnCreditGroupRepaymentEdit',
            title: 'AgrTrnCreditGroupRepaymentEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnCreditGroupPSLDataFlagEdit', {
            url: '/AgrTrnCreditGroupPSLDataFlagEdit',
            title: 'AgrTrnCreditGroupPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrMstBusinessHoldSummary', {
            url: '/AgrMstBusinessHoldSummary',
            title: 'AgrMstBusinessHoldSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstBusinessApprovedSummary', {
            url: '/AgrMstBusinessApprovedSummary',
            title: 'AgrMstBusinessApprovedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstBusinessApproval', {
            url: '/AgrMstBusinessApproval',
            title: 'AgrMstBusinessApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstBusinessApprovalSummary', {
            url: '/AgrMstBusinessApprovalSummary',
            title: 'AgrMstBusinessApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstBusinessRejectedSummary', {
            url: '/AgrMstBusinessRejectedSummary',
            title: 'AgrMstBusinessRejectedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessRejectedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnStartCreditUnderwriting', {
            url: '/AgrTrnStartCreditUnderwriting',
            title: 'AgrTrnStartCreditUnderwriting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnStartCreditUnderwriting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCADApplicationEdit', {
            url: '/AgrTrnCADApplicationEdit',
            title: 'AgrTrnCADApplicationEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCADApplicationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCADGroupProcessAssign', {
            url: '/AgrTrnCADGroupProcessAssign',
            title: 'AgrTrnCADGroupProcessAssign',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCADGroupProcessAssign.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCADReassignApplication', {
            url: '/AgrTrnCADReassignApplication',
            title: 'AgrTrnCADReassignApplication',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCADReassignApplication.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCADInstitutionDtlAdd', {
            url: '/AgrMstCADInstitutionDtlAdd',
            title: 'AgrMstCADInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCADInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCADIndividualDtlAdd', {
            url: '/AgrMstCADIndividualDtlAdd',
            title: 'AgrMstCADIndividualDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCADIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCADGroupDtlAdd', {
            url: '/AgrMstCADGroupDtlAdd',
            title: 'AgrMstCADGroupDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCADGroupDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCreditGroupDtlView', {
            url: '/AgrTrnCreditGroupDtlView',
            title: 'AgrTrnCreditGroupDtlView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditGroupDtlView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnCadPhysicalDocGuarantorDtls', {
            url: '/AgrTrnCadPhysicalDocGuarantorDtls',
            title: 'AgrTrnCadPhysicalDocGuarantorDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocGuarantorDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCadPhysicalDochecklist', {
           url: '/AgrTrnCadPhysicalDochecklist',
           title: 'AgrTrnCadPhysicalDochecklist',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDochecklist.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnPhysicalDeferralHistory', {
           url: '/AgrTrnPhysicalDeferralHistory',
           title: 'AgrTrnPhysicalDeferralHistory',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPhysicalDeferralHistory.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCadPhysicalDocQuery', {
           url: '/AgrTrnCadPhysicalDocQuery',
           title: 'AgrTrnCadPhysicalDocQuery',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocQuery.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCadPhysicalDocStatus', {
           url: '/AgrTrnCadPhysicalDocStatus',
           title: 'AgrTrnCadPhysicalDocStatus',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocStatus.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.AgrTrnDocChecklistApprovalCompleted', {
            url: '/AgrTrnDocChecklistApprovalCompleted',
            title: 'AgrTrnDocChecklistApprovalCompleted',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnDocChecklistApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnCadGuarantorApproval', {
            url: '/AgrTrnCadGuarantorApproval',
            title: 'AgrTrnCadGuarantorApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadGuarantorApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

       .state('app.AgrTrnDeferralMyApproval', {
            url: '/AgrTrnDeferralMyApproval',
            title: 'AgrTrnDeferralMyApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnDeferralMyApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnDeferralMyApprovalHistory', {
            url: '/AgrTrnDeferralMyApprovalHistory',
            title: 'AgrTrnDeferralMyApprovalHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnDeferralMyApprovalHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnPostCcActivitiesRMView', {
            url: '/AgrTrnPostCcActivitiesRMView',
            title: 'AgrTrnPostCcActivitiesRMView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPostCcActivitiesRMView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.AgrTrnRMDeferralDtls', {
            url: '/AgrTrnRMDeferralDtls',
            title: 'AgrTrnRMDeferralDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMDeferralDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnRMDeferralDtlsView', {
            url: '/AgrTrnRMDeferralDtlsView',
            title: 'AgrTrnRMDeferralDtlsView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMDeferralDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnRMDeferralCloseQuery', {
            url: '/AgrTrnRMDeferralCloseQuery',
            title: 'AgrTrnRMDeferralCloseQuery',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnRMDeferralCloseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('page.AgrCCMeetingApproval', {
            url: '/AgrCCMeetingApproval',
            title: 'AgrCCMeetingApproval',
            templateUrl: 'app/pages/AgrCCMeetingApproval.html?ver=' + version + '"',
        })

        .state('app.AgrMstApplicationReport', {
            url: '/AgrMstApplicationReport',
            title: 'AgrMstApplicationReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApplicationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstCreditAllocationReport', {
            url: '/AgrMstCreditAllocationReport',
            title: 'AgrMstCreditAllocationReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditAllocationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstCCReport', {
            url: '/AgrMstCCReport',
            title: 'AgrMstCCReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCCReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AgrMstWarehouseFacility', {
             url: '/AgrMstWarehouseFacility',
             title: 'AgrMstWarehouseFacility',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseFacility.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

           .state('app.AgrMstWarehouseCreationSummary', {
               url: '/AgrMstWarehouseCreationSummary',
               title: 'AgrMstWarehouseCreationSummary',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseCreationSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

        .state('app.AgrMstWarehouseAdd', {
            url: '/AgrMstWarehouseAdd',
            title: 'AgrMstWarehouseAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


        .state('app.AgrMstWarehouseEdit', {
            url: '/AgrMstWarehouseEdit',
            title: 'AgrMstWarehouseEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstPmgApproval', {
            url: '/AgrMstPmgApproval',
            title: 'AgrMstPmgApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstPmgApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })



        .state('app.AgrMstProductApproval', {
            url: '/AgrMstProductApproval',
            title: 'AgrMstProductApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })


        .state('app.AgrMstWarehouseAprovalSummary', {
            url: '/AgrMstWarehouseAprovalSummary',
            title: 'AgrMstWarehouseAprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseAprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstPendingPmgApproval', {
            url: '/AgrMstPendingPmgApproval',
            title: 'AgrMstPendingPmgApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstPendingPmgApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })



        .state('app.AgrMstPendingProductApproval', {
            url: '/AgrMstPendingProductApproval',
            title: 'AgrMstPendingProductApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstPendingProductApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstWarehouseDtlApproval', {
            url: '/AgrMstWarehouseDtlApproval',
            title: 'AgrMstWarehouseDtlApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseDtlApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstRejectedWarehouses', {
            url: '/AgrMstRejectedWarehouses',
            title: 'AgrMstRejectedWarehouses',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstRejectedWarehouses.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })


        .state('app.AgrMstApprovalPendingWarehouseSummary', {
            url: '/AgrMstApprovalPendingWarehouseSummary',
            title: 'AgrMstApprovalPendingWarehouseSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApprovalPendingWarehouseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstMyApprovalWarehouseSummary', {
            url: '/AgrMstApprovalPendingWarehouseSummary',
            title: 'AgrMstApprovalPendingWarehouseSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApprovalPendingWarehouseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstMyRejectedWarehouseSummary', {
            url: '/AgrMstApprovalPendingWarehouseSummary',
            title: 'AgrMstApprovalPendingWarehouseSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstApprovalPendingWarehouseSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstUOM', {
            url: '/AgrMstUOM',
            title: 'AgrMstUOM',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstUOM.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AgrMstScope', {
             url: '/AgrMstScope',
             title: 'AgrMstScope',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstScope.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrMstOtherCreditorApplicantType', {
            url: '/AgrMstOtherCreditorApplicantType',
            title: 'AgrMstOtherCreditorApplicantType',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstOtherCreditorApplicantType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstNatureFormStateofCommodity', {
            url: '/AgrMstNatureFormStateofCommodity',
            title: 'AgrMstNatureFormStateofCommodity',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstNatureFormStateofCommodity.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstMilestonePaymentType', {
            url: '/AgrMstMilestonePaymentType',
            title: 'AgrMstMilestonePaymentType',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstMilestonePaymentType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

          .state('app.AgrMstCreditorMasterSummary', {
              url: '/AgrMstCreditorMasterSummary',
              title: 'AgrMstCreditorMasterSummary',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterSummary.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

        .state('app.AgrMstCreditorMasterAdd', {
            url: '/AgrMstCreditorMasterAdd',
            title: 'AgrMstCreditorMasterAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCreditorMasterView', {
            url: '/AgrMstCreditorMasterView',
            title: 'AgrMstCreditorMasterView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCreditorMasterEdit', {
            url: '/AgrMstCreditorMasterEdit',
            title: 'AgrMstCreditorMasterEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstCreditorMasterChequeEdit', {
            url: '/AgrMstCreditorMasterChequeEdit',
            title: 'AgrMstCreditorMasterChequeEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterChequeEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstAppEditTradeAdd', {
             url: '/AgrMstAppEditTradeAdd',
             title: 'AgrMstAppEditTradeAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppEditTradeAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditApproval', {
             url: '/AgrTrnSuprCreditApproval',
             title: 'AgrTrnSuprCreditApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditApprovedSummary', {
            url: '/AgrTrnSuprCreditApprovedSummary',
            title: 'AgrTrnSuprCreditApprovedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditSubmittedtoCCSummary', {
            url: '/AgrTrnSuprCreditSubmittedtoCCSummary',
            title: 'AgrTrnSuprCreditSubmittedtoCCSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditSubmittedtoCCSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditCCSkippedSummary', {
            url: '/AgrTrnSuprCreditCCSkippedSummary',
            title: 'AgrTrnSuprCreditCCSkippedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCCSkippedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditRejectandHoldSummary', {
            url: '/AgrTrnSuprCreditRejectandHoldSummary',
            title: 'AgrTrnSuprCreditRejectandHoldSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditRejectandHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCCscheduledSummary', {
            url: '/AgrTrnSuprCCscheduledSummary',
            title: 'AgrTrnSuprCCscheduledSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCscheduledSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')
        })

        .state('app.AgrTrnSuprCCCompletedSummary', {
            url: '/AgrTrnSuprCCCompletedSummary',
            title: 'AgrTrnSuprCCCompletedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprSentbackcctoCredit', {
            url: '/AgrTrnSuprSentbackcctoCredit',
            title: 'AgrTrnSuprSentbackcctoCredit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprSentbackcctoCredit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCcCompletedScheduledMeeting', {
            url: '/AgrTrnSuprCcCompletedScheduledMeeting',
            title: 'AgrTrnSuprCcCompletedScheduledMeeting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCcCompletedScheduledMeeting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprSentbackCadtoCcHistory', {
            url: '/AgrTrnSuprSentbackCadtoCcHistory',
            title: 'AgrTrnSuprSentbackCadtoCcHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprSentbackCadtoCcHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCCMeetingSchedule', {
            url: '/AgrTrnSuprCCMeetingSchedule',
            title: 'AgrTrnSuprCCMeetingSchedule',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCMeetingSchedule.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

      .state('app.AgrTrnSuprCCMeetingReschedule', {
          url: '/AgrTrnSuprCCMeetingReschedule',
          title: 'AgrTrnSuprCCMeetingReschedule',
          templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCMeetingReschedule.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })

      .state('app.AgrTrnSuprCcScheduledMeetingDtlView', {
          url: '/AgrTrnSuprCcScheduledMeetingDtlView',
          title: 'AgrTrnSuprCcScheduledMeetingDtlView',
          templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCcScheduledMeetingDtlView.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })

      .state('app.AgrTrnSuprStartScheduledMeeting', {
          url: '/AgrTrnSuprStartScheduledMeeting',
          title: 'AgrTrnSuprStartScheduledMeeting',
          templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprStartScheduledMeeting.html?ver=' + version + '"'),
          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
      })

         // Prem

    .state('app.AgrSuprApplicationAssignmentSummary', {
        url: '/AgrSuprApplicationAssignmentSummary',
        title: 'AgrSuprApplicationAssignmentSummary',
        templateUrl: helper.basepath('ems.mastersamagro/AgrSuprApplicationAssignmentSummary.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

     .state('app.AgrMstSuprMyApplicationsSummary', {
         url: '/AgrMstSuprMyApplicationsSummary',
         title: 'AgrMstSuprMyApplicationsSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprMyApplicationsSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprCreditApprovalSummary', {
         url: '/AgrTrnSuprCreditApprovalSummary',
         title: 'AgrTrnSuprCreditApprovalSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditApprovalSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprCcScheduledMeetingSummary', {
         url: '/AgrTrnSuprCcScheduledMeetingSummary',
         title: 'AgrTrnSuprCcScheduledMeetingSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCcScheduledMeetingSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')
     })

     .state('app.AgrTrnSuprCreditCommitteeSummary', {
         url: '/AgrTrnSuprCreditCommitteeSummary',
         title: 'AgrTrnSuprCreditCommitteeSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCommitteeSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrSuprAppassignedAssignmentSummary', {
         url: '/AgrSuprAppassignedAssignmentSummary',
         title: 'AgrSuprAppassignedAssignmentSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrSuprAppassignedAssignmentSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrSuprApplSubmittedtoCCSummary', {
         url: '/AgrSuprApplSubmittedtoCCSummary',
         title: 'AgrSuprApplSubmittedtoCCSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrSuprApplSubmittedtoCCSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprCreditAssessedScoreAdd', {
         url: '/AgrMstSuprCreditAssessedScoreAdd',
         title: 'AgrMstSuprCreditAssessedScoreAdd',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCreditAssessedScoreAdd.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprCreditAssessedScoreEdit', {
         url: '/AgrMstSuprCreditAssessedScoreEdit',
         title: 'AgrMstSuprCreditAssessedScoreEdit',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCreditAssessedScoreEdit.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrSuprCreditVisitReportAdd', {
         url: '/AgrSuprCreditVisitReportAdd',
         title: 'AgrSuprCreditVisitReportAdd',
         templateUrl: helper.basepath('ems.mastersamagro/AgrSuprCreditVisitReportAdd.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprStartCreditUnderwriting', {
         url: '/AgrTrnSuprStartCreditUnderwriting',
         title: 'AgrTrnSuprStartCreditUnderwriting',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprStartCreditUnderwriting.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprRMInstitutionView', {
         url: '/AgrTrnSuprRMInstitutionView',
         title: 'AgrTrnSuprRMInstitutionView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprRMInstitutionView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprRMIndividualView', {
         url: '/AgrTrnSuprRMIndividualView',
         title: 'AgrTrnSuprRMIndividualView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprRMIndividualView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprCreditCompanyDtlView', {
         url: '/AgrTrnSuprCreditCompanyDtlView',
         title: 'AgrTrnSuprCreditCompanyDtlView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCompanyDtlView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprCreditIndividualDtlView', {
         url: '/AgrTrnSuprCreditIndividualDtlView',
         title: 'AgrTrnSuprCreditIndividualDtlView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualDtlView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprApplCreationGradingToolView', {
         url: '/AgrTrnSuprApplCreationGradingToolView',
         title: 'AgrTrnSuprApplCreationGradingToolView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprApplCreationGradingToolView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprApplCreationVisitReportView', {
         url: '/AgrTrnSuprApplCreationVisitReportView',
         title: 'AgrTrnSuprApplCreationVisitReportView',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprApplCreationVisitReportView.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprCreditQueryStatus', {
         url: '/AgrMstSuprCreditQueryStatus',
         title: 'AgrMstSuprCreditQueryStatus',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCreditQueryStatus.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprSubmittedtoApprovalSummary', {
         url: '/AgrMstSuprSubmittedtoApprovalSummary',
         title: 'AgrMstSuprSubmittedtoApprovalSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprSubmittedtoApprovalSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprSubmittedtoCCSummary', {
         url: '/AgrMstSuprSubmittedtoCCSummary',
         title: 'AgrMstSuprSubmittedtoCCSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprSubmittedtoCCSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprCCSkippedApplicationSummary', {
         url: '/AgrMstSuprCCSkippedApplicationSummary',
         title: 'AgrMstSuprCCSkippedApplicationSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCCSkippedApplicationSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprRejectandHoldSummary', {
         url: '/AgrMstSuprRejectandHoldSummary',
         title: 'AgrMstSuprRejectandHoldSummary',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprRejectandHoldSummary.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrMstSuprSentbackcctoCreditHistory', {
         url: '/AgrMstSuprSentbackcctoCreditHistory',
         title: 'AgrMstSuprSentbackcctoCreditHistory',
         templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprSentbackcctoCreditHistory.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

     .state('app.AgrTrnSuprIndividualDocCheckList', {
         url: '/AgrTrnSuprIndividualDocCheckList',
         title: 'AgrTrnSuprIndividualDocCheckList',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprIndividualDocCheckList.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

    .state('app.AgrTrnSuprGroupDocCheckList', {
        url: '/AgrTrnSuprGroupDocCheckList',
        title: 'AgrTrnSuprGroupDocCheckList',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprGroupDocCheckList.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrTrnSuprIndividualCovenantDocChecklist', {
        url: '/AgrTrnSuprIndividualCovenantDocChecklist',
        title: 'AgrTrnSuprIndividualCovenantDocChecklist',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprIndividualCovenantDocChecklist.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

     .state('app.AgrTrnSuprCreditIndividualDtlAdd', {
         url: '/AgrTrnSuprCreditIndividualDtlAdd',
         title: 'AgrTrnSuprCreditIndividualDtlAdd',
         templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualDtlAdd.html?ver=' + version + '"'),
         resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
     })

    .state('app.AgrTrnSuprCreditIndividualBankStatementAnalysisAdd', {
        url: '/AgrTrnSuprCreditIndividualBankStatementAnalysisAdd',
        title: 'AgrTrnSuprCreditIndividualBankStatementAnalysisAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualBankStatementAnalysisAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrTrnSuprCreditIndividualPSLDataFlagAdd', {
        url: '/AgrTrnSuprCreditIndividualPSLDataFlagAdd',
        title: 'AgrTrnSuprCreditIndividualPSLDataFlagAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualPSLDataFlagAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrTrnSuprCreditIndividualRepaymentAdd', {
        url: '/AgrTrnSuprCreditIndividualRepaymentAdd',
        title: 'AgrTrnSuprCreditIndividualRepaymentAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualRepaymentAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrTrnSuprCreditIndividualObservationAdd', {
        url: '/AgrTrnSuprCreditIndividualObservationAdd',
        title: 'AgrTrnSuprCreditIndividualObservationAdd',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualObservationAdd.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

    .state('app.AgrTrnSuprCreditIndividualAPI', {
        url: '/AgrTrnSuprCreditIndividualAPI',
        title: 'AgrTrnSuprCreditIndividualAPI',
        templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualAPI.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
    })

         // Praveen

    .state('app.AgrMstSuprRMCustomerSummary', {
        url: '/AgrMstSuprRMCustomerSummary',
        title: 'AgrMstSuprRMCustomerSummary',
        templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprRMCustomerSummary.html?ver=' + version + '"'),
        resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
     })

        .state('app.AgrTrnSuprCadDocChecklistSummary', {
            url: '/AgrTrnSuprCadDocChecklistSummary',
            title: 'AgrTrnSuprCadDocChecklistSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDocChecklistSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDocChecklistCheckerSummary', {
            url: '/AgrTrnSuprCadDocChecklistCheckerSummary',
            title: 'AgrTrnSuprCadDocChecklistCheckerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDocChecklistCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDocChecklistApprovalSummary', {
            url: '/AgrTrnSuprCadDocChecklistApprovalSummary',
            title: 'AgrTrnSuprCadDocChecklistApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDocChecklistApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprDocChecklistApprovalCompleted', {
            url: '/AgrTrnSuprDocChecklistApprovalCompleted',
            title: 'AgrTrnSuprDocChecklistApprovalCompleted',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprDocChecklistApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadGuarantorDetails', {
            url: '/AgrTrnSuprCadGuarantorDetails',
            title: 'AgrTrnSuprCadGuarantorDetails',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadGuarantorDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDocumentChecklistAdd', {
            url: '/AgrTrnSuprCadDocumentChecklistAdd',
            title: 'AgrTrnSuprCadDocumentChecklistAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDocumentChecklistAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadGuarantorApproval', {
            url: '/AgrTrnSuprCadGuarantorApproval',
            title: 'AgrTrnSuprCadGuarantorApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadGuarantorApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

//Scanned Document

        .state('app.AgrMstSuprCadDeferralSummary', {
            url: '/AgrMstSuprCadDeferralSummary',
            title: 'AgrMstSuprCadDeferralSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadDeferralSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCadDeferralCheckerSummary', {
            url: '/AgrMstSuprCadDeferralCheckerSummary',
            title: 'AgrMstSuprCadDeferralCheckerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadDeferralCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCadDeferralApprovalSummary', {
            url: '/AgrMstSuprCadDeferralApprovalSummary',
            title: 'AgrMstSuprCadDeferralApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadDeferralApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprScannedCompletedSummary', {
            url: '/AgrMstSuprScannedCompletedSummary',
            title: 'AgrMstSuprScannedCompletedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprScannedCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDeferralGuarantorDtls', {
            url: '/AgrTrnSuprCadDeferralGuarantorDtls',
            title: 'AgrTrnSuprCadDeferralGuarantorDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDeferralGuarantorDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDeferralDochecklist', {
            url: '/AgrTrnSuprCadDeferralDochecklist',
            title: 'AgrTrnSuprCadDeferralDochecklist',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDeferralDochecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDeferralQuery', {
            url: '/AgrTrnSuprCadDeferralQuery',
            title: 'AgrTrnSuprCadDeferralQuery',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDeferralQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadDeferralStatus', {
            url: '/AgrTrnSuprCadDeferralStatus',
            title: 'AgrTrnSuprCadDeferralStatus',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadDeferralStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprRMDeferralDtls', {
            url: '/AgrTrnSuprRMDeferralDtls',
            title: 'AgrTrnSuprRMDeferralDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprRMDeferralDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprRMDeferralCloseQuery', {
            url: '/AgrTrnSuprRMDeferralCloseQuery',
            title: 'AgrTrnSuprRMDeferralCloseQuery',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprRMDeferralCloseQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprScannedDeferralHistory', {
            url: '/AgrTrnSuprScannedDeferralHistory',
            title: 'AgrTrnSuprScannedDeferralHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprScannedDeferralHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        //Physical Document

        .state('app.AgrTrnSuprCadPhysicalDocSummary', {
            url: '/AgrTrnSuprCadPhysicalDocSummary',
            title: 'AgrTrnSuprCadPhysicalDocSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocCheckerSummary', {
            url: '/AgrTrnSuprCadPhysicalDocCheckerSummary',
            title: 'AgrTrnSuprCadPhysicalDocCheckerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocApprovalSummary', {
            url: '/AgrTrnSuprCadPhysicalDocApprovalSummary',
            title: 'AgrTrnSuprCadPhysicalDocApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocCompletedSummary', {
            url: '/AgrTrnSuprCadPhysicalDocCompletedSummary',
            title: 'AgrTrnSuprCadPhysicalDocCompletedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocCompletedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocGuarantorDtls', {
            url: '/AgrTrnSuprCadPhysicalDocGuarantorDtls',
            title: 'AgrTrnSuprCadPhysicalDocGuarantorDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocGuarantorDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDochecklist', {
            url: '/AgrTrnSuprCadPhysicalDochecklist',
            title: 'AgrTrnSuprCadPhysicalDochecklist',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDochecklist.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprPhysicalDeferralHistory', {
            url: '/AgrTrnSuprPhysicalDeferralHistory',
            title: 'AgrTrnSuprPhysicalDeferralHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprPhysicalDeferralHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocQuery', {
            url: '/AgrTrnSuprCadPhysicalDocQuery',
            title: 'AgrTrnSuprCadPhysicalDocQuery',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocQuery.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCadPhysicalDocStatus', {
            url: '/AgrTrnSuprCadPhysicalDocStatus',
            title: 'AgrTrnSuprCadPhysicalDocStatus',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadPhysicalDocStatus.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

		//My Approvals
        .state('app.AgrTrnSuprDeferralMyApproval', {
            url: '/AgrTrnSuprDeferralMyApproval',
            title: 'AgrTrnSuprDeferralMyApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprDeferralMyApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprDeferralMyApprovalHistory', {
            url: '/AgrTrnSuprDeferralMyApprovalHistory',
            title: 'AgrTrnSuprDeferralMyApprovalHistory',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprDeferralMyApprovalHistory.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        //Supplier 360 - Process
        .state('app.AgrTrnSuprPostCcActivitiesRMView', {
            url: '/AgrTrnSuprPostCcActivitiesRMView',
            title: 'AgrTrnSuprPostCcActivitiesRMView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprPostCcActivitiesRMView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        //Supplier Samagro Views
        //Application Creation View
        .state('app.AgrMstSuprApplicationCreationView', {
            url: '/AgrMstSuprApplicationCreationView',
            title: 'AgrMstSuprApplicationCreationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationCreationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprApplCreationGradingToolView', {
            url: '/AgrMstSuprApplCreationGradingToolView',
            title: 'AgrMstSuprApplCreationGradingToolView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplCreationGradingToolView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprApplCreationVisitReportView', {
            url: '/AgrMstSuprApplCreationVisitReportView',
            title: 'AgrMstSuprApplCreationVisitReportView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplCreationVisitReportView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprApplCreationInstitutionGuarantorView', {
            url: '/AgrMstSuprApplCreationInstitutionGuarantorView',
            title: 'AgrMstSuprApplCreationInstitutionGuarantorView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplCreationInstitutionGuarantorView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprApplCreationIndividualGuarantorView', {
            url: '/AgrMstSuprApplCreationIndividualGuarantorView',
            title: 'AgrMstSuprApplCreationIndividualGuarantorView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplCreationIndividualGuarantorView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprApplicationEditKycView', {
            url: '/AgrMstSuprApplicationEditKycView',
            title: 'AgrMstSuprApplicationEditKycView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationEditKycView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        //Credit View
        .state('app.AgrMstSuprCcCommitteeApplicationView', {
            url: '/AgrMstSuprCcCommitteeApplicationView',
            title: 'AgrMstSuprCcCommitteeApplicationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCcCommitteeApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCcCommitteeKycView', {
            url: '/AgrMstSuprCcCommitteeKycView',
            title: 'AgrMstSuprCcCommitteeKycView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCcCommitteeKycView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCCCommitteeInstitutionView', {
            url: '/AgrTrnSuprCCCommitteeInstitutionView',
            title: 'AgrTrnSuprCCCommitteeInstitutionView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCCommitteeInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCCCommitteeIndividualView', {
            url: '/AgrTrnSuprCCCommitteeIndividualView',
            title: 'AgrTrnSuprCCCommitteeIndividualView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCCommitteeIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCCCommitteeGroupView', {
            url: '/AgrTrnSuprCCCommitteeGroupView',
            title: 'AgrTrnSuprCCCommitteeGroupView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCCommitteeGroupView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCcCommitteeInstitutionView', {
            url: '/AgrMstSuprCcCommitteeInstitutionView',
            title: 'AgrMstSuprCcCommitteeInstitutionView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCcCommitteeInstitutionView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCcCommitteeIndividualView', {
            url: '/AgrMstSuprCcCommitteeIndividualView',
            title: 'AgrMstSuprCcCommitteeIndividualView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCcCommitteeIndividualView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSuprCcCommitteeGroupView', {
            url: '/AgrMstSuprCcCommitteeGroupView',
            title: 'AgrMstSuprCcCommitteeGroupView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCcCommitteeGroupView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         // Abilash

          // Supplier creation Routes

         .state('app.AgrTrnSuprPendingCADReview', {
             url: '/AgrTrnSuprPendingCADReview',
             title: 'AgrTrnSuprPendingCADReview',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprPendingCADReview.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'textAngular', 'jquery-ui', 'jquery-ui-widgets', 'moment', 'fullcalendar')
         })

         .state('app.AgrTrnSuprCadAcceptedCustomers', {
             url: '/AgrTrnSuprCadAcceptedCustomers',
             title: 'AgrTrnSuprCadAcceptedCustomers',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCadAcceptedCustomers.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

        .state('app.AgrTrnSuprSentBackToUnderwriting', {
            url: '/AgrTrnSuprSentBackToUnderwriting',
            title: 'AgrTrnSuprSentBackToUnderwriting',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprSentBackToUnderwriting.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprSentBackToCC', {
            url: '/AgrTrnSuprSentBackToCC',
            title: 'AgrTrnSuprSentBackToCC',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprSentBackToCC.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCCRejectedApplications', {
            url: '/AgrTrnSuprCCRejectedApplications',
            title: 'AgrTrnSuprCCRejectedApplications',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCCRejectedApplications.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCADApplicationEdit', {
            url: '/AgrTrnSuprCADApplicationEdit',
            title: 'AgrTrnSuprCADApplicationEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCADApplicationEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

          .state('app.AgrTrnSuprCADGroupProcessAssign', {
              url: '/AgrTrnSuprCADGroupProcessAssign',
              title: 'AgrTrnSuprCADGroupProcessAssign',
              templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCADGroupProcessAssign.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

        .state('app.AgrTrnSuprCADReassignApplication', {
            url: '/AgrTrnSuprCADReassignApplication',
            title: 'AgrTrnSuprCADReassignApplication',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCADReassignApplication.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AgrMstSuprApplicationCreationSummary', {
             url: '/AgrMstSuprApplicationCreationSummary',
             title: 'AgrMstSuprApplicationCreationSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationCreationSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprRejectedApplicationSummary', {
             url: '/AgrMstSuprRejectedApplicationSummary',
             title: 'AgrMstSuprRejectedApplicationSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprRejectedApplicationSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprHoldApplicationSummary', {
             url: '/AgrMstSuprHoldApplicationSummary',
             title: 'AgrMstSuprHoldApplicationSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprHoldApplicationSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

           .state('app.AgrMstSuprApprovedApplicationSummary', {
               url: '/AgrMstSuprApprovedApplicationSummary',
               title: 'AgrMstSuprApprovedApplicationSummary',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApprovedApplicationSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

          .state('app.AgrMstSuprApplicationGeneralAdd', {
              url: '/AgrMstSuprApplicationGeneralAdd',
              title: 'AgrMstSuprApplicationGeneralAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationGeneralAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprApplicationInstitutionAdd', {
              url: '/AgrMstSuprApplicationInstitutionAdd',
              title: 'AgrMstSuprApplicationInstitutionAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationInstitutionAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprApplicationIndividualAdd', {
             url: '/AgrMstSuprApplicationIndividualAdd',
             title: 'AgrMstSuprApplicationIndividualAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationIndividualAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprApplicationSocialTradeCapitalAdd', {
             url: '/AgrMstSuprApplicationSocialTradeCapitalAdd',
             title: 'AgrMstSuprApplicationSocialTradeCapitalAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationSocialTradeCapitalAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprApplicationOverallLimitAdd', {
              url: '/AgrMstSuprApplicationOverallLimitAdd',
              title: 'AgrMstSuprApplicationOverallLimitAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationOverallLimitAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprApplicationProductChargesAdd', {
             url: '/AgrMstSuprApplicationProductChargesAdd',
             title: 'AgrMstSuprApplicationProductChargesAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationProductChargesAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprApplicationServiceChargeAdd', {
              url: '/AgrMstSuprApplicationServiceChargeAdd',
              title: 'AgrMstSuprApplicationServiceChargeAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationServiceChargeAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

           .state('app.AgrMstSuprApplicationCICUploadAdd', {
               url: '/AgrMstSuprApplicationCICUploadAdd',
               title: 'AgrMstSuprApplicationCICUploadAdd',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationCICUploadAdd.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

          .state('app.AgrMstSuprApplcreationBasicdtlEdit', {
              url: '/AgrMstSuprApplcreationBasicdtlEdit',
              title: 'AgrMstSuprApplcreationBasicdtlEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationBasicdtlEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprApplcreationIndividualdtlEdit', {
             url: '/AgrMstSuprApplcreationIndividualdtlEdit',
             title: 'AgrMstSuprApplcreationIndividualdtlEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationIndividualdtlEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprApplcreationInstitutiondtlEdit', {
              url: '/AgrMstSuprApplcreationInstitutiondtlEdit',
              title: 'AgrMstSuprApplcreationInstitutiondtlEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationInstitutiondtlEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprApplcreationSocialTradeEdit', {
             url: '/AgrMstSuprApplcreationSocialTradeEdit',
             title: 'AgrMstSuprApplcreationSocialTradeEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationSocialTradeEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

           .state('app.AgrMstSuprApplcreationProductchargesEdit', {
               url: '/AgrMstSuprApplcreationProductchargesEdit',
               title: 'AgrMstSuprApplcreationProductchargesEdit',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationProductchargesEdit.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

         .state('app.AgrMstSuprBureauUpdateIndividual', {
             url: '/AgrMstSuprBureauUpdateIndividual',
             title: 'AgrMstSuprBureauUpdateIndividual',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBureauUpdateIndividual.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprBureauUpdateInstitution', {
             url: '/AgrMstSuprBureauUpdateInstitution',
             title: 'AgrMstSuprBureauUpdateInstitution',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBureauUpdateInstitution.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprApplcreationCICUploadView', {
              url: '/AgrMstSuprApplcreationCICUploadView',
              title: 'AgrMstSuprApplcreationCICUploadView',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationCICUploadView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprApplcreationCICUploadEdit', {
              url: '/AgrMstSuprApplcreationCICUploadEdit',
              title: 'AgrMstSuprApplcreationCICUploadEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationCICUploadEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprApplcreationCICUploadInstView', {
              url: '/AgrMstSuprApplcreationCICUploadInstView',
              title: 'AgrMstSuprApplcreationCICUploadInstView',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplcreationCICUploadInstView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprApplCreationCICUploadInstEdit', {
             url: '/AgrMstSuprApplCreationCICUploadInstEdit',
             title: 'AgrMstSuprApplCreationCICUploadInstEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplCreationCICUploadInstEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprApplicationGeneralEdit', {
              url: '/AgrMstSuprApplicationGeneralEdit',
              title: 'AgrMstSuprApplicationGeneralEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationGeneralEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprApplicationInstitutionEdit', {
              url: '/AgrMstSuprApplicationInstitutionEdit',
              title: 'AgrMstSuprApplicationInstitutionEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationInstitutionEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

           .state('app.AgrMstSuprApplicationIndividualEdit', {
               url: '/AgrMstSuprApplicationIndividualEdit',
               title: 'AgrMstSuprApplicationIndividualEdit',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationIndividualEdit.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

           .state('app.AgrMstSuprApplicationSocialTradeCapitalEdit', {
               url: '/AgrMstSuprApplicationSocialTradeCapitalEdit',
               title: 'AgrMstSuprApplicationSocialTradeCapitalEdit',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationSocialTradeCapitalEdit.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

          .state('app.AgrMstSuprAppEditOverallLimitAdd', {
              url: '/AgrMstSuprAppEditOverallLimitAdd',
              title: 'AgrMstSuprAppEditOverallLimitAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprAppEditOverallLimitAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

           .state('app.AgrMstSuprAppEditChargeAdd', {
               url: '/AgrMstSuprAppEditChargeAdd',
               title: 'AgrMstSuprAppEditChargeAdd',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprAppEditChargeAdd.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

         .state('app.AgrMstSuprApplicationEditCICUploadAdd', {
             url: '/AgrMstSuprApplicationEditCICUploadAdd',
             title: 'AgrMstSuprApplicationEditCICUploadAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationEditCICUploadAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrSuprGradingToolAdd', {
              url: '/AgrSuprGradingToolAdd',
              title: 'AgrSuprGradingToolAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGradingToolAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

           .state('app.AgrSuprGradingToolEdit', {
               url: '/AgrSuprGradingToolEdit',
               title: 'AgrSuprGradingToolEdit',
               templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGradingToolEdit.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
           })

         .state('app.AgrSuprGradingToolView', {
             url: '/AgrSuprGradingToolView',
             title: 'AgrSuprGradingToolView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGradingToolView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

          .state('app.AgrMstSuprVisitReportAdd', {
              url: '/AgrMstSuprVisitReportAdd',
              title: 'AgrMstSuprVisitReportAdd',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprVisitReportAdd.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprVisitReportEdit', {
              url: '/AgrMstSuprVisitReportEdit',
              title: 'AgrMstSuprVisitReportEdit',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprVisitReportEdit.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

          .state('app.AgrMstSuprVisitReportView', {
              url: '/AgrMstSuprVisitReportView',
              title: 'AgrMstSuprVisitReportView',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprVisitReportView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprAppEditProductAdd', {
             url: '/AgrMstSuprAppEditProductAdd',
             title: 'AgrMstSuprAppEditProductAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprAppEditProductAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprAppEditTradeAdd', {
             url: '/AgrMstSuprAppEditTradeAdd',
             title: 'AgrMstSuprAppEditTradeAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprAppEditTradeAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprApplicationCreationRMApproval', {
             url: '/AgrMstSuprApplicationCreationRMApproval',
             title: 'AgrMstSuprApplicationCreationRMApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationCreationRMApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrMstSuprCADInstitutionDtlAdd', {
             url: '/AgrMstSuprCADInstitutionDtlAdd',
             title: 'AgrMstSuprCADInstitutionDtlAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCADInstitutionDtlAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrMstSuprCADIndividualDtlAdd', {
            url: '/AgrMstSuprCADIndividualDtlAdd',
            title: 'AgrMstSuprCADIndividualDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCADIndividualDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditGeneralDtlEdit', {
            url: '/AgrTrnSuprCreditGeneralDtlEdit',
            title: 'AgrTrnSuprCreditGeneralDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditGeneralDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditInstitutionDtlEdit', {
            url: '/AgrTrnSuprCreditInstitutionDtlEdit',
            title: 'AgrTrnSuprCreditInstitutionDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditInstitutionDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditIndividualDtlEdit', {
            url: '/AgrTrnSuprCreditIndividualDtlEdit',
            title: 'AgrTrnSuprCreditIndividualDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditProductChargesDtlEdit', {
            url: '/AgrTrnSuprCreditProductChargesDtlEdit',
            title: 'AgrTrnSuprCreditProductChargesDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditProductChargesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AgrTrnSuprCreditLoanDtlEdit', {
             url: '/AgrTrnSuprCreditLoanDtlEdit',
             title: 'AgrTrnSuprCreditLoanDtlEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditLoanDtlEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })
// Sundar

        .state('app.AgrTrnSuprCcCommitteeApplicationView', {
            url: '/AgrTrnSuprCcCommitteeApplicationView',
            title: 'AgrTrnSuprCcCommitteeApplicationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCcCommitteeApplicationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprBusinessApprovalSummary', {
            url: '/AgrMstSuprBusinessApprovalSummary',
            title: 'AgrMstSuprBusinessApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBusinessApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprBusinessRejectedSummary', {
            url: '/AgrMstSuprBusinessRejectedSummary',
            title: 'AgrMstSuprBusinessRejectedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBusinessRejectedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AgrMstSuprBusinessHoldSummary', {
            url: '/AgrMstSuprBusinessHoldSummary',
            title: 'AgrMstSuprBusinessHoldSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBusinessHoldSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.AgrMstSuprBusinessApproval', {
            url: '/AgrMstSuprBusinessApproval',
            title: 'AgrMstSuprBusinessApproval',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBusinessApproval.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprBusinessApprovedSummary', {
            url: '/AgrMstSuprBusinessApprovedSummary',
            title: 'AgrMstSuprBusinessApprovedSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprBusinessApprovedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrSuprGSPGSTReturnFilingView', {
            url: '/AgrSuprGSPGSTReturnFilingView',
            title: 'AgrSuprGSPGSTReturnFilingView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGSPGSTReturnFilingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AgrSuprRCAuthAdvancedView', {
             url: '/AgrSuprRCAuthAdvancedView',
             title: 'AgrSuprRCAuthAdvancedView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrSuprRCAuthAdvancedView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrSuprPropertyTaxView', {
             url: '/AgrSuprPropertyTaxView',
             title: 'AgrSuprPropertyTaxView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrSuprPropertyTaxView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrSuprIECDetailedProfileView', {
             url: '/AgrSuprIECDetailedProfileView',
             title: 'AgrSuprIECDetailedProfileView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrSuprIECDetailedProfileView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

        .state('app.AgrSuprGSTAuthenticationView', {
            url: '/AgrSuprGSTAuthenticationView',
            title: 'AgrSuprGSTAuthenticationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGSTAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrSuprGSPGSTINAuthenticationView', {
            url: '/AgrSuprGSPGSTINAuthenticationView',
            title: 'AgrSuprGSPGSTINAuthenticationView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrSuprGSPGSTINAuthenticationView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditIndividualRepaymentEdit', {
            url: '/AgrTrnSuprCreditIndividualRepaymentEdit',
            title: 'AgrTrnSuprCreditIndividualRepaymentEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualRepaymentEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnSuprCreditIndividualBankAcctAdd', {
           url: '/AgrTrnSuprCreditIndividualBankAcctAdd',
           title: 'AgrTrnSuprCreditIndividualBankAcctAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualBankAcctAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditIndividualExistingBankAdd', {
           url: '/AgrTrnSuprCreditIndividualExistingBankAdd',
           title: 'AgrTrnSuprCreditIndividualExistingBankAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualExistingBankAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditIndividualBureauEdit', {
           url: '/AgrTrnSuprCreditIndividualBureauEdit',
           title: 'AgrTrnSuprCreditIndividualBureauEdit',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualBureauEdit.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditIndividualBureauView', {
           url: '/AgrTrnSuprCreditIndividualBureauView',
           title: 'AgrTrnSuprCreditIndividualBureauView',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualBureauView.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditCrimeCheckRecordAPI', {
           url: '/AgrTrnSuprCreditCrimeCheckRecordAPI',
           title: 'AgrTrnSuprCreditCrimeCheckRecordAPI',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCrimeCheckRecordAPI.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprDocumentCheckList', {
           url: '/AgrTrnSuprDocumentCheckList',
           title: 'AgrTrnSuprDocumentCheckList',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprDocumentCheckList.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditAddCovenantCheckList', {
           url: '/AgrTrnSuprCreditAddCovenantCheckList',
           title: 'AgrTrnSuprCreditAddCovenantCheckList',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditAddCovenantCheckList.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditEconomicCapitalAdd', {
           url: '/AgrTrnSuprCreditEconomicCapitalAdd',
           title: 'AgrTrnSuprCreditEconomicCapitalAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditEconomicCapitalAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditCompanyDtlAdd', {
           url: '/AgrTrnSuprCreditCompanyDtlAdd',
           title: 'AgrTrnSuprCreditCompanyDtlAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCompanyDtlAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditPSLDataFlaggingAdd', {
           url: '/AgrTrnSuprCreditPSLDataFlaggingAdd',
           title: 'AgrTrnSuprCreditPSLDataFlaggingAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditPSLDataFlaggingAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditSuppliersDtlAdd', {
           url: '/AgrTrnSuprCreditSuppliersDtlAdd',
           title: 'AgrTrnSuprCreditSuppliersDtlAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditSuppliersDtlAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditBuyerDtlAdd', {
           url: '/AgrTrnSuprCreditBuyerDtlAdd',
           title: 'AgrTrnSuprCreditBuyerDtlAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditBuyerDtlAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditBankAccountDtlAdd', {
           url: '/AgrTrnSuprCreditBankAccountDtlAdd',
           title: 'AgrTrnSuprCreditBankAccountDtlAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditBankAccountDtlAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnSuprCreditExistingBankDtlAdd', {
           url: '/AgrTrnSuprCreditExistingBankDtlAdd',
           title: 'AgrTrnSuprCreditExistingBankDtlAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditExistingBankDtlAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnSuprCreditCompanyAPIAdd', {
           url: '/AgrTrnSuprCreditCompanyAPIAdd',
           title: 'AgrTrnSuprCreditCompanyAPIAdd',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditCompanyAPIAdd.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

        .state('app.AgrTrnSuprCreditRepaymentDtlAdd', {
            url: '/AgrTrnSuprCreditRepaymentDtlAdd',
            title: 'AgrTrnSuprCreditRepaymentDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditRepaymentDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnSuprCreditObservationAdd', {
            url: '/AgrTrnSuprCreditObservationAdd',
            title: 'AgrTrnSuprCreditObservationAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditObservationAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditBankStatementAnalysisAdd', {
            url: '/AgrTrnSuprCreditBankStatementAnalysisAdd',
            title: 'AgrTrnSuprCreditBankStatementAnalysisAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditBankStatementAnalysisAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditFsaDetailAdd', {
            url: '/AgrTrnSuprCreditFsaDetailAdd',
            title: 'AgrTrnSuprCreditFsaDetailAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditFsaDetailAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCompanyCrimeCheckRecordAPI', {
            url: '/AgrTrnSuprCompanyCrimeCheckRecordAPI',
            title: 'AgrTrnSuprCompanyCrimeCheckRecordAPI',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCompanyCrimeCheckRecordAPI.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditInstitutionBureauEdit', {
            url: '/AgrTrnSuprCreditInstitutionBureauEdit',
            title: 'AgrTrnSuprCreditInstitutionBureauEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditInstitutionBureauEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrTrnSuprCreditInstitutionDtlAdd', {
            url: '/AgrTrnSuprCreditInstitutionDtlAdd',
            title: 'AgrTrnSuprCreditInstitutionDtlAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditInstitutionDtlAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrTrnSuprCreditInstitutionBureauView', {
             url: '/AgrTrnSuprCreditInstitutionBureauView',
             title: 'AgrTrnSuprCreditInstitutionBureauView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditInstitutionBureauView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

         .state('app.AgrSuprHighmarkReport', {
              url: '/AgrSuprHighmarkReport',
              title: 'AgrSuprHighmarkReport',
              templateUrl: helper.basepath('ems.mastersamagro/AgrSuprHighmarkReport.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrSuprTransUnionReport', {
              url: '/AgrSuprTransUnionReport',
              title: 'AgrSuprTransUnionReport',
              templateUrl: helper.basepath('ems.mastersamagro/AgrSuprTransUnionReport.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrTrnSuprCrimeReportCompanyView', {
              url: '/AgrTrnSuprCrimeReportCompanyView',
              title: 'AgrTrnSuprCrimeReportCompanyView',
              templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCrimeReportCompanyView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrTrnSuprCAMGenerate', {
               url: '/AgrTrnSuprCAMGenerate',
               title: 'AgrTrnSuprCAMGenerate',
               templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCAMGenerate.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
          })

         .state('app.AgrMstSuprCadApplicationView', {
             url: '/AgrMstSuprCadApplicationView',
             title: 'AgrMstSuprCadApplicationView',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadApplicationView.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstSuprApplicationLoanEdit', {
             url: '/AgrMstSuprApplicationLoanEdit',
             title: 'AgrMstSuprApplicationLoanEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprApplicationLoanEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrTrnSuprRMDeferralDtlsView', {
            url: '/AgrTrnSuprRMDeferralDtlsView',
            title: 'AgrTrnSuprRMDeferralDtlsView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprRMDeferralDtlsView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditEconomicCapitalEdit', {
            url: '/AgrTrnSuprCreditEconomicCapitalEdit',
            title: 'AgrTrnSuprCreditEconomicCapitalEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditEconomicCapitalEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

       .state('app.AgrTrnSuprCreditPSLDataFlaggingEdit', {
           url: '/AgrTrnSuprCreditPSLDataFlaggingEdit',
           title: 'AgrTrnSuprCreditPSLDataFlaggingEdit',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditPSLDataFlaggingEdit.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

       .state('app.AgrTrnSuprCreditSuppliersDtlEdit', {
           url: '/AgrTrnSuprCreditSuppliersDtlEdit',
           title: 'AgrTrnSuprCreditSuppliersDtlEdit',
           templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditSuppliersDtlEdit.html?ver=' + version + '"'),
           resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
       })

        .state('app.AgrTrnSuprCreditBuyerDtlEdit', {
            url: '/AgrTrnSuprCreditBuyerDtlEdit',
            title: 'AgrTrnSuprCreditBuyerDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditBuyerDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditBankAccountDtlEdit', {
            url: '/AgrTrnSuprCreditBankAccountDtlEdit',
            title: 'AgrTrnSuprCreditBankAccountDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditBankAccountDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditExistingBankDtlEdit', {
            url: '/AgrTrnSuprCreditExistingBankDtlEdit',
            title: 'AgrTrnSuprCreditExistingBankDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditExistingBankDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditRepaymentDtlEdit', {
            url: '/AgrTrnSuprCreditRepaymentDtlEdit',
            title: 'AgrTrnSuprCreditRepaymentDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditRepaymentDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditIndividualBankAcctEdit', {
            url: '/AgrTrnSuprCreditIndividualBankAcctEdit',
            title: 'AgrTrnSuprCreditIndividualBankAcctEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualBankAcctEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditIndividualExistingBankEdit', {
            url: '/AgrTrnSuprCreditIndividualExistingBankEdit',
            title: 'AgrTrnSuprCreditIndividualExistingBankEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualExistingBankEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditIndividualPSLDataFlagEdit', {
            url: '/AgrTrnSuprCreditIndividualPSLDataFlagEdit',
            title: 'AgrTrnSuprCreditIndividualPSLDataFlagEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditIndividualPSLDataFlagEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditUnderwritingKycLogView', {
            url: '/AgrTrnSuprCreditUnderwritingKycLogView',
            title: 'AgrTrnSuprCreditUnderwritingKycLogView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditUnderwritingKycLogView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrTrnSuprCreditServicesDtlEdit', {
            url: '/AgrTrnSuprCreditServicesDtlEdit',
            title: 'AgrTrnSuprCreditServicesDtlEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnSuprCreditServicesDtlEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         //moved to test
         .state('app.AgrMstSuprCadChequeManagementSummary', {
             url: '/AgrMstSuprCadChequeManagementSummary',
             title: 'AgrMstSuprCadChequeManagementSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadChequeManagementSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
         })

        .state('app.AgrMstSuprCadChequeMgmtCheckerSummary', {
            url: '/AgrMstSuprCadChequeMgmtCheckerSummary',
            title: 'AgrMstSuprCadChequeMgmtCheckerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadChequeMgmtCheckerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprCadChequeMgmtApprovalSummary', {
            url: '/AgrMstSuprCadChequeMgmtApprovalSummary',
            title: 'AgrMstSuprCadChequeMgmtApprovalSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCadChequeMgmtApprovalSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprChequeApprovalCompleted', {
            url: '/AgrMstSuprChequeApprovalCompleted',
            title: 'AgrMstSuprChequeApprovalCompleted',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprChequeApprovalCompleted.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprUDCMakerSummary', {
            url: '/AgrMstSuprUDCMakerSummary',
            title: 'AgrMstSuprUDCMakerSummary',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprUDCMakerSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprChequeMakerFollowDtls', {
            url: '/AgrMstSuprChequeMakerFollowDtls',
            title: 'AgrMstSuprChequeMakerFollowDtls',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprChequeMakerFollowDtls.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprUDCMakerAdd', {
            url: '/AgrMstSuprUDCMakerAdd',
            title: 'AgrMstSuprUDCMakerAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprUDCMakerAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprUDCMakerEditCheque', {
            url: '/AgrMstSuprUDCMakerEditCheque',
            title: 'AgrMstSuprUDCMakerEditCheque',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprUDCMakerEditCheque.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrMstSuprUDCMakerView', {
            url: '/AgrMstSuprUDCMakerView',
            title: 'AgrMstSuprUDCMakerView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprUDCMakerView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

         .state('app.AgrMstTypeofSupply', {
             url: '/AgrMstTypeofSupply',
             title: 'AgrMstTypeofSupply',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstTypeofSupply.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstSectorClassification', {
            url: '/AgrMstSectorClassification',
            title: 'AgrMstSectorClassification',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSectorClassification.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstTypeofWarehouse', {
            url: '/AgrMstTypeofWarehouse',
            title: 'AgrMstTypeofWarehouse',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstTypeofWarehouse.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstProductDeskMapping', {
            url: '/AgrMstProductDeskMapping',
            title: 'AgrMstProductDeskMapping',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductDeskMapping.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        //27th July 2022--committed
        .state('app.AgrMstInsuranceCompany', {
            url: '/AgrMstInsuranceCompany',
            title: 'AgrMstInsuranceCompany',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstInsuranceCompany.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstInsuranceCompanyAdd', {
            url: '/AgrMstInsuranceCompanyAdd',
            title: 'AgrMstInsuranceCompanyAdd',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstInsuranceCompanyAdd.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        
        .state('app.AgrMstInsuranceCompanyEdit', {
            url: '/AgrMstInsuranceCompanyEdit',
            title: 'AgrMstInsuranceCompanyEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstInsuranceCompanyEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        .state('app.AgrMstInsuranceCompanyView', {
            url: '/AgrMstInsuranceCompanyView',
            title: 'AgrMstInsuranceCompanyView',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstInsuranceCompanyView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

        //28th July 2022 --committed
        .state('app.AgrTrnApplCCApproved', {
            url: '/AgrTrnApplCCApproved',
            title: 'AgrTrnApplCCApproved',
            templateUrl: helper.basepath('ems.mastersamagro/AgrTrnApplCCApproved.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
    
        .state('app.AgrMstSupplierApplicationReport', {
            url: '/AgrMstSupplierApplicationReport',
            title: 'AgrMstSupplierApplicationReport',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierApplicationReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
    
        .state('app.AgrMstSupplierCCReport', {
                url: '/AgrMstSupplierCCReport',
                title: 'AgrMstSupplierCCReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierCCReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
    
         .state('app.AgrMstSupplierCreditAllocationReport', {
                url: '/AgrMstSupplierCreditAllocationReport',
                title: 'AgrMstSupplierCreditAllocationReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierCreditAllocationReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstProductPendingAssignmentSummary', {
             url: '/AgrMstProductPendingAssignmentSummary',
             title: 'AgrMstProductPendingAssignmentSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductPendingAssignmentSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstProductAssignedSummary', {
             url: '/AgrMstProductAssignedSummary',
             title: 'AgrMstProductAssignedSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductAssignedSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrProductDescVisitReportAdd', {
             url: '/AgrProductDescVisitReportAdd',
             title: 'AgrProductDescVisitReportAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrProductDescVisitReportAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstProductDescVisitReportEdit', {
             url: '/AgrMstProductDescVisitReportEdit',
             title: 'AgrMstProductDescVisitReportEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductDescVisitReportEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

          .state('app.AgrMstProductDescVisitReportView', {
              url: '/AgrMstProductDescVisitReportView',
              title: 'AgrMstProductDescVisitReportView',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductDescVisitReportView.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

         .state('app.AgrMstProductMyAssignmentSummary', {
             url: '/AgrMstProductMyAssignmentSummary',
             title: 'AgrMstProductMyAssignmentSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductMyAssignmentSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

           .state('app.AgrMstProducDesctVerification', {
               url: '/AgrMstProducDesctVerification',
               title: 'AgrMstProducDesctVerification',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstProducDesctVerification.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

           .state('app.AgrMstProductDescQueryStatus', {
               url: '/AgrMstProductDescQueryStatus',
               title: 'AgrMstProductDescQueryStatus',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductDescQueryStatus.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

         .state('app.AgrMstProductSubmittedtoApprovalSummary', {
             url: '/AgrMstProductSubmittedtoApprovalSummary',
             title: 'AgrMstProductSubmittedtoApprovalSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductSubmittedtoApprovalSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstProductRejectedApplSummary', {
             url: '/AgrMstProductRejectedApplSummary',
             title: 'AgrMstProductRejectedApplSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductRejectedApplSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstProductcDescApprovalSummary', {
             url: '/AgrMstProductcDescApprovalSummary',
             title: 'AgrMstProductcDescApprovalSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductcDescApprovalSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrTrnProductDescApproval', {
             url: '/AgrTrnProductDescApproval',
             title: 'AgrTrnProductDescApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnProductDescApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrTrnProductDescApprovedSummary', {
             url: '/AgrTrnProductDescApprovedSummary',
             title: 'AgrTrnProductDescApprovedSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnProductDescApprovedSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrTrnProductDescRejectandHoldSummary', {
             url: '/AgrTrnProductDescRejectandHoldSummary',
             title: 'AgrTrnProductDescRejectandHoldSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrTrnProductDescRejectandHoldSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })
        
           .state('app.AgrMstCustomerOnboardingInfoAdd', {
               url: '/AgrMstCustomerOnboardingInfoAdd',
               title: 'AgrMstCustomerOnboardingInfoAdd',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstCustomerOnboardingInfoAdd.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
           })

         .state('app.AgrMstCustomerOnboardingApproval', {
             url: '/AgrMstCustomerOnboardingApproval',
             title: 'AgrMstCustomerOnboardingApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstCustomerOnboardingApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

         .state('app.AgrMstSupplierOnboardingApproval', {
             url: '/AgrMstSupplierOnboardingApproval',
             title: 'AgrMstSupplierOnboardingApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierOnboardingApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

 	      .state('app.AgrMstOnboardingApprovalCompleted', {
 	          url: '/AgrMstOnboardingApprovalCompleted',
 	          title: 'AgrMstOnboardingApprovalCompleted',
 	          templateUrl: helper.basepath('ems.mastersamagro/AgrMstOnboardingApprovalCompleted.html?ver=' + version + '"'),
 	          resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
 	      })

          .state('app.AgrMstCustomerApprovalSummary', {
               url: '/AgrMstCustomerApprovalSummary',
               title: 'AgrMstCustomerApprovalSummary',
               templateUrl: helper.basepath('ems.mastersamagro/AgrMstCustomerApprovalSummary.html?ver=' + version + '"'),
               resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

          .state('app.AgrMstCustomerOnboardingSummary', {
              url: '/AgrMstCustomerOnboardingSummary',
              title: 'AgrMstCustomerOnboardingSummary',
              templateUrl: helper.basepath('ems.mastersamagro/AgrMstCustomerOnboardingSummary.html?ver=' + version + '"'),
              resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

         .state('app.AgrMstSupplierOnboardingInfoAdd', {
             url: '/AgrMstSupplierOnboardingInfoAdd',
             title: 'AgrMstSupplierOnboardingInfoAdd',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierOnboardingInfoAdd.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

          .state('app.AgrMstCustomerOnboardRejectedSummary', {
             url: '/AgrMstCustomerOnboardRejectedSummary',
             title: 'AgrMstCustomerOnboardRejectedSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstCustomerOnboardRejectedSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

         .state('app.AgrMstbyrOnboardInfoEdit', {
             url: '/AgrMstbyrOnboardInfoEdit',
             title: 'AgrMstbyrOnboardInfoEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstbyrOnboardInfoEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

        .state('app.AgrMstSuprOnboardInfoEdit', {
            url: '/AgrMstSuprOnboardInfoEdit',
            title: 'AgrMstSuprOnboardInfoEdit',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprOnboardInfoEdit.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AgrMstBuyerApprovedSummary', {
             url: '/AgrMstBuyerApprovedSummary',
             title: 'AgrMstBuyerApprovedSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstBuyerApprovedSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

        .state('app.AgrMstSupplierApprovedSummary', {
             url: '/AgrMstSupplierApprovedSummary',
             title: 'AgrMstSupplierApprovedSummary',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSupplierApprovedSummary.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })

         .state('app.AgrMstByrOnboardApprovalEdit', {
             url: '/AgrMstByrOnboardApprovalEdit',
             title: 'AgrMstByrOnboardApprovalEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstByrOnboardApprovalEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

        .state('app.AgrMstSuprOnboardApprovalEdit', {
             url: '/AgrMstSuprOnboardApprovalEdit',
             title: 'AgrMstSuprOnboardApprovalEdit',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprOnboardApprovalEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
        .state('app.AgrMstInitiateApplication', {
            url: '/AgrMstInitiateApplication',
            title: 'AgrMstInitiateApplication',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstInitiateApplication.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
       })
 
         .state('app.AgrMstOnboardingApplicationInfo', {
             url: '/AgrMstOnboardingApplicationInfo',
             title: 'AgrMstOnboardingApplicationInfo',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstOnboardingApplicationInfo.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })
   
         .state('app.AgrMstCreditorMasterApproval', {
             url: '/AgrMstCreditorMasterApproval',
             title: 'AgrMstCreditorMasterApproval',
             templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditorMasterApproval.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

             .state('app.AgrMstByrOnboardApprovedEdit', {
                 url: '/AgrMstByrOnboardApprovedEdit',
                 title: 'AgrMstByrOnboardApprovedEdit',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstByrOnboardApprovedEdit.html?ver=' + version + '"'),
             resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

             .state('app.AgrMstSuprOnboardApprovedEdit', {
                 url: '/AgrMstSuprOnboardApprovedEdit',
                 title: 'AgrMstSuprOnboardApprovedEdit',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprOnboardApprovedEdit.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

        .state('app.AgrMstBuyerSupplierType', {
            url: '/AgrMstBuyerSupplierType',
            title: 'AgrMstBuyerSupplierType',
            templateUrl: helper.basepath('ems.mastersamagro/AgrMstBuyerSupplierType.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.AgrRptCadDeferral', {
                 url: '/AgrRptCadDeferral',
                 title: 'AgrRptCadDeferral',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadDeferral.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
         })

          .state('app.AgrRptCadCovenant', {
                 url: '/AgrRptCadCovenant',
                 title: 'AgrRptCadCovenant',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadCovenant.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
          })

        .state('app.AgrDocumentChecklistApprovalReport', {
                url: '/AgrDocumentChecklistApprovalReport',
                title: 'AgrDocumentChecklistApprovalReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrDocumentChecklistApprovalReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AgrDocumentChecklistCheckerReport', {
                url: '/AgrDocumentChecklistCheckerReport',
                title: 'AgrDocumentChecklistCheckerReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrDocumentChecklistCheckerReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })

            .state('app.AgrDocumentChecklistMakerReport', {
                url: '/AgrDocumentChecklistMakerReport',
                title: 'AgrDocumentChecklistMakerReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrDocumentChecklistMakerReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
            })
            .state('app.AgrMstCadScannedFollowupSummary', {
                url: '/AgrMstCadScannedFollowupSummary',
                title: 'AgrMstCadScannedFollowupSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadScannedFollowupSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')      
            })
                
           .state('app.AgrTrnCadPhysicalDocFollowupSummary', {
                 url: '/AgrTrnCadPhysicalDocFollowupSummary',
                 title: 'AgrTrnCadPhysicalDocFollowupSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCadPhysicalDocFollowupSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')  
            })

             .state('app.AgrRptCadScannedDeferralCovenantDtls', {
                 url: '/AgrRptCadScannedDeferralCovenantDtls',
                 title: 'AgrRptCadScannedDeferralCovenantDtls',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadScannedDeferralCovenantDtls.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadApplicationDeferralCovenantView', {
                 url: '/AgrRptCadApplicationDeferralCovenantView',
                 title: 'AgrRptCadApplicationDeferralCovenantView',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadApplicationDeferralCovenantView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadScannedDocchecklist', {
                 url: '/AgrRptCadScannedDocchecklist',
                 title: 'AgrRptCadScannedDocchecklist',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadScannedDocchecklist.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadScannedQuery', {
                 url: '/AgrRptCadScannedQuery',
                 title: 'AgrRptCadScannedQuery',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadScannedQuery.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptScannedDeferralHistory', {
                 url: '/AgrRptScannedDeferralHistory',
                 title: 'AgrRptScannedDeferralHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptScannedDeferralHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadPhysicalDeferralCovenantDtls', {
                 url: '/AgrRptCadPhysicalDeferralCovenantDtls',
                 title: 'AgrRptCadPhysicalDeferralCovenantDtls',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadPhysicalDeferralCovenantDtls.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadPhysicalDocchecklist', {
                 url: '/AgrRptCadPhysicalDocchecklist',
                 title: 'AgrRptCadPhysicalDocchecklist',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadPhysicalDocchecklist.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadPhysicalQuery', {
                 url: '/AgrRptCadPhysicalQuery',
                 title: 'AgrRptCadPhysicalQuery',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadPhysicalQuery.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptPhysicalDeferralHistory', {
                 url: '/AgrRptPhysicalDeferralHistory',
                 title: 'AgrRptPhysicalDeferralHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptPhysicalDeferralHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptScannedDeferralStatus', {
                 url: '/AgrRptScannedDeferralStatus',
                 title: 'AgrRptScannedDeferralStatus',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptScannedDeferralStatus.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })


             .state('app.AgrRptPhysicalDeferralStatus', {
                 url: '/AgrRptPhysicalDeferralStatus',
                 title: 'AgrRptPhysicalDeferralStatus',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptPhysicalDeferralStatus.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrRptCadCovenantChecker', {
                 url: '/AgrRptCadCovenantChecker',
                 title: 'AgrRptCadCovenantChecker',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadCovenantChecker.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })
             .state('app.AgrRptCadCovenantApproval', {
                 url: '/AgrRptCadCovenantApproval',
                 title: 'AgrRptCadCovenantApproval',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrRptCadCovenantApproval.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrMstCCApprovedSummary', {
                 url: '/AgrMstCCApprovedSummary',
                 title: 'AgrMstCCApprovedSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCCApprovedSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstSuprCCApprovedSummary', {
                url: '/AgrMstSuprCCApprovedSummary',
                title: 'AgrMstSuprCCApprovedSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCCApprovedSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.AgrMstAmendmentSummary', {
                 url: '/AgrMstAmendmentSummary',
                 title: 'AgrMstAmendmentSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstAmendmentSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstRenewalApplicationAdd', {
                 url: '/AgrMstRenewalApplicationAdd',
                 title: 'AgrMstRenewalApplicationAdd',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstRenewalApplicationAdd.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstWarehouseReport', {
                 url: '/AgrMstWarehouseReport',
                 title: 'AgrMstWarehouseReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstWarehouseReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

             })

             .state('app.AgrMstOtherCreditorReport', {
                 url: '/AgrMstOtherCreditorReport',
                 title: 'AgrMstOtherCreditorReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstOtherCreditorReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

             })

             .state('app.AgrMstShortClosing', {
                 url: '/AgrMstShortClosing',
                 title: 'AgrMstShortClosing',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstShortClosing.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnProductDeskAutoApprovalSummary', {
                 url: '/AgrTrnProductDeskAutoApprovalSummary',
                 title: 'AgrTrnProductDeskAutoApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnProductDeskAutoApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnCreditAutoApprovalSummary', {
                 url: '/AgrTrnCreditAutoApprovalSummary',
                 title: 'AgrTrnCreditAutoApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCreditAutoApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnACAutoApprovalSummary', {
                 url: '/AgrTrnACAutoApprovalSummary',
                 title: 'AgrTrnACAutoApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnACAutoApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnPmgAdvanceRejectedSummary', {
                 url: '/AgrTrnPmgAdvanceRejectedSummary',
                 title: 'AgrTrnPmgAdvanceRejectedSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPmgAdvanceRejectedSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnPMGDeferralDochecklist', {
                 url: '/AgrTrnPMGDeferralDochecklist',
                 title: 'AgrTrnPMGDeferralDochecklist',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGDeferralDochecklist.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })              
            .state('app.AgrTrnPMGDeferralCloseQuery', {
                 url: '/AgrTrnPMGDeferralCloseQuery',
                 title: 'AgrTrnPMGDeferralCloseQuery',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGDeferralCloseQuery.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })              
            .state('app.AgrTrnPMGDeferralQuery', {
                 url: '/AgrTrnPMGDeferralQuery',
                 title: 'AgrTrnPMGDeferralQuery',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGDeferralQuery.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })              
             .state('app.AgrTrnPMGDeferralStatus', {
                 url: '/AgrTrnPMGDeferralStatus',
                 title: 'AgrTrnPMGDeferralStatus',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGDeferralStatus.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 
             .state('app.AgrTrnBuyerDeferralMyApproval', {
                 url: '/AgrTrnBuyerDeferralMyApproval',
                 title: 'AgrTrnBuyerDeferralMyApproval',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnBuyerDeferralMyApproval.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrIncompleteStageSummary', {
                 url: '/AgrIncompleteStageSummary',
                 title: 'AgrIncompleteStageSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrIncompleteStageSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstBusinessRejectRevoke', {
                 url: '/AgrMstBusinessRejectRevoke',
                 title: 'AgrMstBusinessRejectRevoke',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessRejectRevoke.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstBusinessRevokeHistory', {
                 url: '/AgrMstBusinessRevokeHistory',
                 title: 'AgrMstBusinessRevokeHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessRevokeHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstBusinessRevokedApplSummary', {
                 url: '/AgrMstBusinessRevokedApplSummary',
                 title: 'AgrMstBusinessRevokedApplSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessRevokedApplSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstBusinessHoldRevokeSummary', {
                 url: '/AgrMstBusinessHoldRevokeSummary',
                 title: 'AgrMstBusinessHoldRevokeSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessHoldRevokeSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstCreditRevokeSummary', {
                 url: '/AgrMstCreditRevokeSummary',
                 title: 'AgrMstCreditRevokeSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditRevokeSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstBusinessRevokeSummary', {
                 url: '/AgrMstBusinessRevokeSummary',
                 title: 'AgrMstBusinessRevokeSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessRevokeSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCreditRejectHoldRevoke', {
                 url: '/AgrMstCreditRejectHoldRevoke',
                 title: 'AgrMstCreditRejectHoldRevoke',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditRejectHoldRevoke.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCreditHoldRevokeSummary', {
                 url: '/AgrMstCreditHoldRevokeSummary',
                 title: 'AgrMstCreditHoldRevokeSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditHoldRevokeSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCreditRevokedApplSummary', {
                 url: '/AgrMstCreditRevokedApplSummary',
                 title: 'AgrMstCreditRevokedApplSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditRevokedApplSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCreditRejectHoldRevokeHistory', {
                 url: '/AgrMstCreditRejectHoldRevokeHistory',
                 title: 'AgrMstCreditRejectHoldRevokeHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditRejectHoldRevokeHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstBusinessHierarchyUpdateSummary', {
                 url: '/AgrMstBusinessHierarchyUpdateSummary',
                 title: 'AgrMstBusinessHierarchyUpdateSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessHierarchyUpdateSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCreditStageSummary', {
                 url: '/AgrMstCreditStageSummary',
                 title: 'AgrMstCreditStageSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditStageSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCcStageSummary', {
                 url: '/AgrMstCcStageSummary',
                 title: 'AgrMstCcStageSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCcStageSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCadPendingStageSummary', {
                 url: '/AgrMstCadPendingStageSummary',
                 title: 'AgrMstCadPendingStageSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadPendingStageSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstCadAcceptedStageSummary', {
                 url: '/AgrMstCadAcceptedStageSummary',
                 title: 'AgrMstCadAcceptedStageSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCadAcceptedStageSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstBusinessHierarchyUpdate', {
                 url: '/AgrMstBusinessHierarchyUpdate',
                 title: 'AgrMstBusinessHierarchyUpdate',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessHierarchyUpdate.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstBusinessHierarchyUpdateHistory', {
                 url: '/AgrMstBusinessHierarchyUpdateHistory',
                 title: 'AgrMstBusinessHierarchyUpdateHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstBusinessHierarchyUpdateHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstSuprCreditVisitReportEdit', {
                 url: '/AgrMstSuprCreditVisitReportEdit',
                 title: 'AgrMstSuprCreditVisitReportEdit',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCreditVisitReportEdit.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })              
	        .state('app.AgrMstSuprCreditVisitReportView', {
                 url: '/AgrMstSuprCreditVisitReportView',
                 title: 'AgrMstSuprCreditVisitReportView',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstSuprCreditVisitReportView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrTrnUpcomingCreditApprovalSummary', {
                 url: '/AgrTrnUpcomingCreditApprovalSummary',
                 title: 'AgrTrnUpcomingCreditApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnUpcomingCreditApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

             .state('app.AgrMstUpcomingBusinessApprovalSummary', {
                 url: '/AgrMstUpcomingBusinessApprovalSummary',
                 title: 'AgrMstUpcomingBusinessApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstUpcomingBusinessApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
             })

            .state('app.AgrMstProductRevokeSummary', {
                url: '/AgrMstProductRevokeSummary',
                title: 'AgrMstProductRevokeSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductRevokeSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            
            .state('app.AgrMstProductHoldRevokeSummary', {
                url: '/AgrMstProductHoldRevokeSummary',
                title: 'AgrMstProductHoldRevokeSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductHoldRevokeSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.AgrMstProductRejectHoldRevokeHistory', {
                url: '/AgrMstProductRejectHoldRevokeHistory',
                title: 'AgrMstProductRejectHoldRevokeHistory',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductRejectHoldRevokeHistory.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            
            .state('app.AgrMstProductRevokedApplSummary', {
                url: '/AgrMstProductRevokedApplSummary',
                title: 'AgrMstProductRevokedApplSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstProductRevokedApplSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            
            

         // Horizontal layout
         // -----------------------------------
         // 
         // CUSTOM RESOLVES
         //   Add your own resolves properties
         //   following this object extend
         //   method
         // -----------------------------------
         // .state('app.someroute', {
         //   url: '/some_url',
         //   templateUrl: 'path_to_template.html',
         //   controller: 'someController',
         //   resolve: angular.extend(
         //     helper.resolveFor(), {
         //     // YOUR RESOLVES GO HERE
         //     }
         //   )
         // })
         ;

     } // routesConfig

     angular.module('angle').config(['$httpProvider', function ($httpProvider) {
         $httpProvider.interceptors.push(["$q", "$location", "$rootScope", "$cookies", function ($q, $location, $rootScope, $cookies) {
             return {
                 'request': function (config) {
                     config.headers.Authorization = $cookies.getObject('token');
                     //$http.defaults.headers.common.Authorization = localStorage.getItem("token");
                     return config;
                 },
                 'response': function (response) {
                     //Will only be called for HTTP up to 300
                     //console.log(response);
                     return response;
                 },
                 'responseError': function (rejection) {

                     if (rejection.status === 401) {
                         // $location.url('page/404?errno=401');
                     }
                     else if (rejection.status === 404) {
                         //console.log('404');
                         //$location.url('page/404?errno=404');
                     }
                     else if (rejection.status === 400) {
                         // $location.url('page/404?errno=400');
                     }
                     else if (rejection.status === 403) {
                         // $location.url('page/404?errno=403');
                     }
                     ////$state.go('page.404');
                     if (rejection.message === 404) {
                         //location.reload();
                     }
                     return $q.reject(rejection);
                 }
             };
         }]);
     }]);


 })();
/**=========================================================
 * Module: config.js
 * App routes and resources configuration
 =========================================================*/


 (function () {
     'use strict';

     angular
         .module('app.routes')
         .config(routesConfig);

     routesConfig.$inject = ['$stateProvider', '$locationProvider', '$urlRouterProvider', 'RouteHelpersProvider'];
     function routesConfig($stateProvider, $locationProvider, $urlRouterProvider, helper) {

         // Set the following to true to enable the HTML5 Mode
         // You may have to set <base> tag in index and a routing configuration in your server
         $locationProvider.html5Mode(false);

         // defaults to dashboard
         $urlRouterProvider.otherwise('/page/user_login');

         // version update
         var version = '1.0';

         // 
         // Application Routes
         // -----------------------------------   
         $stateProvider
        
        

                .state('app.AgrProductStageSummary', {
                url: '/AgrProductStageSummary',
                title: 'AgrProductStageSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrProductStageSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

             .state('app.AgrSuprDocumentChecklistReport', {
                 url: '/AgrSuprDocumentChecklistReport',
                 title: 'AgrSuprDocumentChecklistReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrSuprDocumentChecklistReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

 .state('app.AgrDocumentChecklistApprovalCompletedReport', {
                 url: '/AgrDocumentChecklistApprovalCompletedReport',
                 title: 'AgrDocumentChecklistApprovalCompletedReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrDocumentChecklistApprovalCompletedReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstByrProposalProductView', {
                 url: '/AgrMstByrProposalProductView',
                 title: 'AgrMstByrProposalProductView',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstByrProposalProductView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrMstByrProductcomparisonView', {
                 url: '/AgrMstByrProductcomparisonView',
                 title: 'AgrMstByrProductcomparisonView',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstByrProductcomparisonView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
 .state('app.brsTrnMyUnReconciliationPendingView', {
            url: '/brsTrnMyUnReconciliationPendingView',
            title: 'brsTrnMyUnReconciliationPendingView',
            templateUrl: helper.basepath('ems.brs/brsTrnMyUnReconciliationPendingView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
	              .state('app.MstSAVerificationMakerInstitutionDistractSummary', {
                url: '/MstSAVerificationMakerInstitutionDistractSummary',
                title: 'MstSAVerificationMakerInstitutionDistractSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationMakerInstitutionDistractSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationMakerIndividualDistractSummary', {
                url: '/MstSAVerificationMakerIndividualDistractSummary',
                title: 'MstSAVerificationMakerIndividualDistractSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationMakerIndividualDistractSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationInstitutionCheckerDistractSummary', {
                url: '/MstSAVerificationInstitutionCheckerDistractSummary',
                title: 'MstSAVerificationInstitutionCheckerDistractSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionCheckerDistractSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationIndividualCheckerDistractSummary', {
                url: '/MstSAVerificationIndividualCheckerDistractSummary',
                title: 'MstSAVerificationIndividualCheckerDistractSummary',
                templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualCheckerDistractSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationInstitutionMakerTrashView', {
                url: '/MstSAVerificationInstitutionMakerTrashView',
                title: 'MstSAVerificationInstitutionMakerTrashView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionMakerTrashView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationIndividualMakerTrashView', {
                url: '/MstSAVerificationIndividualMakerTrashView',
                title: 'MstSAVerificationIndividualMakerTrashView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualMakerTrashView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationInstitutionCheckerTrashView', {
                url: '/MstSAVerificationInstitutionCheckerTrashView',
                title: 'MstSAVerificationInstitutionCheckerTrashView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionCheckerTrashView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSAVerificationIndividualCheckerTrashView', {
                url: '/MstSAVerificationIndividualCheckerTrashView',
                title: 'MstSAVerificationIndividualCheckerTrashView',
                templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualCheckerTrashView.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.MstSAApprovalIndividualDeferredSummary', {
                url: '/MstSAApprovalIndividualDeferredSummary',
                title: 'MstSAApprovalIndividualDeferredSummary',
                templateUrl: helper.basepath('ems.master/MstSAApprovalIndividualDeferredSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

            .state('app.MstSAApprovalInstitutionDeferredSummary', {
                url: '/MstSAApprovalInstitutionDeferredSummary',
                title: 'MstSAApprovalInstitutionDeferredSummary',
                templateUrl: helper.basepath('ems.master/MstSAApprovalInstitutionDeferredSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.MstSABussDevtInstitutionDeferredSummary', {
            url: '/MstSABussDevtInstitutionDeferredSummary',
            title: 'MstSABussDevtInstitutionDeferredSummary',
            templateUrl: helper.basepath('ems.master/MstSABussDevtInstitutionDeferredSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        
        .state('app.MstSABussDevtIndividualDeferredSummary', {
            url: '/MstSABussDevtIndividualDeferredSummary',
            title: 'MstSABussDevtIndividualDeferredSummary',
            templateUrl: helper.basepath('ems.master/MstSABussDevtIndividualDeferredSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationIndividualDeferredSummary', {
            url: '/MstSAVerificationIndividualDeferredSummary',
            title: 'MstSAVerificationIndividualDeferredSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualDeferredSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationInstitutionDeferredSummary', {
            url: '/MstSAVerificationInstitutionDeferredSummary',
            title: 'MstSAVerificationInstitutionDeferredSummary',
            templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionDeferredSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationInstitutionDeferredView', {
            url: '/MstSAVerificationInstitutionDeferredView',
            title: 'MstSAVerificationInstitutionDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationInstitutionDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAVerificationIndividualDeferredView', {
            url: '/MstSAVerificationIndividualDeferredView',
            title: 'MstSAVerificationIndividualDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAVerificationIndividualDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSABussDevtInstitutionDeferredView', {
            url: '/MstSABussDevtInstitutionDeferredView',
            title: 'MstSABussDevtInstitutionDeferredView',
            templateUrl: helper.basepath('ems.master/MstSABussDevtInstitutionDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSABussDevtIndividualDeferredView', {
            url: '/MstSABussDevtIndividualDeferredView',
            title: 'MstSABussDevtIndividualDeferredView',
            templateUrl: helper.basepath('ems.master/MstSABussDevtIndividualDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAApprovalInstitutionDeferredView', {
            url: '/MstSAApprovalInstitutionDeferredView',
            title: 'MstSAApprovalInstitutionDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAApprovalInstitutionDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAApprovalIndividualDeferredView', {
            url: '/MstSAApprovalIndividualDeferredView',
            title: 'MstSAApprovalIndividualDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAApprovalIndividualDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAMyApprovalInstitutionDeferredView', {
            url: '/MstSAMyApprovalInstitutionDeferredView',
            title: 'MstSAMyApprovalInstitutionDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAMyApprovalInstitutionDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.MstSAMyApprovalIndividualDeferredView', {
            url: '/MstSAMyApprovalIndividualDeferredView',
            title: 'MstSAMyApprovalIndividualDeferredView',
            templateUrl: helper.basepath('ems.master/MstSAMyApprovalIndividualDeferredView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
        .state('app.brsTrnMyUnReconciliationClosedView', {
            url: '/brsTrnMyUnReconciliationClosedView',
            title: 'brsTrnMyUnReconciliationClosedView',
            templateUrl: helper.basepath('ems.brs/brsTrnMyUnReconciliationClosedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
          .state('app.AgrMstContractSummary', {
                 url: '/AgrMstContractSummary',
                 title: 'AgrMstContractSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.AgrMstContractCheckerSummary', {
                 url: '/AgrMstContractCheckerSummary',
                 title: 'AgrMstContractCheckerSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractCheckerSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.AgrMstContractApprovalSummary', {
                 url: '/AgrMstContractApprovalSummary',
                 title: 'AgrMstContractApprovalSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractApprovalSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
            .state('app.AgrMstContractApprovalCompleted', {
                 url: '/AgrMstContractApprovalCompleted',
                 title: 'AgrMstContractApprovalCompleted',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractApprovalCompleted.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 
            .state('app.AgrMstContractAccepted', {
                 url: '/AgrMstContractAccepted',
                 title: 'AgrMstContractAccepted',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractAccepted.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 
           .state('app.AgrMstContractDtlSummary', {
                 url: '/AgrMstContractDtlSummary',
                 title: 'AgrMstContractDtlSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractDtlSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 
            .state('app.AgrMstCreateContract', {
                 url: '/AgrMstCreateContract',
                 title: 'AgrMstCreateContract',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreateContract.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            }) 
             .state('app.AgrMstContrateTemplateSummary', {
                 url: '/AgrMstContrateTemplateSummary',
                 title: 'AgrMstContrateTemplateSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContrateTemplateSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 

             .state('app.AgrMstContractEdit', {
                 url: '/AgrMstContractEdit',
                 title: 'AgrMstContractEdit',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractEdit.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 

             .state('app.AgrMstContractDtlViewSummary', {
                 url: '/AgrMstContractDtlViewSummary',
                 title: 'AgrMstContractDtlViewSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstContractDtlViewSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             }) 

             .state('app.AgrMstAppContractLetterWordView', {
                 url: '/AgrMstAppContractLetterWordView',
                 title: 'AgrMstAppContractLetterWordView',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppContractLetterWordView.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrSanctionEditTemplate', {
                 url: '/AgrSanctionEditTemplate',
                 title: 'AgrSanctionEditTemplate',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrSanctionEditTemplate.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrSanctionAddTemplate', {
                 url: '/AgrSanctionAddTemplate',
                 title: 'AgrSanctionAddTemplate',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrSanctionAddTemplate.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrSanctionTemplateSummary', {
                 url: '/AgrSanctionTemplateSummary',
                 title: 'AgrSanctionTemplateSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrSanctionTemplateSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstAppSanctionLetterGeneration', {
                 url: '/AgrMstAppSanctionLetterGeneration',
                 title: 'AgrMstAppSanctionLetterGeneration',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstAppSanctionLetterGeneration.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrMstSanctionDtlViewSummary', {
                 url: '/AgrMstSanctionDtlViewSummary',
                 title: 'AgrMstSanctionDtlViewSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrMstSanctionDtlViewSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrTrnCcMeetingSkipSummary', {
                 url: '/AgrTrnCcMeetingSkipSummary',
                 title: 'AgrTrnCcMeetingSkipSummary',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcMeetingSkipSummary.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
             .state('app.AgrTrnCcMeetingSkipHistory', {
                 url: '/AgrTrnCcMeetingSkipHistory',
                 title: 'AgrTrnCcMeetingSkipHistory',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnCcMeetingSkipHistory.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
          .state('app.MstEncoreProduct', {
            url: '/MstEncoreProduct',
            title: 'MstEncoreProduct',
            templateUrl: helper.basepath('ems.master/MstEncoreProduct.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
          .state('app.SysMstBranchSummary', {
                url: '/SysMstBranchSummary',
                title: 'SysMstBranchSummary',
                templateUrl: helper.basepath('ems.system/SysMstBranchSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
            .state('app.SysMstDepartmentSummary', {
                url: '/SysMstDepartmentSummary',
                title: 'SysMstDepartmentSummary',
                templateUrl: helper.basepath('ems.system/SysMstDepartmentSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
    .state('app.BrsTrnUnreconBankMatchedView', {
            url: '/BrsTrnUnreconBankMatchedView',
            title: 'BrsTrnUnreconBankMatchedView',
            templateUrl: helper.basepath('ems.brs/BrsTrnUnreconBankMatchedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
       

        .state('app.BrsTrnUnreconRepaymentMatchedView', {
            url: '/BrsTrnUnreconRepaymentMatchedView',
            title: 'BrsTrnUnreconRepaymentMatchedView',
            templateUrl: helper.basepath('ems.brs/BrsTrnUnreconRepaymentMatchedView.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
    .state('app.BrsTrnUnreconTransactionDetails', {
            url: '/BrsTrnUnreconTransactionDetails',
            title: 'BrsTrnUnreconTransactionDetails',
            templateUrl: helper.basepath('ems.brs/BrsTrnUnreconTransactionDetails.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })

        .state('app.BrsTrnUnreconAssignedSummary', {
            url: '/BrsTrnUnreconAssignedSummary',
            title: 'BrsTrnUnreconAssignedSummary',
            templateUrl: helper.basepath('ems.brs/BrsTrnUnreconAssignedSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

        })
       .state('app.AgrTrnPMGPhysicalDochecklist', {
                 url: '/AgrTrnPMGPhysicalDochecklist',
                 title: 'AgrTrnPMGPhysicalDochecklist',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGPhysicalDochecklist.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.AgrTrnPMGPhysicalDocQuery', {
                 url: '/AgrTrnPMGPhysicalDocQuery',
                 title: 'AgrTrnPMGPhysicalDocQuery',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrTrnPMGPhysicalDocQuery.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
         .state('app.MstOneApiDashboard', {
                url: '/MstOneApiDashboard',
                title: 'MstOneApiDashboard',
                templateUrl: helper.basepath('ems.master/MstOneApiDashboard.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.SysMstApiUserRegistration', {
                 url: '/SysMstApiUserRegistration',
                 title: 'SysMstApiUserRegistration',
                 templateUrl: helper.basepath('ems.system/SysMstApiUserRegistration.html?ver=' + version + '"'),
                     resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
                 })
       .state('app.SysMstStateSummary', {
            url: '/SysMstStateSummary',
            title: 'SysMstStateSummary',
            templateUrl: helper.basepath('ems.system/SysMstStateSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'ngWig')
        })
    .state('app.MstSupplierSummary',
        {
            url: '/MstSupplierSummary',
            title: 'MstSupplierSummary',
            templateUrl: helper.basepath('ems.master/MstSupplierSummary.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'taginput', 'inputmask', 'textAngular')
        })
 .state('app.MstCadConsolidatedSanctionReport', {
                 url: '/MstCadConsolidatedSanctionReport',
                 title: 'MstCadConsolidatedSanctionReport',
                 templateUrl: helper.basepath('ems.master/MstCadConsolidatedSanctionReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.MstCadConsolidatedLSAReport', {
                 url: '/MstCadConsolidatedLSAReport',
                 title: 'MstCadConsolidatedLSAReport',
                 templateUrl: helper.basepath('ems.master/MstCadConsolidatedLSAReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.MstCadConsolidatedDocumentChecklistReport', {
                 url: '/MstCadConsolidatedDocumentChecklistReport',
                 title: 'MstCadConsolidatedDocumentChecklistReport',
                 templateUrl: helper.basepath('ems.master/MstCadConsolidatedDocumentChecklistReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.MstCadConsolidatedSoftcopyVettingReport', {
                 url: '/MstCadConsolidatedSoftcopyVettingReport',
                 title: 'MstCadConsolidatedSoftcopyVettingReport',
                 templateUrl: helper.basepath('ems.master/MstCadConsolidatedSoftcopyVettingReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

             .state('app.MstCadConsolidatedOriginalCopyVettingReport', {
                 url: '/MstCadConsolidatedOriginalCopyVettingReport',
                 title: 'MstCadConsolidatedOriginalCopyVettingReport',
                 templateUrl: helper.basepath('ems.master/MstCadConsolidatedOriginalCopyVettingReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

           .state('app.TransUnionInstitutionReport', {
            url: '/TransUnionInstitutionReport',
            title: 'TransUnionInstitutionReport',
            templateUrl: helper.basepath('ems.master/TransUnionInstitutionReport.html?ver=' + version + '"'),
            resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
        })
       .state('app.AgrTransUnionInstitutionReport', {
                url: '/AgrTransUnionInstitutionReport',
                title: 'AgrTransUnionInstitutionReport',
                templateUrl: helper.basepath('ems.mastersamagro/AgrTransUnionInstitutionReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })
       .state('app.AgrCadConsolidatedSanctionReport', {
                 url: '/AgrCadConsolidatedSanctionReport',
                 title: 'AgrCadConsolidatedSanctionReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrCadConsolidatedSanctionReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })           

 

             .state('app.AgrCadConsolidatedDocumentChecklistReport', {
                 url: '/AgrCadConsolidatedDocumentChecklistReport',
                 title: 'AgrtCadConsolidatedDocumentChecklistReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrCadConsolidatedDocumentChecklistReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

 

             .state('app.AgrCadConsolidatedSoftcopyVettingReport', {
                 url: '/AgrCadConsolidatedSoftcopyVettingReport',
                 title: 'AgrCadConsolidatedSoftcopyVettingReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrCadConsolidatedSoftcopyVettingReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })

 

             .state('app.AgrCadConsolidatedOriginalCopyVettingReport', {
                 url: '/AgrCadConsolidatedOriginalCopyVettingReport',
                 title: 'AgrCadConsolidatedOriginalCopyVettingReport',
                 templateUrl: helper.basepath('ems.mastersamagro/AgrCadConsolidatedOriginalCopyVettingReport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
       .state('app.MstHardCodedType', {
                url: '/MstHardCodedType',
                title: 'MstHardCodedType',
                templateUrl: helper.basepath('ems.system/MstHardCodedType.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
      .state('app.StdOneApiDashboard', {
                url: '/StdOneApiDashboard',
                title: 'StdOneApiDashboard',
                templateUrl: helper.basepath('ems.system/StdOneApiDashboard.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
        .state('app.SysOneApiDashboard', {
                url: '/SysOneApiDashboard',
                title: 'SysOneApiDashboard',
                templateUrl: helper.basepath('ems.system/SysOneApiDashboard.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
             .state('app.brsTrnRepaymentMatchedImport', {
                 url: '/brsTrnRepaymentMatchedImport',
                 title: 'brsTrnRepaymentMatchedImport',
                 templateUrl: helper.basepath('ems.brs/brsTrnRepaymentMatchedImport.html?ver=' + version + '"'),
                 resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
             })
         
            .state('app.brsTrnBankMatchedImport', {
                url: '/brsTrnBankMatchedImport',
                title: 'brsTrnBankMatchedImport',
                templateUrl: helper.basepath('ems.brs/brsTrnBankMatchedImport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })
		 .state('app.MstLSAReport', {
                url: '/MstLSAReport',
                title: 'MstLSAReport',
                templateUrl: helper.basepath('ems.master/MstLSAReport.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')
            })

       .state('app.AgrMstCreditManagerRejectRevokeSummary', {
                url: '/AgrMstCreditManagerRejectRevokeSummary',
                title: 'AgrMstCreditManagerRejectRevokeSummary',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditManagerRejectRevokeSummary.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            }) 

            .state('app.AgrMstCreditManagerRejectRevoke', {
                url: '/AgrMstCreditManagerRejectRevoke',
                title: 'AgrMstCreditManagerRejectRevoke',
                templateUrl: helper.basepath('ems.mastersamagro/AgrMstCreditManagerRejectRevoke.html?ver=' + version + '"'),
                resolve: helper.resolveFor('oitozero.ngSweetAlert', 'ui.select', 'ngTable', 'ngDialog', 'datatables', 'localytics.directives', 'ngWig', 'textAngular')

            })
         // Horizontal layout
         // -----------------------------------
         // 
         // CUSTOM RESOLVES
         //   Add your own resolves properties
         //   following this object extend
         //   method
         // -----------------------------------
         // .state('app.someroute', {
         //   url: '/some_url',
         //   templateUrl: 'path_to_template.html',
         //   controller: 'someController',
         //   resolve: angular.extend(
         //     helper.resolveFor(), {
         //     // YOUR RESOLVES GO HERE
         //     }
         //   )
         // })
         ;

     } // routesConfig

     angular.module('angle').config(['$httpProvider', function ($httpProvider) {
         $httpProvider.interceptors.push(["$q", "$location", "$rootScope", "$cookies", function ($q, $location, $rootScope, $cookies) {
             return {
                 'request': function (config) {
                     config.headers.Authorization = $cookies.getObject('token');
                     //$http.defaults.headers.common.Authorization = localStorage.getItem("token");
                     return config;
                 },
                 'response': function (response) {
                     //Will only be called for HTTP up to 300
                     //console.log(response);
                     return response;
                 },
                 'responseError': function (rejection) {

                     if (rejection.status === 401) {
                         // $location.url('page/404?errno=401');
                     }
                     else if (rejection.status === 404) {
                         //console.log('404');
                         //$location.url('page/404?errno=404');
                     }
                     else if (rejection.status === 400) {
                         // $location.url('page/404?errno=400');
                     }
                     else if (rejection.status === 403) {
                         // $location.url('page/404?errno=403');
                     }
                     ////$state.go('page.404');
                     if (rejection.message === 404) {
                         //location.reload();
                     }
                     return $q.reject(rejection);
                 }
             };
         }]);
     }]);


 })();
angular
    .module('angle').factory('apiManage', function () {

            var stcFactory = {};
            stcFactory.apiList = {
                'login': { 'api': 'api/Login/PostUserLogin' },
                'userData': { 'api': 'api/user/userData' },
                'menu': { 'api': 'api/user/menu' },
                'clientList': { 'api': 'api/deployment/getClientList' },
                'projectList': { 'api': 'api/deployment/getProjectList' },
                'addDeployment': { 'api':'api/deployment/addDeployment'},
                'getSummaryLive': { 'api': 'api/deployment/getSummaryLive' },
                'getSummaryUAT': { 'api': 'api/deployment/getSummaryUAT' },
                'getSummaryTest': { 'api': 'api/deployment/getSummaryTest' },
                'viewDepDtl': { 'api': 'api/deployment/viewDepDtl' },
                'loanSubmit': { 'api': 'api/loan/createLoan' },
                'entity': { 'api': 'api/entity/entity' },
                'branch': { 'api': 'api/branch/branch' },
                'customer': { 'api': 'api/customer/customer' },
                'customerSubmit': { 'api': 'api/customer/customerSubmit' },
                'loanCreate': { 'api': 'api/loan/loanCreate' },
                'customerSummary': { 'api': 'api/customer/customer' },
                'employee': { 'api': 'api/employee/employee' },
                'loanSummary': { 'api': 'api/loan/loanSummary' },
                'loan_list': { 'api': 'api/loan/loan_list' },
                'getLoanmasterSummary': { 'api': 'api/loan/getLoanmasterSummary' },
                'loan': { 'api': 'api/loan/loan' },
                'customer_getheads': { 'api': 'api/loan/customer_getheads' },
                'Getcustomerdetails': { 'api': 'api/customer/Getcustomerupdatedetails' },
                'customerUpdate': { 'api': 'api/customer/customerUpdate' },
                'customerDelete': { 'api': 'api/customer/customerDelete' },
                'covenanttype_list': { 'api': 'api/covenanttype/getcovenanttype' },
                'covenantTypeSubmit': { 'api': 'api/covenanttype/createcovenanttype' },
                'covenantTypeSummary': { 'api': 'api/covenanttype/getcovenanttype' },
                'GetCovenantType': { 'api': 'api/covenanttype/GetCovenantTypeupdate' },
                'covenantTypeUpdate': { 'api': 'api/covenanttype/covenantTypeUpdate' },
                'covenantTypeDelete': { 'api': 'api/covenanttype/covenantTypeDelete' },
                'deferralmasterSubmit': { 'api': 'api/deferral/deferralmasterSubmit' },
                'Deferralsubmit': { 'api': 'api/deferral/createDeferral' },
                'loan2Deferral': { 'api': 'api/deferral/loan2Deferral' },
                'segment': { 'api': 'api/segment/segment' },
                'Getsegment': { 'api': 'api/segment/Getsegmentupdate' },
                'segmentUpdate': { 'api': 'api/segment/segmentUpdate' },
                'segmentDelete': { 'api': 'api/segment/segmentDelete' },
                'deferral': { 'api': 'api/deferral/deferral' },
                'deferralmasterSummary': { 'api': 'api/deferral/deferralmasterSummary' },
                'Getdeferral': { 'api': 'api/deferral/Getdeferralupdate' },
                'deferralUpdate': { 'api': 'api/deferral/deferralUpdate' },
                'deferralDelete': { 'api': 'api/deferral/deferralDelete' },
                'deferralSummary': { 'api': 'api/deferral/deferralSummary' },
                'customer2loan': { 'api': 'api/deferral/customer2loan' },
                'getLoandetails': { 'api': 'api/loan/getLoandetails' },
                'editloanmaster': { 'api': 'api/loan/editloanmaster' },
                'updateloanmaster': { 'api': 'api/loan/updateloanmaster' },
                'deleteloanmaster': { 'api': 'api/loan/deleteloanmaster' },
                'getdeferralcriticallity': { 'api': 'api/loan/getdeferralcriticallity' },
                'getcovenanttypecriticallity': { 'api': 'api/loan/getcovenanttypecriticallity' },
                'loanUpdate': { 'api': 'api/loan/loanUpdate' },
                'rmDeferralSummary': { 'api': 'api/deferral/rmDeferralSummary' },
                'rm': { 'api': 'api/deferral/rm' },
                'rmdeferraldetails': { 'api': 'api/deferral/rmdeferraldetails' },
                'directDeferralSummary': { 'api': 'api/deferral/directDeferralSummary' },
                'directDeferralSummaryreport': { 'api': 'api/deferral/directDeferralSummaryreport' },
                'export': { 'api': 'api/deferral/export' },
                'uploaddeferraldocument': { 'api': 'api/deferral/UploadDocument' },
                'uploaddeferraldocumentbycad': { 'api': 'api/deferral/uploaddeferraldocumentbycad' },
                'caddocument': { 'api': 'api/deferral/UploadcadDocument' },
                'Getcaddoc': { 'api': 'api/deferral/Getcaddoc' },
                'GetDeferraldoc': { 'api': 'api/deferral/GetDeferraldoc' },
                'GetDetails': { 'api': 'api/deferral/GetDetails' },
                //'Getdeferraldetails': { 'api': 'api/deferral/Getdeferraldetails' },
                'getApprove': { 'api': 'api/deferral/getApprove' },
                'applyExtension': { 'api': 'api/deferral/applyExtension' },
                'extensionSummary': { 'api': 'api/deferral/extensionSummary' },
                'approveExtension': { 'api': 'api/deferral/approveExtension' },
                'deferralApprove': { 'api': 'api/deferral/deferralApprove' },
                'deferralPushback': { 'api': 'api/deferral/deferralPushback' },
                'deferralReject': { 'api': 'api/deferral/deferralReject' },
                'deferralTransfer': { 'api': 'api/deferral/deferralTransfer' },
                'getDeferralDocument': { 'api': 'api/deferral/getDeferralDocument' },
                'getDeferraldetail': { 'api': 'api/deferral/getDeferraldetail' },
                'segmentSummary': { 'api': 'api/segment/segment' },
                'segmentSubmit': { 'api': 'api/segment/createSegment' },
                'segment_list': { 'api': 'api/segment/segmentSummary' },

                // Approvals //
                'taskapprovallist': { 'api': 'api/taskManagement/taskapprovallist' },
                'releasedetails': { 'api': 'api/myApprovals/releasedetails' },
                'issuereleasedetails': { 'api': 'api/myApprovals/issuereleasedetails' },
                'uatdetails': { 'api': 'api/myApprovals/uatdetails' },
                'myapproval': { 'api': 'api/myApprovals/myapproval' },
                'departmentapprove': { 'api': 'api/myApprovals/departmentApproveclick' },
                'departmentreject': { 'api': 'api/myApprovals/departmentreject' },
                'serviceapprove': { 'api': 'api/myApprovals/serviceapprove' },
                'servicereject': { 'api': 'api/myApprovals/servicereject' },
                'manageapprove': { 'api': 'api/myApprovals/manageapprove' },
                'managementreject': { 'api': 'api/myApprovals/managereject' },
                'departmentinternal': { 'api': 'api/myApprovals/departmentinternal' },
                'serviceinternalapprove': { 'api': 'api/myApprovals/serviceinternalapprove' },
                'viewtaskdetails': { 'api': 'api/taskManagement/viewtaskapproval_details' },
                'dependencyapprove': { 'api': 'api/myApprovals/dependencyapprove' },
                'dependencyreject': { 'api': 'api/myApprovals/dependencyreject' },
                'cabapprove': { 'api': 'api/myApprovals/cabapprove' },
                'cabreject': { 'api': 'api/myApprovals/cabreject' },
                'viewdepartment': { 'api': 'api/myApprovals/viewdepartment' },
                'viewservice': { 'api': 'api/myApprovals/viewservice' },
                'viewmanagement': { 'api': 'api/myApprovals/viewmanagement' },

                // New Service Ticket //
                'category_list': { 'api': 'api/newServiceTicket/category' },
                'subcategory_list': { 'api': 'api/newServiceTicket/subcategory' },
                'type_list': { 'api': 'api/newServiceTicket/type' },
                'employee_list': { 'api': 'api/newServiceTicket/employee' },
                'employee_sessioncontact': { 'api': 'api/newServiceTicket/employee_contactdetails' },
                'employee_getcontact': { 'api': 'api/newServiceTicket/employeecontactdetails' },
                'document_tmpclear': { 'api': 'api/newServiceTicket/tmpcleardocument' },
                'raiseticket_submit': { 'api': 'api/newServiceTicket/raiseticket' },
                'uploaddocument': { 'api': 'api/newServiceTicket/UploadDocument' },
                'myasset': { 'api': 'api/viewMyAsset/myasset' },
                'documentdelete': { 'api': 'api/newServiceTicket/documentdelete' },
                'view_ticket': { 'api': 'api/viewServiceTicket/ticketdetails_view' },
                'viewdocument': { 'api': 'api/viewServiceTicket/viewdocument' },
                'viewserviceticket': { 'api': 'api/viewServiceTicket/viewserviceticket' },
                'ticketclose': { 'api': 'api/viewServiceTicket/closeticket' },
                'responselog_submit': { 'api': 'api/viewServiceTicket/response_logdetails' },
                'incompleteticket': { 'api': 'api/viewServiceTicket/incompleteticket' },
                'responselogdetails_view': { 'api': 'api/viewServiceTicket/responselogdetails_view' },

                // Asset... //
                'notification': { 'api': 'api/landingPage/landingpagedata' },
                'SValues': { 'api': 'api/AdminLogin/SValues' },
                'myasset': { 'api': 'api/viewMyAsset/myasset' },
                'holdingasset': { 'api': 'api/temporaryHandover/holdingasset' },
                'surrenderitadmin': { 'api': 'api/temporaryHandover/surrenderitadmin' },
                'surrender': { 'api': 'api/surrenderAsset/surrender' },
                'temporaryhandover': { 'api': 'api/temporaryHandover/tmphandover' },
                'temporaryhandoversubmit': { 'api': 'api/temporaryHandover/submittmphandover' },
                'surrenderitadmin': { 'api': 'api/temporaryHandover/surrenderitadmin' },
                'acknowledgement': { 'api': 'api/acknowledgeMyAsset/acknowledgement' },
                'submitacknowledgement': { 'api': 'api/acknowledgeMyAsset/submitacknowledgement' },
                'rejectacknowledgement': { 'api': 'api/acknowledgeMyAsset/acknowledgementreject' },
                'submitsurrender': { 'api': 'api/surrenderAsset/submitsurrender' }
            };

            stcFactory.GetCommonData = { 
                'TemplatePath': { 'Path': 'E:\\Web\\EMS\\templates\\' },
                'froalaConfig': { 'Key': 'NoKey' },
            };
            return stcFactory;
        });
angular
    .module('angle').factory('AuthenticationService',
    ['Base64', '$http', '$cookieStore', '$rootScope', '$timeout', 'SocketService', 'apiManage', '$cookies',
    function (Base64, $http, $cookieStore, $rootScope, $timeout, SocketService, apiManage, $cookies) {
        var service = {};

            service.Login = function (companycode, password, module_name,callback) {




                /* Dummy authentication for testing, uses $timeout to simulate api call
                 ----------------------------------------------*/
                $timeout(function () {
                    var api_request_url = apiManage.apiList['login'].api;
                    var ls_params = {
                        user_code: companycode,
                        password: password,
                        organization_code: "rr",
                        module: module_name,
                        hostname: "ss",
                        captcharesponse:"45"

                    };

                    SocketService.post(api_request_url, ls_params).then(function (response) {
                        console.log(response.data);
                        callback(response.data);
                    });


                }, 1000);

            };
         

            service.SetCredentials = function (data) {
                $rootScope.globals = {
                    currentUser: {
                        user_code: data.user_code,
                        user_gid:data.user_gid,
                        UserName: data.user_name,
                        authdata: data.token,
                        profile_id: data.profile_id,
                        AdobeLinked: data.adobe_linked,
                        refresh_token:data.refresh_token,
                        usertransaction_gid: null

                    }
                };

                $http.defaults.headers.common['Authorization'] = data.token; // jshint ignore:line
                $cookies.putObject('globals', $rootScope.globals);
            };

            service.ClearCredentials = function () {
                $rootScope.globals = {
                    currentUser: {}
                };
              $cookies.remove('globals');
                $http.defaults.headers.common['Authorization'] = '';
            };
       
         return service;
       }])
    
angular
    .module('angle').factory('Base64', function () {
            /* jshint ignore:start */

            var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

            return {
                encode: function (input) {
                    var output = "";
                    var chr1, chr2, chr3 = "";
                    var enc1, enc2, enc3, enc4 = "";
                    var i = 0;

                    do {
                        chr1 = input.charCodeAt(i++);
                        chr2 = input.charCodeAt(i++);
                        chr3 = input.charCodeAt(i++);

                        enc1 = chr1 >> 2;
                        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
                        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
                        enc4 = chr3 & 63;

                        if (isNaN(chr2)) {
                            enc3 = enc4 = 64;
                        } else if (isNaN(chr3)) {
                            enc4 = 64;
                        }

                        output = output +
                            keyStr.charAt(enc1) +
                            keyStr.charAt(enc2) +
                            keyStr.charAt(enc3) +
                            keyStr.charAt(enc4);
                        chr1 = chr2 = chr3 = "";
                        enc1 = enc2 = enc3 = enc4 = "";
                    } while (i < input.length);

                    return output;
                },

                decode: function (input) {
                    var output = "";
                    var chr1, chr2, chr3 = "";
                    var enc1, enc2, enc3, enc4 = "";
                    var i = 0;

                    // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
                    var base64test = /[^A-Za-z0-9\+\/\=]/g;
                    if (base64test.exec(input)) {
                        window.alert("There were invalid base64 characters in the input text.\n" +
                            "Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\n" +
                            "Expect errors in decoding.");
                    }
                    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

                    do {
                        enc1 = keyStr.indexOf(input.charAt(i++));
                        enc2 = keyStr.indexOf(input.charAt(i++));
                        enc3 = keyStr.indexOf(input.charAt(i++));
                        enc4 = keyStr.indexOf(input.charAt(i++));

                        chr1 = (enc1 << 2) | (enc2 >> 4);
                        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
                        chr3 = ((enc3 & 3) << 6) | enc4;

                        output = output + String.fromCharCode(chr1);

                        if (enc3 != 64) {
                            output = output + String.fromCharCode(chr2);
                        }
                        if (enc4 != 64) {
                            output = output + String.fromCharCode(chr3);
                        }

                        chr1 = chr2 = chr3 = "";
                        enc1 = enc2 = enc3 = enc4 = "";

                    } while (i < input.length);

                    return output;
                },
                b64toBlob: function (b64Data, contentType, sliceSize) {
                    contentType = contentType || '';
                    sliceSize = sliceSize || 512;

                    var byteCharacters = atob(b64Data);
                    var byteArrays = [];

                    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                        var slice = byteCharacters.slice(offset, offset + sliceSize);

                        var byteNumbers = new Array(slice.length);
                        for (var i = 0; i < slice.length; i++) {
                            byteNumbers[i] = slice.charCodeAt(i);
                        }

                        var byteArray = new Uint8Array(byteNumbers);

                        byteArrays.push(byteArray);
                    }

                    var blob = new Blob(byteArrays, { type: contentType });
                    return blob;
                }
            };

            /* jshint ignore:end */
        });
'use strict';

/**
 * @ngdoc service
 * @name acmedApp.authInterceptorService
 * @description
 * # authInterceptorService
 * Factory in the acmedApp.
 */
angular.module('angle')
  .factory('authInterceptorService', ['$q', '$cookies', function ($q, $cookies) {

      var authInterceptorServiceFactory = {};
       

      authInterceptorServiceFactory.request = function (config) {
          //config.headers = config.headers || {};
          //var authData = $cookies.getObject('token');
          //if (authData) {
          //    config.headers.Authorization = authData;
          //}
          //return config;
      };
      authInterceptorServiceFactory.responseError = function (rejection) {
          if (rejection.status === 401) {
              //var authService = angular.injector(['user']).get('RefreshTokenService');
              //authService.refresh_token();
              $location.url('errorPage?errno=401');
              //var param = {
              //    previous_token: localStorage.getItem("token"),
              //    previous_refresh_token: localStorage.getItem("refresh_token")
              //};
              //SocketService.postlogin(apiManage.apiList['refresh_token'].api, param).then(function (response) {
              //    console.log(response);
              //});
          }
          else if (rejection.status === 404) {
              $location.url('errorPage?errno=404');
          }
          else if (rejection.status === 400) {
              $location.url('errorPage?errno=400');
          }
          else if (rejection.status === 403) {
              $location.url('errorPage?errno=403');
          }
          else if (rejection.status === 500) {
              var url = $location.path() + '?errno=500';
              $location.url(url);
          }
          return $q.reject(rejection);
      };
      return authInterceptorServiceFactory;
  }]);
'use strict'
angular
    .module('angle')
.factory('cmnfunctionService', ['SocketService', '$rootScope', 'apiManage', '$state', '$cookieStore', 'ngDialog',
    function (SocketService, $rootScope, apiManage, $state, $cookieStore, ngDialog) {
        var objservice = {};

        //Pattern Validation for email address
        $rootScope.appemail_pattern = '[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}';
        
        // To Get the difference Between two Dates

        objservice.fnDatediff = function (startingDate, endingDate) {
            if (!endingDate) {
                return '1'; // Empty End Date
            }
            else if (!startingDate) {
                return '1'; // Empty Start Date
            }
            var startDate = new Date(new Date(startingDate).toISOString().substr(0, 10));
            var endDate = new Date(endingDate);
            if (startDate > endDate) {
                return '0' // Start date greater than End Date
            }
            var startYear = startDate.getFullYear();
            var february = (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0 ? 29 : 28;
            var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

            var yearDiff = endDate.getFullYear() - startYear;
            var monthDiff = endDate.getMonth() - startDate.getMonth();
            if (monthDiff < 0) {
                yearDiff--;
                monthDiff += 12;
            }
            var dayDiff = endDate.getDate() - startDate.getDate();
            if (dayDiff < 0) {
                if (monthDiff > 0) {
                    monthDiff--;
                } else {
                    yearDiff--;
                    monthDiff = 11;
                }
                dayDiff += daysInMonth[startDate.getMonth()];
            }

            return yearDiff + ' Years ' + monthDiff + ' Months ' + dayDiff + ' Days';
        }


        // To Check the Document Validation

        objservice.fnCheckValidDocType = function (fileName, projectFlag) {
            var str = '';
            if (projectFlag == "")
                projectFlag = "Default";
            var allowed_extensions = [ 
             { project: "Default", extension: "pdf,jpg,png,jpeg,odt,csv,msg,xls,xlsx,txt,ppt,pptx,doc,docx,oft,html" },
             { project: "RSK", extension: "xlsx" },
			 { project: "photoformatonly", extension: "pdf,jpg,png,jpeg" },
             { project: "photo", extension: "jpg,png,jpeg" },
             { project: "documentformatonly", extension: "pdf,jpg,png,jpeg,odt,csv,msg,xls,xlsx,txt,ppt,pptx,doc,docx,oft,html"},
             { project: "BD", extension: "pdf,jpg,png,jpeg,odt,csv,msg,xls,xlsx,txt,ppt,pptx,doc,docx,oft,html,mp3" },
             { project: "DocumentViewerFormat", extension: "pdf,jpg,png,jpeg,txt,html" }];
            var file_extension = fileName.split('.').pop();
            var checkFileExtension = allowed_extensions.filter(function (c) { return c.project === projectFlag });
            if (checkFileExtension && checkFileExtension.length != 0) {
                str = checkFileExtension[0].extension;
                var hasvalid = str.indexOf(file_extension.toLowerCase()) != -1; // true
               if (hasvalid)
                    return true; // valid file extension
                else
                    return false;
            }
        }

        // To Convert Number into Word [Indian Standard]

        objservice.fnConvertNumbertoWord = function (price) {
            var sglDigit = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"],
        dblDigit = ["Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"],
        tensPlace = ["", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"],
        handle_tens = function (dgt, prevDgt) {
            return 0 == dgt ? "" : " " + (1 == dgt ? dblDigit[prevDgt] : tensPlace[dgt])
        },
        handle_utlc = function (dgt, nxtDgt, denom) {
            return (0 != dgt && 1 != nxtDgt ? " " + sglDigit[dgt] : "") + (0 != nxtDgt || dgt > 0 ? " " + denom : "")
        }; 
            var str = "",
              digitIdx = 0,
              digit = 0,
              nxtDigit = 0,
              words = [];
            if (price += "", isNaN(parseInt(price))) str = "";
            else if (parseInt(price) > 0 && price.length <= 10) {
                for (digitIdx = price.length - 1; digitIdx >= 0; digitIdx--) switch (digit = price[digitIdx] - 0, nxtDigit = digitIdx > 0 ? price[digitIdx - 1] - 0 : 0, price.length - digitIdx - 1) {
                    case 0:
                        words.push(handle_utlc(digit, nxtDigit, ""));
                        break;
                    case 1:
                        words.push(handle_tens(digit, price[digitIdx + 1]));
                        break;
                    case 2:
                        words.push(0 != digit ? " " + sglDigit[digit] + " Hundred" + (0 != price[digitIdx + 1] && 0 != price[digitIdx + 2] ? " and" : "") : "");
                        break;
                    case 3:
                        words.push(handle_utlc(digit, nxtDigit, "Thousand"));
                        break;
                    case 4:
                        words.push(handle_tens(digit, price[digitIdx + 1]));
                        break;
                    case 5:
                        words.push(handle_utlc(digit, nxtDigit, "Lakh"));
                        break;
                    case 6:
                        words.push(handle_tens(digit, price[digitIdx + 1]));
                        break;
                    case 7:
                        words.push(handle_utlc(digit, nxtDigit, "Crore"));
                        break;
                    case 8:
                        words.push(handle_tens(digit, price[digitIdx + 1]));
                        break;
                    case 9:
                        words.push(0 != digit ? " " + sglDigit[digit] + " Hundred" + (0 != price[digitIdx + 1] || 0 != price[digitIdx + 2] ? " and" : " Crore") : "")
                }
                str = words.reverse().join("")
            }
            else str = ""; 
            return str;
        }

        objservice.encryptURL = function (data) {
            var encryptedString = window.btoa(data);
            return encryptedString;
        }

        objservice.decryptURL = function (data) {
            var decryptedString = window.atob(data);
            var decryptedObject = JSON.parse('{"' + decodeURI(decryptedString.replace(/&/g, "\",\"").replace(/=/g,"\":\"")) + '"}');
            return decryptedObject;
        }

        return objservice;

    }]);


'use strict'
angular
    .module('angle')
.factory('CommonService', ['SocketService', 'apiManage', '$state', '$cookieStore', 'ngDialog',
    function (SocketService, apiManage, $state, $cookieStore, ngDialog) {
        var csfactory = {};
        csfactory.PreviewPopUp = function (url) {
            //if (is_transcript == "Y") {
            //   
            //}
            //else {
            //    
            //}
            ngDialog.open({
                //templateUrl: "app/views/preview.html",
                //size: 'md',
                //backdrop: 'static',
                //keyboard: false,
                closeByDocument: false,
                plain: false,
                template: 'app/views/preview.html',
                controller: ['$scope', 'ScopeValueService', function ($scope, ScopeValueService) {
                    function pop() {                    
                       // alert(ScopeValueService.get('MyCertifiedDocumentController').is_transcript == "Y");
                        if (ScopeValueService.get('MyCertifiedDocumentController').is_transcript == "Y") {
                            $scope.note = "Note: Please collect the hard copy of the transcript from the University.";
                        }
                        else if (ScopeValueService.get('MyCertifiedDocumentController').preview_content != "" && ScopeValueService.get('MyCertifiedDocumentController').status == "Approved") {
                            $scope.note = ScopeValueService.get('MyCertifiedDocumentController').preview_content;
                           }

                        else {
                            $scope.note = "";
                        }
                        $scope.pdf_file_url = url;
                    }
                    pop();

                }],
                closeButton: true,
                //resolve: {
                //    pdf_file_url: function () {
                //        return scope;
                //    }
                //}
            });
        }
        return csfactory;

    }]);
'use strict'
angular
    .module('angle')
.factory('DownloaddocumentService', ['SocketService', '$rootScope', 'apiManage', '$state', '$cookieStore', 'ngDialog',
    function (SocketService, $rootScope, apiManage, $state, $cookieStore, ngDialog) {
        var csfactory = {};
        csfactory.Downloaddocument = function (val1, val2) { 
            var params = {
                file_path: val1,
                file_name: val2
            }
            var url = 'api/azurestorage/DownloadDocument'; 
            lockUI(); 
            SocketService.post(url, params).then(function (resp) { 
                unlockUI();
                if (resp.data.status == true)
                     $rootScope.$emit('downloadEvent', resp);
                else {
                    return resp;
                } 
            });
        } 

        csfactory.OtherDownloaddocument = function (val1, val2, other_download) {
            var params = {
                file_path: val1,
                file_name: val2,
                other_download: other_download
            }
            var url = 'api/azurestorage/OtherDownloadDocument';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true)
                    $rootScope.$emit('downloadEvent', resp);
                else {
                    return resp;
                }
            });
        }
        
        // Document Viewer
        
        csfactory.DocumentViewer = function (val1, val2) { 
            var params = {
                file_path: val1,
                file_name: val2
            }
            var url = 'api/azurestorage/DownloadDocument'; 
            lockUI(); 
            SocketService.post(url, params).then(function (resp) { 
                unlockUI();
                if (resp.data.status == true)
                     $rootScope.$emit('DocumentViewerListener', resp);
                else {
                    return resp;
                } 
            });
        }
     
        csfactory.OtherDocumentViewer = function (val1, val2, other_download) {
            var params = {
                file_path: val1,
                file_name: val2,
                other_download: other_download
            }
            var url = 'api/azurestorage/OtherDownloadDocument';
            lockUI();
            SocketService.post(url, params).then(function (resp) {
                unlockUI();
                if (resp.data.status == true)
                    $rootScope.$emit('DocumentViewerListener', resp);
                else {
                    return resp;
                }
            });
        }

        return csfactory;

    }]);


'use strict'
angular
    .module('angle')
    .factory('ScopeValueService', ['$rootScope', function ($rootScope) {
        var mem = {};

        return {
            store: function (key, value) {
                $rootScope.$emit('scope.stored', key);
                mem[key] = value;
            },
            get: function (key) {
                return mem[key];
            }
        };
    }]);


'use strict'
angular
    .module('angle')
.factory('PreviewdocumentService', ['SocketService', 'apiManage', '$state', '$cookieStore', 'ngDialog',
    function (SocketService, apiManage, $state, $cookieStore, ngDialog) {
        var csfactory = {};
        csfactory.PreviewPopUp = function (url) {
            ngDialog.open({
                closeByDocument: false,
                plain: false,
                template: 'app/views/preview.html',
                controller: ['$scope', 'ScopeValueService', function ($scope, ScopeValueService) {
                    function pop() {                        
                        $scope.pdf_file_url = url;
                    }
                    pop();

                }],
                closeButton: true,
            });
        }
        return csfactory;

    }]);
'use strict';
angular.module('angle').factory('RefreshTokenService', ['apiManage', 'SocketService',
    function (apiManage, SocketService) {
        var service = {};
        service.refresh_token = function () {
            var param = {
                previous_token: localStorage.getItem("token_bc"),
                previous_refresh_token: localStorage.getItem("refresh_token")
            };
            return SocketService.postlogin(apiManage.apiList['refresh_token'].api, param).then(function (response) {                
                return response;
            });
        }
        return service;
    }
]);

'use strict';
angular
    .module('angle').factory('SocketService', ['$rootScope', '$http', '$window', '$state', '$location', '$cookies',
function ($rootScope, $http, $window, $state, $location, $cookies) {
    var lshostname = $location.host();
    var ls_host = 'http://' + lshostname + '/StoryboardAPI/'; 
    var stcFactory = {};

    $http.defaults.headers.common['Authorization'] = $cookies.getObject('token');
    stcFactory.post = function (path, param) {
        return $http.post(ls_host + path, param).then(function (response) {
            return response;
        });
    };

    stcFactory.postlogin = function (path, param) {
        return $http.post(ls_host + path, param).then(function (response) {
            return response;
        });
    };

    stcFactory.postFile = function (path, params) {
        return $http.post(ls_host + path, params, {
            headers: {
                'Content-Type': undefined,
                'Authorization': $cookies.getObject('token')
            },
            transformRequest: angular.identity
        }).success(function (data, status, headers, config) {
            return data;
        }).error(function (resp) {
            return resp;
        });
    };

    //stcFactory.get = function (path, param) {
    //    $window.location.href = ls_host + path + '?' + param;
    //};
    stcFactory.get = function (path, param) {
        return $http.get(ls_host + path, param, {
            headers: {
                'Content-Type': undefined,
                'Authorization': $cookies.getObject('token')
            }
        }).then(function (response) {
            return response;
        });
    };

    stcFactory.getpg = function (path, param) {
        $window.location.href = ls_host + path + '?' + param;
    };

    stcFactory.getfile = function (path, param) {
        return $http.get(path, param).then(function (response) {
            return response;
        });
    };
    stcFactory.preview = function (path, param) {
        return ls_host + path + '?' + param;
        //return $http.get(ls_host + path + '?' + param)
        //.then(function (response) {
        //    return response;
        //});
    };

    //  made changes for API migration 

    stcFactory.getbyid = function (path, param) {
        return $http.get(ls_host + path + '/' + param).then(function (response) {
            return response;
        });
    };

    stcFactory.getparams = function (path, param) {
        var str = jQuery.param(param);
        return $http.get(ls_host + path + '?' + str).then(function (response) {
            return response;
        });
    };

    stcFactory.delete = function (path, param) {
        //return $http.delete(ls_host + path, param, {
        //    headers: {
        //        'Content-Type': 'application/json'
        //    }
        //}).then(function (response) {
        //    return response;
        //});

        return $http({
            method: 'DELETE',
            url: ls_host + path,
            headers: {
                'Content-Type': 'application/json'
            },
            data: param
        }).then(function (response) {
            return response;
        });
    };

    stcFactory.put = function (path, param) {
        // console.log($cookies.getObject('globals').currentUser.authdata);
        return $http.put(ls_host + path, param, {
            headers: {
                //'Access-Control-Allow-Headers': 'authorization,content-type'
                //'Authorization': $cookies.getObject('globals').currentUser.authdata
            }
        }).then(function (response) {
            return response;
        });
    };
    return stcFactory;


    // end changes for API migration
    stcFactory.openWindow = function (path, param) {
        return ls_host + path + '?' + param;
    };
    return stcFactory;
}]);
(function () {
    'use strict';

    angular
        .module('angle')
        .controller('welcome', welcome);

    welcome.$inject = ['$rootScope', '$scope', '$state', 'AuthenticationService', '$modal', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage',  '$route'];

    function welcome($rootScope, $scope, $state, AuthenticationService, $modal, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route){
        /* jshint validthis:true */
        var vm = this;
        vm.title = 'welcome';

        activate();

        function activate() {
           var today = new Date();
           var months = ["January", "February", "March", "April", "May", "June",
           "July", "August", "September", "October", "November", "December"];
           var monthName = months[today.getMonth()];
           var date = today.getDate() + ' ' + monthName + ' ' + today.getFullYear();
       document.getElementById('date').innerHTML = date;
       
        var time = today.getHours() + ":" + today.getMinutes();
        document.getElementById('time').innerHTML = time;
            $scope.welcome_msg = 'Financial Intermediation & Services Pvt. Ltd.';
            var user_gid = localStorage.getItem('user_gid');
            var url = 'api/user/privilege';
            lockUI();
            SocketService.get(url + '?user_gid=' + user_gid).then(function (resp) {
              
                var its = resp.data.privileges.map(function (e) { return e.project }).indexOf("ITS");
                var ocs = resp.data.privileges.map(function (e) { return e.project }).indexOf("OCS");
                var asset = resp.data.privileges.map(function (e) { return e.project }).indexOf("AMS");
                var myapprovals = resp.data.privileges.map(function (e) { return e.project }).indexOf("APP");
                var ecms = resp.data.privileges.map(function (e) { return e.project }).indexOf("ECM");
                var osd = resp.data.privileges.map(function (e) { return e.project }).indexOf("OSD");
                var lgl = resp.data.privileges.map(function (e) { return e.project }).indexOf("LGL");
                var cms = resp.data.privileges.map(function (e) { return e.project }).indexOf("CMS");
                var rsk = resp.data.privileges.map(function (e) { return e.project }).indexOf("RSK");
                var ids = resp.data.privileges.map(function (e) { return e.project }).indexOf("IDS");
                var mst = resp.data.privileges.map(function (e) { return e.project }).indexOf("MST");
                var iassign = resp.data.privileges.map(function (e) { return e.project }).indexOf("ISN");
                //console.log(osd);

                if (its != -1)
                {
                    $scope.its = "Y";
                }
                if (ocs != -1) {
                    $scope.ocs = "Y";
                }
                if (asset != -1) {
                    $scope.asset = "Y";
                }
                if (myapprovals != -1) {
                    $scope.myapprovals = "Y";
                }
                if (ecms != -1) {
                    $scope.ecms = "Y";
                }
                if (osd != -1) {
                    $scope.osd = "Y";
                }
                if (lgl != -1) {
                    $scope.lgl = "Y";
                }
                if (cms != -1) {
                    $scope.cms = "Y";
                }
                if (rsk!=-1)
                {
                    $scope.rsk = "Y";
                }
                if(ids!=-1)
                {
                    $scope.ids = "Y";
                }
                if (mst != -1) {
                    $scope.mst = "Y";
                }
                if(iassign!=-1)
                {
                    $scope.iassign = "Y";
                }
               
            });
            var url = 'api/landingPage/landingpagedata';
            SocketService.get(url).then(function (resp) {
                $scope.count = resp.data.count_acknowledgement + resp.data.count_surrender + resp.data.count_tmpsurrender + resp.data.count_tmpholding + resp.data.count_temporaryhandover;
                $scope.count1 = resp.data.count_myapprovals;
                $scope.count2 = resp.data.count_response;
                unlockUI();
            });
            var url = 'api/UserType/Getipandlogintime';
            SocketService.get(url).then(function (resp) {
                $scope.ip = resp.data.ip;
                $scope.login_time = resp.data.login_time;
            });

            vm.myInterval = 5000;

            var slides = vm.slides = [];
            vm.addSlide = function () {
            var newWidth = 800 + slides.length;
            slides.push({
            
            });
            };



            for (var i = 0; i < 2; i++) {
            vm.addSlide();
            }

        };
        $scope.ecmssystem = function () {
            $scope.welcome_msg = 'Exceptions & Covenant Management System for SAMFIN & SAMAGRO';
           
             };
        $scope.ams = function () {
            $scope.welcome_msg = 'Asset Management System';
        };
        $scope.sd = function () {
            $scope.welcome_msg = 'Service Desk';
        };
        $scope.TMS = function () {
            $scope.welcome_msg = 'Task Management System';
        };
        $scope.CMS = function () {
            $scope.welcome_msg = 'Change Management System';
        };
        $scope.approval = function () {
            $scope.welcome_msg = 'My Approvals ( Service Desk , Change Management System )';
        };
        $scope.legal = function () {
            $scope.welcome_msg = 'Legal Management System';
        };

        $scope.RSK = function () {
            $scope.welcome_msg = 'Risk Management System';
        }
        $scope.OSD = function () {
            $scope.welcome_msg = 'Operation Service Desk';
        }
        $scope.SOP=function()
        {
            $state.go('app.MstDocumentUploadSummary')
        }    
        
    }
})();

/**=========================================================
 * Module: sidebar-menu.js
 * Handle sidebar collapsible elements
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.sidebar')
        .controller('SidebarController', SidebarController);

    SidebarController.$inject = ['$rootScope', '$scope', '$state', 'SidebarLoader', 'Utils', 'SocketService','apiManage'];
    function SidebarController($rootScope, $scope, $state, SidebarLoader, Utils, SocketService, apiManage) {

        activate();

        ////////////////

        function activate() {
          var collapseList = [];

          // demo: when switch from collapse to hover, close all items
          $rootScope.$watch('app.layout.asideHover', function(oldVal, newVal){
            if ( newVal === false && oldVal === true) {
              closeAllBut(-1);
            }
          });


          // Load menu from json file
          // ----------------------------------- 

            SidebarLoader.getMenu(sidebarReady);
            
            function sidebarReady(items) {
                var user_gid = localStorage.getItem('user_gid');
                var url = apiManage.apiList['menu'].api;
                SocketService.get(url + '?user_gid=' + user_gid).then(function (resp) {
                    $scope.menuItems = resp.data.menu_list;
                });
                
          }

          // Handle sidebar and collapse items
          // ----------------------------------
          
          $scope.getMenuItemPropClasses = function(item) {
            return (item.heading ? 'nav-heading' : '') +
                   (isActive(item) ? ' active' : '') ;
          };

          $scope.addCollapse = function($index, item) {
            collapseList[$index] = $rootScope.app.layout.asideHover ? true : !isActive(item);
          };

          $scope.isCollapse = function($index) {
            return (collapseList[$index]);
          };

          $scope.toggleCollapse = function($index, isParentItem) {

            // collapsed sidebar doesn't toggle drodopwn
            if( Utils.isSidebarCollapsed() || $rootScope.app.layout.asideHover ) return true;

            // make sure the item index exists
            if( angular.isDefined( collapseList[$index] ) ) {
              if ( ! $scope.lastEventFromChild ) {
                collapseList[$index] = !collapseList[$index];
                closeAllBut($index);
              }
            }
            else if ( isParentItem ) {
              closeAllBut(-1);
            }
            
            $scope.lastEventFromChild = isChild($index);

            return true;
          
          };

          // Controller helpers
          // ----------------------------------- 

            // Check item and children active state
            function isActive(item) {

              if(!item) return;

              if( !item.sref || item.sref === '#') {
                var foundActive = false;
                angular.forEach(item.submenu, function(value) {
                  if(isActive(value)) foundActive = true;
                });
                return foundActive;
              }
              else
                return $state.is(item.sref) || $state.includes(item.sref);
            }

            function closeAllBut(index) {
              index += '';
              for(var i in collapseList) {
                if(index < 0 || index.indexOf(i) < 0)
                  collapseList[i] = true;
              }
            }

            function isChild($index) {
              /*jshint -W018*/
              return (typeof $index === 'string') && !($index.indexOf('-') < 0);
            }
        
        } // activate
        $scope.collapse = function () {
            var sidebar = document.getElementById("sidebar-new");
            sidebar.style.width = "0";
            sidebar.style.visibility = "hidden";
        }
        $scope.fullcollapse = function () {
            var sidebar = document.getElementById("sidebar-new");
            sidebar.style.visibility = "hidden";
        }
    }

})();

/**=========================================================
 * Module: sidebar.js
 * Wraps the sidebar and handles collapsed state
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.sidebar')
        .directive('sidebar', sidebar);

    sidebar.$inject = ['$rootScope', '$timeout', '$window', 'Utils'];
    function sidebar ($rootScope, $timeout, $window, Utils) {
        var $win = angular.element($window);
        var directive = {
            // bindToController: true,
            // controller: Controller,
            // controllerAs: 'vm',
            link: link,
            restrict: 'EA',
            template: '<nav class="sidebar" ng-transclude></nav>',
            transclude: true,
            replace: true
            // scope: {}
        };
        return directive;

        function link(scope, element, attrs) {

          var currentState = $rootScope.$state.current.name;
          var $sidebar = element;

          var eventName = Utils.isTouch() ? 'click' : 'mouseenter' ;
          var subNav = $();

          $sidebar.on( eventName, '.nav > li', function() {

            if( Utils.isSidebarCollapsed() || $rootScope.app.layout.asideHover ) {

              subNav.trigger('mouseleave');
              subNav = toggleMenuItem( $(this), $sidebar);

              // Used to detect click and touch events outside the sidebar          
              sidebarAddBackdrop();

            }

          });

          scope.$on('closeSidebarMenu', function() {
            removeFloatingNav();
          });

          // Normalize state when resize to mobile
          $win.on('resize', function() {
            if( ! Utils.isMobile() )
          	asideToggleOff();
          });

          // Adjustment on route changes
          $rootScope.$on('$stateChangeStart', function(event, toState) {
            currentState = toState.name;
            // Hide sidebar automatically on mobile
            asideToggleOff();

            $rootScope.$broadcast('closeSidebarMenu');
          });

      	  // Autoclose when click outside the sidebar
          if ( angular.isDefined(attrs.sidebarAnyclickClose) ) {
            
            var wrapper = $('.wrapper');
            var sbclickEvent = 'click.sidebar';
            
            $rootScope.$watch('app.asideToggled', watchExternalClicks);

          }

          //////

          function watchExternalClicks(newVal) {
            // if sidebar becomes visible
            if ( newVal === true ) {
              $timeout(function(){ // render after current digest cycle
                wrapper.on(sbclickEvent, function(e){
                  // if not child of sidebar
                  if( ! $(e.target).parents('.aside').length ) {
                    asideToggleOff();
                  }
                });
              });
            }
            else {
              // dettach event
              wrapper.off(sbclickEvent);
            }
          }

          function asideToggleOff() {
            $rootScope.app.asideToggled = false;
            if(!scope.$$phase) scope.$apply(); // anti-pattern but sometimes necessary
      	  }
        }
        
        ///////

        function sidebarAddBackdrop() {
          var $backdrop = $('<div/>', { 'class': 'dropdown-backdrop'} );
          $backdrop.insertAfter('.aside-inner').on('click mouseenter', function () {
            removeFloatingNav();
          });
        }

        // Open the collapse sidebar submenu items when on touch devices 
        // - desktop only opens on hover
        function toggleTouchItem($element){
          $element
            .siblings('li')
            .removeClass('open')
            .end()
            .toggleClass('open');
        }

        // Handles hover to open items under collapsed menu
        // ----------------------------------- 
        function toggleMenuItem($listItem, $sidebar) {

          removeFloatingNav();

          var ul = $listItem.children('ul');
          
          if( !ul.length ) return $();
          if( $listItem.hasClass('open') ) {
            toggleTouchItem($listItem);
            return $();
          }

          var $aside = $('.aside');
          var $asideInner = $('.aside-inner'); // for top offset calculation
          // float aside uses extra padding on aside
          var mar = parseInt( $asideInner.css('padding-top'), 0) + parseInt( $aside.css('padding-top'), 0);
          var subNav = ul.clone().appendTo( $aside );
          
          toggleTouchItem($listItem);

          var itemTop = ($listItem.position().top + mar) - $sidebar.scrollTop();
          var vwHeight = $win.height();

          subNav
            .addClass('nav-floating')
            .css({
              position: $rootScope.app.layout.isFixed ? 'fixed' : 'absolute',
              top:      itemTop,
              bottom:   (subNav.outerHeight(true) + itemTop > vwHeight) ? 0 : 'auto'
            });

          subNav.on('mouseleave', function() {
            toggleTouchItem($listItem);
            subNav.remove();
          });

          return subNav;
        }

        function removeFloatingNav() {
          $('.dropdown-backdrop').remove();
          $('.sidebar-subnav.nav-floating').remove();
          $('.sidebar li.open').removeClass('open');
        }
    }


})();


(function() {
    'use strict';

    angular
        .module('app.sidebar')
        .service('SidebarLoader', SidebarLoader);

    SidebarLoader.$inject = ['$http'];
    function SidebarLoader($http) {
        this.getMenu = getMenu;

        ////////////////

        function getMenu(onReady, onError) {
          var menuJson = 'server/sidebar-menu.json',
              menuURL  = menuJson + '?v=' + (new Date().getTime()); // jumps cache
            
          onError = onError || function() { alert('Failure loading menu'); };

          $http
            .get(menuURL)
            .success(onReady)
            .error(onError);
        }
    }
})();
(function() {
    'use strict';

    angular
        .module('app.sidebar')
        .controller('UserBlockController', UserBlockController);

    UserBlockController.$inject = ['$rootScope', '$scope', '$state', '$cookies', 'AuthenticationService', 'ScopeValueService', '$http', 'SocketService', 'Notify', '$location', 'apiManage', '$route'];
    function UserBlockController($rootScope, $scope, $state, $cookies, AuthenticationService, ScopeValueService, $http, SocketService, Notify, $location, apiManage, $route) {

        activate();

        ////////////////

        function activate() {
            $rootScope.user = {
                picture:'app/img/user/user-avatar.png'
            };
            var user_gid = localStorage.getItem('user_gid');
            var url = apiManage.apiList['userData'].api;
            SocketService.get(url+'?user_gid='+ user_gid).then(function (resp) {
                if (resp.data.status == true) {
                    $scope.userData = resp.data;
                }
            });

          // Hides/show user avatar on sidebar
          $rootScope.toggleUserBlock = function(){
            $rootScope.$broadcast('toggleUserBlock');
          };

          $rootScope.userBlockVisible = false;
          
          $rootScope.$on('toggleUserBlock', function(/*event, args*/) {

            $rootScope.userBlockVisible = ! $rootScope.userBlockVisible;
            
          });
        }
    }
})();

(function() {
    'use strict';

    angular
        .module('app.settings')
        .run(settingsRun);

    settingsRun.$inject = ['$rootScope', '$localStorage'];

    function settingsRun($rootScope, $localStorage){

      // Global Settings
      // ----------------------------------- 
      $rootScope.app = {
        name: 'StoryBoardERP',
        description: 'Vcidex Solutions Pvt Ltd.',
        year: ((new Date()).getFullYear()),
        layout: {
          isFixed: true,
          isCollapsed: false,
          isBoxed: false,
          isRTL: false,
          horizontal: false,
          isFloat: false,
          asideHover: false,
          theme: null
        },
        useFullLayout: false,
        hiddenFooter: false,
        offsidebarOpen: false,
        asideToggled: false,
        viewAnimation: 'ng-fadeInUp'
      };

      // Setup the layout mode
      $rootScope.app.layout.horizontal = ( $rootScope.$stateParams.layout === 'app-h') ;

      // Restore layout settings
      if( angular.isDefined($localStorage.layout) )
        $rootScope.app.layout = $localStorage.layout;
      else
        $localStorage.layout = $rootScope.app.layout;

      $rootScope.$watch('app.layout', function () {
        $localStorage.layout = $rootScope.app.layout;
      }, true);

      // Close submenu when sidebar change from collapsed to normal
      $rootScope.$watch('app.layout.isCollapsed', function(newValue) {
        if( newValue === false )
          $rootScope.$broadcast('closeSidebarMenu');
      });

    }

})();

(function() {
    'use strict';

    angular
        .module('app.translate')
        .config(translateConfig)
        ;
    translateConfig.$inject = ['$translateProvider'];
    function translateConfig($translateProvider){

      $translateProvider.useStaticFilesLoader({
          prefix : 'app/i18n/',
          suffix : '.json'
      });

      $translateProvider.preferredLanguage('en');
      $translateProvider.useLocalStorage();
      $translateProvider.usePostCompiling(true);
      $translateProvider.useSanitizeValueStrategy('sanitizeParameters');

    }
})();
(function() {
    'use strict';

    angular
        .module('app.translate')
        .run(translateRun)
        ;
    translateRun.$inject = ['$rootScope', '$translate'];
    
    function translateRun($rootScope, $translate){

      // Internationalization
      // ----------------------

      $rootScope.language = {
        // Handles language dropdown
        listIsOpen: false,
        // list of available languages
        available: {
          'en':       'Hi Vinoth',
          'es_AR': 'Account',
         
        },
        // display always the current ui language
        init: function () {
          var proposedLanguage = $translate.proposedLanguage() || $translate.use();
          var preferredLanguage = $translate.preferredLanguage(); // we know we have set a preferred one in app.config
          $rootScope.language.selected = $rootScope.language.available[ (proposedLanguage || preferredLanguage) ];
        },
        set: function (localeId) {
          // Set the new idiom
          $translate.use(localeId);
          // save a reference for the current language
          $rootScope.language.selected = $rootScope.language.available[localeId];
          // finally toggle dropdown
          $rootScope.language.listIsOpen = ! $rootScope.language.listIsOpen;
        }
      };

      $rootScope.language.init();

    }
})();
/**=========================================================
 * Module: angular-grid.js
 * Example for Angular Grid
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('AngularGridController', AngularGridController);

    AngularGridController.$inject = ['$http'];
    function AngularGridController($http) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

            // Basic
            var columnDefs = [
                {displayName: 'Athlete', field: 'athlete', width: 150},
                {displayName: 'Age', field: 'age', width: 90},
                {displayName: 'Country', field: 'country', width: 120},
                {displayName: 'Year', field: 'year', width: 90},
                {displayName: 'Date', field: 'date', width: 110},
                {displayName: 'Sport', field: 'sport', width: 110},
                {displayName: 'Gold', field: 'gold', width: 100},
                {displayName: 'Silver', field: 'silver', width: 100},
                {displayName: 'Bronze', field: 'bronze', width: 100},
                {displayName: 'Total', field: 'total', width: 100}
            ];

            vm.gridOptions = {
                columnDefs: columnDefs,
                rowData: null,
                ready: function(api){
                  api.sizeColumnsToFit();
                }
            };

            // Filter Example
            var irishAthletes = ['John Joe Nevin','Katie Taylor','Paddy Barnes','Kenny Egan','Darren Sutherland', 'Margaret Thatcher', 'Tony Blair', 'Ronald Regan', 'Barack Obama'];

            var columnDefsFilter = [
                {displayName: 'Athlete', field: 'athlete', width: 150, filter: 'set',
                    filterParams: { cellHeight: 20, values: irishAthletes} },
                {displayName: 'Age', field: 'age', width: 90, filter: 'number'},
                {displayName: 'Country', field: 'country', width: 120},
                {displayName: 'Year', field: 'year', width: 90},
                {displayName: 'Date', field: 'date', width: 110},
                {displayName: 'Sport', field: 'sport', width: 110},
                {displayName: 'Gold', field: 'gold', width: 100, filter: 'number'},
                {displayName: 'Silver', field: 'silver', width: 100, filter: 'number'},
                {displayName: 'Bronze', field: 'bronze', width: 100, filter: 'number'},
                {displayName: 'Total',field: 'total', width: 100, filter: 'number'}
            ];

            vm.gridOptions1 = {
                columnDefs: columnDefsFilter,
                rowData: null,
                enableFilter: true,
                ready: function(api){
                  api.sizeColumnsToFit();
                }

            };


            // Pinning Example

            vm.gridOptions2 = {
                columnDefs: columnDefs,
                rowData: null,
                pinnedColumnCount: 2,
                ready: function(api){
                  api.sizeColumnsToFit();
                }
            };

            //-----------------------------
            // Get the data from SERVER
            //-----------------------------

            $http.get('server/ag-owinners.json')
                .then(function(res){
                    // basic
                    vm.gridOptions.rowData = res.data;
                    vm.gridOptions.api.onNewRows();
                    // filter
                    vm.gridOptions1.rowData = res.data;
                    vm.gridOptions1.api.onNewRows();
                    // pinning
                    vm.gridOptions2.rowData = res.data;
                    vm.gridOptions2.api.onNewRows();
                });

        }
    }
})();

/**=========================================================
 * Module: datatable,js
 * Angular Datatable controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('DataTableController', DataTableController);

    DataTableController.$inject = ['$resource', 'DTOptionsBuilder', 'DTColumnDefBuilder'];
    function DataTableController($resource, DTOptionsBuilder, DTColumnDefBuilder) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // Ajax

          $resource('server/datatable.json').query().$promise.then(function(persons) {
             vm.persons = persons;
          });

          // Changing data

          vm.heroes = [{
              'id': 860,
              'firstName': 'Superman',
              'lastName': 'Yoda'
            }, {
              'id': 870,
              'firstName': 'Ace',
              'lastName': 'Ventura'
            }, {
              'id': 590,
              'firstName': 'Flash',
              'lastName': 'Gordon'
            }, {
              'id': 803,
              'firstName': 'Luke',
              'lastName': 'Skywalker'
            }
          ];

          vm.dtOptions = DTOptionsBuilder.newOptions().withPaginationType('full_numbers');
          vm.dtColumnDefs = [
              DTColumnDefBuilder.newColumnDef(0),
              DTColumnDefBuilder.newColumnDef(1),
              DTColumnDefBuilder.newColumnDef(2),
              DTColumnDefBuilder.newColumnDef(3).notSortable()
          ];
          vm.person2Add = _buildPerson2Add(1);
          vm.addPerson = addPerson;
          vm.modifyPerson = modifyPerson;
          vm.removePerson = removePerson;

          function _buildPerson2Add(id) {
              return {
                  id: id,
                  firstName: 'Foo' + id,
                  lastName: 'Bar' + id
              };
          }
          function addPerson() {
              vm.heroes.push(angular.copy(vm.person2Add));
              vm.person2Add = _buildPerson2Add(vm.person2Add.id + 1);
          }
          function modifyPerson(index) {
              vm.heroes.splice(index, 1, angular.copy(vm.person2Add));
              vm.person2Add = _buildPerson2Add(vm.person2Add.id + 1);
          }
          function removePerson(index) {
              vm.heroes.splice(index, 1);
          }

        }
    }
})();

/**=========================================================
 * Module: ng-grid.js
 * ngGrid demo
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('NGGridController', NGGridController);

    NGGridController.$inject = ['$scope', '$http', '$timeout'];
    function NGGridController($scope, $http, $timeout) {

        activate();

        ////////////////

        //function activate() {

        //  $scope.filterOptions = {
        //      filterText: '',
        //      useExternalFilter: true
        //  };
        //  $scope.totalServerItems = 0;
        //  $scope.pagingOptions = {
        //      pageSizes:   [250, 500, 1000],  // page size options
        //      pageSize:    250,              // default page size
        //      currentPage: 1                 // initial page
        //  };

        //  $scope.gridOptions = {
        //      data:             'myData',
        //      enablePaging:     true,
        //      showFooter:       true,
        //      rowHeight:        36,
        //      headerRowHeight:  38,
        //      totalServerItems: 'totalServerItems',
        //      pagingOptions:    $scope.pagingOptions,
        //      filterOptions:    $scope.filterOptions
        //  };

        //  $scope.setPagingData = function(data, page, pageSize){
        //      // calc for pager
        //      var pagedData = data.slice((page - 1) * pageSize, page * pageSize);
        //      // Store data from server
        //      $scope.myData = pagedData;
        //      // Update server side data length
        //      $scope.totalServerItems = data.length;

        //      if (!$scope.$$phase) {
        //          $scope.$apply();
        //      }

        //  };

        //  $scope.getPagedDataAsync = function (pageSize, page, searchText) {
        //    var ngGridResourcePath = 'server/ng-grid-data.json';

        //    $timeout(function () {

        //        if (searchText) {
        //            var ft = searchText.toLowerCase();
        //            $http.get(ngGridResourcePath).success(function (largeLoad) {
        //                var data = largeLoad.filter(function(item) {
        //                    return JSON.stringify(item).toLowerCase().indexOf(ft) !== -1;
        //                });
        //                $scope.setPagingData(data,page,pageSize);
        //            });
        //        } else {
        //            $http.get(ngGridResourcePath).success(function (largeLoad) {
        //                $scope.setPagingData(largeLoad,page,pageSize);
        //            });
        //        }
        //    }, 100);
        //  };


        //  $scope.$watch('pagingOptions', function (newVal, oldVal) {
        //      if (newVal !== oldVal && newVal.currentPage !== oldVal.currentPage) {
        //        $scope.getPagedDataAsync($scope.pagingOptions.pageSize, $scope.pagingOptions.currentPage, $scope.filterOptions.filterText);
        //      }
        //  }, true);
        //  $scope.$watch('filterOptions', function (newVal, oldVal) {
        //      if (newVal !== oldVal) {
        //        $scope.getPagedDataAsync($scope.pagingOptions.pageSize, $scope.pagingOptions.currentPage, $scope.filterOptions.filterText);
        //      }
        //  }, true);

        //  $scope.getPagedDataAsync($scope.pagingOptions.pageSize, $scope.pagingOptions.currentPage);
        //}
        function activate() {
            var data = [
                { name: 'Moroni', age: 50, money: -10 },
                { name: 'Tiancum', age: 43, money: 120 },
                { name: 'Jacob', age: 27, money: 5.5 },
                { name: 'Nephi', age: 29, money: -54 },
                { name: 'Enos', age: 34, money: 110 },
                { name: 'Tiancum', age: 43, money: 1000 },
                { name: 'Jacob', age: 27, money: -201 },
                { name: 'Nephi', age: 29, money: 100 },
                { name: 'Enos', age: 34, money: -52.5 },
                { name: 'Tiancum', age: 43, money: 52.1 },
                { name: 'Jacob', age: 27, money: 110 },
                { name: 'Nephi', age: 29, money: -55 },
                { name: 'Enos', age: 34, money: 551 },
                { name: 'Tiancum', age: 43, money: -1410 },
                { name: 'Jacob', age: 27, money: 410 },
                { name: 'Nephi', age: 29, money: 100 },
                { name: 'Enos', age: 34, money: -100 }
            ];

            // SELECT ROWS
            // ----------------------------------- 

            vm.data = data;

            vm.tableParams3 = new ngTableParams({
                page: 1,            // show first page
                count: 10          // count per page
            }, {
                total: data.length, // length of data
                getData: function ($defer, params) {
                    // use build-in angular filter
                    var filteredData = params.filter() ?
                            $filter('filter')(data, params.filter()) :
                            data;
                    var orderedData = params.sorting() ?
                            $filter('orderBy')(filteredData, params.orderBy()) :
                            data;

                    params.total(orderedData.length); // set total for recalc pagination
                    $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
                }
            });

            vm.changeSelection = function (user) {
                console.info(user);
            };

            // EXPORT CSV
            // -----------------------------------  

            var data4 = [{ name: 'Moroni', age: 50 },
                { name: 'Tiancum', age: 43 },
                { name: 'Jacob', age: 27 },
                { name: 'Nephi', age: 29 },
                { name: 'Enos', age: 34 },
                { name: 'Tiancum', age: 43 },
                { name: 'Jacob', age: 27 },
                { name: 'Nephi', age: 29 },
                { name: 'Enos', age: 34 },
                { name: 'Tiancum', age: 43 },
                { name: 'Jacob', age: 27 },
                { name: 'Nephi', age: 29 },
                { name: 'Enos', age: 34 },
                { name: 'Tiancum', age: 43 },
                { name: 'Jacob', age: 27 },
                { name: 'Nephi', age: 29 },
                { name: 'Enos', age: 34 }];

            vm.tableParams4 = new ngTableParams({
                page: 1,            // show first page
                count: 10           // count per page
            }, {
                total: data4.length, // length of data4
                getData: function ($defer, params) {
                    $defer.resolve(data4.slice((params.page() - 1) * params.count(), params.page() * params.count()));
                }
            });


            // SORTING
            // ----------------------------------- 



            vm.tableParams = new ngTableParams({
                page: 1,            // show first page
                count: 10,          // count per page
                sorting: {
                    name: 'asc'     // initial sorting
                }
            }, {
                total: data.length, // length of data
                getData: function ($defer, params) {
                    // use build-in angular filter
                    var orderedData = params.sorting() ?
                            $filter('orderBy')(data, params.orderBy()) :
                            data;

                    $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
                }
            });

            // FILTERS
            // ----------------------------------- 

            vm.tableParams2 = new ngTableParams({
                page: 1,            // show first page
                count: 10,          // count per page
                filter: {
                    name: '',
                    age: ''
                    // name: 'M'       // initial filter
                }
            }, {
                total: data.length, // length of data
                getData: function ($defer, params) {
                    // use build-in angular filter
                    var orderedData = params.filter() ?
                           $filter('filter')(data, params.filter()) :
                           data;

                    vm.users = orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count());

                    params.total(orderedData.length); // set total for recalc pagination
                    $defer.resolve(vm.users);
                }
            });

            // AJAX

            var Api = $resource('server/table-data.json');

            vm.tableParams5 = new ngTableParams({
                page: 1,            // show first page
                count: 10           // count per page
            }, {
                total: 0,           // length of data
                counts: [],         // hide page counts control
                getData: function ($defer, params) {

                    // Service using cache to avoid mutiple requests
                    ngTableDataService.getData($defer, params, Api);

                    /* direct ajax request to api (perform result pagination on the server)
                    Api.get(params.url(), function(data) {
                        $timeout(function() {
                            // update table params
                            params.total(data.total);
                            // set new data
                            $defer.resolve(data.result);
                        }, 500);
                    });
                    */
                }
            });
        }

    }
})();

(function() {
    'use strict';

    angular
        .module('app.tables')
        .service('ngTableDataService', ngTableDataService);

    function ngTableDataService() {
        /* jshint validthis:true */
        var self = this;
        this.cache = null;
        this.getData = getData;

        ////////////////

        function getData($defer, params, api) {
          // if no cache, request data and filter
          if ( ! self.cache ) {
            if ( api ) {
              api.get(function(data){
                self.cache = data;
                filterdata($defer, params);
              });
            }
          }
          else {
            filterdata($defer, params);
          }
          
          function filterdata($defer, params) {
            var from = (params.page() - 1) * params.count();
            var to = params.page() * params.count();
            var filteredData = self.cache.result.slice(from, to);

            params.total(self.cache.total);
            $defer.resolve(filteredData);
          }

        }
    }
})();

/**=========================================================
 * Module: NGTableCtrl.js
 * Controller for ngTables
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('NGTableCtrl', NGTableCtrl);
    /*jshint -W055 */
    NGTableCtrl.$inject = ['$filter', 'ngTableParams', '$resource', '$timeout', 'ngTableDataService'];
    function NGTableCtrl($filter, ngTableParams, $resource, $timeout, ngTableDataService) {
        var vm = this;
        vm.title = 'Controller';

        activate();

        ////////////////

        function activate() {
          var data = [
              {name: 'Moroni',  age: 50, money: -10   },
              {name: 'Tiancum', age: 43, money: 120   },
              {name: 'Jacob',   age: 27, money: 5.5   },
              {name: 'Nephi',   age: 29, money: -54   },
              {name: 'Enos',    age: 34, money: 110   },
              {name: 'Tiancum', age: 43, money: 1000  },
              {name: 'Jacob',   age: 27, money: -201  },
              {name: 'Nephi',   age: 29, money: 100   },
              {name: 'Enos',    age: 34, money: -52.5 },
              {name: 'Tiancum', age: 43, money: 52.1  },
              {name: 'Jacob',   age: 27, money: 110   },
              {name: 'Nephi',   age: 29, money: -55   },
              {name: 'Enos',    age: 34, money: 551   },
              {name: 'Tiancum', age: 43, money: -1410 },
              {name: 'Jacob',   age: 27, money: 410   },
              {name: 'Nephi',   age: 29, money: 100   },
              {name: 'Enos',    age: 34, money: -100  }
          ];

          // SELECT ROWS
          // ----------------------------------- 

          vm.data = data;

          vm.tableParams3 = new ngTableParams({
              page: 1,            // show first page
              count: 10          // count per page
          }, {
              total: data.length, // length of data
              getData: function ($defer, params) {
                  // use build-in angular filter
                  var filteredData = params.filter() ?
                          $filter('filter')(data, params.filter()) :
                          data;
                  var orderedData = params.sorting() ?
                          $filter('orderBy')(filteredData, params.orderBy()) :
                          data;

                  params.total(orderedData.length); // set total for recalc pagination
                  $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
              }
          });

          vm.changeSelection = function(user) {
            console.info(user);
          };

          // EXPORT CSV
          // -----------------------------------  

          var data4 = [{name: 'Moroni', age: 50},
              {name: 'Tiancum', age: 43},
              {name: 'Jacob', age: 27},
              {name: 'Nephi', age: 29},
              {name: 'Enos', age: 34},
              {name: 'Tiancum', age: 43},
              {name: 'Jacob', age: 27},
              {name: 'Nephi', age: 29},
              {name: 'Enos', age: 34},
              {name: 'Tiancum', age: 43},
              {name: 'Jacob', age: 27},
              {name: 'Nephi', age: 29},
              {name: 'Enos', age: 34},
              {name: 'Tiancum', age: 43},
              {name: 'Jacob', age: 27},
              {name: 'Nephi', age: 29},
              {name: 'Enos', age: 34}];

          vm.tableParams4 = new ngTableParams({
              page: 1,            // show first page
              count: 10           // count per page
          }, {
              total: data4.length, // length of data4
              getData: function($defer, params) {
                  $defer.resolve(data4.slice((params.page() - 1) * params.count(), params.page() * params.count()));
              }
          });


          // SORTING
          // ----------------------------------- 



          vm.tableParams = new ngTableParams({
              page: 1,            // show first page
              count: 10,          // count per page
              sorting: {
                  name: 'asc'     // initial sorting
              }
          }, {
              total: data.length, // length of data
              getData: function($defer, params) {
                  // use build-in angular filter
                  var orderedData = params.sorting() ?
                          $filter('orderBy')(data, params.orderBy()) :
                          data;
          
                  $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
              }
          });

          // FILTERS
          // ----------------------------------- 

          vm.tableParams2 = new ngTableParams({
              page: 1,            // show first page
              count: 10,          // count per page
              filter: {
                  name: '',
                  age: ''
                  // name: 'M'       // initial filter
              }
          }, {
              total: data.length, // length of data
              getData: function($defer, params) {
                  // use build-in angular filter
                  var orderedData = params.filter() ?
                         $filter('filter')(data, params.filter()) :
                         data;

                  vm.users = orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count());

                  params.total(orderedData.length); // set total for recalc pagination
                  $defer.resolve(vm.users);
              }
          });

          // AJAX
          
          var Api = $resource('server/table-data.json');

          vm.tableParams5 = new ngTableParams({
              page: 1,            // show first page
              count: 10           // count per page
          }, {
              total: 0,           // length of data
              counts: [],         // hide page counts control
              getData: function($defer, params) {
                  
                  // Service using cache to avoid mutiple requests
                  ngTableDataService.getData( $defer, params, Api);
                  
                  /* direct ajax request to api (perform result pagination on the server)
                  Api.get(params.url(), function(data) {
                      $timeout(function() {
                          // update table params
                          params.total(data.total);
                          // set new data
                          $defer.resolve(data.result);
                      }, 500);
                  });
                  */
              }
          });
        }
    }
})();



/**=========================================================
 * Module: demo-buttons.js
 * Provides a simple demo for buttons actions
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('TablexEditableController', TablexEditableController);

    TablexEditableController.$inject = ['$filter', '$http', 'editableOptions', 'editableThemes','$q'];
    function TablexEditableController($filter, $http, editableOptions, editableThemes, $q) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // editable row
          // ----------------------------------- 
          vm.users = [
            {id: 1, name: 'awesome user1', status: 2, group: 4, groupName: 'admin'},
            {id: 2, name: 'awesome user2', status: undefined, group: 3, groupName: 'vip'},
            {id: 3, name: 'awesome user3', status: 2, group: null}
          ];

          vm.statuses = [
            {value: 1, text: 'status1'},
            {value: 2, text: 'status2'},
            {value: 3, text: 'status3'},
            {value: 4, text: 'status4'}
          ];

          vm.groups = [];
          vm.loadGroups = function() {
            return vm.groups.length ? null : $http.get('server/xeditable-groups.json').success(function(data) {
              vm.groups = data;
            });
          };

          vm.showGroup = function(user) {
            if(user.group && vm.groups.length) {
              var selected = $filter('filter')(vm.groups, {id: user.group});
              return selected.length ? selected[0].text : 'Not set';
            } else {
              return user.groupName || 'Not set';
            }
          };

          vm.showStatus = function(user) {
            var selected = [];
            if(user.status) {
              selected = $filter('filter')(vm.statuses, {value: user.status});
            }
            return selected.length ? selected[0].text : 'Not set';
          };

          vm.checkName = function(data, id) {
            if (id === 2 && data !== 'awesome') {
              return 'Username 2 should be `awesome`';
            }
          };

          vm.saveUser = function(data, id) {
            //vm.user not updated yet
            angular.extend(data, {id: id});
            console.log('Saving user: ' + id);
            // return $http.post('/saveUser', data);
          };

          // remove user
          vm.removeUser = function(index) {
            vm.users.splice(index, 1);
          };

          // add user
          vm.addUser = function() {
            vm.inserted = {
              id: vm.users.length+1,
              name: '',
              status: null,
              group: null,
              isNew: true
            };
            vm.users.push(vm.inserted);
          };

          // editable column
          // ----------------------------------- 


          vm.saveColumn = function(column) {
            var results = [];
            angular.forEach(vm.users, function(/*user*/) {
              // results.push($http.post('/saveColumn', {column: column, value: user[column], id: user.id}));
              console.log('Saving column: ' + column);
            });
            return $q.all(results);
          };

          // editable table
          // ----------------------------------- 

          // filter users to show
          vm.filterUser = function(user) {
            return user.isDeleted !== true;
          };

          // mark user as deleted
          vm.deleteUser = function(id) {
            var filtered = $filter('filter')(vm.users, {id: id});
            if (filtered.length) {
              filtered[0].isDeleted = true;
            }
          };

          // cancel all changes
          vm.cancel = function() {
            for (var i = vm.users.length; i--;) {
              var user = vm.users[i];
              // undelete
              if (user.isDeleted) {
                delete user.isDeleted;
              }
              // remove new 
              if (user.isNew) {
                vm.users.splice(i, 1);
              }
            }
          };

          // save edits
          vm.saveTable = function() {
            var results = [];
            for (var i = vm.users.length; i--;) {
              var user = vm.users[i];
              // actually delete user
              if (user.isDeleted) {
                vm.users.splice(i, 1);
              }
              // mark as not new 
              if (user.isNew) {
                user.isNew = false;
              }

              // send on server
              // results.push($http.post('/saveUser', user));
              console.log('Saving Table...');
            }

            return $q.all(results);
          };

        }
    }
})();

/**=========================================================
 * Module: UIGridController
  =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.tables')
        .controller('UIGridController', UIGridController);

    UIGridController.$inject = ['uiGridConstants', '$http'];
    function UIGridController(uiGridConstants, $http) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          // Basic example
          // ----------------------------------- 

          vm.gridOptions = {
            rowHeight: 34,
            data: [
              {
                  'name': 'Wilder Gonzales',
                  'gender': 'male',
                  'company': 'Geekko'
              },
              {
                  'name': 'Georgina Schultz',
                  'gender': 'female',
                  'company': 'Suretech'
              },
              {
                  'name': 'Carroll Buchanan',
                  'gender': 'male',
                  'company': 'Ecosys'
              },
              {
                  'name': 'Valarie Atkinson',
                  'gender': 'female',
                  'company': 'Hopeli'
              },
              {
                  'name': 'Schroeder Mathews',
                  'gender': 'male',
                  'company': 'Polarium'
              },
              {
                  'name': 'Ethel Price',
                  'gender': 'female',
                  'company': 'Enersol'
              },
              {
                  'name': 'Claudine Neal',
                  'gender': 'female',
                  'company': 'Sealoud'
              },
              {
                  'name': 'Beryl Rice',
                  'gender': 'female',
                  'company': 'Velity'
              },
              {
                  'name': 'Lynda Mendoza',
                  'gender': 'female',
                  'company': 'Dogspa'
              },
              {
                  'name': 'Sarah Massey',
                  'gender': 'female',
                  'company': 'Bisba'
              },
              {
                  'name': 'Robles Boyle',
                  'gender': 'male',
                  'company': 'Comtract'
              },
              {
                  'name': 'Evans Hickman',
                  'gender': 'male',
                  'company': 'Parleynet'
              },
              {
                  'name': 'Dawson Barber',
                  'gender': 'male',
                  'company': 'Dymi'
              },
              {
                  'name': 'Bruce Strong',
                  'gender': 'male',
                  'company': 'Xyqag'
              },
              {
                  'name': 'Nellie Whitfield',
                  'gender': 'female',
                  'company': 'Exospace'
              },
              {
                  'name': 'Jackson Macias',
                  'gender': 'male',
                  'company': 'Aquamate'
              },
              {
                  'name': 'Pena Pena',
                  'gender': 'male',
                  'company': 'Quarx'
              },
              {
                  'name': 'Lelia Gates',
                  'gender': 'female',
                  'company': 'Proxsoft'
              },
              {
                  'name': 'Letitia Vasquez',
                  'gender': 'female',
                  'company': 'Slumberia'
              },
              {
                  'name': 'Trevino Moreno',
                  'gender': 'male',
                  'company': 'Conjurica'
              }
            ]
          };
          
          // Complex example
          // ----------------------------------- 

          var data = [];
           
          vm.gridOptionsComplex = {
              showGridFooter: true,
              showColumnFooter: true,
              enableFiltering: true,

          
              columnDefs: [

                  { field: 'name', width: '13%' },
                  { field: 'address.street',aggregationType: uiGridConstants.aggregationTypes.sum, width: '13%' },
                  { field: 'age', aggregationType: uiGridConstants.aggregationTypes.avg, aggregationHideLabel: true, width: '13%' },
                  { name: 'ageMin', field: 'age', aggregationType: uiGridConstants.aggregationTypes.min, width: '13%', displayName: 'Age for min' },
                  { name: 'ageMax', field: 'age', aggregationType: uiGridConstants.aggregationTypes.max, width: '13%', displayName: 'Age for max' },
                  { name: 'customCellTemplate', 
                    field: 'age', 
                    width: '14%', 
                    footerCellTemplate: '<div class="ui-grid-cell-contents bg-info text-center">Custom HTML</div>' 
                  },
                  { name: 'registered', field: 'registered', width: '20%', cellFilter: 'date', footerCellFilter: 'date', aggregationType: uiGridConstants.aggregationTypes.max }
              ],
              data: data,
              onRegisterApi: function(gridApi) {
                  vm.gridApi = gridApi;
                 
              }
          };
           
          $http.get('server/uigrid-complex.json')
            .success(function(data) {
              data.forEach( function(row) {
                row.registered = Date.parse(row.registered);
              });
              vm.gridOptionsComplex.data = data;
            });


           vm.gridOptions1 = {
              paginationPageSizes: [25, 50, 75],
              paginationPageSize: 25,
              columnDefs: [
                { name: 'name' },
                { name: 'gender' },
                { name: 'company' }
              ]
            };
           
            $http.get('server/uigrid-100.json')
            .success(function (data) {
              vm.gridOptions1.data = data;
            });

        }
    }
})();

/**=========================================================
 * Module: animate-enabled.js
 * Enable or disables ngAnimate for element with directive
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('animateEnabled', animateEnabled);

    animateEnabled.$inject = ['$animate'];
    function animateEnabled ($animate) {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element, attrs) {
          scope.$watch(function () {
            return scope.$eval(attrs.animateEnabled, scope);
          }, function (newValue) {
            $animate.enabled(!!newValue, element);
          });
        }
    }

})();

/**=========================================================
 * Module: browser.js
 * Browser detection
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .service('Browser', Browser);

    Browser.$inject = ['$window'];
    function Browser($window) {
      return $window.jQBrowser;
    }

})();

/**=========================================================
 * Module: clear-storage.js
 * Removes a key from the browser storage via element click
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('resetKey', resetKey);

    resetKey.$inject = ['$state', '$localStorage'];
    function resetKey ($state, $localStorage) {
        var directive = {
            link: link,
            restrict: 'A',
            scope: {
              resetKey: '@'
            }
        };
        return directive;

        function link(scope, element) {
          element.on('click', function (e) {
              e.preventDefault();

              if(scope.resetKey) {
                delete $localStorage[scope.resetKey];
                $state.go($state.current, {}, {reload: true});
              }
              else {
                $.error('No storage key specified for reset.');
              }
          });
        }
    }

})();

/**=========================================================
 * Module: fullscreen.js
 * Toggle the fullscreen mode on/off
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('toggleFullscreen', toggleFullscreen);

    toggleFullscreen.$inject = ['Browser'];
    function toggleFullscreen (Browser) {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          // Not supported under IE
          if( Browser.msie ) {
            element.addClass('hide');
          }
          else {
            element.on('click', function (e) {
                e.preventDefault();

                if (screenfull.enabled) {
                  
                  screenfull.toggle();
                  
                  // Switch icon indicator
                  if(screenfull.isFullscreen)
                    $(this).children('em').removeClass('fa-expand').addClass('fa-compress');
                  else
                    $(this).children('em').removeClass('fa-compress').addClass('fa-expand');

                } else {
                  $.error('Fullscreen not enabled');
                }

            });
          }
        }
    }


})();

/**=========================================================
 * Module: load-css.js
 * Request and load into the current page a css file
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('loadCss', loadCss);

    function loadCss () {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element, attrs) {
          element.on('click', function (e) {
              if(element.is('a')) e.preventDefault();
              var uri = attrs.loadCss,
                  link;

              if(uri) {
                link = createLink(uri);
                if ( !link ) {
                  $.error('Error creating stylesheet link element.');
                }
              }
              else {
                $.error('No stylesheet location defined.');
              }

          });
        }
        
        function createLink(uri) {
          var linkId = 'autoloaded-stylesheet',
              oldLink = $('#'+linkId).attr('id', linkId + '-old');

          $('head').append($('<link/>').attr({
            'id':   linkId,
            'rel':  'stylesheet',
            'href': uri
          }));

          if( oldLink.length ) {
            oldLink.remove();
          }

          return $('#'+linkId);
        }
    }

})();

/**=========================================================
 * Module: now.js
 * Provides a simple way to display the current time formatted
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('now', now);

    now.$inject = ['dateFilter', '$interval'];
    function now (dateFilter, $interval) {
        var directive = {
            link: link,
            restrict: 'EA'
        };
        return directive;

        function link(scope, element, attrs) {
          var format = attrs.format;

          function updateTime() {
            var dt = dateFilter(new Date(), format);
            element.text(dt);
          }

          updateTime();
          var intervalPromise = $interval(updateTime, 1000);

          scope.$on('$destroy', function(){
            $interval.cancel(intervalPromise);
          });

        }
    }

})();

/**=========================================================
 * Module: table-checkall.js
 * Tables check all checkbox
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('checkAll', checkAll);

    function checkAll () {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          element.on('change', function() {
            var $this = $(this),
                index= $this.index() + 1,
                checkbox = $this.find('input[type="checkbox"]'),
                table = $this.parents('table');
            // Make sure to affect only the correct checkbox column
            table.find('tbody > tr > td:nth-child('+index+') input[type="checkbox"]')
              .prop('checked', checkbox[0].checked);

          });
        }
    }

})();

/**=========================================================
 * Module: trigger-resize.js
 * Triggers a window resize event from any element
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.utils')
        .directive('triggerResize', triggerResize);

    triggerResize.$inject = ['$window', '$timeout'];
    function triggerResize ($window, $timeout) {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          element.on('click', function(){
            $timeout(function(){
              $window.dispatchEvent(new Event('resize'));
            });
          });
        }
    }

})();

/**=========================================================
 * Module: utils.js
 * Utility library to use across the theme
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.utils')
        .service('Utils', Utils);

    Utils.$inject = ['$window', 'APP_MEDIAQUERY'];
    function Utils($window, APP_MEDIAQUERY) {

        var $html = angular.element('html'),
            $win  = angular.element($window),
            $body = angular.element('body');

        return {
          // DETECTION
          support: {
            transition: (function() {
                    var transitionEnd = (function() {

                        var element = document.body || document.documentElement,
                            transEndEventNames = {
                                WebkitTransition: 'webkitTransitionEnd',
                                MozTransition: 'transitionend',
                                OTransition: 'oTransitionEnd otransitionend',
                                transition: 'transitionend'
                            }, name;

                        for (name in transEndEventNames) {
                            if (element.style[name] !== undefined) return transEndEventNames[name];
                        }
                    }());

                    return transitionEnd && { end: transitionEnd };
                })(),
            animation: (function() {

                var animationEnd = (function() {

                    var element = document.body || document.documentElement,
                        animEndEventNames = {
                            WebkitAnimation: 'webkitAnimationEnd',
                            MozAnimation: 'animationend',
                            OAnimation: 'oAnimationEnd oanimationend',
                            animation: 'animationend'
                        }, name;

                    for (name in animEndEventNames) {
                        if (element.style[name] !== undefined) return animEndEventNames[name];
                    }
                }());

                return animationEnd && { end: animationEnd };
            })(),
            requestAnimationFrame: window.requestAnimationFrame ||
                                   window.webkitRequestAnimationFrame ||
                                   window.mozRequestAnimationFrame ||
                                   window.msRequestAnimationFrame ||
                                   window.oRequestAnimationFrame ||
                                   function(callback){ window.setTimeout(callback, 1000/60); },
            /*jshint -W069*/
            touch: (
                ('ontouchstart' in window && navigator.userAgent.toLowerCase().match(/mobile|tablet/)) ||
                (window.DocumentTouch && document instanceof window.DocumentTouch)  ||
                (window.navigator['msPointerEnabled'] && window.navigator['msMaxTouchPoints'] > 0) || //IE 10
                (window.navigator['pointerEnabled'] && window.navigator['maxTouchPoints'] > 0) || //IE >=11
                false
            ),
            mutationobserver: (window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver || null)
          },
          // UTILITIES
          isInView: function(element, options) {
              /*jshint -W106*/
              var $element = $(element);

              if (!$element.is(':visible')) {
                  return false;
              }

              var window_left = $win.scrollLeft(),
                  window_top  = $win.scrollTop(),
                  offset      = $element.offset(),
                  left        = offset.left,
                  top         = offset.top;

              options = $.extend({topoffset:0, leftoffset:0}, options);

              if (top + $element.height() >= window_top && top - options.topoffset <= window_top + $win.height() &&
                  left + $element.width() >= window_left && left - options.leftoffset <= window_left + $win.width()) {
                return true;
              } else {
                return false;
              }
          },
          
          langdirection: $html.attr('dir') === 'rtl' ? 'right' : 'left',

          isTouch: function () {
            return $html.hasClass('touch');
          },

          isSidebarCollapsed: function () {
            return $body.hasClass('aside-collapsed');
          },

          isSidebarToggled: function () {
            return $body.hasClass('aside-toggled');
          },

          isMobile: function () {
            return $win.width() < APP_MEDIAQUERY.tablet;
          }

        };
    }
})();

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('ColorPickerController', ColorPickerController);

    function ColorPickerController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
           vm.hexPicker = {
              color: ''
            };

            vm.rgbPicker = {
              color: ''
            };

            vm.rgbaPicker = {
              color: ''
            };

            vm.nonInput = {
              color: ''
            };

            vm.resetColor = function() {
              vm.hexPicker = {
                color: '#ff0000'
              };
            };

            vm.resetRBGColor = function() {
              vm.rgbPicker = {
                color: 'rgb(255,255,255)'
              };
            };

            vm.resetRBGAColor = function() {
              vm.rgbaPicker = {
                color: 'rgb(255,255,255, 0.25)'
              };
            };

            vm.resetNonInputColor = function() {
              vm.nonInput = {
                color: '#ffffff'
              };
            };
        }
    }
})();
/**=========================================================
 * Module: filestyle.js
 * Initializes the fielstyle plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .directive('filestyle', filestyle);

    function filestyle () {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          var options = element.data();
          
          // old usage support
          options.classInput = element.data('classinput') || options.classInput;
          
          element.filestyle(options);
        }
    }

})();

/**=========================================================
 * Module: form-imgcrop.js
 * Image crop controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('ImageCropController', ImageCropController);

    ImageCropController.$inject = ['$scope'];
    function ImageCropController($scope) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.reset = function() {
            vm.myImage        = '';
            vm.myCroppedImage = '';
            vm.imgcropType    = 'square';
          };

          vm.reset();

          var handleFileSelect=function(evt) {
            var file=evt.currentTarget.files[0];
            var reader = new FileReader();
            reader.onload = function (evt) {
              $scope.$apply(function(/*$scope*/){
                vm.myImage=evt.target.result;
              });
            };
            if(file)
              reader.readAsDataURL(file);
          };
          
          angular.element(document.querySelector('#fileInput')).on('change',handleFileSelect);
        }
    }
})();

/**=========================================================
 * Module: FormValidationController
 * Input validation with UI Validate
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('FormValidationController', FormValidationController);

    function FormValidationController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.notBlackListed = function(value) {
            var blacklist = ['some@mail.com','another@email.com'];
            return blacklist.indexOf(value) === -1;
          };

          vm.words = function(value) {
            return value && value.split(' ').length;
          };

          vm.submitted = false;
          vm.validateInput = function(name, type) {
            var input = vm.formValidate[name];
            return (input.$dirty || vm.submitted) && input.$error[type];
          };

          // Submit form
          vm.submitForm = function() {
            vm.submitted = true;
            if (vm.formValidate.$valid) {
//console.log('Submitted!!');
            } else {
          //    console.log('Not valid!!');
              return false;
            }
          };
        }
    }
})();

/**=========================================================
 * Module: form-wizard.js
 * Handles form wizard plugin and validation
 =========================================================*/


(function() {
    'use strict';

    angular
        .module('app.forms')
        .directive('formWizard', formWizard);

    formWizard.$inject = ['$parse'];
    function formWizard ($parse) {
        var directive = {
            link: link,
            restrict: 'A',
            scope: true
        };
        return directive;

        function link(scope, element, attrs) {
          var validate = $parse(attrs.validateSteps)(scope),
              wiz = new Wizard(attrs.steps, !!validate, element);
          scope.wizard = wiz.init();
        }

        function Wizard (quantity, validate, element) {
          
          var self = this;
          self.quantity = parseInt(quantity,10);
          self.validate = validate;
          self.element = element;
          
          self.init = function() {
            self.createsteps(self.quantity);
            self.go(1); // always start at fist step
            return self;
          };

          self.go = function(step) {
            
            if ( angular.isDefined(self.steps[step]) ) {

              if(self.validate && step !== 1) {
                var form = $(self.element),
                    group = form.children().children('div').get(step - 2);

                if (false === form.parsley().validate( group.id )) {
                  return false;
                }
              }

              self.cleanall();
              self.steps[step] = true;
            }
          };

          self.active = function(step) {
            return !!self.steps[step];
          };

          self.cleanall = function() {
            for(var i in self.steps){
              self.steps[i] = false;
            }
          };

          self.createsteps = function(q) {
            self.steps = [];
            for(var i = 1; i <= q; i++) self.steps[i] = false;
          };

        }
    }


})();

/**=========================================================
 * Module: form-xeditable.js
 * Form xEditable controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('FormxEditableController', FormxEditableController);

    FormxEditableController.$inject = ['$scope', 'editableOptions', 'editableThemes', '$filter', '$http'];
    function FormxEditableController($scope, editableOptions, editableThemes, $filter, $http) {
        var vm = this;
        vm.title = 'Controller';

        activate();

        ////////////////

        function activate() {

          editableOptions.theme = 'bs3';

          editableThemes.bs3.inputClass = 'input-sm';
          editableThemes.bs3.buttonsClass = 'btn-sm';
          editableThemes.bs3.submitTpl = '<button type="submit" class="btn btn-success"><span class="fa fa-check"></span></button>';
          editableThemes.bs3.cancelTpl = '<button type="button" class="btn btn-default" ng-click="$form.$cancel()">'+
                                           '<span class="fa fa-times text-muted"></span>'+
                                         '</button>';

          vm.user = {
            email: 'email@example.com',
            tel: '123-45-67',
            number: 29,
            range: 10,
            url: 'http://example.com',
            search: 'blabla',
            color: '#6a4415',
            date: null,
            time: new Date(),
            datetime: null,
            month: null,
            week: null,
            desc: 'Sed pharetra euismod dolor, id feugiat ante volutpat eget. '
          };

          // Local select
          // ----------------------------------- 

          vm.user2 = {
            status: 2
          };

          vm.statuses = [
            {value: 1, text: 'status1'},
            {value: 2, text: 'status2'},
            {value: 3, text: 'status3'},
            {value: 4, text: 'status4'}
          ];

          vm.showStatus = function() {
            var selected = $filter('filter')(vm.statuses, {value: vm.user2.status});
            return (vm.user2.status && selected.length) ? selected[0].text : 'Not set';
          };

          // select remote
          // ----------------------------------- 

          vm.user3 = {
            id: 4,
            text: 'admin' // original value
          };

          vm.groups = [];

          vm.loadGroups = function() {
            return vm.groups.length ? null : $http.get('server/xeditable-groups.json').success(function(data) {
              vm.groups = data;
            });
          };

          $scope.$watch('user3.id', function(newVal, oldVal) {
            if (newVal !== oldVal) {
              var selected = $filter('filter')(vm.groups, {id: vm.user3.id});
              vm.user3.text = selected.length ? selected[0].text : null;
            }
          });

          // Typeahead
          // ----------------------------------- 

          vm.user4 = {
            state: 'Arizona'
          };

          vm.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];

        }
    }
})();


(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('FormDemoCtrl', FormDemoCtrl);

    FormDemoCtrl.$inject = ['$resource'];
    function FormDemoCtrl($resource) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          // the following allow to request array $resource instead of object (default)
          var actions = {'get': {method: 'GET', isArray: true}};
          
          // Tags inputs
          // ----------------------------------- 
          var Cities = $resource('server/cities.json', {}, actions);

          Cities.get(function(data){

              vm.cities = data;

          });
          // for non ajax form just fill the scope variable
          // vm.cities = ['Amsterdam','Washington','Sydney','Beijing','Cairo'];

          // Slider demo values
          vm.slider1 = 5;
          vm.slider2 = 10;
          vm.slider3 = 15;
          vm.slider4 = 20;
          vm.slider5 = 25;
          vm.slider6 = 30;
          vm.slider7 = 10;
          vm.slider8 = [250,750];

          // Chosen data
          // ----------------------------------- 

          var States = $resource('server/chosen-states.json', {},  {'query':    {method:'GET', isArray:true} });

          vm.states = States.query();


          vm.alertSubmit = function(){
            alert('Form submitted!');
            return false;
          };

          // Angular wysiwyg 
          // ----------------------------------- 

          vm.wysiwygContent = '<p> Write something here.. </p>';

          // Text Angular (wysiwyg)
          // ----------------------------------- 
          
          vm.htmlContent = '<h2>Try me!</h2><p>textAngular is a super cool WYSIWYG Text Editor directive for AngularJS</p><p><b>Features:</b></p><ol><li>Automatic Seamless Two-Way-Binding</li><li style="color: blue;">Super Easy <b>Theming</b> Options</li><li>Simple Editor Instance Creation</li><li>Safely Parses Html for Custom Toolbar Icons</li><li>Doesn&apos;t Use an iFrame</li><li>Works with Firefox, Chrome, and IE8+</li></ol><p><a href="https://github.com/fraywing/textAngular">Source</a> </p>';

        }
    }
})();

/**=========================================================
 * Module: masked,js
 * Initializes the masked inputs
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .directive('masked', masked);

    function masked () {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          var $elem = $(element);
          if($.fn.inputmask)
            $elem.inputmask();
        }
    }

})();

/**
 * AngularJS default filter with the following expression:
 * "person in people | filter: {name: $select.search, age: $select.search}"
 * performs a AND between 'name: $select.search' and 'age: $select.search'.
 * We want to perform a OR.
 */

(function() {
    'use strict';

    angular
        .module('app.forms')
        .filter('propsFilter', propsFilter);

    function propsFilter() {
        return filterFilter;

        ////////////////
        function filterFilter(items, props) {
          var out = [];

          if (angular.isArray(items)) {
            items.forEach(function(item) {
              var itemMatches = false;

              var keys = Object.keys(props);
              for (var i = 0; i < keys.length; i++) {
                var prop = keys[i];
                var text = props[prop].toLowerCase();
                if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {
                  itemMatches = true;
                  break;
                }
              }

              if (itemMatches) {
                out.push(item);
              }
            });
          } else {
            // Let the output be the input untouched
            out = items;
          }

          return out;
        }
    }

})();
/**=========================================================
 * Module: tags-input.js
 * Initializes the tag inputs plugin
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .directive('tagsinput', tagsinput);

    tagsinput.$inject = ['$timeout'];
    function tagsinput ($timeout) {
        var directive = {
            link: link,
            require: 'ngModel',
            restrict: 'A'
        };
        return directive;

        function link(scope, element, attrs, ngModel) {
          element.on('itemAdded itemRemoved', function(){
            // check if view value is not empty and is a string
            // and update the view from string to an array of tags
            if(ngModel.$viewValue && ngModel.$viewValue.split) {
              ngModel.$setViewValue( ngModel.$viewValue.split(',') );
              ngModel.$render();
            }
          });

          $timeout(function(){
            element.tagsinput();
          });
        }
    }

})();

/**=========================================================
 * Module: uiselect.js
 * uiSelect controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('uiSelectController', uiSelectController);

    uiSelectController.$inject = ['$scope', '$http'];
    function uiSelectController($scope, $http) {
        /* jshint validthis:true */
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.disabled = undefined;

          vm.enable = function() {
            vm.disabled = false;
          };

          vm.disable = function() {
            vm.disabled = true;
          };

          vm.clear = function() {
            vm.person.selected = undefined;
            vm.address.selected = undefined;
            vm.country.selected = undefined;
          };

          vm.person = {};
          vm.people = [
            { name: 'Adam',      email: 'adam@email.com',      age: 10 },
            { name: 'Amalie',    email: 'amalie@email.com',    age: 12 },
            { name: 'Wladimir',  email: 'wladimir@email.com',  age: 30 },
            { name: 'Samantha',  email: 'samantha@email.com',  age: 31 },
            { name: 'Estefanía', email: 'estefanía@email.com', age: 16 },
            { name: 'Natasha',   email: 'natasha@email.com',   age: 54 },
            { name: 'Nicole',    email: 'nicole@email.com',    age: 43 },
            { name: 'Adrian',    email: 'adrian@email.com',    age: 21 }
          ];

          vm.address = {};
          vm.refreshAddresses = function(address) {
            var params = {address: address, sensor: false};
            return $http.get(
              '//maps.googleapis.com/maps/api/geocode/json',
              {params: params}
            ).then(function(response) {
              vm.addresses = response.data.results;
            });
          };

          vm.country = {};
          vm.countries = [ // Taken from https://gist.github.com/unceus/6501985
            {name: 'Afghanistan', code: 'AF'},
            {name: 'Åland Islands', code: 'AX'},
            {name: 'Albania', code: 'AL'},
            {name: 'Algeria', code: 'DZ'},
            {name: 'American Samoa', code: 'AS'},
            {name: 'Andorra', code: 'AD'},
            {name: 'Angola', code: 'AO'},
            {name: 'Anguilla', code: 'AI'},
            {name: 'Antarctica', code: 'AQ'},
            {name: 'Antigua and Barbuda', code: 'AG'},
            {name: 'Argentina', code: 'AR'},
            {name: 'Armenia', code: 'AM'},
            {name: 'Aruba', code: 'AW'},
            {name: 'Australia', code: 'AU'},
            {name: 'Austria', code: 'AT'},
            {name: 'Azerbaijan', code: 'AZ'},
            {name: 'Bahamas', code: 'BS'},
            {name: 'Bahrain', code: 'BH'},
            {name: 'Bangladesh', code: 'BD'},
            {name: 'Barbados', code: 'BB'},
            {name: 'Belarus', code: 'BY'},
            {name: 'Belgium', code: 'BE'},
            {name: 'Belize', code: 'BZ'},
            {name: 'Benin', code: 'BJ'},
            {name: 'Bermuda', code: 'BM'},
            {name: 'Bhutan', code: 'BT'},
            {name: 'Bolivia', code: 'BO'},
            {name: 'Bosnia and Herzegovina', code: 'BA'},
            {name: 'Botswana', code: 'BW'},
            {name: 'Bouvet Island', code: 'BV'},
            {name: 'Brazil', code: 'BR'},
            {name: 'British Indian Ocean Territory', code: 'IO'},
            {name: 'Brunei Darussalam', code: 'BN'},
            {name: 'Bulgaria', code: 'BG'},
            {name: 'Burkina Faso', code: 'BF'},
            {name: 'Burundi', code: 'BI'},
            {name: 'Cambodia', code: 'KH'},
            {name: 'Cameroon', code: 'CM'},
            {name: 'Canada', code: 'CA'},
            {name: 'Cape Verde', code: 'CV'},
            {name: 'Cayman Islands', code: 'KY'},
            {name: 'Central African Republic', code: 'CF'},
            {name: 'Chad', code: 'TD'},
            {name: 'Chile', code: 'CL'},
            {name: 'China', code: 'CN'},
            {name: 'Christmas Island', code: 'CX'},
            {name: 'Cocos (Keeling) Islands', code: 'CC'},
            {name: 'Colombia', code: 'CO'},
            {name: 'Comoros', code: 'KM'},
            {name: 'Congo', code: 'CG'},
            {name: 'Congo, The Democratic Republic of the', code: 'CD'},
            {name: 'Cook Islands', code: 'CK'},
            {name: 'Costa Rica', code: 'CR'},
            {name: 'Cote D\'Ivoire', code: 'CI'},
            {name: 'Croatia', code: 'HR'},
            {name: 'Cuba', code: 'CU'},
            {name: 'Cyprus', code: 'CY'},
            {name: 'Czech Republic', code: 'CZ'},
            {name: 'Denmark', code: 'DK'},
            {name: 'Djibouti', code: 'DJ'},
            {name: 'Dominica', code: 'DM'},
            {name: 'Dominican Republic', code: 'DO'},
            {name: 'Ecuador', code: 'EC'},
            {name: 'Egypt', code: 'EG'},
            {name: 'El Salvador', code: 'SV'},
            {name: 'Equatorial Guinea', code: 'GQ'},
            {name: 'Eritrea', code: 'ER'},
            {name: 'Estonia', code: 'EE'},
            {name: 'Ethiopia', code: 'ET'},
            {name: 'Falkland Islands (Malvinas)', code: 'FK'},
            {name: 'Faroe Islands', code: 'FO'},
            {name: 'Fiji', code: 'FJ'},
            {name: 'Finland', code: 'FI'},
            {name: 'France', code: 'FR'},
            {name: 'French Guiana', code: 'GF'},
            {name: 'French Polynesia', code: 'PF'},
            {name: 'French Southern Territories', code: 'TF'},
            {name: 'Gabon', code: 'GA'},
            {name: 'Gambia', code: 'GM'},
            {name: 'Georgia', code: 'GE'},
            {name: 'Germany', code: 'DE'},
            {name: 'Ghana', code: 'GH'},
            {name: 'Gibraltar', code: 'GI'},
            {name: 'Greece', code: 'GR'},
            {name: 'Greenland', code: 'GL'},
            {name: 'Grenada', code: 'GD'},
            {name: 'Guadeloupe', code: 'GP'},
            {name: 'Guam', code: 'GU'},
            {name: 'Guatemala', code: 'GT'},
            {name: 'Guernsey', code: 'GG'},
            {name: 'Guinea', code: 'GN'},
            {name: 'Guinea-Bissau', code: 'GW'},
            {name: 'Guyana', code: 'GY'},
            {name: 'Haiti', code: 'HT'},
            {name: 'Heard Island and Mcdonald Islands', code: 'HM'},
            {name: 'Holy See (Vatican City State)', code: 'VA'},
            {name: 'Honduras', code: 'HN'},
            {name: 'Hong Kong', code: 'HK'},
            {name: 'Hungary', code: 'HU'},
            {name: 'Iceland', code: 'IS'},
            {name: 'India', code: 'IN'},
            {name: 'Indonesia', code: 'ID'},
            {name: 'Iran, Islamic Republic Of', code: 'IR'},
            {name: 'Iraq', code: 'IQ'},
            {name: 'Ireland', code: 'IE'},
            {name: 'Isle of Man', code: 'IM'},
            {name: 'Israel', code: 'IL'},
            {name: 'Italy', code: 'IT'},
            {name: 'Jamaica', code: 'JM'},
            {name: 'Japan', code: 'JP'},
            {name: 'Jersey', code: 'JE'},
            {name: 'Jordan', code: 'JO'},
            {name: 'Kazakhstan', code: 'KZ'},
            {name: 'Kenya', code: 'KE'},
            {name: 'Kiribati', code: 'KI'},
            {name: 'Korea, Democratic People\'s Republic of', code: 'KP'},
            {name: 'Korea, Republic of', code: 'KR'},
            {name: 'Kuwait', code: 'KW'},
            {name: 'Kyrgyzstan', code: 'KG'},
            {name: 'Lao People\'s Democratic Republic', code: 'LA'},
            {name: 'Latvia', code: 'LV'},
            {name: 'Lebanon', code: 'LB'},
            {name: 'Lesotho', code: 'LS'},
            {name: 'Liberia', code: 'LR'},
            {name: 'Libyan Arab Jamahiriya', code: 'LY'},
            {name: 'Liechtenstein', code: 'LI'},
            {name: 'Lithuania', code: 'LT'},
            {name: 'Luxembourg', code: 'LU'},
            {name: 'Macao', code: 'MO'},
            {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'},
            {name: 'Madagascar', code: 'MG'},
            {name: 'Malawi', code: 'MW'},
            {name: 'Malaysia', code: 'MY'},
            {name: 'Maldives', code: 'MV'},
            {name: 'Mali', code: 'ML'},
            {name: 'Malta', code: 'MT'},
            {name: 'Marshall Islands', code: 'MH'},
            {name: 'Martinique', code: 'MQ'},
            {name: 'Mauritania', code: 'MR'},
            {name: 'Mauritius', code: 'MU'},
            {name: 'Mayotte', code: 'YT'},
            {name: 'Mexico', code: 'MX'},
            {name: 'Micronesia, Federated States of', code: 'FM'},
            {name: 'Moldova, Republic of', code: 'MD'},
            {name: 'Monaco', code: 'MC'},
            {name: 'Mongolia', code: 'MN'},
            {name: 'Montserrat', code: 'MS'},
            {name: 'Morocco', code: 'MA'},
            {name: 'Mozambique', code: 'MZ'},
            {name: 'Myanmar', code: 'MM'},
            {name: 'Namibia', code: 'NA'},
            {name: 'Nauru', code: 'NR'},
            {name: 'Nepal', code: 'NP'},
            {name: 'Netherlands', code: 'NL'},
            {name: 'Netherlands Antilles', code: 'AN'},
            {name: 'New Caledonia', code: 'NC'},
            {name: 'New Zealand', code: 'NZ'},
            {name: 'Nicaragua', code: 'NI'},
            {name: 'Niger', code: 'NE'},
            {name: 'Nigeria', code: 'NG'},
            {name: 'Niue', code: 'NU'},
            {name: 'Norfolk Island', code: 'NF'},
            {name: 'Northern Mariana Islands', code: 'MP'},
            {name: 'Norway', code: 'NO'},
            {name: 'Oman', code: 'OM'},
            {name: 'Pakistan', code: 'PK'},
            {name: 'Palau', code: 'PW'},
            {name: 'Palestinian Territory, Occupied', code: 'PS'},
            {name: 'Panama', code: 'PA'},
            {name: 'Papua New Guinea', code: 'PG'},
            {name: 'Paraguay', code: 'PY'},
            {name: 'Peru', code: 'PE'},
            {name: 'Philippines', code: 'PH'},
            {name: 'Pitcairn', code: 'PN'},
            {name: 'Poland', code: 'PL'},
            {name: 'Portugal', code: 'PT'},
            {name: 'Puerto Rico', code: 'PR'},
            {name: 'Qatar', code: 'QA'},
            {name: 'Reunion', code: 'RE'},
            {name: 'Romania', code: 'RO'},
            {name: 'Russian Federation', code: 'RU'},
            {name: 'Rwanda', code: 'RW'},
            {name: 'Saint Helena', code: 'SH'},
            {name: 'Saint Kitts and Nevis', code: 'KN'},
            {name: 'Saint Lucia', code: 'LC'},
            {name: 'Saint Pierre and Miquelon', code: 'PM'},
            {name: 'Saint Vincent and the Grenadines', code: 'VC'},
            {name: 'Samoa', code: 'WS'},
            {name: 'San Marino', code: 'SM'},
            {name: 'Sao Tome and Principe', code: 'ST'},
            {name: 'Saudi Arabia', code: 'SA'},
            {name: 'Senegal', code: 'SN'},
            {name: 'Serbia and Montenegro', code: 'CS'},
            {name: 'Seychelles', code: 'SC'},
            {name: 'Sierra Leone', code: 'SL'},
            {name: 'Singapore', code: 'SG'},
            {name: 'Slovakia', code: 'SK'},
            {name: 'Slovenia', code: 'SI'},
            {name: 'Solomon Islands', code: 'SB'},
            {name: 'Somalia', code: 'SO'},
            {name: 'South Africa', code: 'ZA'},
            {name: 'South Georgia and the South Sandwich Islands', code: 'GS'},
            {name: 'Spain', code: 'ES'},
            {name: 'Sri Lanka', code: 'LK'},
            {name: 'Sudan', code: 'SD'},
            {name: 'Suriname', code: 'SR'},
            {name: 'Svalbard and Jan Mayen', code: 'SJ'},
            {name: 'Swaziland', code: 'SZ'},
            {name: 'Sweden', code: 'SE'},
            {name: 'Switzerland', code: 'CH'},
            {name: 'Syrian Arab Republic', code: 'SY'},
            {name: 'Taiwan, Province of China', code: 'TW'},
            {name: 'Tajikistan', code: 'TJ'},
            {name: 'Tanzania, United Republic of', code: 'TZ'},
            {name: 'Thailand', code: 'TH'},
            {name: 'Timor-Leste', code: 'TL'},
            {name: 'Togo', code: 'TG'},
            {name: 'Tokelau', code: 'TK'},
            {name: 'Tonga', code: 'TO'},
            {name: 'Trinidad and Tobago', code: 'TT'},
            {name: 'Tunisia', code: 'TN'},
            {name: 'Turkey', code: 'TR'},
            {name: 'Turkmenistan', code: 'TM'},
            {name: 'Turks and Caicos Islands', code: 'TC'},
            {name: 'Tuvalu', code: 'TV'},
            {name: 'Uganda', code: 'UG'},
            {name: 'Ukraine', code: 'UA'},
            {name: 'United Arab Emirates', code: 'AE'},
            {name: 'United Kingdom', code: 'GB'},
            {name: 'United States', code: 'US'},
            {name: 'United States Minor Outlying Islands', code: 'UM'},
            {name: 'Uruguay', code: 'UY'},
            {name: 'Uzbekistan', code: 'UZ'},
            {name: 'Vanuatu', code: 'VU'},
            {name: 'Venezuela', code: 'VE'},
            {name: 'Vietnam', code: 'VN'},
            {name: 'Virgin Islands, British', code: 'VG'},
            {name: 'Virgin Islands, U.S.', code: 'VI'},
            {name: 'Wallis and Futuna', code: 'WF'},
            {name: 'Western Sahara', code: 'EH'},
            {name: 'Yemen', code: 'YE'},
            {name: 'Zambia', code: 'ZM'},
            {name: 'Zimbabwe', code: 'ZW'}
          ];


          // Multiple
          vm.someGroupFn = function (item){

            if (item.name[0] >= 'A' && item.name[0] <= 'M')
                return 'From A - M';

            if (item.name[0] >= 'N' && item.name[0] <= 'Z')
                return 'From N - Z';

          };

          vm.counter = 0;
          vm.someFunction = function (item, model){
            vm.counter++;
            vm.eventResult = {item: item, model: model};
          };

          vm.availableColors = ['Red','Green','Blue','Yellow','Magenta','Maroon','Umbra','Turquoise'];

          vm.multipleDemo = {};
          vm.multipleDemo.colors = ['Blue','Red'];
          vm.multipleDemo.selectedPeople = [vm.people[5], vm.people[4]];
          vm.multipleDemo.selectedPeopleWithGroupBy = [vm.people[8], vm.people[6]];
          vm.multipleDemo.selectedPeopleSimple = ['samantha@email.com','wladimir@email.com'];
        }
    }

})();

/**=========================================================
 * Module: upload.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .controller('FileUploadController', FileUploadController);

    FileUploadController.$inject = ['FileUploader'];
    function FileUploadController(FileUploader) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          var uploader = vm.uploader = new FileUploader({
              url: 'server/upload.php'
          });

          // FILTERS

          uploader.filters.push({
              name: 'customFilter',
              fn: function(/*item, options*/) {
                  return this.queue.length < 10;
              }
          });

          // CALLBACKS

          uploader.onWhenAddingFileFailed = function(item /*{File|FileLikeObject}*/, filter, options) {
              console.info('onWhenAddingFileFailed', item, filter, options);
          };
          uploader.onAfterAddingFile = function(fileItem) {
              console.info('onAfterAddingFile', fileItem);
          };
          uploader.onAfterAddingAll = function(addedFileItems) {
              console.info('onAfterAddingAll', addedFileItems);
          };
          uploader.onBeforeUploadItem = function(item) {
              console.info('onBeforeUploadItem', item);
          };
          uploader.onProgressItem = function(fileItem, progress) {
              console.info('onProgressItem', fileItem, progress);
          };
          uploader.onProgressAll = function(progress) {
              console.info('onProgressAll', progress);
          };
          uploader.onSuccessItem = function(fileItem, response, status, headers) {
              console.info('onSuccessItem', fileItem, response, status, headers);
          };
          uploader.onErrorItem = function(fileItem, response, status, headers) {
              console.info('onErrorItem', fileItem, response, status, headers);
          };
          uploader.onCancelItem = function(fileItem, response, status, headers) {
              console.info('onCancelItem', fileItem, response, status, headers);
          };
          uploader.onCompleteItem = function(fileItem, response, status, headers) {
              console.info('onCompleteItem', fileItem, response, status, headers);
          };
          uploader.onCompleteAll = function() {
              console.info('onCompleteAll');
          };

          console.info('uploader', uploader);
        }
    }
})();

/**=========================================================
 * Module: validate-form.js
 * Initializes the validation plugin Parsley
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.forms')
        .directive('validateForm', validateForm);

    function validateForm () {
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element) {
          var $elem = $(element);
          if($.fn.parsley)
            $elem.parsley();
        }
    }

})();

(function() {
    'use strict';

    angular
        .module('app.lazyload')
        .config(lazyloadConfig);

    lazyloadConfig.$inject = ['$ocLazyLoadProvider', 'APP_REQUIRES'];
    function lazyloadConfig($ocLazyLoadProvider, APP_REQUIRES){

      // Lazy Load modules configuration
      $ocLazyLoadProvider.config({
        debug: false,
        events: true,
        modules: APP_REQUIRES.modules
      });

    }
})();
(function() {
    'use strict';

    angular
        .module('app.lazyload')
        .constant('APP_REQUIRES', {
          // jQuery based and standalone scripts
          scripts: {
            'whirl':              ['vendor/whirl/dist/whirl.css'],
            'classyloader':       ['vendor/jquery-classyloader/js/jquery.classyloader.min.js'],
            'animo':              ['vendor/animo.js/animo.js'],
            'fastclick':          ['vendor/fastclick/lib/fastclick.js'],
            'modernizr':          ['vendor/modernizr/modernizr.js'],
            'animate':            ['vendor/animate.css/animate.min.css'],
            'skycons':            ['vendor/skycons/skycons.js'],
            'icons':              ['vendor/fontawesome/css/font-awesome.min.css',
                                   'vendor/simple-line-icons/css/simple-line-icons.css'],
            'weather-icons':      ['vendor/weather-icons/css/weather-icons.min.css'],
            'sparklines':         ['app/vendor/sparklines/jquery.sparkline.min.js'],
            'wysiwyg':            ['vendor/bootstrap-wysiwyg/bootstrap-wysiwyg.js',
                                   'vendor/bootstrap-wysiwyg/external/jquery.hotkeys.js'],
            'slimscroll':         ['vendor/slimScroll/jquery.slimscroll.min.js'],
            'screenfull':         ['vendor/screenfull/dist/screenfull.js'],
            'vector-map':         ['vendor/ika.jvectormap/jquery-jvectormap-1.2.2.min.js',
                                   'vendor/ika.jvectormap/jquery-jvectormap-1.2.2.css'],
            'vector-map-maps':    ['vendor/ika.jvectormap/jquery-jvectormap-world-mill-en.js',
                                   'vendor/ika.jvectormap/jquery-jvectormap-us-mill-en.js'],
            'loadGoogleMapsJS':   ['app/vendor/gmap/load-google-maps.js'],
            'flot-chart':         ['vendor/Flot/jquery.flot.js'],
            'flot-chart-plugins': ['vendor/flot.tooltip/js/jquery.flot.tooltip.min.js',
                                   'vendor/Flot/jquery.flot.resize.js',
                                   'vendor/Flot/jquery.flot.pie.js',
                                   'vendor/Flot/jquery.flot.time.js',
                                   'vendor/Flot/jquery.flot.categories.js',
                                   'vendor/flot-spline/js/jquery.flot.spline.min.js'],
                                  // jquery core and widgets
            'jquery-ui':          ['vendor/jquery-ui/ui/core.js',
                                   'vendor/jquery-ui/ui/widget.js'],
                                   // loads only jquery required modules and touch support
            'jquery-ui-widgets':  ['vendor/jquery-ui/ui/core.js',
                                   'vendor/jquery-ui/ui/widget.js',
                                   'vendor/jquery-ui/ui/mouse.js',
                                   'vendor/jquery-ui/ui/draggable.js',
                                   'vendor/jquery-ui/ui/droppable.js',
                                   'vendor/jquery-ui/ui/sortable.js',
                                   'vendor/jqueryui-touch-punch/jquery.ui.touch-punch.min.js'],
            'moment' :            ['vendor/moment/min/moment-with-locales.min.js'],
            'inputmask':          ['vendor/jquery.inputmask/dist/jquery.inputmask.bundle.min.js'],
            'flatdoc':            ['vendor/flatdoc/flatdoc.js'],
            'codemirror':         ['vendor/codemirror/lib/codemirror.js',
                                   'vendor/codemirror/lib/codemirror.css'],
            // modes for common web files
            'codemirror-modes-web': ['vendor/codemirror/mode/javascript/javascript.js',
                                     'vendor/codemirror/mode/xml/xml.js',
                                     'vendor/codemirror/mode/htmlmixed/htmlmixed.js',
                                     'vendor/codemirror/mode/css/css.js'],
            'taginput' :          ['vendor/bootstrap-tagsinput/dist/bootstrap-tagsinput.css',
                                   'vendor/bootstrap-tagsinput/dist/bootstrap-tagsinput.min.js'],
            'filestyle':          ['vendor/bootstrap-filestyle/src/bootstrap-filestyle.js'],
            'parsley':            ['vendor/parsleyjs/dist/parsley.min.js'],
            'fullcalendar':       ['vendor/fullcalendar/dist/fullcalendar.min.js',
                                   'vendor/fullcalendar/dist/fullcalendar.css'],
            'gcal':               ['vendor/fullcalendar/dist/gcal.js'],
            'chartjs':            ['vendor/Chart.js/Chart.js'],
            'morris':             ['vendor/raphael/raphael.js',
                                   'vendor/morris.js/morris.js',
                                   'vendor/morris.js/morris.css'],
            'loaders.css':          ['vendor/loaders.css/loaders.css'],
            'spinkit':              ['vendor/spinkit/css/spinkit.css']
          },
          // Angular based script (use the right module name)
          modules: [
            {name: 'toaster',                   files: ['vendor/angularjs-toaster/toaster.js',
                                                       'vendor/angularjs-toaster/toaster.css']},
            {name: 'localytics.directives',     files: ['vendor/chosen_v1.2.0/chosen.jquery.min.js',
                                                       'vendor/chosen_v1.2.0/chosen.min.css',
                                                       'vendor/angular-chosen-localytics/chosen.js']},
            {name: 'ngDialog',                  files: ['vendor/ngDialog/js/ngDialog.min.js',
                                                       'vendor/ngDialog/css/ngDialog.min.css',
                                                       'vendor/ngDialog/css/ngDialog-theme-default.min.css'] },
            {name: 'ngWig',                     files: ['vendor/ngWig/dist/ng-wig.min.js'] },
            {name: 'ngTable',                   files: ['vendor/ng-table/dist/ng-table.min.js',
                                                        'vendor/ng-table/dist/ng-table.min.css']},
            {name: 'ngTableExport',             files: ['vendor/ng-table-export/ng-table-export.js']},
            {name: 'angularBootstrapNavTree',   files: ['vendor/angular-bootstrap-nav-tree/dist/abn_tree_directive.js',
                                                        'vendor/angular-bootstrap-nav-tree/dist/abn_tree.css']},
            {name: 'htmlSortable',              files: ['vendor/html.sortable/dist/html.sortable.js',
                                                        'vendor/html.sortable/dist/html.sortable.angular.js']},
            {name: 'xeditable',                 files: ['vendor/angular-xeditable/dist/js/xeditable.js',
                                                        'vendor/angular-xeditable/dist/css/xeditable.css']},
            {name: 'angularFileUpload',         files: ['vendor/angular-file-upload/angular-file-upload.js']},
            {name: 'ngImgCrop',                 files: ['vendor/ng-img-crop/compile/unminified/ng-img-crop.js',
                                                        'vendor/ng-img-crop/compile/unminified/ng-img-crop.css']},
            {name: 'ui.select',                 files: ['vendor/angular-ui-select/dist/select.js',
                                                        'vendor/angular-ui-select/dist/select.css']},
            {name: 'ui.codemirror',             files: ['vendor/angular-ui-codemirror/ui-codemirror.js']},
            {name: 'angular-carousel',          files: ['vendor/angular-carousel/dist/angular-carousel.css',
                                                        'vendor/angular-carousel/dist/angular-carousel.js']},
            {name: 'ngGrid',                    files: ['vendor/ng-grid/build/ng-grid.min.js',
                                                        'vendor/ng-grid/ng-grid.css' ]},
            {name: 'infinite-scroll',           files: ['vendor/ngInfiniteScroll/build/ng-infinite-scroll.js']},
            {name: 'ui.bootstrap-slider',       files: ['vendor/seiyria-bootstrap-slider/dist/bootstrap-slider.min.js',
                                                        'vendor/seiyria-bootstrap-slider/dist/css/bootstrap-slider.min.css',
                                                        'vendor/angular-bootstrap-slider/slider.js']},
            {name: 'ui.grid',                   files: ['vendor/angular-ui-grid/ui-grid.min.css',
                                                        'vendor/angular-ui-grid/ui-grid.min.js']},
            {name: 'textAngular',               files: ['vendor/textAngular/dist/textAngular.css',
                                                        'vendor/textAngular/dist/textAngular-rangy.min.js',
                                                        'vendor/textAngular/dist/textAngular-sanitize.js',
                                                        'vendor/textAngular/src/globals.js',
                                                        'vendor/textAngular/src/factories.js',
                                                        'vendor/textAngular/src/DOM.js',
                                                        'vendor/textAngular/src/validators.js',
                                                        'vendor/textAngular/src/taBind.js',
                                                        'vendor/textAngular/src/main.js',
                                                        'vendor/textAngular/dist/textAngularSetup.js'
                                                        ], serie: true},
            {name: 'angular-rickshaw',          files: ['vendor/d3/d3.min.js',
                                                        'vendor/rickshaw/rickshaw.js',
                                                        'vendor/rickshaw/rickshaw.min.css',
                                                        'vendor/angular-rickshaw/rickshaw.js'], serie: true},
            {name: 'angular-chartist',          files: ['vendor/chartist/dist/chartist.min.css',
                                                        'vendor/chartist/dist/chartist.js',
                                                        'vendor/angular-chartist.js/dist/angular-chartist.js'], serie: true},
            {name: 'ui.map',                    files: ['vendor/angular-ui-map/ui-map.js']},
            {name: 'datatables',                files: ['vendor/datatables/media/css/jquery.dataTables.css',
                                                        'vendor/datatables/media/js/jquery.dataTables.js',
                                                        'vendor/angular-datatables/dist/angular-datatables.js'], serie: true},
            {name: 'angular-jqcloud',           files: ['vendor/jqcloud2/dist/jqcloud.css',
                                                        'vendor/jqcloud2/dist/jqcloud.js',
                                                        'vendor/angular-jqcloud/angular-jqcloud.js']},
            {name: 'angularGrid',               files: ['vendor/ag-grid/dist/angular-grid.css',
                                                        'vendor/ag-grid/dist/angular-grid.js',
                                                        'vendor/ag-grid/dist/theme-dark.css',
                                                        'vendor/ag-grid/dist/theme-fresh.css']},
            {name: 'ng-nestable',               files: ['vendor/ng-nestable/src/angular-nestable.js',
                                                        'vendor/nestable/jquery.nestable.js']},
            {name: 'akoenig.deckgrid',          files: ['vendor/angular-deckgrid/angular-deckgrid.js']},
            {name: 'oitozero.ngSweetAlert',     files: ['vendor/sweetalert/dist/sweetalert.css',
                                                        'vendor/sweetalert/dist/sweetalert.min.js',
                                                        'vendor/angular-sweetalert/SweetAlert.js']},
            {name: 'bm.bsTour',                 files: ['vendor/bootstrap-tour/build/css/bootstrap-tour.css',
                                                        'vendor/bootstrap-tour/build/js/bootstrap-tour-standalone.js',
                                                        'vendor/angular-bootstrap-tour/dist/angular-bootstrap-tour.js'], serie: true},
            {name: 'ui.knob',                   files: ['vendor/angular-knob/src/angular-knob.js',
                                                        'vendor/jquery-knob/dist/jquery.knob.min.js']},
            {name: 'easypiechart',              files: ['vendor/jquery.easy-pie-chart/dist/angular.easypiechart.min.js']},
            {name: 'colorpicker.module',        files: ['vendor/angular-bootstrap-colorpicker/css/colorpicker.css',
                                                        'vendor/angular-bootstrap-colorpicker/js/bootstrap-colorpicker-module.js']}
          ]
        })
        ;

})();


(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('AngularCarouselController', AngularCarouselController);

    function AngularCarouselController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.colors = ['#fc0003', '#f70008', '#f2000d', '#ed0012', '#e80017', '#e3001c', '#de0021', '#d90026', '#d4002b', '#cf0030', '#c90036', '#c4003b', '#bf0040', '#ba0045', '#b5004a', '#b0004f', '#ab0054', '#a60059', '#a1005e', '#9c0063', '#960069', '#91006e', '#8c0073', '#870078', '#82007d', '#7d0082', '#780087', '#73008c', '#6e0091', '#690096', '#63009c', '#5e00a1', '#5900a6', '#5400ab', '#4f00b0', '#4a00b5', '#4500ba', '#4000bf', '#3b00c4', '#3600c9', '#3000cf', '#2b00d4', '#2600d9', '#2100de', '#1c00e3', '#1700e8', '#1200ed', '#0d00f2', '#0800f7', '#0300fc'];

          function getSlide(target, style) {
              var i = target.length;
              return {
                  id: (i + 1),
                  label: 'slide #' + (i + 1),
                  img: 'http://lorempixel.com/1200/500/' + style + '/' + ((i + 1) % 10) ,
                  color: vm.colors[ (i*10) % vm.colors.length],
                  odd: (i % 2 === 0)
              };
          }

          function addSlide(target, style) {
              target.push(getSlide(target, style));
          }

          vm.carouselIndex = 3;
          vm.carouselIndex2 = 0;
          vm.carouselIndex2 = 1;
          vm.carouselIndex3 = 5;
          vm.carouselIndex4 = 5;

          function addSlides(target, style, qty) {
              for (var i=0; i < qty; i++) {
                  addSlide(target, style);
              }
          }

          // 1st ngRepeat demo
          vm.slides = [];
          addSlides(vm.slides, 'sports', 50);

          // 2nd ngRepeat demo
          vm.slides2 = [];
          addSlides(vm.slides2, 'sports', 10);

          // 3rd ngRepeat demo
          vm.slides3 = [];
          addSlides(vm.slides3, 'people', 50);

          // 4th ngRepeat demo
          vm.slides4 = [];
          addSlides(vm.slides4, 'city', 50);


          // 5th ngRepeat demo
          vm.slides6 = [];
          vm.carouselIndex6 = 0;
          addSlides(vm.slides6, 'sports', 10);
          vm.addSlide = function(at) {
              if(at==='head') {
                  vm.slides6.unshift(getSlide(vm.slides6, 'people'));
              } else {
                  vm.slides6.push(getSlide(vm.slides6, 'people'));
              }
          };
        }
    }
})();

/**=========================================================
 * Module: demo-dialog.js
 * Demo for multiple ngDialog Usage
 * - ngDialogProvider for default values not supported 
 *   using lazy loader. Include plugin in base.js instead.
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('DialogIntroCtrl', DialogIntroCtrl)
        .controller('DialogMainCtrl', DialogMainCtrl)
        .controller('InsideCtrl', InsideCtrl)
        .controller('SecondModalCtrl', SecondModalCtrl);

    DialogIntroCtrl.$inject = ['$scope', 'ngDialog', 'tpl'];
    // Called from the route state. 'tpl' is resolved before
    function DialogIntroCtrl($scope, ngDialog, tpl) {
        
        activate();

        ////////////////

        function activate() {
          // share with other controllers
          $scope.tpl = tpl;
          // open dialog window
          ngDialog.open({
            template: tpl.path,
            // plain: true,
            className: 'ngdialog-theme-default'
          });
        }
    }

    DialogMainCtrl.$inject = ['$scope', '$rootScope', 'ngDialog'];
    // Loads from view
    function DialogMainCtrl($scope, $rootScope, ngDialog) {

        activate();

        ////////////////

        function activate() {
          $rootScope.jsonData = '{"foo": "bar"}';
          $rootScope.theme = 'ngdialog-theme-default';

          $scope.directivePreCloseCallback = function (value) {
            if(confirm('Close it? MainCtrl.Directive. (Value = ' + value + ')')) {
              return true;
            }
            return false;
          };

          $scope.preCloseCallbackOnScope = function (value) {
            if(confirm('Close it? MainCtrl.OnScope (Value = ' + value + ')')) {
              return true;
            }
            return false;
          };

          $scope.open = function () {
            ngDialog.open({ template: 'firstDialogId', controller: 'InsideCtrl', data: {foo: 'some data'} });
          };

          $scope.openDefault = function () {
            ngDialog.open({
              template: 'firstDialogId',
              controller: 'InsideCtrl',
              className: 'ngdialog-theme-default'
            });
          };

          $scope.openDefaultWithPreCloseCallbackInlined = function () {
            ngDialog.open({
              template: 'firstDialogId',
              controller: 'InsideCtrl',
              className: 'ngdialog-theme-default',
              preCloseCallback: function(value) {
                if (confirm('Close it?  (Value = ' + value + ')')) {
                  return true;
                }
                return false;
              }
            });
          };

          $scope.openConfirm = function () {
            ngDialog.openConfirm({
              template: 'modalDialogId',
              className: 'ngdialog-theme-default'
            }).then(function (value) {
              console.log('Modal promise resolved. Value: ', value);
            }, function (reason) {
              console.log('Modal promise rejected. Reason: ', reason);
            });
          };

          $scope.openConfirmWithPreCloseCallbackOnScope = function () {
            ngDialog.openConfirm({
              template: 'modalDialogId',
              className: 'ngdialog-theme-default',
              preCloseCallback: 'preCloseCallbackOnScope',
              scope: $scope
            }).then(function (value) {
              console.log('Modal promise resolved. Value: ', value);
            }, function (reason) {
              console.log('Modal promise rejected. Reason: ', reason);
            });
          };

          $scope.openConfirmWithPreCloseCallbackInlinedWithNestedConfirm = function () {
            ngDialog.openConfirm({
              template: 'dialogWithNestedConfirmDialogId',
              className: 'ngdialog-theme-default',
              preCloseCallback: function(/*value*/) {

                var nestedConfirmDialog = ngDialog.openConfirm({
                  template:
                      '<p>Are you sure you want to close the parent dialog?</p>' +
                      '<div>' +
                        '<button type="button" class="btn btn-default" ng-click="closeThisDialog(0)">No' +
                        '<button type="button" class="btn btn-primary" ng-click="confirm(1)">Yes' +
                      '</button></div>',
                  plain: true,
                  className: 'ngdialog-theme-default'
                });

                return nestedConfirmDialog;
              },
              scope: $scope
            })
            .then(function(value){
              console.log('resolved:' + value);
              // Perform the save here
            }, function(value){
              console.log('rejected:' + value);

            });
          };

          $scope.openInlineController = function () {
            $rootScope.theme = 'ngdialog-theme-default';

            ngDialog.open({
              template: 'withInlineController',
              controller: ['$scope', '$timeout', function ($scope, $timeout) {
                var counter = 0;
                var timeout;
                function count() {
                  $scope.exampleExternalData = 'Counter ' + (counter++);
                  timeout = $timeout(count, 450);
                }
                count();
                $scope.$on('$destroy', function () {
                  $timeout.cancel(timeout);
                });
              }],
              className: 'ngdialog-theme-default'
            });
          };

          $scope.openTemplate = function () {
            $scope.value = true;

            ngDialog.open({
              template: $scope.tpl.path,
              className: 'ngdialog-theme-default',
              scope: $scope
            });
          };

          $scope.openTemplateNoCache = function () {
            $scope.value = true;

            ngDialog.open({
              template: $scope.tpl.path,
              className: 'ngdialog-theme-default',
              scope: $scope,
              cache: false
            });
          };

          $scope.openTimed = function () {
            var dialog = ngDialog.open({
              template: '<p>Just passing through!</p>',
              plain: true,
              closeByDocument: false,
              closeByEscape: false
            });
            setTimeout(function () {
              dialog.close();
            }, 2000);
          };

          $scope.openNotify = function () {
            var dialog = ngDialog.open({
              template:
                '<p>You can do whatever you want when I close, however that happens.</p>' +
                '<div><button type="button" class="btn btn-primary" ng-click="closeThisDialog(1)">Close Me</button></div>',
              plain: true
            });
            dialog.closePromise.then(function (data) {
              console.log('ngDialog closed' + (data.value === 1 ? ' using the button' : '') + ' and notified by promise: ' + data.id);
            });
          };

          $scope.openWithoutOverlay = function () {
            ngDialog.open({
              template: '<h2>Notice that there is no overlay!</h2>',
              className: 'ngdialog-theme-default',
              plain: true,
              overlay: false
            });
          };

          $rootScope.$on('ngDialog.opened', function (e, $dialog) {
            console.log('ngDialog opened: ' + $dialog.attr('id'));
          });

          $rootScope.$on('ngDialog.closed', function (e, $dialog) {
            console.log('ngDialog closed: ' + $dialog.attr('id'));
          });

          $rootScope.$on('ngDialog.closing', function (e, $dialog) {
            console.log('ngDialog closing: ' + $dialog.attr('id'));
          });
        }
    
    } // DialogMainCtrl


    InsideCtrl.$inject = ['$scope', 'ngDialog'];
    function InsideCtrl($scope, ngDialog) {

        activate();

        ////////////////

        function activate() {
          $scope.dialogModel = {
            message : 'message from passed scope'
          };
          $scope.openSecond = function () {
            ngDialog.open({
              template: '<p class="lead m0"><a href="" ng-click="closeSecond()">Close all by click here!</a></h3>',
              plain: true,
              closeByEscape: false,
              controller: 'SecondModalCtrl'
            });
          };
        }
    }

    SecondModalCtrl.$inject = ['$scope', 'ngDialog'];
    function SecondModalCtrl($scope, ngDialog) {

        activate();

        ////////////////

        function activate() {
          $scope.closeSecond = function () {
            ngDialog.close();
          };
        }

    }


})();




/**=========================================================
 * Module: calendar-ui.js
 * This script handle the calendar demo with draggable 
 * events and events creations
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('InfiniteScrollController', InfiniteScrollController)
        .factory('datasource', datasource);

    function InfiniteScrollController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.images = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

          vm.loadMore = function() {
            var last = vm.images[vm.images.length - 1];
            for(var i = 1; i <= 10; i++) {
              vm.images.push(last + i);
            }
          };
        }
    }
    
    datasource.$inject = ['$log', '$timeout'];
    function datasource(console, $timeout) {

        var get = function(index, count, success) {
            return $timeout(function() {
                var i, result, _i, _ref;
                result = [];
                for (i = _i = index, _ref = index + count - 1; index <= _ref ? _i <= _ref : _i >= _ref; i = index <= _ref ? ++_i : --_i) {
                    result.push('item #' + i);
                }
                return success(result);
            }, 100);
        };
        return {
            get: get
        };
    }

})();

/**=========================================================
 * Module: masonry-deck.js
 * Demo for Angular Deck
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('MasonryDeckController', MasonryDeckController)
        .directive('imageloaded', imageloaded); // required by demo

    MasonryDeckController.$inejct = ['RouteHelpers'];
    function MasonryDeckController(RouteHelpers) {
        var vm = this;

        activate();

        ////////////////

        function activate() {

          vm.basepath = RouteHelpers.basepath;

          vm.photos = [
              {id: 'photo-1', name: 'Awesome photo', src: 'http://lorempixel.com/400/300/abstract'},
              {id: 'photo-2', name: 'Great photo', src: 'http://lorempixel.com/450/400/city'},
              {id: 'photo-3', name: 'Strange photo', src: 'http://lorempixel.com/400/300/people'},
              {id: 'photo-4', name: 'A photo?', src: 'http://lorempixel.com/400/300/transport'},
              {id: 'photo-5', name: 'What a photo', src: 'http://lorempixel.com/450/300/fashion'},
              {id: 'photo-6', name: 'Silly photo', src: 'http://lorempixel.com/400/300/technics'},
              {id: 'photo-7', name: 'Weird photo', src: 'http://lorempixel.com/410/350/sports'},
              {id: 'photo-8', name: 'Modern photo', src: 'http://lorempixel.com/400/300/nightlife'},
              {id: 'photo-9', name: 'Classical photo', src: 'http://lorempixel.com/400/300/nature'},
              {id: 'photo-10', name: 'Dynamic photo', src: 'http://lorempixel.com/420/300/abstract'},
              {id: 'photo-11', name: 'Neat photo', src: 'http://lorempixel.com/400/300/sports'},
              {id: 'photo-12', name: 'Bumpy photo', src: 'http://lorempixel.com/400/300/nightlife'},
              {id: 'photo-13', name: 'Brilliant photo', src: 'http://lorempixel.com/400/380/nature'},
              {id: 'photo-14', name: 'Excellent photo', src: 'http://lorempixel.com/480/300/technics'},
              {id: 'photo-15', name: 'Gorgeous photo', src: 'http://lorempixel.com/400/300/sports'},
              {id: 'photo-16', name: 'Lovely photo', src: 'http://lorempixel.com/400/300/nightlife'},
              {id: 'photo-17', name: 'A "wow" photo', src: 'http://lorempixel.com/400/300/nature'},
              {id: 'photo-18', name: 'Bodacious photo', src: 'http://lorempixel.com/400/300/abstract'}
          ];
        }
    }
    MasonryDeckController.$inject = ["RouteHelpers"];

    // Add class to img element when source is loaded
    function imageloaded () {
        // Copyright(c) 2013 André König <akoenig@posteo.de>
        // MIT Licensed
        var directive = {
            link: link,
            restrict: 'A'
        };
        return directive;

        function link(scope, element, attrs) {
          var cssClass = attrs.loadedclass;

          element.bind('load', function () {
              angular.element(element).addClass(cssClass);
          });
        }
    }

})();



/**=========================================================
 * Module: access-login.js
 * Demo for login api
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('AbnTestController', AbnTestController);

    AbnTestController.$inject = ['$timeout', '$resource'];
    function AbnTestController($timeout, $resource) {
        var vm = this;

        activate();

        ////////////////

        /*jshint -W106*/
        function activate() {
          vm.my_tree_handler = function(branch) {

            vm.output = 'You selected: ' + branch.label;

            if (branch.data && branch.data.description) {
              vm.output += '(' + branch.data.description + ')';
              return vm.output;
            }
          };

          // onSelect event handlers
          var apple_selected = function(branch) {
            vm.output = 'APPLE! : ' + branch.label;
            return vm.output;
          };

          var treedata_avm = [
            {
              label: 'Animal',
              children: [
                {
                  label: 'Dog',
                  data: {
                    description: 'man\'s best friend'
                  }
                }, {
                  label: 'Cat',
                  data: {
                    description: 'Felis catus'
                  }
                }, {
                  label: 'Hippopotamus',
                  data: {
                    description: 'hungry, hungry'
                  }
                }, {
                  label: 'Chicken',
                  children: ['White Leghorn', 'Rhode Island Red', 'Jersey Giant']
                }
              ]
            }, {
              label: 'Vegetable',
              data: {
                definition: 'A plant or part of a plant used as food, typically as accompaniment to meat or fish, such as a cabbage, potato, carrot, or bean.',
                data_can_contain_anything: true
              },
              onSelect: function(branch) {
                vm.output = 'Vegetable: ' + branch.data.definition;
                return vm.output;
              },
              children: [
                {
                  label: 'Oranges'
                }, {
                  label: 'Apples',
                  children: [
                    {
                      label: 'Granny Smith',
                      onSelect: apple_selected
                    }, {
                      label: 'Red Delicous',
                      onSelect: apple_selected
                    }, {
                      label: 'Fuji',
                      onSelect: apple_selected
                    }
                  ]
                }
              ]
            }, {
              label: 'Mineral',
              children: [
                {
                  label: 'Rock',
                  children: ['Igneous', 'Sedimentary', 'Metamorphic']
                }, {
                  label: 'Metal',
                  children: ['Aluminum', 'Steel', 'Copper']
                }, {
                  label: 'Plastic',
                  children: [
                    {
                      label: 'Thermoplastic',
                      children: ['polyethylene', 'polypropylene', 'polystyrene', ' polyvinyl chloride']
                    }, {
                      label: 'Thermosetting Polymer',
                      children: ['polyester', 'polyurethane', 'vulcanized rubber', 'bakelite', 'urea-formaldehyde']
                    }
                  ]
                }
              ]
            }
          ];
          
          var treedata_geography = [
            {
              label: 'North America',
              children: [
                {
                  label: 'Canada',
                  children: ['Toronto', 'Vancouver']
                }, {
                  label: 'USA',
                  children: ['New York', 'Los Angeles']
                }, {
                  label: 'Mexico',
                  children: ['Mexico City', 'Guadalajara']
                }
              ]
            }, {
              label: 'South America',
              children: [
                {
                  label: 'Venezuela',
                  children: ['Caracas', 'Maracaibo']
                }, {
                  label: 'Brazil',
                  children: ['Sao Paulo', 'Rio de Janeiro']
                }, {
                  label: 'Argentina',
                  children: ['Buenos Aires', 'Cordoba']
                }
              ]
            }
          ];

          vm.my_data = treedata_avm;
          vm.try_changing_the_tree_data = function() {
            if (vm.my_data === treedata_avm) {
              vm.my_data = treedata_geography;
            } else {
              vm.my_data = treedata_avm;
            }
            return vm.my_data;
          };
          
          var tree;
          // This is our API control variable
          vm.my_tree = tree = {};
          vm.try_async_load = function() {
            
            vm.my_data = [];
            vm.doing_async = true;
            
            // Request tree data via $resource
            var remoteTree = $resource('server/treedata.json');
            
            return remoteTree.get(function(res){
              
              vm.my_data = res.data;

              vm.doing_async = false;
            
              return tree.expand_all();
            
            // we must return a promise so the plugin 
            // can watch when it's resolved
            }).$promise;
          };
          
          // Adds a new branch to the tree
          vm.try_adding_a_branch = function() {
            var b;
            b = tree.get_selected_branch();
            return tree.add_branch(b, {
              label: 'New Branch',
              data: {
                something: 42,
                'else': 43
              }
            });
          };

        }
    }
})();


/**=========================================================
 * Module: nestable.js
 * Nestable controller
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('NestableController', NestableController);

    function NestableController() {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.items =  [
            {
              item: {text: 'a'},
              children: []
            },
            {
              item: {text: 'b'},
              children: [
                {
                  item: {text: 'c'},
                  children: []
                },
                {
                  item: {text: 'd'},
                  children: []
                }
              ]
            },
            {
              item: {text: 'e'},
              children: []
            },
            {
              item: {text: 'f'},
              children: []
            }
          ];

          vm.items2 =  [
            {
              item: {text: '1'},
              children: []
            },
            {
              item: {text: '2'},
              children: [
                {
                  item: {text: '3'},
                  children: []
                },
                {
                  item: {text: '4'},
                  children: []
                }
              ]
            },
            {
              item: {text: '5'},
              children: []
            },
            {
              item: {text: '6'},
              children: []
            }
          ];

        }
    }
})();

/**=========================================================
 * Module: scroll.js
 * Make a content box scrollable
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .directive('scrollable', scrollable);

    function scrollable () {
        var directive = {
            link: link,
            restrict: 'EA'
        };
        return directive;

        function link(scope, element, attrs) {
          var defaultHeight = 250;
          element.slimScroll({
              height: (attrs.height || defaultHeight)
          });
        }
    }

})();

/**=========================================================
 * Module: sortable.js
 * Sortable controller
 =========================================================*/
(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('SortableController', SortableController);

    SortableController.$inject = ['$scope'];
    function SortableController($scope) {
        // doesn't support controllerAs syntax https://github.com/voidberg/html5sortable/issues/86

        activate();

        ////////////////

        function activate() {
          // Single List
          $scope.data1 = [
            { id: 1, name: 'Donald Hoffman' },
            { id: 2, name: 'Wallace Barrett' },
            { id: 3, name: 'Marsha Hicks' },
            { id: 4, name: 'Roland Brown' }
          ];

          $scope.add = function () {
            $scope.data1.push({id: $scope.data1.length + 1, name: 'Earl Knight'});
          };

          $scope.sortableCallback = function (sourceModel, destModel, start, end) {
            console.log(start + ' -> ' + end);
          };
          
          $scope.sortableOptions = {
              placeholder: '<div class="box-placeholder p0 m0"><div></div></div>',
              forcePlaceholderSize: true
          };
        }
    }

})();

/**=========================================================
 * Module: sweetalert.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('SweetAlertController', SweetAlertController);

    SweetAlertController.$inject = ['SweetAlert'];
    function SweetAlertController(SweetAlert) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.demo1 = function() {
            SweetAlert.swal('Here\'s a message');
          };

          vm.demo2 = function() {
            SweetAlert.swal('Here\'s a message!', 'It\'s pretty, isn\'t it?');
          };

          vm.demo3 = function() {
            SweetAlert.swal('Good job!', 'You clicked the button!', 'success');
          };

          vm.demo4 = function() {
            SweetAlert.swal({   
              title: 'Are you sure?',   
              text: 'Your will not be able to recover this imaginary file!',   
              type: 'warning',   
              showCancelButton: true,   
              confirmButtonColor: '#DD6B55',   
              confirmButtonText: 'Yes, delete it!',
              closeOnConfirm: false
            },  function(){  
              SweetAlert.swal('Booyah!');
            });
          };

          vm.demo5 = function() {
            SweetAlert.swal({   
              title: 'Are you sure?',   
              text: 'Your will not be able to recover this imaginary file!',   
              type: 'warning',   
              showCancelButton: true,   
              confirmButtonColor: '#DD6B55',   
              confirmButtonText: 'Yes, delete it!',   
              cancelButtonText: 'No, cancel plx!',   
              closeOnConfirm: false,   
              closeOnCancel: false 
            }, function(isConfirm){  
              if (isConfirm) {     
                SweetAlert.swal('Deleted!', 'Your imaginary file has been deleted.', 'success');   
              } else {     
                SweetAlert.swal('Cancelled', 'Your imaginary file is safe :)', 'error');   
              } 
            });
          };

          vm.demo6 = function() {
            SweetAlert.swal({   
              title: 'Sweet!',   
              text: 'Here\'s a custom image.',   
              imageUrl: 'http://oitozero.com/img/avatar.jpg' 
            });
          };
        }
    }
})();

/**=========================================================
 * Module: demo-toaster.js
 * Demos for toaster notifications
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('ToasterDemoCtrl', ToasterDemoCtrl);

    ToasterDemoCtrl.$inject = ['toaster'];
    function ToasterDemoCtrl(toaster) {
        var vm = this;

        activate();

        ////////////////

        function activate() {
          vm.toaster = {
              type:  'success',
              title: 'Title',
              text:  'Message'
          };

          vm.pop = function() {
            toaster.pop(vm.toaster.type, vm.toaster.title, vm.toaster.text);
          };
        }
    }
})();

/**=========================================================
 * Module: tour.js
 =========================================================*/

(function() {
    'use strict';

    angular
        .module('app.elements')
        .controller('TourCtrl', TourCtrl);

    TourCtrl.$inject = ['$scope'];
    function TourCtrl($scope) {

        activate();

        ////////////////

        function activate() {
          // BootstrapTour is not compatible with z-index based layout
          // so adding position:static for this case makes the browser
          // to ignore the property
          var section = angular.element('.wrapper > section');
          section.css({'position': 'static'});
          // finally restore on destroy and reuse the value declared in stylesheet
          $scope.$on('$destroy', function(){
            section.css({'position': ''});
          });
        }
    }
})();
